@use "sass:map";
/*****************************************************************************
Typography Definitions
******************************************************************************/

// Scales a font-size Map.
// @param {Map} $font-sizes The font size to scale.
// @param {Number} $scale The factor with which to scale.
// @returns {Map} The scaled font sizes.
@function scale-font-sizes($font-sizes, $scale) {
  $scaled: ();
  @each $key, $value in $font-sizes {
    $scaled: map.set($scaled, $key, $value * $scale);
  }
  @return $scaled;
}

// Imports the following font faces from goolge fonts api
// (https://fonts.google.com/):
//  - Inter (https://fonts.google.com/specimen/Inter)
//    - Light 400
//    - Medium 500
//    - Bold 700
// - Roboto Mono (https://fonts.google.com/specimen/Roboto+Mono)
//		- Regular 400
//    - Medium 500
//    - Bold 700
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&family=Roboto+Mono:wght@400;500;700&display=swap');
// Imports material icons form the google fonts api (https://fonts.google.com/).
// The icons can be found under 'https://fonts.google.com/icons'.
@import url('https://fonts.googleapis.com/icon?family=Material+Icons+Round');
@import url('https://fonts.googleapis.com/icon?family=Material+Icons+Outlined');


// Define font families
$default-font-family: 'Inter', sans-serif;
$display-font-family: 'Roboto Mono', monospace;
$code-font-family: 'Roboto Mono', monospace;
$icon-font-family: 'Material Icons Round';
$icon-outlined-font-family: 'Material Icons Outlined';

// Define font weights.
$default-font-weights: (
  light: 400,
  normal: 500,
  bold: 700
);

$icon-font-weights: (
  normal: 500
);

// Define font sizes.
$default-font-sizes: (
  xxs: 0.75rem,
  xs: 1rem,
  s: 1.25rem,
  m: 1.5rem,
  l: 1.75rem,
  xl: 2rem,
  xxl: 2.5rem
);

$display-font-sizes: (
  xxs: 2rem,
  xs: 2.5rem,
  s: 3rem,
  m: 3.5rem,
  l: 4.5rem,
  xl: 5.5rem,
  xxl: 6rem
);

$icon-font-sizes: scale-font-sizes($default-font-sizes, 1.21);

// Validates the specified font map. The Map must contain a font family, a
// weights map and a sizes map. The Map structure looks as follows:
//
// $font: (
//   family: {String},
//   weights: {Map},
//   sizes: {Map}
// );
//
// @param {Map} $font The font map to validate.
// @returns {Map} The same font map as the $font parameter.
@function validate-font($font) {
  @if not map.has-key($font, family) {
    @error 'Font does not define a valid "family".';
  } @else if not map.has-key($font, weights) {
    @error 'Font does not define a valid "weights" map.';
  } @else if not map.has-key($font, default-weight) {
    @error 'Font does not define a valid "default-weight".';
  } @else if not map.has-key($font, sizes) {
    @error 'Font does not define a valid "sizes" map.';
  } @else if not map.has-key($font, default-size) {
    @error 'Font does not define a valid "default-size".';
  }

  @if map.has-key($font, default-size) and map.has-key($font, sizes) {
    $default-size: map.get($font, default-size);
    $sizes: map.get($font, sizes);
    @if not map.has-key($sizes, $default-size) {
      @error 'Default font-size does not exist in the "sizes" map.';
    }
  }

  @if map.has-key($font, default-weight) and map.has-key($font, weights) {
    $default-weight: map.get($font, default-weight);
    $weights: map.get($font, weights);
    @if not map.has-key($weights, $default-weight) {
      @error 'Default font-weight does not exist in the "weights" map.';
    }
  }

  @return $font;
}

// Defines a font map, which contains a family, different weights, a default
// weight, different sizes and a default size.
// @param {String} $family The font-family.
// @param {Map} $weights The available font-weights for the family.
// @param {String} $default-weight The default font-weight for the family.
// @param {Map} $sizes The available font-sizes for the family.
// @param {String} $default-size The default font-size for the family.
// @returns {Map} A complete font map.
@function define-font(
  $family,
  $weights,
  $default-weight,
  $sizes,
  $default-size
) {
  $result: (
    family: $family,
    weights: $weights,
    default-weight: $default-weight,
    sizes: $sizes,
    default-size: $default-size
  );
  @return $result;
}

// Define a default font map.
$default-font: define-font(
  $default-font-family,
  $default-font-weights,
  normal,
  $default-font-sizes,
  xs
);

// Define a display font map.
$display-font: define-font(
  $display-font-family,
  $default-font-weights,
  normal,
  $display-font-sizes,
  xs
);

// Define a code font map.
$code-font: define-font(
  $code-font-family,
  $default-font-weights,
  normal,
  $default-font-sizes,
  xs
);

// Define an icon font map.
$icon-font: define-font(
  $icon-font-family,
  $icon-font-weights,
  normal,
  $icon-font-sizes,
  xs
);

// Define an icon outlined font map.
$icon-outlined-font: define-font(
  $icon-outlined-font-family,
  $icon-font-weights,
  normal,
  $icon-font-sizes,
  xs
);

var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Alert.html",[0,1.456,1,0.924]],["body/interfaces/Alert.html",[0,2.691,1,1.896,2,2.846,3,0.189,4,0.189,5,0.163,6,4.613,7,2.289,8,5.35,9,4.127,10,3.026,11,3.764,12,4.983,13,4.613,14,3.233,15,5.35,16,0.244,17,0.714,18,1.403,19,5.275,20,2.414,21,0.751,22,0.354,23,0.018,24,0.189,25,0.012,26,0.014,27,0.012]],["title/components/AlertBoxComponent.html",[28,0.366,29,0.967]],["body/components/AlertBoxComponent.html",[1,1.613,3,0.106,4,0.106,5,0.134,16,0.137,17,0.486,18,0.562,21,0.428,22,0.342,23,0.018,24,0.106,25,0.007,26,0.01,27,0.007,28,0.506,29,1.47,30,1.183,31,0.925,32,0.925,33,0.925,34,6.001,35,5.369,36,2.592,37,0.577,38,1.406,39,0.395,40,1.026,41,2.233,42,2.335,43,5.71,44,1.352,45,4.393,46,0.651,47,6.551,48,1.633,49,4.058,50,4.058,51,1.749,52,0.486,53,1.173,54,0.822,55,5.191,56,4.476,57,4.476,58,1.415,59,3.007,60,2.207,61,0.462,62,4.393,63,0.562,64,0.322,65,1.083,66,2.638,67,0.639,68,0.48,69,2.483,70,3.007,71,2.016,72,3.007,73,3.007,74,3.007,75,0.293,76,0.676,77,3.007,78,3.007,79,3.007,80,0.321,81,1.701,82,1.018,83,0.274,84,1.166,85,1.428,86,1.166,87,0.809,88,0.536,89,0.106,90,3.007,91,1.817,92,1.817,93,1.599,94,3.007,95,1.817,96,1.817,97,0.642,98,0.677,99,3.007,100,1.953,101,1.953,102,3.007,103,3.007,104,2.319,105,0.353,106,3.007,107,3.007,108,3.007,109,3.007,110,3.007,111,3.007,112,0.774,113,1.352,114,1.236,115,0.062,116,1.757,117,0.925,118,0.925,119,0.774,120,0.925,121,0.774,122,1.757,123,0.774,124,0.925,125,0.774,126,0.925,127,0.774,128,0.925,129,1.598,130,0.774,131,0.925,132,0.774,133,1.352,134,0.774,135,0.846,136,0.774,137,0.925,138,0.774,139,0.885,140,0.774,141,0.925,142,0.774,143,0.774,144,1.293,145,0.774,146,0.846,147,0.774,148,0.885,149,0.774,150,0.925,151,0.74,152,0.925,153,0.774,154,0.885,155,0.925,156,0.353,157,0.536,158,2.28,159,0.74,160,0.708,161,0.59,162,0.74,163,0.74,164,0.74,165,0.708,166,0.74,167,0.708,168,0.74,169,0.74,170,0.74,171,0.74,172,0.708,173,0.74,174,0.708,175,0.925]],["title/components/AlertComponent.html",[28,0.366,119,0.967]],["body/components/AlertComponent.html",[1,1.796,3,0.089,4,0.089,5,0.117,10,3.362,14,2.826,16,0.115,17,0.426,18,0.472,19,3.966,21,0.456,22,0.35,23,0.018,24,0.089,25,0.006,26,0.009,27,0.006,28,0.456,29,0.65,30,1.037,31,0.777,32,0.777,33,0.777,37,0.506,38,1.288,39,0.331,40,1.014,41,2.187,42,2.287,44,1.186,46,0.662,48,1.927,51,1.576,52,0.426,53,1.075,54,0.721,56,4.031,57,4.031,58,1.241,60,2.083,61,0.49,63,0.979,64,0.349,65,0.933,66,2.197,67,0.622,68,0.467,69,1.729,71,1.735,75,0.622,76,0.593,80,0.368,82,0.933,83,0.23,84,0.979,85,1.198,86,0.979,87,0.679,88,0.45,89,0.089,93,1.342,97,0.563,98,0.568,105,0.782,112,0.65,113,1.186,114,1.085,115,0.052,116,1.611,117,0.777,118,0.777,119,1.347,120,0.777,121,0.65,122,1.611,123,0.65,124,0.777,125,0.65,126,0.777,127,0.65,128,0.777,129,1.439,130,0.65,131,0.777,132,0.65,133,1.186,134,0.65,135,0.71,136,0.65,137,0.777,138,0.65,139,0.743,140,0.65,141,0.777,142,0.65,143,0.65,144,1.134,145,0.65,146,0.71,147,0.65,148,0.743,149,0.65,150,0.777,151,0.621,152,0.777,153,0.65,154,0.743,155,0.777,156,0.296,157,0.45,158,2.218,159,0.621,160,0.594,161,0.495,162,0.621,163,0.621,164,0.621,165,0.594,166,0.621,167,0.594,168,0.621,169,0.621,170,0.621,171,0.621,172,0.594,173,0.621,174,0.594,175,0.777,176,2.176,177,2.711,178,3.854,179,4.676,180,4.676,181,4.676,182,3.607,183,5.184,184,5.234,185,5.234,186,5.234,187,3.854,188,3.854,189,5.234,190,4.676,191,1.649,192,2.176,193,3.854,194,2.524,195,2.524,196,3.695,197,3.854,198,2.524,199,3.323,200,2.524,201,4.566,202,2.524,203,2.524,204,2.524,205,2.524,206,3.854,207,2.524,208,3.854,209,2.524,210,3.854,211,2.524,212,1.735,213,2.524,214,3.854,215,2.524,216,3.854,217,2.524,218,2.524,219,2.524,220,2.524,221,3.323,222,1.639,223,1.947,224,2.176,225,2.524,226,2.524,227,2.524,228,2.524,229,2.524,230,2.524,231,4.676,232,1.342,233,2.524,234,1.198,235,2.524,236,3.854,237,4.512,238,3.854,239,2.524,240,2.524,241,2.524,242,0.891,243,2.524,244,2.524,245,2.176,246,2.524,247,2.524,248,2.524,249,2.524]],["title/injectables/AlertService.html",[10,2.124,250,2.269]],["body/injectables/AlertService.html",[0,1.124,1,1.935,3,0.151,4,0.062,5,0.054,7,2.487,9,2.237,10,1.64,11,3.576,12,4.616,13,5.95,14,3.391,16,0.081,17,0.321,18,1.301,19,5.098,20,2.433,21,0.722,22,0.313,23,0.018,24,0.062,25,0.004,26,0.006,27,0.004,28,0.611,46,0.634,48,1.69,52,0.661,61,0.423,63,1.171,64,0.316,65,1.067,66,1.072,67,0.567,68,0.426,69,1.582,71,0.543,75,0.567,76,0.782,80,0.265,83,0.161,89,0.062,105,0.207,182,4.995,183,3.576,201,3.301,221,2.5,222,4.264,223,4.73,242,2.112,250,1.752,251,1.36,252,1.521,253,3.01,254,2.5,255,2.9,256,2.9,257,5.984,258,6.262,259,4.278,260,4.278,261,4.278,262,2.9,263,4.278,264,2.9,265,2.778,266,2.9,267,2.5,268,2.5,269,2.9,270,2.9,271,4.017,272,2.9,273,2.9,274,2.9,275,2.237,276,3.921,277,6.847,278,2.9,279,2.9,280,2.9,281,2.9,282,2.9,283,4.066,284,2.237,285,4.278,286,2.5,287,1.883,288,4.485,289,2.5,290,5.497,291,2.9,292,2.9,293,2.9,294,2.9,295,5.083,296,3.688,297,2.5,298,3.921,299,2.9,300,2.5,301,2.5,302,3.184,303,4.278,304,5.813,305,2.373,306,4.727,307,4.278,308,4.727,309,5.372,310,2.9,311,1.764,312,4.405,313,6.262,314,2.9,315,3.688,316,3.331,317,1.906,318,2.9,319,1.764,320,2.9,321,1.764,322,2.9,323,1.764,324,2.9,325,1.764,326,2.9,327,2.9,328,2.9,329,2.9,330,1.764,331,2.5,332,2.9,333,1.764,334,2.9,335,1.764,336,1.764,337,2.9,338,4.278,339,4.278,340,3.688,341,4.278,342,2.5,343,1.926,344,5.611,345,2.9,346,2.5,347,2.9,348,2.9,349,2.9,350,1.883,351,2.9,352,2.9,353,1.764,354,2.9,355,1.764,356,2.9,357,1.764,358,1.764,359,1.764,360,4.201,361,2.5,362,5.611,363,4.727,364,1.241,365,1.521,366,1.764,367,1.521,368,1.36,369,2.9,370,1.764,371,1.764,372,1.764,373,4.918,374,4.727,375,1.764,376,2.9,377,3.693,378,1.764,379,1.764,380,4.278,381,1.764,382,1.764,383,1.521,384,1.521,385,1.764,386,1.764]],["title/interfaces/AlertServiceSubscriber.html",[0,1.456,14,2.269]],["body/interfaces/AlertServiceSubscriber.html",[0,2.729,1,1.94,2,2.42,3,0.161,4,0.161,5,0.138,7,2.499,10,4.273,12,4.505,14,3.529,16,0.208,22,0.232,23,0.018,24,0.161,25,0.01,26,0.013,27,0.01,52,0.646,61,0.307,63,0.851,64,0.257,65,0.812,75,0.444,80,0.282,105,0.685,182,4.505,199,5.035,201,4.419,222,3.793,223,5.951,245,5.035,271,4.352,276,4.505,290,5.035,296,5.035,315,5.035,342,5.035,360,4.482,361,5.035,383,3.923,384,3.923,387,5.035,388,3.923,389,5.84,390,5.035,391,5.867,392,5.84,393,5.84,394,5.84,395,6.805,396,5.84,397,5.84,398,4.55,399,5.84,400,5.84,401,5.84,402,5.84]],["title/modules/BaseModule.html",[403,2.124,404,2.269]],["body/modules/BaseModule.html",[3,0.11,4,0.11,5,0.094,18,1.236,20,1.699,23,0.018,24,0.11,25,0.007,26,0.01,27,0.007,38,1.766,64,0.253,68,0.542,80,0.465,83,0.282,86,2.244,87,1.558,88,1.302,89,0.159,112,0.797,157,1.28,159,1.766,160,1.689,161,1.407,162,1.766,163,1.766,164,1.766,165,1.689,166,1.766,167,1.508,169,1.766,170,1.766,171,1.766,172,1.508,173,1.766,174,1.689,287,2.01,403,1.751,404,4.779,405,1.87,406,1.87,407,3.713,408,2.178,409,1.26,410,3.713,411,2.669,412,2.669,413,2.669,414,3.157,415,2.178,416,3.095,417,3.461,418,3.868,419,2.387,420,2.46,421,2.387,422,2.711,423,3.903,424,2.178,425,2.669,426,2.178,427,2.653,428,2.369,429,2.387,430,3.461,431,2.387,432,2.387]],["title/components/ButtonComponent.html",[28,0.366,121,0.967]],["body/components/ButtonComponent.html",[1,0.4,3,0.058,4,0.058,5,0.082,7,2.216,16,0.074,17,0.3,18,0.304,21,0.397,22,0.349,23,0.018,24,0.058,25,0.004,26,0.006,27,0.004,28,0.706,29,0.418,30,0.729,31,0.5,32,0.5,33,0.5,37,0.356,38,1.336,39,0.213,40,0.973,41,2.042,42,2.136,44,0.834,46,0.531,48,1.572,49,4.405,50,4.267,51,1.175,52,0.3,53,0.928,54,1.015,58,0.873,60,1.829,61,0.45,63,0.913,64,0.318,65,1.037,66,2.696,67,0.476,68,0.497,69,2.007,71,2.029,75,0.55,76,0.536,80,0.216,81,3.378,82,1.13,83,0.148,84,0.63,85,0.772,86,0.63,87,0.437,88,0.29,89,0.246,91,0.982,92,0.982,93,0.864,95,2.106,96,0.982,97,0.925,98,0.366,100,1.055,101,1.055,105,0.318,112,0.418,113,2.006,114,1.834,115,0.034,116,1.252,117,0.5,118,0.5,119,0.418,120,0.5,121,1.257,122,1.252,123,0.418,124,0.5,125,0.418,126,0.5,127,0.418,128,0.5,129,1.073,130,0.418,131,0.5,132,0.418,133,0.834,134,0.418,135,1.272,136,0.418,137,0.5,138,0.418,139,0.478,140,0.418,141,0.5,142,0.418,143,0.418,144,0.797,145,0.418,146,2.015,147,0.418,148,0.478,149,0.418,150,0.5,151,0.4,152,0.5,153,0.418,154,0.478,155,0.5,156,0.191,157,0.29,158,2.029,159,0.4,160,0.382,161,0.319,162,0.4,163,0.4,164,0.4,165,0.382,166,0.4,167,0.382,168,0.4,169,0.4,170,0.4,171,0.4,172,0.382,173,0.4,174,0.382,175,0.5,191,1.159,242,2.235,250,1.637,253,2.861,265,3.171,267,5.014,271,1.637,283,4.231,289,2.336,312,1.906,317,1.437,331,2.336,343,3.144,350,1.055,360,0.982,368,2.09,420,0.913,433,1.401,434,2.71,435,4.883,436,3.171,437,4.883,438,3.137,439,2.71,440,2.71,441,6.305,442,3.507,443,5.427,444,2.71,445,2.71,446,2.71,447,1.906,448,2.71,449,1.625,450,2.71,451,2.71,452,3.507,453,4.067,454,5.816,455,3.507,456,4.883,457,4.21,458,2.71,459,1.906,460,2.688,461,2.336,462,4.734,463,5.427,464,5.18,465,5.427,466,1.625,467,2.71,468,4.886,469,2.71,470,2.71,471,2.71,472,6.02,473,2.71,474,6.43,475,2.71,476,2.71,477,1.625,478,2.336,479,1.625,480,3.507,481,2.71,482,2.71,483,2.71,484,4.21,485,2.71,486,1.625,487,2.09,488,2.71,489,3.766,490,2.71,491,2.71,492,1.625,493,4.883,494,1.625,495,2.71,496,1.625,497,1.625,498,1.625,499,1.625,500,1.625,501,1.253,502,1.625,503,1.253,504,1.625,505,2.71,506,4.067,507,1.625,508,3.005,509,2.71,510,2.71,511,2.336,512,2.71,513,2.71,514,1.625,515,2.71,516,1.625,517,3.485,518,1.253,519,2.09,520,3.485,521,1.625,522,1.401,523,1.625,524,1.625,525,1.625,526,1.625,527,1.253,528,1.625,529,1.625,530,1.625]],["title/components/CardComponent.html",[28,0.366,123,0.967]],["body/components/CardComponent.html",[1,0.857,3,0.123,4,0.123,5,0.148,16,0.159,17,0.539,21,0.476,22,0.311,23,0.018,24,0.123,25,0.008,26,0.011,27,0.008,28,0.549,29,0.896,30,1.313,31,1.072,32,1.072,33,1.072,37,0.641,38,0.857,39,0.457,40,1.036,41,2.267,42,2.371,44,1.502,46,0.608,48,1.715,51,1.898,52,0.539,53,1.254,58,1.571,60,2.305,61,0.434,63,0.651,64,0.344,65,1.089,66,2.257,67,0.549,68,0.413,69,2.257,71,1.502,75,0.34,76,0.751,80,0.349,81,1.97,83,0.318,84,1.35,85,1.654,86,1.35,87,0.937,88,0.621,89,0.123,93,1.852,97,0.713,98,0.784,105,0.408,112,0.896,113,1.502,114,1.373,115,0.072,116,1.879,117,1.072,118,1.072,119,0.896,120,1.072,121,0.896,122,1.879,123,1.572,124,1.072,125,0.896,126,1.072,127,0.896,128,1.072,129,1.734,130,0.896,131,1.072,132,0.896,133,1.502,134,0.896,135,0.98,136,0.896,137,1.072,138,0.896,139,1.025,140,0.896,141,1.072,142,0.896,143,0.896,144,1.436,145,0.896,146,0.98,147,0.896,148,1.025,149,0.896,150,1.072,151,0.857,152,1.072,153,0.896,154,1.025,155,1.072,156,0.408,157,0.621,158,2.326,159,0.857,160,0.82,161,0.683,162,0.857,163,0.857,164,0.857,165,0.82,166,0.857,167,0.82,168,0.857,169,0.857,170,0.857,171,1.503,172,0.82,173,0.857,174,0.82,175,1.072,452,5.898,531,3.002,532,6.105,533,4.88,534,6.982,535,3.482,536,4.88,537,3.482,538,3.482,539,3.482,540,3.482,541,3.482,542,3.482,543,3.482,544,3.482,545,3.482]],["title/components/CheckboxComponent.html",[28,0.366,125,0.967]],["body/components/CheckboxComponent.html",[1,0.841,3,0.121,4,0.121,5,0.146,16,0.156,17,0.532,18,0.639,20,1.1,21,0.623,22,0.284,23,0.018,24,0.121,25,0.008,26,0.011,27,0.008,28,0.544,29,0.88,30,1.296,31,1.052,32,1.052,33,1.052,37,0.632,38,0.841,39,0.449,40,1.035,41,2.263,42,2.366,44,1.482,46,0.661,51,1.879,52,0.532,53,1.244,54,0.901,61,0.431,64,0.314,67,0.544,68,0.468,71,1.482,75,0.47,76,0.741,80,0.345,82,0.995,83,0.312,87,0.92,88,0.61,89,0.121,97,0.704,98,0.769,105,0.401,112,0.88,113,1.482,114,1.355,115,0.071,116,1.864,117,1.052,118,1.052,119,0.88,120,1.052,121,0.88,122,1.864,123,0.88,124,1.052,125,1.705,126,1.052,127,0.88,128,1.965,129,1.716,130,0.88,131,1.052,132,0.88,133,1.482,134,0.88,135,0.962,136,0.88,137,1.052,138,0.88,139,1.006,140,0.88,141,1.052,142,0.88,143,0.88,144,1.417,145,0.88,146,0.962,147,0.88,148,1.006,149,0.88,150,1.052,151,0.841,152,1.052,153,0.88,154,1.006,155,1.052,156,0.401,157,0.61,158,2.32,159,0.841,160,0.804,161,0.67,162,0.841,163,0.841,164,0.841,165,1.425,166,0.841,167,0.804,168,0.841,169,0.841,170,0.841,171,0.841,172,0.804,173,0.841,174,0.804,175,1.052,317,1.417,409,1.96,420,1.152,427,1.781,428,1.264,546,2.947,547,2.417,548,2.799,549,2.417,550,2.417,551,4.816,552,4.26,553,5.249,554,3.923,555,3.418,556,3.388,557,3.418,558,3.418,559,3.418,560,3.418,561,1.462,562,2.065,563,2.91,564,3.715,565,2.947,566,2.404,567,2.947,568,2.947,569,3.418]],["title/components/CheckboxGroupComponent.html",[28,0.366,127,0.967]],["body/components/CheckboxGroupComponent.html",[1,0.841,3,0.121,4,0.121,5,0.146,16,0.156,17,0.532,21,0.664,22,0.309,23,0.018,24,0.121,25,0.008,26,0.011,27,0.008,28,0.544,29,0.88,30,1.296,31,1.052,32,1.052,33,1.052,37,0.632,38,0.841,39,0.449,40,1.035,41,2.263,42,2.366,44,1.482,46,0.604,51,1.879,52,0.532,54,0.901,61,0.447,64,0.314,67,0.591,68,0.444,71,1.482,75,0.47,80,0.375,82,1.08,83,0.312,89,0.121,112,0.88,113,1.482,114,1.355,115,0.071,116,1.864,117,1.052,118,1.052,119,0.88,120,1.052,121,0.88,122,1.864,123,0.88,124,1.052,125,0.88,126,1.052,127,1.705,128,2.095,129,1.716,130,0.88,131,1.052,132,0.88,133,1.482,134,0.88,135,0.962,136,0.88,137,1.052,138,0.88,139,1.006,140,0.88,141,1.052,142,0.88,143,0.88,144,1.417,145,0.88,146,0.962,147,0.88,148,1.006,149,0.88,150,1.052,151,0.841,152,1.052,153,0.88,154,1.006,155,1.052,156,0.401,157,0.61,158,2.32,159,0.841,160,0.804,161,0.67,162,0.841,163,0.841,164,0.841,165,0.804,166,0.841,167,0.804,168,1.491,169,0.841,170,0.841,171,0.841,172,0.804,173,0.841,174,0.804,175,1.052,212,1.482,317,1.641,409,1.96,436,2.219,547,2.417,548,2.799,549,2.417,550,2.417,552,4.26,554,3.923,556,3.388,561,1.462,563,2.91,570,5.867,571,2.404,572,4.67,573,3.715,574,3.37,575,4.26,576,4.302,577,4.302,578,3.388,579,3.418,580,3.418,581,3.418,582,3.418,583,3.418,584,3.418,585,3.127,586,3.418,587,2.947,588,2.404,589,4.816]],["title/directives/ClassNameInputDirective.html",[115,0.078,157,0.67]],["body/directives/ClassNameInputDirective.html",[3,0.165,4,0.165,5,0.142,16,0.213,17,0.656,21,0.636,22,0.303,23,0.018,24,0.165,25,0.01,26,0.013,27,0.01,39,0.613,40,0.902,46,0.661,48,1.68,51,2.199,52,0.656,53,1.411,54,1.11,61,0.479,63,0.873,64,0.415,65,0.832,67,0.579,68,0.435,75,0.579,76,1.147,80,0.289,82,1.058,83,0.426,89,0.165,97,0.867,105,0.696,115,0.123,156,0.547,157,1.058,191,2.539,242,2.303,317,1.373,343,2.101,426,5.1,590,3.638,591,1.725,592,5.626,593,6.25,594,3.854,595,4.665,596,2.215,597,4.665,598,4.022,599,4.022,600,4.022,601,5.116,602,4.022,603,4.022,604,4.022,605,3.599,606,4.022,607,4.022]],["title/directives/ColorInputDirective.html",[115,0.078,159,0.924]],["body/directives/ColorInputDirective.html",[3,0.183,4,0.183,5,0.157,16,0.236,18,1.278,21,0.617,22,0.263,23,0.018,24,0.183,25,0.011,26,0.014,27,0.011,37,0.678,39,0.678,40,0.935,46,0.65,52,0.699,53,1.462,54,1.183,61,0.427,64,0.291,67,0.504,68,0.378,75,0.504,76,0.972,80,0.391,82,1.128,83,0.471,88,0.921,89,0.224,97,0.924,98,1.162,105,0.606,115,0.131,156,0.606,157,1.128,159,1.556,212,1.946,234,2.452,305,3.173,421,5.271,590,3.429,591,1.909,594,3.353,596,2.452,608,3.632,609,1.822]],["title/classes/ColumnInformation.html",[89,0.133,610,2.269]],["body/classes/ColumnInformation.html",[2,2,3,0.162,4,0.087,5,0.074,7,2.202,11,2.646,16,0.112,17,0.416,18,0.857,21,0.681,22,0.299,23,0.018,24,0.087,25,0.005,26,0.008,27,0.005,37,0.494,46,0.614,48,1.511,52,0.697,54,0.704,61,0.472,63,0.857,64,0.331,65,0.818,67,0.694,68,0.546,75,0.666,80,0.233,82,1.125,89,0.229,97,0.67,104,1.885,105,0.652,191,1.609,212,1.158,234,1.161,242,2.621,253,2.646,265,3.342,271,3.546,276,2.901,284,2.901,312,2.646,350,3.811,360,2.273,373,3.536,391,3.242,436,2.442,438,4.867,442,3.242,447,4.439,468,2.901,480,3.242,610,4.299,611,3.811,612,2.107,613,3.761,614,3.761,615,4.063,616,4.169,617,4.438,618,4.439,619,2.901,620,6.473,621,7.37,622,3.761,623,3.761,624,3.761,625,3.242,626,5.868,627,3.242,628,3.761,629,5.659,630,3.242,631,3.761,632,3.761,633,3.225,634,4.584,635,4.3,636,4.584,637,5.868,638,4.584,639,2.444,640,3.225,641,2.444,642,2.444,643,2.444,644,5.147,645,2.444,646,3.993,647,2.444,648,3.761,649,7.37,650,5.868,651,3.761,652,3.761,653,3.761,654,2.444,655,7.167,656,2.444,657,5.147,658,3.242,659,4.438,660,7.336,661,5.147,662,2.444,663,4.649,664,6.113,665,2.444,666,2.901,667,5.147,668,3.761,669,5.147,670,5.059,671,3.761,672,3.761,673,2.444,674,2.444,675,1.885,676,2.444,677,2.444,678,2.444,679,2.444,680,2.444,681,2.444,682,4.584,683,2.444,684,2.444,685,2.444,686,2.444,687,2.444,688,2.444,689,2.444,690,2.444,691,2.444,692,2.444,693,2.444,694,2.444,695,2.444]],["title/classes/ColumnInformationDefaults.html",[89,0.133,618,2.642]],["body/classes/ColumnInformationDefaults.html",[3,0.17,4,0.17,5,0.146,7,2.058,16,0.22,17,0.669,18,1.339,21,0.712,22,0.337,23,0.018,24,0.17,25,0.011,26,0.013,27,0.011,46,0.691,61,0.447,64,0.404,67,0.755,68,0.485,80,0.298,89,0.17,97,0.703,104,4.667,177,4.256,611,4.51,615,4.573,616,4.243,618,4.256,633,5.035,640,5.14,696,4.147,697,5.216,698,5.216,699,4,700,4.81,701,4.81,702,4.81,703,3.71]],["title/interfaces/ColumnInformationInterface.html",[0,1.456,699,2.269]],["body/interfaces/ColumnInformationInterface.html",[0,2.82,2,2.704,3,0.18,4,0.18,5,0.155,7,2.174,9,4.83,16,0.232,17,0.692,18,1.386,21,0.745,22,0.346,23,0.018,24,0.18,25,0.011,26,0.014,27,0.011,37,0.822,61,0.423,64,0.418,80,0.315,611,3.301,615,4.616,616,3.839,633,5.211,646,4.101,675,3.921,699,3.784,704,4.382,705,6.106,706,6.262,707,6.262,708,6.262,709,6.262]],["title/interfaces/ColumnInformationOptionsInterface.html",[0,1.456,646,2.269]],["body/interfaces/ColumnInformationOptionsInterface.html",[0,2.475,2,2.79,3,0.186,4,0.186,5,0.16,7,2.244,16,0.24,17,0.706,18,1.396,21,0.749,22,0.351,23,0.018,24,0.186,25,0.012,26,0.014,27,0.012,64,0.421,65,1.347,478,4.522,611,3.406,615,4.607,616,4.05,629,4.046,633,5.25,646,3.857,705,5.504,710,4.522,711,5.246,712,5.246,713,5.246,714,5.246]],["title/components/ContainerComponent.html",[28,0.366,130,0.967]],["body/components/ContainerComponent.html",[1,0.995,3,0.143,4,0.143,5,0.164,16,0.185,17,0.597,21,0.394,22,0.206,23,0.017,24,0.143,25,0.009,26,0.012,27,0.009,28,0.594,29,1.04,30,1.454,31,1.243,32,1.243,33,1.243,37,0.709,38,0.995,39,0.53,40,1.044,41,2.297,42,2.403,44,1.663,46,0.555,51,2.051,61,0.273,64,0.343,67,0.394,68,0.296,80,0.334,83,0.369,85,1.918,86,1.566,87,1.087,88,0.721,89,0.143,112,1.04,113,1.663,114,1.52,115,0.084,116,2,117,1.243,118,1.243,119,1.04,120,1.243,121,1.04,122,2,123,1.04,124,1.243,125,1.04,126,1.243,127,1.04,128,1.243,129,1.873,130,1.673,131,1.243,132,1.04,133,1.663,134,1.04,135,1.137,136,1.04,137,1.243,138,1.04,139,1.189,140,1.04,141,1.243,142,1.04,143,1.04,144,1.59,145,1.04,146,1.137,147,1.04,148,1.189,149,1.04,150,1.243,151,0.995,152,1.243,153,1.04,154,1.189,155,1.243,156,0.474,157,0.721,158,2.367,159,0.995,160,0.951,161,0.792,162,0.995,163,0.995,164,0.995,165,0.951,166,0.995,167,0.951,168,0.995,169,0.995,170,0.995,171,1.6,172,0.951,173,0.995,174,0.951,175,1.243,715,3.483,716,6.498,717,5.402,718,4.04]],["title/directives/ControlValueAccessorBaseDirective.html",[115,0.078,160,0.884]],["body/directives/ControlValueAccessorBaseDirective.html",[3,0.14,4,0.14,5,0.12,16,0.18,17,0.588,22,0.328,23,0.018,24,0.14,25,0.009,26,0.012,27,0.009,37,0.518,39,0.518,40,0.845,46,0.632,48,1.782,52,0.588,61,0.478,63,1.204,64,0.363,65,1.148,66,2.56,68,0.574,69,2.224,71,1.852,75,0.655,80,0.372,83,0.36,89,0.14,105,0.463,115,0.11,156,0.463,160,1.252,167,1.252,177,3.742,191,2.276,212,1.215,317,2.117,343,1.778,424,5.061,430,3.045,527,3.045,561,1.689,574,3.636,575,4.529,663,5.301,719,3.416,720,3.404,721,6.016,722,6.016,723,5.32,724,5.32,725,5.32,726,5.32,727,6.496,728,5.55,729,6.438,730,3.948,731,3.948,732,5.32,733,3.948,734,5.32,735,3.948,736,3.948,737,3.948,738,3.948,739,3.948,740,3.948,741,3.948,742,3.948,743,3.948,744,6.016,745,6.016,746,3.948,747,3.948]],["title/directives/ControlValueAccessorClassNameInputDirective.html",[115,0.078,161,0.736]],["body/directives/ControlValueAccessorClassNameInputDirective.html",[3,0.149,4,0.149,5,0.128,16,0.193,17,0.615,21,0.607,22,0.283,23,0.018,24,0.149,25,0.009,26,0.012,27,0.009,37,0.554,39,0.554,40,0.868,46,0.644,48,1.601,51,2.096,52,0.615,53,1.358,54,1.04,61,0.464,63,0.789,64,0.406,65,0.752,67,0.542,68,0.564,75,0.542,76,1.123,80,0.344,82,0.992,83,0.385,89,0.255,97,0.812,105,0.652,115,0.115,156,0.495,160,1.309,161,1.09,191,2.379,242,2.195,317,1.241,343,1.9,420,2.378,423,2.386,424,2.968,425,3.637,427,2.797,428,2.609,462,2.968,591,1.56,592,5.362,593,6.083,598,3.637,599,3.637,600,3.637,601,4.794,602,3.637,603,3.637,604,3.637,605,3.254,606,3.637,607,3.637,719,3.35,748,2.957,749,2.968,750,2.968,751,4.219,752,4.219,753,4.219,754,3.637,755,4.219,756,4.219,757,3.637,758,4.219,759,4.219,760,3.637]],["title/directives/ControlValueAccessorColorInputDirective.html",[115,0.078,162,0.924]],["body/directives/ControlValueAccessorColorInputDirective.html",[3,0.176,4,0.176,5,0.151,16,0.228,18,1.379,21,0.603,22,0.254,23,0.018,24,0.176,25,0.011,26,0.014,27,0.011,37,0.654,39,0.654,40,0.923,46,0.642,52,0.683,53,1.444,54,1.157,61,0.417,64,0.281,67,0.486,68,0.553,75,0.486,76,0.951,80,0.383,82,1.103,83,0.454,88,0.888,89,0.219,97,0.903,98,1.121,105,0.584,115,0.128,156,0.584,161,1.212,162,1.522,212,1.903,234,2.365,305,3.103,420,2.266,423,2.817,427,2.763,428,2.486,591,1.841,594,3.234,596,2.365,608,3.504,609,1.757,719,3.193]],["title/directives/ControlValueAccessorSizeColorInputDirective.html",[115,0.078,163,0.924]],["body/directives/ControlValueAccessorSizeColorInputDirective.html",[3,0.164,4,0.164,5,0.141,16,0.212,18,1.376,20,2.369,21,0.669,22,0.302,23,0.018,24,0.164,25,0.01,26,0.013,27,0.01,37,0.61,39,0.61,40,0.9,46,0.646,52,0.654,53,1.408,54,1.107,61,0.44,64,0.262,67,0.577,68,0.559,75,0.453,76,0.91,80,0.366,82,1.161,83,0.424,88,0.828,89,0.209,97,0.864,98,1.045,105,0.545,115,0.122,156,0.545,161,1.16,163,1.457,212,2.11,232,2.47,234,2.205,305,2.969,316,3.147,420,2.311,423,2.627,427,2.781,428,2.535,591,1.717,596,2.205,608,3.267,609,2.088,719,3.256,748,2.47,761,4.003,762,2.627]],["title/directives/ControlValueAccessorSizeInputDirective.html",[115,0.078,164,0.924]],["body/directives/ControlValueAccessorSizeInputDirective.html",[3,0.176,4,0.176,5,0.151,16,0.228,20,2.373,21,0.603,22,0.254,23,0.018,24,0.176,25,0.011,26,0.014,27,0.011,37,0.654,39,0.654,40,0.923,46,0.642,52,0.683,53,1.444,54,1.157,61,0.417,64,0.281,67,0.486,68,0.553,75,0.486,76,0.951,80,0.383,82,1.103,83,0.454,88,0.888,89,0.219,97,0.903,98,1.121,105,0.584,115,0.128,156,0.584,161,1.212,164,1.522,212,1.903,232,2.649,316,3.289,420,2.266,423,2.817,427,2.763,428,2.486,591,1.841,594,3.234,596,2.365,609,1.757,719,3.193,762,2.817]],["title/directives/ControlValueAccessorSizeThemeColorInputDirective.html",[115,0.078,165,0.884]],["body/directives/ControlValueAccessorSizeThemeColorInputDirective.html",[3,0.147,4,0.147,5,0.127,16,0.19,17,0.609,18,1.378,20,2.373,21,0.686,22,0.335,23,0.018,24,0.147,25,0.009,26,0.012,27,0.009,37,0.547,39,0.547,40,0.864,46,0.664,48,1.072,52,0.609,53,1.351,54,1.031,58,1.775,60,2.369,61,0.462,63,0.779,64,0.311,65,0.743,67,0.538,68,0.561,75,0.406,76,0.848,80,0.382,82,1.102,83,0.38,84,1.615,87,1.983,88,0.743,89,0.195,97,0.805,98,0.937,105,0.488,115,0.114,156,0.488,161,1.081,165,1.298,212,2.025,232,2.215,234,2.618,305,2.767,316,2.932,420,2.369,423,2.356,427,2.807,428,2.599,591,1.54,609,1.945,719,3.338,748,2.215,750,2.93,762,2.356,763,2.517,764,4.753,765,3.591,766,2.215,767,3.332,768,2.517,769,2.517]],["title/directives/ControlValueAccessorThemeColorInputDirective.html",[115,0.078,166,0.924]],["body/directives/ControlValueAccessorThemeColorInputDirective.html",[3,0.158,4,0.158,5,0.135,16,0.204,17,0.637,18,1.382,21,0.658,22,0.326,23,0.018,24,0.158,25,0.01,26,0.013,27,0.01,37,0.585,39,0.585,40,0.886,46,0.665,48,1.147,52,0.637,53,1.386,54,1.078,58,1.855,60,2.413,61,0.456,63,0.833,64,0.325,65,0.794,67,0.434,68,0.558,75,0.434,76,0.886,80,0.395,82,1.027,83,0.406,84,1.727,87,1.988,88,0.794,89,0.204,97,0.842,98,1.002,105,0.522,115,0.119,156,0.522,161,1.129,166,1.418,212,1.773,234,2.735,305,2.891,420,2.356,423,2.52,427,2.803,428,2.585,591,1.647,596,2.115,609,1.572,719,3.32,748,3.064,749,3.134,763,2.692,766,2.369,767,3.481,768,2.692,769,2.692]],["title/classes/Csv.html",[89,0.133,770,2.642]],["body/classes/Csv.html",[3,0.105,4,0.105,5,0.198,16,0.306,17,0.482,21,0.712,22,0.37,23,0.018,24,0.154,25,0.007,26,0.01,27,0.007,46,0.675,48,1.913,52,0.482,58,1.403,61,0.489,63,1.278,64,0.385,65,1.218,67,0.503,68,0.378,75,0.653,76,1.131,89,0.105,97,0.434,105,0.785,183,3.629,196,3.864,201,2.83,237,2.564,242,1.82,317,1.97,364,4.254,635,5.375,770,4.445,771,2.294,772,4.664,773,6.643,774,5.158,775,5.679,776,5.158,777,5.158,778,5.158,779,4.358,780,4.447,781,4.358,782,5.213,783,5.679,784,4.358,785,2.974,786,4.358,787,2.974,788,6.83,789,4.358,790,5.679,791,2.974,792,2.974,793,2.974,794,2.974,795,4.896,796,2.974,797,2.974,798,2.974,799,4.896,800,3.361,801,2.974,802,2.974,803,2.974,804,4.358,805,2.974,806,2.974,807,2.974,808,4.358,809,4.896,810,4.358,811,2.974,812,4.358,813,2.974,814,4.358,815,2.974,816,2.294,817,4.358,818,2.974,819,2.974,820,2.564,821,2.564,822,2.564,823,4.358,824,4.358,825,2.974,826,2.974,827,2.974,828,2.974,829,2.974,830,2.974,831,2.974,832,2.974,833,2.974,834,2.974,835,2.974,836,2.974,837,2.974,838,2.974,839,2.974,840,2.974,841,2.974,842,2.974,843,2.974,844,2.974,845,2.974,846,4.358,847,4.358,848,2.974,849,2.974,850,2.974,851,4.358,852,4.358,853,2.974,854,2.974,855,2.974,856,2.974,857,2.974,858,2.974]],["title/directives/EventManagerDirective.html",[115,0.078,167,0.884]],["body/directives/EventManagerDirective.html",[3,0.137,4,0.137,5,0.117,16,0.176,17,0.579,22,0.365,23,0.018,24,0.137,25,0.009,26,0.012,27,0.009,37,0.507,39,0.507,40,0.838,46,0.693,52,0.579,61,0.495,63,1.113,64,0.335,65,1.061,67,0.511,68,0.556,75,0.65,80,0.324,83,0.352,89,0.137,115,0.108,156,0.453,167,1.233,172,1.233,242,2.099,317,2.196,390,3.328,430,2.977,431,5.711,472,3.328,574,4.384,663,4.488,670,5.499,719,3.516,727,5.499,728,4.517,760,5.128,799,5.499,800,4.041,859,2.977,860,5.948,861,5.948,862,6.379,863,6.379,864,5.239,865,5.239,866,5.239,867,5.948,868,5.948,869,7.336,870,3.328,871,3.328,872,3.86,873,3.86,874,5.239,875,3.86,876,3.86,877,5.239,878,3.86,879,5.239,880,3.86,881,3.328,882,3.86,883,5.239,884,3.86,885,3.86,886,5.239,887,3.86,888,3.86,889,3.86,890,3.86,891,3.86,892,3.86,893,3.86]],["title/components/FileInputComponent.html",[28,0.366,132,0.967]],["body/components/FileInputComponent.html",[1,0.665,3,0.096,4,0.096,5,0.222,10,3.451,16,0.123,17,0.449,18,0.505,19,4.086,20,0.87,21,0.617,22,0.346,23,0.018,24,0.096,25,0.006,26,0.009,27,0.006,28,0.475,29,0.695,30,1.092,31,0.831,32,0.831,33,0.831,37,0.533,38,0.665,39,0.355,40,1.019,41,2.206,42,2.307,44,1.249,46,0.672,48,1.629,49,3.934,50,3.934,51,1.642,52,0.449,53,1.001,54,0.759,58,1.307,60,2.132,61,0.465,63,0.912,64,0.344,65,1.088,66,2.256,67,0.617,68,0.488,69,2.004,71,1.668,75,0.475,76,0.416,80,0.359,81,1.528,82,1.188,83,0.247,84,1.047,87,0.727,88,0.482,89,0.096,91,1.632,92,1.632,93,1.437,95,1.632,96,1.632,97,0.593,98,0.608,100,1.754,101,1.754,105,0.317,112,0.695,113,1.249,114,1.142,115,0.056,116,1.668,117,0.831,118,0.831,119,0.695,120,0.831,121,0.695,122,1.668,123,0.695,124,0.831,125,0.695,126,0.831,127,0.695,128,0.831,129,1.5,130,0.695,131,0.831,132,1.57,133,1.249,134,0.695,135,0.76,136,0.695,137,0.831,138,0.695,139,0.795,140,0.695,141,0.831,142,0.695,143,0.695,144,1.194,145,0.695,146,0.76,147,0.695,148,0.795,149,0.695,150,0.831,151,0.665,152,0.831,153,0.695,154,0.795,155,0.831,156,0.317,157,0.482,158,2.243,159,0.665,160,0.636,161,0.53,162,0.665,163,0.665,164,0.665,165,1.275,166,0.665,167,0.636,168,0.665,169,0.665,170,0.665,171,0.665,172,0.636,173,0.665,174,0.636,175,0.831,192,2.329,196,2.296,212,1.668,224,2.329,317,0.795,364,2.855,409,1.652,420,0.91,427,1.5,428,0.999,547,2.037,548,2.446,549,2.037,550,2.037,561,1.156,562,1.632,635,3.429,894,6.017,895,5.383,896,2.329,897,3.499,898,4.874,899,4.058,900,5.419,901,5.008,902,4.058,903,2.702,904,2.702,905,4.058,906,2.702,907,2.702,908,4.058,909,4.874,910,2.702,911,3.499,912,4.058,913,2.702,914,4.874,915,2.702,916,2.702,917,2.702,918,2.702,919,2.702,920,2.702,921,2.702,922,4.058,923,2.702,924,2.702,925,2.702,926,2.702,927,1.754,928,2.702,929,2.702]],["title/components/FormGroupComponent.html",[28,0.366,134,0.967]],["body/components/FormGroupComponent.html",[1,0.875,3,0.126,4,0.126,5,0.151,16,0.162,17,0.547,18,0.665,21,0.632,22,0.29,23,0.018,24,0.126,25,0.008,26,0.011,27,0.008,28,0.555,29,0.915,30,1.332,31,1.094,32,1.094,33,1.094,37,0.65,38,1.516,39,0.467,40,1.037,41,2.271,42,2.375,44,1.523,46,0.64,51,1.919,52,0.547,53,1.265,54,0.926,61,0.437,64,0.321,66,1.314,67,0.555,68,0.417,75,0.347,76,0.761,80,0.306,82,1.016,83,0.324,85,1.687,86,1.378,87,0.956,88,0.634,89,0.126,97,0.723,98,0.8,105,0.58,112,0.915,113,1.523,114,1.393,115,0.073,116,1.896,117,1.094,118,1.094,119,0.915,120,1.094,121,0.915,122,1.896,123,0.915,124,1.094,125,0.915,126,1.094,127,0.915,128,1.094,129,1.753,130,0.915,131,1.094,132,0.915,133,1.523,134,1.586,135,1.936,136,0.915,137,1.094,138,0.915,139,1.046,140,0.915,141,1.094,142,0.915,143,0.915,144,1.457,145,0.915,146,1,147,0.915,148,1.046,149,0.915,150,1.094,151,0.875,152,1.094,153,0.915,154,1.046,155,1.094,156,0.417,157,0.634,158,2.332,159,0.875,160,0.836,161,0.697,162,0.875,163,0.875,164,0.875,165,0.836,166,0.875,167,0.836,168,0.875,169,0.875,170,0.875,171,0.875,172,0.836,173,0.875,174,0.836,175,1.094,191,2.117,212,1.523,571,2.5,572,4.751,573,3.818,576,4.393,577,4.995,578,3.482,930,5.781,931,5.695,932,3.064,933,3.553,934,3.553,935,3.553,936,3.553,937,3.553,938,3.553,939,3.553,940,3.553]],["title/modules/FormModule.html",[403,2.124,941,2.438]],["body/modules/FormModule.html",[3,0.123,4,0.123,5,0.148,23,0.018,24,0.123,25,0.008,26,0.011,27,0.008,80,0.469,83,0.317,89,0.123,112,0.893,121,1.886,125,1.886,127,1.886,132,1.886,134,1.886,138,1.886,139,1.021,140,1.886,142,1.886,143,1.886,144,1.021,145,1.886,146,0.977,147,1.886,148,1.021,149,1.886,153,1.886,154,1.021,168,1.638,287,2.253,403,1.963,404,4.022,405,2.097,406,2.097,407,3.956,408,2.441,409,1.412,410,3.956,414,3.425,415,2.441,417,3.755,418,4.197,419,2.676,432,3.755,561,1.484,588,2.441,895,2.676,941,5.146,942,2.992,943,2.992,944,3.47,945,2.992,946,3.47,947,3.47,948,2.676,949,5.623,950,2.676,951,3.47,952,3.47,953,3.425,954,3.47,955,5.623,956,3.47,957,2.992,958,2.676,959,3.47,960,4.197,961,3.47,962,3.47,963,3.47,964,3.47,965,3.47]],["title/components/GridComponent.html",[28,0.366,136,0.967]],["body/components/GridComponent.html",[1,0.889,3,0.128,4,0.128,5,0.152,16,0.165,17,0.553,21,0.635,22,0.293,23,0.018,24,0.128,25,0.008,26,0.011,27,0.008,28,0.56,29,0.929,30,1.347,31,1.111,32,1.111,33,1.111,37,0.657,38,0.889,39,0.474,40,1.038,41,2.275,42,2.379,44,1.54,46,0.643,51,1.935,52,0.553,53,1.274,54,0.936,61,0.419,64,0.35,67,0.56,68,0.421,75,0.352,76,0.77,80,0.31,82,1.024,83,0.329,85,1.714,88,0.644,89,0.128,97,0.731,98,0.812,105,0.423,112,0.929,113,1.54,114,1.408,115,0.075,116,1.909,117,1.111,118,1.111,119,0.929,120,1.111,121,0.929,122,1.909,123,0.929,124,1.111,125,0.929,126,1.111,127,0.929,128,1.111,129,1.768,130,0.929,131,1.111,132,0.929,133,1.54,134,0.929,135,1.016,136,1.596,137,1.111,138,0.929,139,1.062,140,0.929,141,1.111,142,0.929,143,0.929,144,1.473,145,0.929,146,1.016,147,0.929,148,1.062,149,0.929,150,1.111,151,0.889,152,1.111,153,0.929,154,1.062,155,1.111,156,0.423,157,1.106,158,2.336,159,0.889,160,0.85,161,0.708,162,0.889,163,0.889,164,0.889,165,0.85,166,0.889,167,0.85,168,0.889,169,0.889,170,0.889,171,0.889,172,0.85,173,0.889,174,0.85,175,1.111,212,2.074,426,2.54,966,3.112,967,6.201,968,5.004,969,6.201,970,6.201,971,5.004,972,3.61,973,3.61,974,3.61,975,3.61,976,3.61,977,3.61,978,3.61,979,3.61]],["title/components/IconButtonComponent.html",[28,0.366,138,0.967]],["body/components/IconButtonComponent.html",[1,0.799,3,0.115,4,0.115,5,0.141,16,0.148,17,0.513,18,0.607,22,0.342,23,0.018,24,0.115,25,0.007,26,0.01,27,0.007,28,0.529,29,0.835,30,1.249,31,0.999,32,0.999,33,0.999,37,0.61,38,1.456,39,0.426,40,1.031,41,2.238,42,2.34,44,1.429,46,0.637,48,1.395,49,3.934,50,4.051,54,0.868,58,1.495,60,2.259,61,0.463,63,0.868,64,0.353,65,1.161,66,2.7,67,0.577,68,0.433,69,2.535,71,1.668,75,0.316,80,0.335,81,1.835,82,0.828,83,0.296,84,1.258,85,1.541,86,1.258,87,0.873,88,0.579,89,0.115,91,1.961,92,1.961,93,1.726,95,1.961,96,1.961,105,0.381,112,0.835,113,1.429,114,1.306,115,0.067,116,1.821,117,0.999,118,0.999,119,0.835,120,0.999,121,0.835,122,1.821,123,0.835,124,0.999,125,0.835,126,0.999,127,0.835,128,0.999,129,1.668,130,0.835,131,0.999,132,0.835,133,1.429,134,0.835,135,0.913,136,0.835,137,0.999,138,1.523,139,1.842,140,0.835,141,0.999,142,0.835,143,0.835,144,1.366,145,0.835,146,1.525,147,0.835,148,0.955,149,0.835,150,0.999,151,0.799,152,0.999,153,0.835,154,0.955,155,0.999,156,0.381,157,0.579,158,2.304,159,0.799,160,0.764,161,0.636,162,0.799,163,0.799,164,0.799,165,0.764,166,0.799,167,0.764,168,0.799,169,0.799,170,0.799,171,0.799,172,0.764,173,0.799,174,0.764,175,0.999,191,1.986,317,0.955,343,1.461,441,5.78,459,3.266,460,4.181,462,4.403,489,3.581,501,2.503,503,2.503,508,2.798,518,2.503,519,3.581,522,2.798,948,5.383,980,6.017,981,2.283,982,2.503,983,3.245,984,3.581,985,3.245,986,3.245,987,3.245,988,3.245,989,3.245]],["title/components/IconComponent.html",[28,0.366,140,0.967]],["body/components/IconComponent.html",[1,1.01,3,0.145,4,0.145,5,0.166,18,0.767,23,0.017,24,0.145,25,0.009,26,0.012,27,0.009,28,0.598,29,1.056,30,1.469,31,1.262,32,1.262,33,1.262,37,0.717,38,1.01,39,0.539,40,1.045,41,2.296,42,2.401,44,1.68,58,1.975,61,0.277,64,0.346,80,0.338,83,0.374,85,1.948,86,1.59,88,0.732,89,0.145,112,1.056,113,1.68,114,1.536,115,0.085,116,2.012,117,1.262,118,1.262,119,1.056,120,1.262,121,1.056,122,2.012,123,1.056,124,1.262,125,1.056,126,1.262,127,1.056,128,1.262,129,1.888,130,1.056,131,1.262,132,1.056,133,1.68,134,1.056,135,1.154,136,1.056,137,1.262,138,1.056,139,1.924,140,1.683,141,1.262,142,1.056,143,1.056,144,1.606,145,1.056,146,1.154,147,1.056,148,1.207,149,1.056,150,1.262,151,1.01,152,1.262,153,1.056,154,1.207,155,1.262,156,0.481,157,0.732,158,2.371,159,1.01,160,0.965,161,0.804,162,1.01,163,1.01,164,1.01,165,0.965,166,1.01,167,0.965,168,1.01,169,1.609,170,1.01,171,1.01,172,0.965,173,1.01,174,0.965,175,1.262,609,1.447,766,2.181,990,3.536,991,5.457,992,4.101]],["title/components/InputComponent.html",[28,0.366,142,0.967]],["body/components/InputComponent.html",[1,0.734,3,0.105,4,0.105,5,0.133,16,0.136,17,0.482,18,0.557,20,0.959,21,0.59,22,0.354,23,0.018,24,0.105,25,0.007,26,0.01,27,0.007,28,0.504,29,0.767,30,1.175,31,0.917,32,0.917,33,0.917,37,0.573,38,0.734,39,0.391,40,1.026,41,2.231,42,2.333,44,1.343,46,0.687,49,3.947,50,4.048,51,1.74,52,0.482,53,1.167,54,0.816,58,1.405,60,2.201,61,0.469,63,0.557,64,0.32,65,1.014,66,2.338,67,0.617,68,0.491,69,2.338,71,1.75,75,0.504,76,1.03,80,0.352,81,1.685,82,1.195,83,0.272,84,1.155,87,0.802,88,0.531,89,0.105,91,1.801,92,1.801,93,1.585,95,1.801,96,1.801,97,0.924,98,0.67,100,1.935,101,1.935,105,0.606,112,0.767,113,1.343,114,1.228,115,0.062,116,1.75,117,0.917,118,0.917,119,0.767,120,0.917,121,0.767,122,1.75,123,0.767,124,0.917,125,0.767,126,0.917,127,0.767,128,0.917,129,1.589,130,0.767,131,0.917,132,0.767,133,1.343,134,0.767,135,0.839,136,0.767,137,0.917,138,0.767,139,0.877,140,0.767,141,0.917,142,1.628,143,0.767,144,1.284,145,0.767,146,0.839,147,0.767,148,0.877,149,0.767,150,0.917,151,0.734,152,0.917,153,0.767,154,0.877,155,0.917,156,0.349,157,0.531,158,2.277,159,0.734,160,0.701,161,0.584,162,0.734,163,0.734,164,0.734,165,1.338,166,0.734,167,0.701,168,0.734,169,0.734,170,0.734,171,0.734,172,0.701,173,0.734,174,0.701,175,0.917,242,1.54,409,1.776,420,1.004,427,1.614,428,1.102,457,3.762,547,2.19,548,2.592,549,2.19,550,2.19,561,1.275,562,1.801,566,2.096,605,3.366,897,3.762,901,5.217,982,2.298,993,2.569,994,5.685,995,5.685,996,5.164,997,4.364,998,2.98,999,2.98,1000,2.98,1001,2.98,1002,2.98,1003,2.98,1004,2.98,1005,2.98,1006,2.98,1007,2.98,1008,2.569,1009,2.98]],["title/classes/Queue.html",[89,0.133,288,2.642]],["body/classes/Queue.html",[3,0.127,4,0.127,5,0.109,7,2.13,16,0.164,17,0.55,22,0.254,23,0.018,24,0.127,25,0.008,26,0.011,27,0.008,46,0.652,48,1.473,52,0.55,61,0.439,63,0.67,64,0.202,65,0.639,66,1.841,67,0.349,68,0.419,69,1.841,71,1.532,75,0.673,76,1.171,89,0.203,97,0.524,105,0.789,114,2.125,191,2.13,196,2.816,242,1.757,271,4.167,275,3.84,283,4.014,286,4.292,288,5.57,297,4.932,298,5.763,317,1.465,346,5.33,350,3.233,447,3.503,455,3.09,578,3.503,619,2.764,663,4.947,697,4.292,927,2.327,1010,3.09,1011,3.584,1012,3.584,1013,3.584,1014,3.584,1015,4.932,1016,6.156,1017,3.584,1018,6.496,1019,3.584,1020,5.721,1021,4.932,1022,3.584,1023,4.979,1024,6.182,1025,3.584,1026,4.979,1027,3.584,1028,4.979,1029,6.723,1030,4.979,1031,4.979,1032,4.979,1033,6.496,1034,4.979,1035,3.584,1036,4.979,1037,4.979,1038,3.584,1039,4.979,1040,3.584,1041,3.584,1042,6.496,1043,3.584,1044,3.584,1045,3.584,1046,3.584,1047,3.584,1048,3.584,1049,4.979,1050,3.584]],["title/components/RadioButtonComponent.html",[28,0.366,143,0.967]],["body/components/RadioButtonComponent.html",[1,0.837,3,0.12,4,0.12,5,0.146,16,0.155,18,0.636,20,1.095,21,0.589,22,0.245,23,0.018,24,0.12,25,0.008,26,0.011,27,0.008,28,0.543,29,0.876,30,1.292,31,1.047,32,1.047,33,1.047,37,0.63,38,0.837,39,0.447,40,1.034,41,2.256,42,2.359,44,1.478,46,0.633,52,0.531,53,1.241,54,0.898,58,1.791,61,0.43,64,0.314,67,0.468,68,0.443,71,1.712,75,0.468,76,0.738,80,0.344,82,0.992,83,0.31,88,0.607,89,0.12,97,0.701,98,0.765,105,0.399,112,0.876,113,1.478,114,1.351,115,0.07,116,1.86,117,1.047,118,1.047,119,0.876,120,1.047,121,0.876,122,1.86,123,0.876,124,1.047,125,0.876,126,1.047,127,0.876,128,1.047,129,1.712,130,0.876,131,1.047,132,0.876,133,1.478,134,0.876,135,0.957,136,0.876,137,1.047,138,0.876,139,1.001,140,0.876,141,1.047,142,0.876,143,1.702,144,2,145,0.876,146,1.701,147,0.876,148,1.001,149,0.876,150,1.047,151,0.837,152,1.047,153,0.876,154,1.001,155,1.047,156,0.399,157,0.607,158,2.319,159,0.837,160,0.801,161,0.667,162,0.837,163,1.488,164,0.837,165,0.801,166,0.837,167,0.801,168,0.837,169,0.837,170,0.837,171,0.837,172,0.801,173,0.837,174,0.801,175,1.047,317,1.413,409,1.954,420,1.146,427,1.775,428,1.258,459,3.377,547,2.409,548,2.792,549,2.409,550,2.409,552,4.251,553,5.242,554,3.914,556,3.377,561,1.455,562,2.056,563,2.056,564,3.703,565,2.933,566,2.393,567,2.933,568,2.933,609,1.2,766,1.809,953,4.652,981,2.393,984,2.624,1051,5.701,1052,4.139,1053,3.402,1054,3.402]],["title/components/RadioButtonGroupComponent.html",[28,0.366,145,0.967]],["body/components/RadioButtonGroupComponent.html",[1,0.798,3,0.115,4,0.115,5,0.141,16,0.148,17,0.513,21,0.706,22,0.319,23,0.018,24,0.115,25,0.007,26,0.01,27,0.007,28,0.528,29,0.834,30,1.248,31,0.998,32,0.998,33,0.998,37,0.609,38,0.798,39,0.426,40,1.031,41,2.251,42,2.354,44,1.428,46,0.637,51,1.825,52,0.513,54,0.868,61,0.439,63,0.606,64,0.333,65,0.578,67,0.577,68,0.433,69,1.715,71,1.667,75,0.452,80,0.335,82,1.055,83,0.296,89,0.115,112,0.834,113,1.428,114,1.305,115,0.067,116,1.82,117,0.998,118,0.998,119,0.834,120,0.998,121,0.834,122,1.82,123,0.834,124,0.998,125,0.834,126,0.998,127,0.834,128,0.998,129,1.667,130,0.834,131,0.998,132,0.834,133,1.428,134,0.834,135,0.912,136,0.834,137,0.998,138,0.834,139,0.954,140,0.834,141,0.998,142,0.834,143,0.834,144,2.017,145,1.675,146,2.07,147,0.834,148,0.954,149,0.834,150,0.998,151,0.798,152,0.998,153,0.834,154,0.954,155,0.998,156,0.38,157,0.578,158,2.304,159,0.798,160,0.763,161,0.635,162,0.798,163,0.798,164,0.798,165,0.763,166,0.798,167,0.763,168,1.456,169,0.798,170,0.798,171,0.798,172,0.763,173,0.798,174,0.763,175,0.998,212,1.428,317,1.594,409,1.888,547,2.328,548,2.718,549,2.328,550,2.328,552,3.263,554,3.811,556,3.263,561,1.387,563,1.959,571,2.28,572,4.561,573,3.578,574,3.273,575,4.16,576,4.178,577,4.178,578,3.263,587,2.794,588,2.28,666,3.578,932,2.794,953,4.715,1055,5.778,1056,3.241,1057,3.241,1058,4.638,1059,3.241,1060,3.999,1061,3.241,1062,3.241,1063,3.999,1064,4.178,1065,2.794]],["title/modules/SbElementModule.html",[403,2.124,1066,2.642]],["body/modules/SbElementModule.html",[3,0.145,4,0.145,5,0.124,23,0.018,24,0.145,25,0.009,26,0.012,27,0.009,29,1.938,30,1.099,35,3.15,80,0.466,83,0.373,88,0.728,89,0.145,112,1.051,119,1.938,123,1.938,130,1.938,136,1.938,151,1.853,156,0.479,174,1.68,287,2.652,403,2.31,404,4.225,405,3.289,406,2.468,407,4.306,408,2.873,409,1.662,410,4.306,414,3.829,415,2.873,417,4.198,422,2.468,432,4.198,561,1.747,941,4.888,960,4.692,1066,5.538,1067,3.521,1068,4.084,1069,3.521,1070,3.521,1071,4.084,1072,4.084,1073,5.442,1074,4.084,1075,3.521,1076,4.084,1077,4.084,1078,4.084,1079,4.084,1080,4.084,1081,4.084,1082,4.084,1083,4.084,1084,4.084,1085,4.084]],["title/components/SelectButtonComponent.html",[28,0.366,147,0.967]],["body/components/SelectButtonComponent.html",[1,0.711,3,0.102,4,0.102,5,0.13,16,0.132,17,0.471,21,0.582,22,0.304,23,0.018,24,0.102,25,0.006,26,0.009,27,0.006,28,0.494,29,0.743,30,1.148,31,0.888,32,0.888,33,0.888,37,0.56,38,0.711,39,0.379,40,1.024,41,2.215,42,2.325,44,1.312,46,0.684,49,3.908,50,4.011,52,0.471,53,1.15,58,1.373,60,2.179,61,0.458,63,0.798,64,0.337,65,1.065,66,2.311,67,0.494,68,0.438,69,2.454,71,1.838,75,0.582,76,0.919,80,0.346,81,1.633,83,0.263,84,1.119,89,0.102,91,1.744,92,1.744,93,1.535,95,1.744,96,1.744,97,0.818,98,0.649,100,1.874,101,1.874,105,0.5,112,0.743,113,1.312,114,1.2,115,0.06,116,1.723,117,0.888,118,0.888,119,0.743,120,0.888,121,0.743,122,1.723,123,0.743,124,0.888,125,0.743,126,0.888,127,0.743,128,0.888,129,1.56,130,0.743,131,0.888,132,0.743,133,1.312,134,0.743,135,0.812,136,0.743,137,0.888,138,0.743,139,0.849,140,0.743,141,0.888,142,0.743,143,0.743,144,1.255,145,0.743,146,1.576,147,1.609,148,1.995,149,0.743,150,0.888,151,0.711,152,0.888,153,0.743,154,1.758,155,0.888,156,0.339,157,0.515,158,2.266,159,0.711,160,0.679,161,0.566,162,0.711,163,0.711,164,0.711,165,0.679,166,0.711,167,0.679,168,1.378,169,0.711,170,0.711,171,0.711,172,0.679,173,0.711,174,0.679,175,0.888,242,1.019,317,1.758,409,1.735,459,2.999,547,2.14,548,2.544,549,2.14,550,2.14,561,1.235,563,1.744,574,3.063,575,3.939,588,2.031,609,1.019,666,4.318,957,2.488,958,5.318,981,2.031,982,2.226,984,2.226,1052,3.676,1060,3.676,1063,3.676,1064,3.91,1065,2.488,1086,5.944,1087,5.069,1088,5.599,1089,2.886,1090,2.886,1091,4.263,1092,2.886,1093,2.886,1094,2.886,1095,2.886,1096,4.263,1097,2.886,1098,2.886,1099,2.886,1100,2.886,1101,2.886,1102,2.886,1103,2.886]],["title/interfaces/SelectedOptions.html",[0,1.456,585,2.438]],["body/interfaces/SelectedOptions.html",[0,2.295,2,3.148,3,0.21,4,0.21,5,0.18,21,0.669,23,0.017,24,0.21,25,0.013,26,0.015,27,0.013,61,0.4,66,2.536,585,4.453,1104,5.913,1105,5.103,1106,5.919,1107,5.913,1108,5.919]],["title/directives/SelectionOptionsDirective.html",[115,0.078,168,0.924]],["body/directives/SelectionOptionsDirective.html",[3,0.17,4,0.17,5,0.146,16,0.22,17,0.669,18,0.9,20,1.549,21,0.469,22,0.308,23,0.018,24,0.17,25,0.011,26,0.013,27,0.011,37,0.632,39,0.632,40,0.912,46,0.604,54,1.132,61,0.483,63,0.9,64,0.271,65,0.858,67,0.59,68,0.509,69,1.778,75,0.469,76,1.124,80,0.41,82,1.079,83,0.439,87,1.295,88,0.858,89,0.17,105,0.564,115,0.125,156,0.564,165,1.424,168,1.489,191,2.588,242,2.135,317,1.415,343,2.166,420,1.621,427,2.237,428,1.778,436,4.87,574,4,585,4.744,1064,3.71,1109,6.299,1110,4.147,1111,6.619,1112,6.05,1113,4.81,1114,4.81,1115,4.81,1116,4.81,1117,4.81,1118,4.81,1119,4.81,1120,4.81,1121,6.05,1122,4.81]],["title/directives/SizeColorInputDirective.html",[115,0.078,169,0.924]],["body/directives/SizeColorInputDirective.html",[3,0.172,4,0.172,5,0.147,16,0.222,18,1.39,20,2.139,21,0.679,22,0.31,23,0.018,24,0.172,25,0.011,26,0.014,27,0.011,37,0.637,39,0.637,40,0.915,46,0.655,52,0.672,53,1.431,54,1.138,61,0.448,64,0.273,67,0.593,68,0.445,75,0.473,76,0.935,80,0.376,82,1.185,83,0.442,86,2.701,88,0.865,89,0.215,97,0.888,98,1.091,105,0.569,115,0.126,156,0.569,157,1.085,169,1.497,212,2.144,232,2.579,234,2.303,305,3.052,316,3.234,590,3.496,591,1.793,596,2.303,608,3.412,609,2.146,748,2.579,761,4.181,762,2.743]],["title/directives/SizeInputDirective.html",[115,0.078,170,0.924]],["body/directives/SizeInputDirective.html",[3,0.183,4,0.183,5,0.157,16,0.236,20,2.2,21,0.617,22,0.263,23,0.018,24,0.183,25,0.011,26,0.014,27,0.011,37,0.678,39,0.678,40,0.935,46,0.65,52,0.699,53,1.462,54,1.183,61,0.427,64,0.291,67,0.504,68,0.378,75,0.504,76,0.972,80,0.391,82,1.128,83,0.471,86,2.65,88,0.921,89,0.224,97,0.924,98,1.162,105,0.606,115,0.131,156,0.606,157,1.128,170,1.556,212,1.946,232,2.746,316,3.363,590,3.429,591,1.909,594,3.353,596,2.452,609,1.822,762,2.92]],["title/directives/SizeThemeColorInputDirective.html",[38,0.924,115,0.078]],["body/directives/SizeThemeColorInputDirective.html",[3,0.156,4,0.156,5,0.134,16,0.201,17,0.632,18,1.393,20,2.046,21,0.696,22,0.343,23,0.018,24,0.156,25,0.01,26,0.013,27,0.01,37,0.579,38,1.409,39,0.579,40,0.883,46,0.672,48,1.135,52,0.632,53,1.381,54,1.07,58,1.842,60,2.406,61,0.47,63,0.825,64,0.323,65,0.786,67,0.558,68,0.419,75,0.43,76,0.88,80,0.393,82,1.133,83,0.402,84,1.709,86,2.769,87,2.005,88,0.786,89,0.203,97,0.836,98,0.992,105,0.517,115,0.118,156,0.517,157,1.02,212,2.07,232,2.344,234,2.717,305,2.871,316,3.043,590,3.584,591,1.63,609,2.019,748,2.344,750,3.101,762,2.493,763,2.663,764,4.933,765,3.8,766,2.344,767,3.457,768,2.663,769,2.663]],["title/directives/SizeThemeInputDirective.html",[115,0.078,171,0.924]],["body/directives/SizeThemeInputDirective.html",[3,0.165,4,0.165,5,0.142,16,0.213,17,0.656,20,2.101,21,0.67,22,0.333,23,0.018,24,0.165,25,0.01,26,0.013,27,0.01,37,0.613,39,0.613,40,0.902,46,0.672,48,1.201,52,0.656,53,1.411,54,1.11,58,1.911,60,2.443,61,0.464,63,0.873,64,0.335,65,0.832,67,0.455,68,0.342,75,0.455,76,0.913,80,0.404,82,1.058,83,0.426,84,1.809,86,2.75,87,2.007,88,0.832,89,0.21,97,0.867,98,1.05,105,0.547,115,0.123,156,0.547,157,1.058,171,1.461,212,1.827,232,2.481,316,3.156,590,3.559,591,1.725,609,2.094,748,3.156,749,3.282,750,3.282,762,2.639,763,2.819,766,2.481,767,3.586,768,2.819,769,2.819]],["title/components/SliderComponent.html",[28,0.366,149,0.967]],["body/components/SliderComponent.html",[1,0.68,3,0.098,4,0.098,5,0.125,16,0.126,17,0.456,18,0.517,20,0.889,21,0.6,22,0.353,23,0.018,24,0.098,25,0.006,26,0.009,27,0.006,28,0.482,29,0.711,30,1.111,31,0.85,32,0.85,33,0.85,37,0.542,38,0.68,39,0.363,40,1.021,41,2.211,42,2.313,44,1.27,46,0.647,48,1.584,51,1.664,52,0.456,53,1.125,54,0.772,61,0.49,63,0.772,64,0.331,65,0.736,66,1.826,67,0.653,68,0.528,69,1.526,71,1.27,75,0.482,76,0.98,80,0.306,82,1.169,83,0.252,87,0.743,88,0.493,89,0.098,97,0.603,98,0.621,105,0.579,112,0.711,113,1.27,114,1.161,115,0.057,116,1.686,117,0.85,118,0.85,119,0.711,120,0.85,121,0.711,122,1.686,123,0.711,124,0.85,125,0.711,126,0.85,127,0.711,128,0.85,129,1.52,130,0.711,131,0.85,132,0.711,133,1.27,134,0.711,135,0.777,136,0.711,137,0.85,138,0.711,139,0.813,140,0.711,141,0.85,142,0.711,143,0.711,144,1.214,145,0.711,146,0.777,147,0.711,148,0.813,149,1.584,150,0.85,151,0.68,152,0.85,153,0.711,154,0.813,155,0.85,156,0.324,157,0.493,158,2.251,159,0.68,160,0.65,161,0.542,162,0.68,163,0.68,164,0.68,165,1.29,166,0.68,167,0.65,168,0.68,169,0.68,170,0.68,171,0.68,172,0.65,173,0.68,174,0.65,175,0.85,191,1.765,196,4.08,242,1.743,301,5.65,317,1.214,343,1.858,364,3.475,409,1.679,420,0.931,427,1.526,428,1.021,547,2.071,548,2.479,549,2.071,550,2.071,553,4.917,561,1.182,562,1.669,564,2.131,927,3.808,1123,2.381,1124,5.479,1125,4.126,1126,4.939,1127,4.939,1128,4.126,1129,4.258,1130,4.939,1131,4.939,1132,6.375,1133,5.864,1134,5.864,1135,2.762,1136,4.126,1137,2.762,1138,2.762,1139,2.762,1140,4.126,1141,4.126,1142,2.762,1143,2.762,1144,2.762,1145,2.762,1146,2.762,1147,2.762,1148,2.762,1149,2.762,1150,2.762,1151,2.762,1152,2.762,1153,2.762,1154,2.762,1155,4.126,1156,2.762,1157,4.939,1158,2.762,1159,2.762,1160,2.762,1161,4.126,1162,2.762,1163,2.762,1164,2.762,1165,2.762,1166,2.762,1167,2.762,1168,2.762]],["title/directives/StateManagerDirective.html",[115,0.078,172,0.884]],["body/directives/StateManagerDirective.html",[3,0.115,4,0.115,5,0.098,16,0.148,17,0.512,22,0.38,23,0.018,24,0.115,25,0.007,26,0.01,27,0.007,39,0.425,40,0.776,46,0.66,48,1.863,52,0.512,54,0.866,61,0.511,63,1.281,64,0.386,65,1.222,66,2.904,67,0.576,68,0.563,69,2.405,71,1.425,75,0.668,80,0.2,82,1.115,83,0.295,89,0.115,105,0.693,115,0.096,156,0.379,172,1.09,191,1.981,317,2.129,343,2.66,429,5.863,460,4.173,461,3.993,462,4.712,489,3.572,501,2.495,503,2.495,518,2.495,519,3.572,527,2.495,719,3.61,754,5.774,757,5.774,859,2.495,870,2.788,871,2.788,881,3.993,1008,2.788,1169,5.41,1170,5.41,1171,5.41,1172,4.631,1173,4.631,1174,4.631,1175,6.697,1176,4.631,1177,4.631,1178,4.631,1179,4.631,1180,3.234,1181,4.631,1182,3.234,1183,4.631,1184,3.234,1185,4.631,1186,3.234,1187,3.234,1188,3.234,1189,3.234,1190,3.234,1191,3.234,1192,3.234,1193,4.631,1194,3.234,1195,3.234,1196,4.631,1197,3.234,1198,3.234,1199,3.234,1200,3.234,1201,4.631,1202,3.234,1203,4.631,1204,3.234,1205,4.631,1206,3.234,1207,4.631,1208,3.234,1209,3.234]],["title/classes/Table.html",[89,0.133,1210,2.438]],["body/classes/Table.html",[3,0.195,4,0.074,5,0.182,7,2.469,11,2.347,16,0.19,17,0.369,21,0.205,22,0.305,23,0.018,24,0.074,25,0.005,26,0.007,27,0.005,46,0.563,48,1.417,52,0.369,58,1.524,61,0.404,63,1.03,64,0.338,65,0.982,67,0.325,68,0.244,75,0.659,76,1.188,80,0.32,89,0.147,97,0.306,105,0.645,135,1.686,177,2.347,183,2.922,196,2.678,201,3.574,242,2.529,265,3.074,271,3.326,283,2.166,284,2.573,298,2.573,312,3.872,340,2.876,343,2.478,360,3.729,420,1.124,436,3.574,447,2.347,487,2.573,610,4.416,615,4.416,616,3.717,619,2.573,629,4.761,630,2.876,635,4.902,640,4.754,646,1.267,658,2.876,675,1.618,698,4.455,699,2.51,703,1.618,770,4.06,772,5.874,780,1.808,782,6.101,795,1.808,800,2.573,809,4.082,816,4.245,927,2.166,1016,4.082,1021,2.876,1107,4.082,1129,4.455,1210,4.987,1211,1.808,1212,3.336,1213,3.336,1214,3.336,1215,6.392,1216,3.336,1217,5.503,1218,3.336,1219,3.336,1220,3.336,1221,4.62,1222,2.697,1223,3.336,1224,4.154,1225,4.154,1226,4.154,1227,3.336,1228,2.097,1229,2.097,1230,3.336,1231,3.336,1232,4.734,1233,3.336,1234,2.097,1235,2.097,1236,4.082,1237,3.336,1238,2.097,1239,3.336,1240,3.652,1241,3.336,1242,3.336,1243,3.336,1244,3.336,1245,3.336,1246,2.097,1247,6.326,1248,2.097,1249,3.336,1250,3.336,1251,3.336,1252,4.734,1253,4.154,1254,5.503,1255,2.097,1256,2.097,1257,5.503,1258,3.336,1259,3.336,1260,3.336,1261,3.336,1262,3.336,1263,3.336,1264,2.097,1265,2.097,1266,3.336,1267,3.336,1268,2.097,1269,4.734,1270,2.097,1271,2.097,1272,2.097,1273,2.097,1274,5.99,1275,2.097,1276,2.097,1277,2.097,1278,2.097,1279,2.097,1280,2.097,1281,2.097,1282,3.336,1283,4.734,1284,3.336,1285,3.336,1286,2.097,1287,2.097,1288,2.097,1289,2.097,1290,2.097,1291,2.097,1292,2.097,1293,2.097,1294,2.097,1295,2.097,1296,2.097,1297,3.336,1298,3.336,1299,2.097,1300,2.097,1301,2.097]],["title/components/TableComponent.html",[28,0.366,151,0.924]],["body/components/TableComponent.html",[1,0.82,3,0.118,4,0.118,5,0.144,16,0.152,17,0.523,18,0.885,21,0.641,22,0.322,23,0.018,24,0.118,25,0.007,26,0.011,27,0.007,28,0.536,29,0.858,30,1.273,31,1.026,32,1.026,33,1.026,37,0.621,38,0.82,39,0.438,40,1.033,41,2.257,42,2.361,44,1.456,46,0.674,51,1.854,52,0.523,53,1.23,54,0.885,61,0.443,63,0.623,64,0.338,65,0.594,67,0.536,68,0.403,75,0.461,76,0.973,80,0.34,82,0.981,83,0.304,85,1.583,88,0.594,89,0.118,97,0.875,98,0.75,105,0.555,112,0.858,113,1.456,114,1.332,115,0.069,116,1.843,117,1.026,118,1.026,119,0.858,120,1.026,121,0.858,122,1.843,123,0.858,124,1.026,125,0.858,126,1.026,127,0.858,128,1.026,129,1.693,130,0.858,131,1.026,132,0.858,133,1.456,134,0.858,135,0.938,136,0.858,137,1.026,138,0.858,139,0.981,140,0.858,141,1.026,142,0.858,143,0.858,144,1.392,145,0.858,146,0.938,147,0.858,148,0.981,149,0.858,150,1.026,151,1.474,152,1.026,153,0.858,154,0.981,155,1.026,156,0.391,157,0.594,158,2.312,159,0.82,160,0.784,161,0.653,162,0.82,163,0.82,164,0.82,165,0.784,166,0.82,167,0.784,168,0.82,169,0.82,170,0.82,171,0.82,172,0.784,173,1.474,174,0.784,175,1.026,196,3.111,242,1.176,422,2.014,609,1.67,610,2.014,1210,4.387,1222,3.572,1302,2.873,1303,4.731,1304,5.501,1305,4.731,1306,6.569,1307,3.333,1308,3.333,1309,3.333,1310,4.731,1311,3.333,1312,3.333,1313,3.333,1314,4.731,1315,3.333,1316,3.333,1317,5.501,1318,5.988,1319,3.333,1320,3.333,1321,4.731,1322,3.333,1323,3.333,1324,4.731,1325,4.731]],["title/interfaces/TableInterface.html",[0,1.456,1222,2.438]],["body/interfaces/TableInterface.html",[0,2.654,2,2.756,3,0.183,4,0.183,5,0.158,7,2.216,16,0.237,17,0.7,22,0.323,23,0.018,24,0.183,25,0.012,26,0.014,27,0.012,76,1.17,80,0.321,151,1.56,360,3.131,610,4.308,615,4.136,616,3.584,640,5.235,699,3.131,703,3.996,772,6.001,816,5.5,1210,4.63,1215,5.462,1221,4.887,1222,4.114,1236,5.462,1240,4.887,1326,4.467,1327,6.336]],["title/directives/ThemeColorInputDirective.html",[115,0.078,173,0.924]],["body/directives/ThemeColorInputDirective.html",[3,0.166,4,0.166,5,0.143,16,0.214,17,0.658,18,1.396,21,0.671,22,0.333,23,0.018,24,0.166,25,0.01,26,0.013,27,0.01,37,0.615,39,0.615,40,0.903,46,0.673,48,1.207,52,0.658,53,1.413,54,1.113,58,1.917,60,2.446,61,0.464,63,0.877,64,0.336,65,0.836,67,0.457,68,0.343,75,0.457,76,0.916,80,0.405,82,1.062,83,0.428,84,1.818,87,1.76,88,0.836,89,0.211,97,0.87,98,1.055,105,0.55,115,0.123,156,0.55,157,1.062,173,1.465,212,1.832,234,2.826,305,2.987,422,4.292,590,3.564,591,1.733,596,2.226,609,1.654,748,3.166,749,3.298,763,2.833,766,2.493,767,3.597,768,2.833,769,2.833]],["title/directives/ThemeInputDirective.html",[115,0.078,174,0.884]],["body/directives/ThemeInputDirective.html",[3,0.177,4,0.177,5,0.152,16,0.228,17,0.684,21,0.604,22,0.316,23,0.018,24,0.177,25,0.011,26,0.014,27,0.011,37,0.655,39,0.655,40,0.924,46,0.673,48,1.284,52,0.684,53,1.445,58,1.993,60,2.485,61,0.454,63,0.933,64,0.349,65,0.89,75,0.487,76,0.952,80,0.416,83,0.455,84,1.934,87,1.811,88,0.89,89,0.219,97,0.904,98,1.122,105,0.585,115,0.128,156,0.585,157,1.104,174,1.457,422,4.252,590,3.531,591,1.844,596,2.939,609,1.76,763,3.014,766,2.653,767,3.74,768,3.014,769,3.014,1328,4.989]],["title/injectables/ThemeService.html",[60,1.265,250,2.269]],["body/injectables/ThemeService.html",[3,0.155,4,0.155,5,0.133,7,2.434,16,0.2,17,0.629,21,0.725,22,0.29,23,0.018,24,0.155,25,0.01,26,0.013,27,0.01,28,0.555,30,1.531,46,0.65,48,1.628,52,0.629,60,1.917,61,0.427,63,0.817,64,0.246,65,0.779,67,0.678,68,0.32,75,0.555,80,0.27,83,0.399,87,2.121,89,0.155,97,0.831,105,0.512,135,1.601,222,4.626,250,3.437,251,3.37,253,4.002,254,4.904,265,3.694,283,3.694,317,1.674,343,2.562,350,4.776,367,3.766,368,3.37,373,3.37,438,4.388,468,4.388,484,4.904,487,4.388,1015,4.904,1221,4.388,1329,3.766,1330,5.689,1331,5.689,1332,5.689,1333,7.356,1334,6.326,1335,6.701,1336,5.689,1337,4.368,1338,4.368,1339,4.368,1340,5.689,1341,4.368]],["title/components/ToggleSwitchComponent.html",[28,0.366,153,0.967]],["body/components/ToggleSwitchComponent.html",[1,0.888,3,0.128,4,0.128,5,0.152,16,0.165,17,0.553,18,0.674,20,1.161,21,0.352,22,0.184,23,0.017,24,0.128,25,0.008,26,0.011,27,0.008,28,0.56,29,0.928,30,1.346,31,1.11,32,1.11,33,1.11,37,0.656,38,0.888,39,0.473,40,1.038,41,2.274,42,2.379,44,1.539,46,0.652,51,1.934,52,0.553,53,1.273,61,0.387,64,0.324,67,0.352,68,0.42,71,1.539,75,0.488,76,0.769,80,0.355,82,0.643,83,0.329,87,0.97,88,0.643,89,0.128,97,0.73,98,0.811,105,0.423,112,0.928,113,1.539,114,1.407,115,0.075,116,1.908,117,1.11,118,1.11,119,0.928,120,1.11,121,0.928,122,1.908,123,0.928,124,1.11,125,0.928,126,1.11,127,0.928,128,1.11,129,1.767,130,0.928,131,1.11,132,0.928,133,1.539,134,0.928,135,1.015,136,0.928,137,1.11,138,0.928,139,1.061,140,0.928,141,1.11,142,0.928,143,0.928,144,1.471,145,0.928,146,1.015,147,0.928,148,1.061,149,0.928,150,1.11,151,0.888,152,1.11,153,1.734,154,2.152,155,2.004,156,0.423,157,0.643,158,2.336,159,0.888,160,0.849,161,0.707,162,0.888,163,0.888,164,0.888,165,1.459,166,0.888,167,0.849,168,0.888,169,0.888,170,0.888,171,0.888,172,0.849,173,0.888,174,0.849,175,1.11,317,1.471,409,2.035,420,1.215,427,1.849,428,1.333,547,2.509,548,2.88,549,2.509,550,2.509,561,1.542,562,2.179,563,3.021,566,2.537,950,4.781,1342,5.344,1343,3.108,1344,5,1345,3.606,1346,3.606,1347,3.606]],["title/coverage.html",[1348,4.433]],["body/coverage.html",[0,2.525,1,0.799,5,0.099,6,2.798,10,1.835,14,1.961,18,1.254,20,1.745,22,0.165,23,0.018,25,0.007,26,0.01,27,0.007,28,0.736,29,0.835,34,2.798,35,2.503,36,2.798,38,0.799,60,1.093,64,0.262,68,0.546,86,2.294,87,1.592,89,0.231,115,0.156,119,0.835,121,0.835,123,0.835,125,0.835,127,0.835,130,0.835,132,0.835,134,0.835,136,0.835,138,0.835,140,0.835,142,0.835,143,0.835,145,0.835,146,0.913,147,0.835,149,0.835,151,0.799,153,0.835,157,0.579,159,0.799,160,0.764,161,0.636,162,0.799,163,0.799,164,0.799,165,0.764,166,0.799,167,0.764,168,0.799,169,0.799,170,0.799,171,0.799,172,0.764,173,0.799,174,0.764,176,2.798,222,2.107,242,1.145,250,2.805,252,2.798,288,2.283,387,2.798,388,2.798,420,2.194,421,2.503,422,2.805,424,2.283,426,2.283,427,2.677,428,2.407,429,2.503,431,2.503,433,2.798,531,2.798,546,2.798,570,2.798,571,3.813,585,2.107,590,3.441,591,2.72,610,1.961,611,3.841,612,2.798,616,2.626,618,2.283,646,1.961,696,2.798,699,1.961,704,2.798,710,2.798,715,2.798,719,3.314,720,2.798,770,2.283,771,2.503,859,3.581,894,2.798,895,2.503,896,2.798,927,5.096,930,2.798,948,2.503,950,2.503,953,3.266,958,2.503,966,2.798,980,2.798,981,3.813,990,2.798,993,2.798,1010,2.798,1051,2.798,1055,2.798,1086,2.798,1104,2.798,1105,2.798,1109,2.798,1110,2.798,1123,2.798,1210,3.014,1211,2.798,1222,2.107,1302,2.798,1326,2.798,1329,2.798,1342,2.798,1343,2.798,1348,2.798,1349,2.798,1350,3.245,1351,3.245,1352,4.642,1353,3.245,1354,6.704,1355,5.916,1356,6.259,1357,6.511,1358,4.642,1359,4.642,1360,4.642,1361,7.24,1362,3.245,1363,3.245,1364,5.42,1365,5.916,1366,3.245,1367,6.259,1368,2.798,1369,3.245,1370,3.245,1371,3.245,1372,3.245,1373,3.245,1374,3.245,1375,4.002,1376,4.642,1377,2.798,1378,2.798,1379,3.245]],["title/dependencies.html",[406,2.732,1380,2.696]],["body/dependencies.html",[23,0.017,25,0.013,26,0.015,27,0.013,83,0.551,406,4.193,419,4.659,1381,6.04,1382,6.04,1383,6.04,1384,5.982]],["title/miscellaneous/enumerations.html",[1385,2.2,1386,3.898]],["body/miscellaneous/enumerations.html",[16,0.272,23,0.017,25,0.013,26,0.015,27,0.013,68,0.532,771,4.593,773,5.933,820,5.134,821,5.134,822,5.134,1385,4.189,1386,5.134,1387,5.954]],["title/index.html",[16,0.143,1388,3.128,1389,3.128]],["body/index.html",[23,0.014,25,0.012,26,0.014,27,0.012,28,0.507,41,2.101,114,1.463,268,4.483,275,4.01,300,4.483,511,4.483,617,4.483,625,6.154,627,4.483,659,4.483,911,4.483,1240,4.01,1349,5.91,1380,4.483,1384,4.483,1390,6.349,1391,5.199,1392,7.447,1393,6.349,1394,5.199,1395,5.199,1396,5.199,1397,6.854,1398,5.199,1399,6.854,1400,7.139,1401,5.199,1402,5.199,1403,5.199,1404,5.199,1405,5.199,1406,5.199,1407,5.199,1408,7.139,1409,6.349,1410,5.199,1411,5.199,1412,6.349,1413,6.349,1414,5.199,1415,6.349,1416,6.349,1417,6.349,1418,5.199,1419,6.349,1420,5.199,1421,5.199,1422,5.199,1423,5.199,1424,5.199,1425,5.199,1426,5.199,1427,5.199,1428,5.199,1429,5.199,1430,5.199,1431,5.199,1432,5.199]],["title/modules.html",[405,3.107]],["body/modules.html",[23,0.015,25,0.013,26,0.015,27,0.013,404,3.62,405,3.62,941,3.89,1066,4.215,1075,6.274,1433,7.277,1434,7.277,1435,7.277]],["title/overview.html",[1436,4.433]],["body/overview.html",[2,1.629,23,0.018,25,0.007,26,0.01,27,0.007,29,1.696,30,0.824,38,1.622,97,0.448,112,0.789,119,1.696,121,1.696,123,1.696,125,1.696,127,1.696,130,1.696,132,1.696,134,1.696,136,1.696,138,1.696,140,1.696,142,1.696,143,1.696,145,1.696,147,1.696,149,1.696,151,1.622,153,1.696,156,0.359,157,1.175,159,1.622,160,1.551,161,1.292,162,1.622,163,1.622,164,1.622,165,1.551,166,1.622,167,1.235,168,1.292,169,1.622,170,1.622,171,1.622,172,1.235,173,1.622,174,1.62,251,2.363,287,1.989,302,2.641,365,2.641,403,1.733,404,4.776,405,1.851,406,1.851,407,2.155,408,2.155,409,1.247,410,2.155,411,2.641,412,2.641,413,2.641,414,3.133,415,2.155,941,5.123,942,2.641,943,2.641,945,2.641,1066,5.391,1067,2.641,1069,2.641,1070,2.641,1368,2.641,1436,2.641,1437,3.063,1438,3.063,1439,3.063]],["title/miscellaneous/variables.html",[1385,2.2,1440,3.898]],["body/miscellaneous/variables.html",[16,0.272,22,0.35,23,0.017,25,0.013,26,0.015,27,0.013,67,0.58,68,0.435,71,1.829,1375,5.123,1377,5.926,1378,5.926,1385,4.181,1440,5.123,1441,6.874,1442,5.943,1443,5.943,1444,5.943]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":927,"title":{},"body":{"components/FileInputComponent.html":{},"classes/Queue.html":{},"components/SliderComponent.html":{},"classes/Table.html":{},"coverage.html":{}}}],["0/1",{"_index":1364,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1352,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1358,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1363,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1359,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1353,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1360,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1355,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1356,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1354,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1357,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1365,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":364,"title":{},"body":{"injectables/AlertService.html":{},"classes/Csv.html":{},"components/FileInputComponent.html":{},"components/SliderComponent.html":{}}}],["1/15",{"_index":1369,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1136,"title":{},"body":{"components/SliderComponent.html":{}}}],["100",{"_index":1361,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":216,"title":{},"body":{"components/AlertComponent.html":{}}}],["12.0.1",{"_index":1384,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["13/13",{"_index":1374,"title":{},"body":{"coverage.html":{}}}],["14/14",{"_index":1362,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":1438,"title":{},"body":{"overview.html":{}}}],["19",{"_index":1437,"title":{},"body":{"overview.html":{}}}],["2",{"_index":365,"title":{},"body":{"injectables/AlertService.html":{},"overview.html":{}}}],["2.1.0",{"_index":1382,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1366,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":197,"title":{},"body":{"components/AlertComponent.html":{}}}],["2x2",{"_index":971,"title":{},"body":{"components/GridComponent.html":{}}}],["3",{"_index":302,"title":{},"body":{"injectables/AlertService.html":{},"overview.html":{}}}],["3/3",{"_index":1372,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":214,"title":{},"body":{"components/AlertComponent.html":{}}}],["4",{"_index":366,"title":{},"body":{"injectables/AlertService.html":{}}}],["4/4",{"_index":1367,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1439,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":1370,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1368,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["8/8",{"_index":1371,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1373,"title":{},"body":{"coverage.html":{}}}],["__data",{"_index":1314,"title":{},"body":{"components/TableComponent.html":{}}}],["__input",{"_index":1006,"title":{},"body":{"components/InputComponent.html":{}}}],["__placeholder",{"_index":1007,"title":{},"body":{"components/InputComponent.html":{}}}],["_disabled",{"_index":460,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{},"directives/StateManagerDirective.html":{}}}],["_extraclasses",{"_index":592,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["_focused",{"_index":1169,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["_options",{"_index":1111,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["_pristine",{"_index":1170,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["_step",{"_index":1126,"title":{},"body":{"components/SliderComponent.html":{}}}],["_theme",{"_index":1334,"title":{},"body":{"injectables/ThemeService.html":{}}}],["_touched",{"_index":1171,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["access",{"_index":487,"title":{},"body":{"components/ButtonComponent.html":{},"classes/Table.html":{},"injectables/ThemeService.html":{}}}],["accessed",{"_index":1218,"title":{},"body":{"classes/Table.html":{}}}],["accessor",{"_index":427,"title":{},"body":{"modules/BaseModule.html":{},"components/CheckboxComponent.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["accessor.base.directive",{"_index":425,"title":{},"body":{"modules/BaseModule.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["accessor.base.directive.ts",{"_index":720,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{},"coverage.html":{}}}],["accessor.base.directive.ts:10",{"_index":736,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["accessor.base.directive.ts:13",{"_index":740,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["accessor.base.directive.ts:14",{"_index":738,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["accessor.base.directive.ts:15",{"_index":733,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["accessor.base.directive.ts:16",{"_index":735,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["accessor.base.directive.ts:20",{"_index":730,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["accessor.base.directive.ts:28",{"_index":731,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["accessor/control",{"_index":424,"title":{},"body":{"modules/BaseModule.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"coverage.html":{}}}],["accessor/event",{"_index":431,"title":{},"body":{"modules/BaseModule.html":{},"directives/EventManagerDirective.html":{},"coverage.html":{}}}],["accessor/state",{"_index":429,"title":{},"body":{"modules/BaseModule.html":{},"directives/StateManagerDirective.html":{},"coverage.html":{}}}],["accessors",{"_index":191,"title":{},"body":{"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"directives/ClassNameInputDirective.html":{},"classes/ColumnInformation.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"classes/Queue.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{}}}],["according",{"_index":470,"title":{},"body":{"components/ButtonComponent.html":{}}}],["acessible",{"_index":709,"title":{},"body":{"interfaces/ColumnInformationInterface.html":{}}}],["active",{"_index":248,"title":{},"body":{"components/AlertComponent.html":{}}}],["acts",{"_index":434,"title":{},"body":{"components/ButtonComponent.html":{}}}],["actual",{"_index":1026,"title":{},"body":{"classes/Queue.html":{}}}],["actual_component",{"_index":175,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["add",{"_index":275,"title":{},"body":{"injectables/AlertService.html":{},"classes/Queue.html":{},"index.html":{}}}],["added",{"_index":493,"title":{},"body":{"components/ButtonComponent.html":{}}}],["adding",{"_index":483,"title":{},"body":{"components/ButtonComponent.html":{}}}],["additional",{"_index":1254,"title":{},"body":{"classes/Table.html":{}}}],["adds",{"_index":331,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{}}}],["again",{"_index":303,"title":{},"body":{"injectables/AlertService.html":{}}}],["alert",{"_index":1,"title":{"interfaces/Alert.html":{}},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["alert'},{'name",{"_index":120,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["alert(alert",{"_index":199,"title":{},"body":{"components/AlertComponent.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["alert(message",{"_index":310,"title":{},"body":{"injectables/AlertService.html":{}}}],["alert.color",{"_index":235,"title":{},"body":{"components/AlertComponent.html":{}}}],["alert.component.html",{"_index":178,"title":{},"body":{"components/AlertComponent.html":{}}}],["alert.size",{"_index":233,"title":{},"body":{"components/AlertComponent.html":{}}}],["alert]{@link",{"_index":361,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["alertboxcomponent",{"_index":29,"title":{"components/AlertBoxComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alertcomponent",{"_index":119,"title":{"components/AlertComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alertobject",{"_index":179,"title":{},"body":{"components/AlertComponent.html":{}}}],["alertqueue",{"_index":277,"title":{},"body":{"injectables/AlertService.html":{}}}],["alertqueue]{@link",{"_index":362,"title":{},"body":{"injectables/AlertService.html":{}}}],["alerts",{"_index":12,"title":{},"body":{"interfaces/Alert.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["alerts]{@link",{"_index":369,"title":{},"body":{"injectables/AlertService.html":{}}}],["alertservice",{"_index":10,"title":{"injectables/AlertService.html":{}},"body":{"interfaces/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/FileInputComponent.html":{},"coverage.html":{}}}],["alertservicesubscriber",{"_index":14,"title":{"interfaces/AlertServiceSubscriber.html":{}},"body":{"interfaces/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"coverage.html":{}}}],["alignment",{"_index":633,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{}}}],["allows",{"_index":1330,"title":{},"body":{"injectables/ThemeService.html":{}}}],["always",{"_index":650,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["angular",{"_index":1392,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":419,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"dependencies.html":{}}}],["angular/core",{"_index":83,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":561,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"components/FileInputComponent.html":{},"modules/FormModule.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["angular/platform",{"_index":1074,"title":{},"body":{"modules/SbElementModule.html":{}}}],["anything",{"_index":397,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["appears",{"_index":184,"title":{},"body":{"components/AlertComponent.html":{}}}],["appeartime",{"_index":180,"title":{},"body":{"components/AlertComponent.html":{}}}],["appends",{"_index":1037,"title":{},"body":{"classes/Queue.html":{}}}],["application",{"_index":1428,"title":{},"body":{"index.html":{}}}],["around",{"_index":1395,"title":{},"body":{"index.html":{}}}],["array",{"_index":76,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{}}}],["array,index",{"_index":797,"title":{},"body":{"classes/Csv.html":{}}}],["array.isarray(entry[1",{"_index":1293,"title":{},"body":{"classes/Table.html":{}}}],["array.isarray(extraclasses",{"_index":600,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["array.isarray(snap",{"_index":1160,"title":{},"body":{"components/SliderComponent.html":{}}}],["arrays",{"_index":1266,"title":{},"body":{"classes/Table.html":{}}}],["async",{"_index":183,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"classes/Csv.html":{},"classes/Table.html":{}}}],["attribute",{"_index":81,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["attribute('flipped",{"_index":90,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["attribute('hover",{"_index":540,"title":{},"body":{"components/CardComponent.html":{}}}],["attribute('pill",{"_index":91,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["attribute('plain",{"_index":92,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["attribute('round",{"_index":522,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{}}}],["attribute('shadow",{"_index":541,"title":{},"body":{"components/CardComponent.html":{}}}],["attributes",{"_index":437,"title":{},"body":{"components/ButtonComponent.html":{}}}],["automatic",{"_index":1401,"title":{},"body":{"index.html":{}}}],["available",{"_index":659,"title":{},"body":{"classes/ColumnInformation.html":{},"index.html":{}}}],["await",{"_index":237,"title":{},"body":{"components/AlertComponent.html":{},"classes/Csv.html":{}}}],["base/base.module",{"_index":961,"title":{},"body":{"modules/FormModule.html":{}}}],["base/control",{"_index":562,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["base/selected",{"_index":586,"title":{},"body":{"components/CheckboxGroupComponent.html":{}}}],["base/selection",{"_index":587,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["base/style",{"_index":85,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ContainerComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/TableComponent.html":{}}}],["based",{"_index":481,"title":{},"body":{"components/ButtonComponent.html":{}}}],["basemodule",{"_index":404,"title":{"modules/BaseModule.html":{}},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"modules.html":{},"overview.html":{}}}],["basic",{"_index":455,"title":{},"body":{"components/ButtonComponent.html":{},"classes/Queue.html":{}}}],["beeing",{"_index":706,"title":{},"body":{"interfaces/ColumnInformationInterface.html":{}}}],["blur",{"_index":867,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["boolean",{"_index":66,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{}}}],["bootstrap",{"_index":408,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"overview.html":{}}}],["border",{"_index":1319,"title":{},"body":{"components/TableComponent.html":{}}}],["both",{"_index":669,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["box",{"_index":43,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box'},{'name",{"_index":118,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["box.component",{"_index":1080,"title":{},"body":{"modules/SbElementModule.html":{}}}],["box.component.html",{"_index":45,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box.component.ts",{"_index":36,"title":{},"body":{"components/AlertBoxComponent.html":{},"coverage.html":{}}}],["box.component.ts:11",{"_index":79,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box.component.ts:14",{"_index":72,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box.component.ts:17",{"_index":73,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box.component.ts:20",{"_index":70,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box.component.ts:22",{"_index":77,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box.component.ts:23",{"_index":78,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box.component.ts:24",{"_index":62,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box.component.ts:38",{"_index":74,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box/alert",{"_index":35,"title":{},"body":{"components/AlertBoxComponent.html":{},"modules/SbElementModule.html":{},"coverage.html":{}}}],["browse",{"_index":1435,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1075,"title":{},"body":{"modules/SbElementModule.html":{},"modules.html":{}}}],["browsermodule",{"_index":1073,"title":{},"body":{"modules/SbElementModule.html":{}}}],["btn",{"_index":495,"title":{},"body":{"components/ButtonComponent.html":{}}}],["busy",{"_index":338,"title":{},"body":{"injectables/AlertService.html":{}}}],["button",{"_index":146,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["button'},{'name",{"_index":122,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["button.component",{"_index":949,"title":{},"body":{"modules/FormModule.html":{}}}],["button.component.html",{"_index":459,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{}}}],["button.component.ts",{"_index":981,"title":{},"body":{"components/IconButtonComponent.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:11",{"_index":987,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:12",{"_index":986,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:13",{"_index":988,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:14",{"_index":985,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:17",{"_index":984,"title":{},"body":{"components/IconButtonComponent.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{}}}],["button.component.ts:18",{"_index":1095,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["button.component.ts:19",{"_index":1052,"title":{},"body":{"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{}}}],["button.component.ts:20",{"_index":989,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:22",{"_index":983,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:26",{"_index":1053,"title":{},"body":{"components/RadioButtonComponent.html":{}}}],["button.component.ts:30",{"_index":1054,"title":{},"body":{"components/RadioButtonComponent.html":{}}}],["button.component.ts:32",{"_index":1093,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["button.component.ts:36",{"_index":1092,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["button.component.ts:44",{"_index":1094,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["button.component.ts:52",{"_index":1089,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["button.component.ts:58",{"_index":1090,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["button/button.component",{"_index":947,"title":{},"body":{"modules/FormModule.html":{}}}],["button/icon",{"_index":948,"title":{},"body":{"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"coverage.html":{}}}],["button/radio",{"_index":953,"title":{},"body":{"modules/FormModule.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"coverage.html":{}}}],["button/select",{"_index":958,"title":{},"body":{"modules/FormModule.html":{},"components/SelectButtonComponent.html":{},"coverage.html":{}}}],["button__button",{"_index":1099,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["buttoncomponent",{"_index":121,"title":{"components/ButtonComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bytes",{"_index":919,"title":{},"body":{"components/FileInputComponent.html":{}}}],["call",{"_index":258,"title":{},"body":{"injectables/AlertService.html":{}}}],["called",{"_index":315,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["calles",{"_index":400,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["calling",{"_index":347,"title":{},"body":{"injectables/AlertService.html":{}}}],["calls",{"_index":394,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["card",{"_index":532,"title":{},"body":{"components/CardComponent.html":{}}}],["card'},{'name",{"_index":124,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["card.component.html",{"_index":533,"title":{},"body":{"components/CardComponent.html":{}}}],["cardcomponent",{"_index":123,"title":{"components/CardComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["care",{"_index":627,"title":{},"body":{"classes/ColumnInformation.html":{},"index.html":{}}}],["caring",{"_index":631,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["case",{"_index":623,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["center",{"_index":104,"title":{},"body":{"components/AlertBoxComponent.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["change",{"_index":868,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["changing",{"_index":440,"title":{},"body":{"components/ButtonComponent.html":{}}}],["character",{"_index":1244,"title":{},"body":{"classes/Table.html":{}}}],["check",{"_index":552,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["check(newoption",{"_index":1058,"title":{},"body":{"components/RadioButtonGroupComponent.html":{}}}],["checkbox",{"_index":128,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["checkbox'},{'name",{"_index":126,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["checkbox.component.html",{"_index":551,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox/checkbox.component",{"_index":952,"title":{},"body":{"modules/FormModule.html":{}}}],["checkboxcomponent",{"_index":125,"title":{"components/CheckboxComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["checkboxgroupcomponent",{"_index":127,"title":{"components/CheckboxGroupComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["checked",{"_index":567,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadioButtonComponent.html":{}}}],["checkfilesize",{"_index":899,"title":{},"body":{"components/FileInputComponent.html":{}}}],["checkfilesize(file",{"_index":905,"title":{},"body":{"components/FileInputComponent.html":{}}}],["checkout",{"_index":1424,"title":{},"body":{"index.html":{}}}],["checks",{"_index":297,"title":{},"body":{"injectables/AlertService.html":{},"classes/Queue.html":{}}}],["choose",{"_index":912,"title":{},"body":{"components/FileInputComponent.html":{}}}],["class",{"_index":89,"title":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"classes/Csv.html":{},"classes/Queue.html":{},"classes/Table.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["classes",{"_index":97,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"overview.html":{}}}],["classes.push(!this.showarrow",{"_index":102,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["classes.push('is",{"_index":1318,"title":{},"body":{"components/TableComponent.html":{}}}],["classes.push('sb",{"_index":1098,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["classes.push(classname",{"_index":607,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["classes.push(this.color",{"_index":608,"title":{},"body":{"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{}}}],["classes.push(this.dim",{"_index":976,"title":{},"body":{"components/GridComponent.html":{}}}],["classes.push(this.disabled",{"_index":752,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["classes.push(this.flipped",{"_index":99,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["classes.push(this.focused",{"_index":759,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["classes.push(this.gap",{"_index":978,"title":{},"body":{"components/GridComponent.html":{}}}],["classes.push(this.groupalign",{"_index":939,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["classes.push(this.hover",{"_index":544,"title":{},"body":{"components/CardComponent.html":{}}}],["classes.push(this.label",{"_index":564,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadioButtonComponent.html":{},"components/SliderComponent.html":{}}}],["classes.push(this.pill",{"_index":100,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["classes.push(this.plain",{"_index":101,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["classes.push(this.pristine",{"_index":753,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["classes.push(this.rootclass",{"_index":605,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"components/InputComponent.html":{}}}],["classes.push(this.round",{"_index":530,"title":{},"body":{"components/ButtonComponent.html":{}}}],["classes.push(this.shadow",{"_index":545,"title":{},"body":{"components/CardComponent.html":{}}}],["classes.push(this.show",{"_index":247,"title":{},"body":{"components/AlertComponent.html":{}}}],["classes.push(this.showoptions",{"_index":1100,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["classes.push(this.showvalue",{"_index":1168,"title":{},"body":{"components/SliderComponent.html":{}}}],["classes.push(this.size",{"_index":762,"title":{},"body":{"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{}}}],["classes.push(this.subrootclass",{"_index":1321,"title":{},"body":{"components/TableComponent.html":{}}}],["classes.push(this.theme",{"_index":769,"title":{},"body":{"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["classes.push(this.touched",{"_index":756,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["classes.push(this.value",{"_index":566,"title":{},"body":{"components/CheckboxComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["classname",{"_index":604,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["classnameinputdirective",{"_index":157,"title":{"directives/ClassNameInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cli",{"_index":1393,"title":{},"body":{"index.html":{}}}],["clickable",{"_index":491,"title":{},"body":{"components/ButtonComponent.html":{}}}],["clone",{"_index":621,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["clone.alignment",{"_index":679,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["clone.color",{"_index":678,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["clone.name",{"_index":676,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["cloneandset",{"_index":634,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["cloneandset(information",{"_index":645,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["clones",{"_index":644,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["closed",{"_index":1102,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["cluster_basemodule",{"_index":411,"title":{},"body":{"modules/BaseModule.html":{},"overview.html":{}}}],["cluster_basemodule_declarations",{"_index":413,"title":{},"body":{"modules/BaseModule.html":{},"overview.html":{}}}],["cluster_basemodule_exports",{"_index":412,"title":{},"body":{"modules/BaseModule.html":{},"overview.html":{}}}],["cluster_formmodule",{"_index":942,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_declarations",{"_index":945,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_exports",{"_index":943,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_imports",{"_index":944,"title":{},"body":{"modules/FormModule.html":{}}}],["cluster_sbelementmodule",{"_index":1067,"title":{},"body":{"modules/SbElementModule.html":{},"overview.html":{}}}],["cluster_sbelementmodule_declarations",{"_index":1070,"title":{},"body":{"modules/SbElementModule.html":{},"overview.html":{}}}],["cluster_sbelementmodule_exports",{"_index":1069,"title":{},"body":{"modules/SbElementModule.html":{},"overview.html":{}}}],["cluster_sbelementmodule_imports",{"_index":1068,"title":{},"body":{"modules/SbElementModule.html":{}}}],["collected",{"_index":292,"title":{},"body":{"injectables/AlertService.html":{}}}],["collector",{"_index":294,"title":{},"body":{"injectables/AlertService.html":{}}}],["colon",{"_index":821,"title":{},"body":{"classes/Csv.html":{},"miscellaneous/enumerations.html":{}}}],["color",{"_index":18,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["colorinputdirective",{"_index":159,"title":{"directives/ColorInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["colors",{"_index":267,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{}}}],["column",{"_index":615,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"classes/Table.html":{},"interfaces/TableInterface.html":{}}}],["column.length",{"_index":1298,"title":{},"body":{"classes/Table.html":{}}}],["column.name",{"_index":1324,"title":{},"body":{"components/TableComponent.html":{}}}],["column[i",{"_index":1300,"title":{},"body":{"classes/Table.html":{}}}],["columndata",{"_index":825,"title":{},"body":{"classes/Csv.html":{}}}],["columnentry",{"_index":1325,"title":{},"body":{"components/TableComponent.html":{}}}],["columnindex",{"_index":1312,"title":{},"body":{"components/TableComponent.html":{}}}],["columninformation",{"_index":610,"title":{"classes/ColumnInformation.html":{}},"body":{"classes/ColumnInformation.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"coverage.html":{}}}],["columninformation.alignment",{"_index":1323,"title":{},"body":{"components/TableComponent.html":{}}}],["columninformation.color",{"_index":1322,"title":{},"body":{"components/TableComponent.html":{}}}],["columninformation.defaults.cloneandset(info",{"_index":1289,"title":{},"body":{"classes/Table.html":{}}}],["columninformation.defaults.cloneandset({name",{"_index":1282,"title":{},"body":{"classes/Table.html":{}}}],["columninformation.map",{"_index":1288,"title":{},"body":{"classes/Table.html":{}}}],["columninformation.merge(info",{"_index":1284,"title":{},"body":{"classes/Table.html":{}}}],["columninformation.merge(this",{"_index":683,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["columninformation.push(info",{"_index":1285,"title":{},"body":{"classes/Table.html":{}}}],["columninformation]{@link",{"_index":1273,"title":{},"body":{"classes/Table.html":{}}}],["columninformationdefaults",{"_index":618,"title":{"classes/ColumnInformationDefaults.html":{}},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"coverage.html":{}}}],["columninformationdefaults:11",{"_index":642,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["columninformationdefaults:16",{"_index":641,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["columninformationdefaults:21",{"_index":639,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["columninformationinterface",{"_index":699,"title":{"interfaces/ColumnInformationInterface.html":{}},"body":{"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"classes/Table.html":{},"interfaces/TableInterface.html":{},"coverage.html":{}}}],["columninformationoptions",{"_index":1247,"title":{},"body":{"classes/Table.html":{}}}],["columninformationoptions[index",{"_index":1283,"title":{},"body":{"classes/Table.html":{}}}],["columninformationoptionsinterface",{"_index":646,"title":{"interfaces/ColumnInformationOptionsInterface.html":{}},"body":{"classes/ColumnInformation.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"classes/Table.html":{},"coverage.html":{}}}],["columnname",{"_index":795,"title":{},"body":{"classes/Csv.html":{},"classes/Table.html":{}}}],["columns",{"_index":1215,"title":{},"body":{"classes/Table.html":{},"interfaces/TableInterface.html":{}}}],["columns.foreach(column",{"_index":1297,"title":{},"body":{"classes/Table.html":{}}}],["columns.push(entry[1",{"_index":1294,"title":{},"body":{"classes/Table.html":{}}}],["columnstorows",{"_index":1223,"title":{},"body":{"classes/Table.html":{}}}],["columnstorows(columns",{"_index":1237,"title":{},"body":{"classes/Table.html":{}}}],["combine",{"_index":446,"title":{},"body":{"components/ButtonComponent.html":{}}}],["comma",{"_index":820,"title":{},"body":{"classes/Csv.html":{},"miscellaneous/enumerations.html":{}}}],["commit",{"_index":1335,"title":{},"body":{"injectables/ThemeService.html":{}}}],["commit(theme",{"_index":1336,"title":{},"body":{"injectables/ThemeService.html":{}}}],["commonmodule",{"_index":418,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{}}}],["component",{"_index":28,"title":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":117,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["components",{"_index":30,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"overview.html":{}}}],["components/alert",{"_index":1079,"title":{},"body":{"modules/SbElementModule.html":{}}}],["components/alert/alert.component",{"_index":1082,"title":{},"body":{"modules/SbElementModule.html":{}}}],["components/base/base.module",{"_index":1076,"title":{},"body":{"modules/SbElementModule.html":{}}}],["components/base/control",{"_index":1119,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["components/base/style",{"_index":1085,"title":{},"body":{"modules/SbElementModule.html":{}}}],["components/card/card.component",{"_index":1083,"title":{},"body":{"modules/SbElementModule.html":{}}}],["components/container/container.component",{"_index":1078,"title":{},"body":{"modules/SbElementModule.html":{}}}],["components/form/form.module",{"_index":1077,"title":{},"body":{"modules/SbElementModule.html":{}}}],["components/grid/grid.component",{"_index":1084,"title":{},"body":{"modules/SbElementModule.html":{}}}],["components/table/table.component",{"_index":1081,"title":{},"body":{"modules/SbElementModule.html":{}}}],["consists",{"_index":1214,"title":{},"body":{"classes/Table.html":{}}}],["constructed",{"_index":1394,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":58,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"classes/Table.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["constructor(alertservice",{"_index":192,"title":{},"body":{"components/AlertComponent.html":{},"components/FileInputComponent.html":{}}}],["constructor(data",{"_index":1228,"title":{},"body":{"classes/Table.html":{}}}],["constructor(flipped",{"_index":59,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["constructor(header",{"_index":785,"title":{},"body":{"classes/Csv.html":{}}}],["constructor(hover",{"_index":535,"title":{},"body":{"components/CardComponent.html":{}}}],["constructor(pill",{"_index":982,"title":{},"body":{"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["constructor(round",{"_index":466,"title":{},"body":{"components/ButtonComponent.html":{}}}],["constructor(themeservice",{"_index":763,"title":{},"body":{"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["contain",{"_index":658,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/Table.html":{}}}],["container",{"_index":716,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container'},{'name",{"_index":131,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["container.component.html",{"_index":717,"title":{},"body":{"components/ContainerComponent.html":{}}}],["containercomponent",{"_index":130,"title":{"components/ContainerComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contains",{"_index":1236,"title":{},"body":{"classes/Table.html":{},"interfaces/TableInterface.html":{}}}],["content",{"_index":832,"title":{},"body":{"classes/Csv.html":{}}}],["context",{"_index":1377,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":423,"title":{},"body":{"modules/BaseModule.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{}}}],["controlvalueaccessor",{"_index":721,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["controlvalueaccessorbasedirective",{"_index":160,"title":{"directives/ControlValueAccessorBaseDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["controlvalueaccessorclassnameinputdirective",{"_index":161,"title":{"directives/ControlValueAccessorClassNameInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["controlvalueaccessorcolorinputdirective",{"_index":162,"title":{"directives/ControlValueAccessorColorInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["controlvalueaccessorsizecolorinputdirective",{"_index":163,"title":{"directives/ControlValueAccessorSizeColorInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["controlvalueaccessorsizeinputdirective",{"_index":164,"title":{"directives/ControlValueAccessorSizeInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["controlvalueaccessorsizethemecolorinputdirective",{"_index":165,"title":{"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["controlvalueaccessorthemecolorinputdirective",{"_index":166,"title":{"directives/ControlValueAccessorThemeColorInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["correspronding",{"_index":1259,"title":{},"body":{"classes/Table.html":{}}}],["coverage",{"_index":1348,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":11,"title":{},"body":{"interfaces/Alert.html":{},"injectables/AlertService.html":{},"classes/ColumnInformation.html":{},"classes/Table.html":{}}}],["created",{"_index":276,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"classes/ColumnInformation.html":{}}}],["creates",{"_index":312,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"classes/ColumnInformation.html":{},"classes/Table.html":{}}}],["csv",{"_index":770,"title":{"classes/Csv.html":{}},"body":{"classes/Csv.html":{},"classes/Table.html":{},"coverage.html":{}}}],["csv#parsefile",{"_index":1278,"title":{},"body":{"classes/Table.html":{}}}],["csv.foreachcolumnname((columnname",{"_index":1281,"title":{},"body":{"classes/Table.html":{}}}],["csv.parsefile(csvfile).then(csv",{"_index":1280,"title":{},"body":{"classes/Table.html":{}}}],["csv/csv",{"_index":1270,"title":{},"body":{"classes/Table.html":{}}}],["csvfile",{"_index":1253,"title":{},"body":{"classes/Table.html":{}}}],["current",{"_index":350,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"classes/ColumnInformation.html":{},"classes/Queue.html":{},"injectables/ThemeService.html":{}}}],["customicon",{"_index":55,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["customize",{"_index":273,"title":{},"body":{"injectables/AlertService.html":{}}}],["d",{"_index":316,"title":{},"body":{"injectables/AlertService.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{}}}],["data",{"_index":772,"title":{},"body":{"classes/Csv.html":{},"classes/Table.html":{},"interfaces/TableInterface.html":{}}}],["data]{@link",{"_index":1272,"title":{},"body":{"classes/Table.html":{}}}],["datastructure",{"_index":1212,"title":{},"body":{"classes/Table.html":{}}}],["decimalplaces",{"_index":1127,"title":{},"body":{"components/SliderComponent.html":{}}}],["declarations",{"_index":407,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"overview.html":{}}}],["default",{"_index":67,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultmessage",{"_index":898,"title":{},"body":{"components/FileInputComponent.html":{}}}],["defaults",{"_index":637,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["defaults.ts",{"_index":696,"title":{},"body":{"classes/ColumnInformationDefaults.html":{},"coverage.html":{}}}],["defaults.ts:11",{"_index":702,"title":{},"body":{"classes/ColumnInformationDefaults.html":{}}}],["defaults.ts:16",{"_index":701,"title":{},"body":{"classes/ColumnInformationDefaults.html":{}}}],["defaults.ts:21",{"_index":700,"title":{},"body":{"classes/ColumnInformationDefaults.html":{}}}],["defaultvalue",{"_index":664,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["defined",{"_index":61,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["defines",{"_index":478,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/ColumnInformationOptionsInterface.html":{}}}],["definition",{"_index":714,"title":{},"body":{"interfaces/ColumnInformationOptionsInterface.html":{}}}],["delimiter",{"_index":773,"title":{},"body":{"classes/Csv.html":{},"miscellaneous/enumerations.html":{}}}],["dependencies",{"_index":406,"title":{"dependencies.html":{}},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dequeue",{"_index":1018,"title":{},"body":{"classes/Queue.html":{}}}],["dequeues",{"_index":1028,"title":{},"body":{"classes/Queue.html":{}}}],["dequeuing",{"_index":1013,"title":{},"body":{"classes/Queue.html":{}}}],["describes",{"_index":8,"title":{},"body":{"interfaces/Alert.html":{}}}],["description",{"_index":7,"title":{},"body":{"interfaces/Alert.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"classes/Queue.html":{},"classes/Table.html":{},"interfaces/TableInterface.html":{},"injectables/ThemeService.html":{}}}],["details",{"_index":632,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["dev",{"_index":1417,"title":{},"body":{"index.html":{}}}],["different",{"_index":265,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"classes/ColumnInformation.html":{},"classes/Table.html":{},"injectables/ThemeService.html":{}}}],["dim",{"_index":969,"title":{},"body":{"components/GridComponent.html":{}}}],["directive",{"_index":115,"title":{"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/StateManagerDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["directives",{"_index":156,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{},"overview.html":{}}}],["directory",{"_index":1431,"title":{},"body":{"index.html":{}}}],["dirty",{"_index":755,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["disabled",{"_index":462,"title":{},"body":{"components/ButtonComponent.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"components/IconButtonComponent.html":{},"directives/StateManagerDirective.html":{}}}],["disabled(isdisabled",{"_index":518,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{},"directives/StateManagerDirective.html":{}}}],["disabled]{@link",{"_index":517,"title":{},"body":{"components/ButtonComponent.html":{}}}],["display",{"_index":255,"title":{},"body":{"injectables/AlertService.html":{}}}],["documentation",{"_index":1349,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":32,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["each",{"_index":640,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"classes/Table.html":{},"interfaces/TableInterface.html":{}}}],["easier",{"_index":713,"title":{},"body":{"interfaces/ColumnInformationOptionsInterface.html":{}}}],["el",{"_index":42,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["element",{"_index":114,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"index.html":{}}}],["element.module.ts",{"_index":1072,"title":{},"body":{"modules/SbElementModule.html":{}}}],["elementand",{"_index":1405,"title":{},"body":{"index.html":{}}}],["elements",{"_index":1015,"title":{},"body":{"classes/Queue.html":{},"injectables/ThemeService.html":{}}}],["emitblur",{"_index":862,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["emitchange",{"_index":728,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{},"directives/EventManagerDirective.html":{}}}],["emitchange(value",{"_index":874,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["emitfocus",{"_index":863,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["empty",{"_index":298,"title":{},"body":{"injectables/AlertService.html":{},"classes/Queue.html":{},"classes/Table.html":{}}}],["end_delimiter",{"_index":774,"title":{},"body":{"classes/Csv.html":{}}}],["enqueue",{"_index":1023,"title":{},"body":{"classes/Queue.html":{}}}],["enqueue(value",{"_index":1034,"title":{},"body":{"classes/Queue.html":{}}}],["enqueues",{"_index":1036,"title":{},"body":{"classes/Queue.html":{}}}],["enqueuing",{"_index":1014,"title":{},"body":{"classes/Queue.html":{}}}],["entries",{"_index":698,"title":{},"body":{"classes/ColumnInformationDefaults.html":{},"classes/Table.html":{}}}],["entries.foreach((entry",{"_index":1292,"title":{},"body":{"classes/Table.html":{}}}],["entry",{"_index":1258,"title":{},"body":{"classes/Table.html":{}}}],["entry[0",{"_index":1295,"title":{},"body":{"classes/Table.html":{}}}],["enum",{"_index":819,"title":{},"body":{"classes/Csv.html":{}}}],["enumerations",{"_index":1386,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":1020,"title":{},"body":{"classes/Queue.html":{}}}],["error('cannot",{"_index":510,"title":{},"body":{"components/ButtonComponent.html":{}}}],["event",{"_index":741,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["eventemitter",{"_index":869,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["eventmanagerdirective",{"_index":167,"title":{"directives/EventManagerDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["events",{"_index":883,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["everything",{"_index":274,"title":{},"body":{"injectables/AlertService.html":{}}}],["example",{"_index":454,"title":{},"body":{"components/ButtonComponent.html":{}}}],["export",{"_index":24,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["exports",{"_index":410,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"overview.html":{}}}],["extends",{"_index":37,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"interfaces/ColumnInformationInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{}}}],["extraclasses",{"_index":593,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["extraclasses(extraclasses",{"_index":599,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["extraclasses.split",{"_index":602,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["extracts",{"_index":1261,"title":{},"body":{"classes/Table.html":{}}}],["fallback",{"_index":667,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["false",{"_index":69,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{}}}],["field",{"_index":1220,"title":{},"body":{"classes/Table.html":{}}}],["fields",{"_index":705,"title":{},"body":{"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["file.name",{"_index":923,"title":{},"body":{"components/FileInputComponent.html":{}}}],["file.size",{"_index":928,"title":{},"body":{"components/FileInputComponent.html":{}}}],["file.text",{"_index":833,"title":{},"body":{"classes/Csv.html":{}}}],["file.type",{"_index":829,"title":{},"body":{"classes/Csv.html":{}}}],["fileinputcomponent",{"_index":132,"title":{"components/FileInputComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fileinputcomponent.defaultmessage",{"_index":914,"title":{},"body":{"components/FileInputComponent.html":{}}}],["filelist",{"_index":909,"title":{},"body":{"components/FileInputComponent.html":{}}}],["files",{"_index":911,"title":{},"body":{"components/FileInputComponent.html":{},"index.html":{}}}],["files.item(0",{"_index":920,"title":{},"body":{"components/FileInputComponent.html":{}}}],["filesystem",{"_index":1249,"title":{},"body":{"classes/Table.html":{}}}],["filled",{"_index":1242,"title":{},"body":{"classes/Table.html":{}}}],["filter(classname",{"_index":603,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["finished",{"_index":295,"title":{},"body":{"injectables/AlertService.html":{}}}],["finishing",{"_index":402,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["first",{"_index":1029,"title":{},"body":{"classes/Queue.html":{}}}],["firstelement",{"_index":846,"title":{},"body":{"classes/Csv.html":{}}}],["firstelement.length",{"_index":850,"title":{},"body":{"classes/Csv.html":{}}}],["firstelement.slice(1",{"_index":849,"title":{},"body":{"classes/Csv.html":{}}}],["flag",{"_index":344,"title":{},"body":{"injectables/AlertService.html":{}}}],["flipped",{"_index":47,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["fn",{"_index":799,"title":{},"body":{"classes/Csv.html":{},"directives/EventManagerDirective.html":{}}}],["fn(columnname",{"_index":824,"title":{},"body":{"classes/Csv.html":{}}}],["focus",{"_index":760,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/EventManagerDirective.html":{}}}],["focused",{"_index":1175,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["focused(isfocused",{"_index":1206,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["follow",{"_index":1413,"title":{},"body":{"index.html":{}}}],["foreachcolumn",{"_index":777,"title":{},"body":{"classes/Csv.html":{}}}],["foreachcolumn(fn",{"_index":794,"title":{},"body":{"classes/Csv.html":{}}}],["foreachcolumnname",{"_index":778,"title":{},"body":{"classes/Csv.html":{}}}],["foreachcolumnname(fn",{"_index":801,"title":{},"body":{"classes/Csv.html":{}}}],["form",{"_index":135,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["formgroup",{"_index":488,"title":{},"body":{"components/ButtonComponent.html":{}}}],["formgroupcomponent",{"_index":134,"title":{"components/FormGroupComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formmodule",{"_index":941,"title":{"modules/FormModule.html":{}},"body":{"modules/FormModule.html":{},"modules/SbElementModule.html":{},"modules.html":{},"overview.html":{}}}],["formsmodule",{"_index":960,"title":{},"body":{"modules/FormModule.html":{},"modules/SbElementModule.html":{}}}],["free",{"_index":396,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["fromcsv",{"_index":1224,"title":{},"body":{"classes/Table.html":{}}}],["fromcsv(csvfile",{"_index":1246,"title":{},"body":{"classes/Table.html":{}}}],["fromjson",{"_index":1225,"title":{},"body":{"classes/Table.html":{}}}],["fromjson(table",{"_index":1255,"title":{},"body":{"classes/Table.html":{}}}],["fromrows",{"_index":1226,"title":{},"body":{"classes/Table.html":{}}}],["fromrows(rows",{"_index":1264,"title":{},"body":{"classes/Table.html":{}}}],["function",{"_index":800,"title":{},"body":{"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"classes/Table.html":{}}}],["gap",{"_index":970,"title":{},"body":{"components/GridComponent.html":{}}}],["garbage",{"_index":293,"title":{},"body":{"injectables/AlertService.html":{}}}],["generated",{"_index":1391,"title":{},"body":{"index.html":{}}}],["getbuttonclasses",{"_index":1088,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["getclasses",{"_index":53,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{}}}],["getclasses]{@link",{"_index":528,"title":{},"body":{"components/ButtonComponent.html":{}}}],["getcolumnclasses",{"_index":1305,"title":{},"body":{"components/TableComponent.html":{}}}],["getcolumnclasses(columnindex",{"_index":1310,"title":{},"body":{"components/TableComponent.html":{}}}],["getcolumndata",{"_index":779,"title":{},"body":{"classes/Csv.html":{}}}],["getcolumndata(index",{"_index":804,"title":{},"body":{"classes/Csv.html":{}}}],["getdefaults",{"_index":673,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["getdisabled",{"_index":501,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{},"directives/StateManagerDirective.html":{}}}],["getfocused",{"_index":1198,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["gethasgrouptitle",{"_index":936,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["getinputclasses",{"_index":994,"title":{},"body":{"components/InputComponent.html":{}}}],["getlength",{"_index":1040,"title":{},"body":{"classes/Queue.html":{}}}],["getmaxcolumnlength",{"_index":1227,"title":{},"body":{"classes/Table.html":{}}}],["getmaxcolumnlength(columns",{"_index":1267,"title":{},"body":{"classes/Table.html":{}}}],["getmessage",{"_index":219,"title":{},"body":{"components/AlertComponent.html":{}}}],["getnumberpipingvalue",{"_index":1152,"title":{},"body":{"components/SliderComponent.html":{}}}],["getoptions",{"_index":1115,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["getplaceholderclasses",{"_index":995,"title":{},"body":{"components/InputComponent.html":{}}}],["getpristine",{"_index":1194,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["gets",{"_index":283,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"classes/Queue.html":{},"classes/Table.html":{},"injectables/ThemeService.html":{}}}],["getstep",{"_index":1148,"title":{},"body":{"components/SliderComponent.html":{}}}],["getting",{"_index":1388,"title":{"index.html":{}},"body":{}}],["gettouched",{"_index":1190,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["getvalue",{"_index":737,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["github",{"_index":1425,"title":{},"body":{"index.html":{}}}],["given",{"_index":395,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["global",{"_index":254,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ThemeService.html":{}}}],["go",{"_index":300,"title":{},"body":{"injectables/AlertService.html":{},"index.html":{}}}],["good",{"_index":1421,"title":{},"body":{"index.html":{}}}],["grid",{"_index":967,"title":{},"body":{"components/GridComponent.html":{}}}],["grid'},{'name",{"_index":137,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["grid.component.html",{"_index":968,"title":{},"body":{"components/GridComponent.html":{}}}],["gridcomponent",{"_index":136,"title":{"components/GridComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["group",{"_index":572,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"components/FormGroupComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["group'},{'name",{"_index":129,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["group.component",{"_index":955,"title":{},"body":{"modules/FormModule.html":{}}}],["group.component.html",{"_index":573,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"components/FormGroupComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["group.component.ts",{"_index":571,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"components/FormGroupComponent.html":{},"components/RadioButtonGroupComponent.html":{},"coverage.html":{}}}],["group.component.ts:10",{"_index":935,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["group.component.ts:13",{"_index":933,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["group.component.ts:14",{"_index":937,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["group.component.ts:16",{"_index":1062,"title":{},"body":{"components/RadioButtonGroupComponent.html":{}}}],["group.component.ts:17",{"_index":584,"title":{},"body":{"components/CheckboxGroupComponent.html":{}}}],["group.component.ts:19",{"_index":932,"title":{},"body":{"components/FormGroupComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["group.component.ts:20",{"_index":580,"title":{},"body":{"components/CheckboxGroupComponent.html":{}}}],["group.component.ts:21",{"_index":934,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["group.component.ts:22",{"_index":1056,"title":{},"body":{"components/RadioButtonGroupComponent.html":{}}}],["group.component.ts:23",{"_index":579,"title":{},"body":{"components/CheckboxGroupComponent.html":{}}}],["group.component.ts:25",{"_index":1057,"title":{},"body":{"components/RadioButtonGroupComponent.html":{}}}],["group.component.ts:26",{"_index":581,"title":{},"body":{"components/CheckboxGroupComponent.html":{}}}],["group.component.ts:27",{"_index":1059,"title":{},"body":{"components/RadioButtonGroupComponent.html":{}}}],["group.component.ts:28",{"_index":582,"title":{},"body":{"components/CheckboxGroupComponent.html":{}}}],["group.component.ts:32",{"_index":583,"title":{},"body":{"components/CheckboxGroupComponent.html":{}}}],["group.component.ts:34",{"_index":1061,"title":{},"body":{"components/RadioButtonGroupComponent.html":{}}}],["group/base/selection",{"_index":957,"title":{},"body":{"modules/FormModule.html":{},"components/SelectButtonComponent.html":{}}}],["group/checkbox/checkbox",{"_index":956,"title":{},"body":{"modules/FormModule.html":{}}}],["group/form",{"_index":963,"title":{},"body":{"modules/FormModule.html":{}}}],["group/radio",{"_index":954,"title":{},"body":{"modules/FormModule.html":{}}}],["groupalign",{"_index":576,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"components/FormGroupComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["grouptitle",{"_index":577,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"components/FormGroupComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["handles",{"_index":1012,"title":{},"body":{"classes/Queue.html":{}}}],["handling",{"_index":614,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["hasgrouptitle",{"_index":931,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["header",{"_index":775,"title":{},"body":{"classes/Csv.html":{}}}],["here",{"_index":1420,"title":{},"body":{"index.html":{}}}],["hides",{"_index":185,"title":{},"body":{"components/AlertComponent.html":{}}}],["hidetime",{"_index":181,"title":{},"body":{"components/AlertComponent.html":{}}}],["holding",{"_index":1213,"title":{},"body":{"classes/Table.html":{}}}],["holds",{"_index":697,"title":{},"body":{"classes/ColumnInformationDefaults.html":{},"classes/Queue.html":{}}}],["hover",{"_index":452,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{}}}],["html",{"_index":113,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["icon",{"_index":139,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["icon'},{'name",{"_index":141,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["icon.component.html",{"_index":991,"title":{},"body":{"components/IconComponent.html":{}}}],["icon/icon.component",{"_index":962,"title":{},"body":{"modules/FormModule.html":{}}}],["iconbuttoncomponent",{"_index":138,"title":{"components/IconButtonComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["iconcomponent",{"_index":140,"title":{"components/IconComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["identifier",{"_index":1350,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":262,"title":{},"body":{"injectables/AlertService.html":{}}}],["implemented",{"_index":389,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["implementing",{"_index":1432,"title":{},"body":{"index.html":{}}}],["implements",{"_index":177,"title":{},"body":{"components/AlertComponent.html":{},"classes/ColumnInformationDefaults.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"classes/Table.html":{}}}],["import",{"_index":80,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["imports",{"_index":432,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{}}}],["inactive",{"_index":249,"title":{},"body":{"components/AlertComponent.html":{}}}],["include",{"_index":1418,"title":{},"body":{"index.html":{}}}],["included",{"_index":484,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/ThemeService.html":{}}}],["incoming",{"_index":264,"title":{},"body":{"injectables/AlertService.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":1106,"title":{},"body":{"interfaces/SelectedOptions.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["info.alignment",{"_index":692,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["info.color",{"_index":688,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["info.name",{"_index":684,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["inform",{"_index":263,"title":{},"body":{"injectables/AlertService.html":{}}}],["inform(message",{"_index":318,"title":{},"body":{"injectables/AlertService.html":{}}}],["information",{"_index":616,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"classes/Table.html":{},"interfaces/TableInterface.html":{},"coverage.html":{}}}],["information.interface",{"_index":703,"title":{},"body":{"classes/ColumnInformationDefaults.html":{},"classes/Table.html":{},"interfaces/TableInterface.html":{}}}],["information.interface.ts",{"_index":704,"title":{},"body":{"interfaces/ColumnInformationInterface.html":{},"coverage.html":{}}}],["information.ts",{"_index":612,"title":{},"body":{"classes/ColumnInformation.html":{},"coverage.html":{}}}],["information.ts:22",{"_index":674,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["information.ts:31",{"_index":643,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["information.ts:50",{"_index":647,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["information.ts:69",{"_index":656,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["information.ts:99",{"_index":665,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["informs",{"_index":279,"title":{},"body":{"injectables/AlertService.html":{}}}],["inherited",{"_index":638,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["inidcate",{"_index":356,"title":{},"body":{"injectables/AlertService.html":{}}}],["initiated",{"_index":1231,"title":{},"body":{"classes/Table.html":{}}}],["initiates",{"_index":1230,"title":{},"body":{"classes/Table.html":{}}}],["initiation",{"_index":1233,"title":{},"body":{"classes/Table.html":{}}}],["injectable",{"_index":250,"title":{"injectables/AlertService.html":{},"injectables/ThemeService.html":{}},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["injectables",{"_index":251,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ThemeService.html":{},"overview.html":{}}}],["innerchange",{"_index":729,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["innervalue",{"_index":722,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["input",{"_index":82,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"components/ToggleSwitchComponent.html":{}}}],["input'},{'name",{"_index":133,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["input(files",{"_index":908,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component",{"_index":965,"title":{},"body":{"modules/FormModule.html":{}}}],["input.component.html",{"_index":897,"title":{},"body":{"components/FileInputComponent.html":{},"components/InputComponent.html":{}}}],["input.component.ts",{"_index":896,"title":{},"body":{"components/FileInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:18",{"_index":917,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:21",{"_index":904,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:25",{"_index":903,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:27",{"_index":916,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:28",{"_index":915,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:30",{"_index":913,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:31",{"_index":902,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:44",{"_index":910,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:57",{"_index":906,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:67",{"_index":907,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.directive",{"_index":88,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"modules/SbElementModule.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{}}}],["input.directive.ts",{"_index":591,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"coverage.html":{}}}],["input.directive.ts:10",{"_index":596,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["input.directive.ts:11",{"_index":750,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{}}}],["input.directive.ts:12",{"_index":594,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/SizeInputDirective.html":{}}}],["input.directive.ts:13",{"_index":748,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{}}}],["input.directive.ts:15",{"_index":761,"title":{},"body":{"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{}}}],["input.directive.ts:16",{"_index":764,"title":{},"body":{"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{}}}],["input.directive.ts:19",{"_index":1328,"title":{},"body":{"directives/ThemeInputDirective.html":{}}}],["input.directive.ts:21",{"_index":595,"title":{},"body":{"directives/ClassNameInputDirective.html":{}}}],["input.directive.ts:22",{"_index":749,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{}}}],["input.directive.ts:25",{"_index":765,"title":{},"body":{"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{}}}],["input.directive.ts:8",{"_index":597,"title":{},"body":{"directives/ClassNameInputDirective.html":{}}}],["input.directive.ts:9",{"_index":751,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["input/class",{"_index":426,"title":{},"body":{"modules/BaseModule.html":{},"directives/ClassNameInputDirective.html":{},"components/GridComponent.html":{},"coverage.html":{}}}],["input/color",{"_index":421,"title":{},"body":{"modules/BaseModule.html":{},"directives/ColorInputDirective.html":{},"coverage.html":{}}}],["input/control",{"_index":428,"title":{},"body":{"modules/BaseModule.html":{},"components/CheckboxComponent.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["input/file",{"_index":895,"title":{},"body":{"components/FileInputComponent.html":{},"modules/FormModule.html":{},"coverage.html":{}}}],["input/input.component",{"_index":964,"title":{},"body":{"modules/FormModule.html":{}}}],["input/size",{"_index":86,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ContainerComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"coverage.html":{}}}],["input/theme",{"_index":422,"title":{},"body":{"modules/BaseModule.html":{},"modules/SbElementModule.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"coverage.html":{}}}],["inputcomponent",{"_index":142,"title":{"components/InputComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inputs",{"_index":54,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{}}}],["inside",{"_index":282,"title":{},"body":{"injectables/AlertService.html":{}}}],["install",{"_index":1408,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1400,"title":{},"body":{"index.html":{}}}],["instead",{"_index":1021,"title":{},"body":{"classes/Queue.html":{},"classes/Table.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Alert.html":{},"interfaces/AlertServiceSubscriber.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"interfaces/SelectedOptions.html":{},"interfaces/TableInterface.html":{}},"body":{"interfaces/Alert.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"interfaces/SelectedOptions.html":{},"interfaces/TableInterface.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Alert.html":{},"interfaces/AlertServiceSubscriber.html":{},"classes/ColumnInformation.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"interfaces/SelectedOptions.html":{},"interfaces/TableInterface.html":{},"overview.html":{}}}],["invert",{"_index":450,"title":{},"body":{"components/ButtonComponent.html":{}}}],["isbusy",{"_index":304,"title":{},"body":{"injectables/AlertService.html":{}}}],["isbusy]{@link",{"_index":377,"title":{},"body":{"injectables/AlertService.html":{}}}],["isdisabled",{"_index":489,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{},"directives/StateManagerDirective.html":{}}}],["isempty",{"_index":1024,"title":{},"body":{"classes/Queue.html":{}}}],["isfocused",{"_index":1201,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["ispill",{"_index":463,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ispill(ispill",{"_index":514,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ispill]=\"{boolean",{"_index":444,"title":{},"body":{"components/ButtonComponent.html":{}}}],["isplain",{"_index":464,"title":{},"body":{"components/ButtonComponent.html":{}}}],["isplain(isplain",{"_index":516,"title":{},"body":{"components/ButtonComponent.html":{}}}],["isplain/plain",{"_index":449,"title":{},"body":{"components/ButtonComponent.html":{}}}],["isplain`/`plain",{"_index":504,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ispristine",{"_index":1196,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["isround",{"_index":465,"title":{},"body":{"components/ButtonComponent.html":{}}}],["isround(isround",{"_index":507,"title":{},"body":{"components/ButtonComponent.html":{}}}],["isround]=\"{boolean",{"_index":445,"title":{},"body":{"components/ButtonComponent.html":{}}}],["istouched",{"_index":1193,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["iterable",{"_index":1250,"title":{},"body":{"classes/Table.html":{}}}],["itself",{"_index":391,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{},"classes/ColumnInformation.html":{}}}],["json",{"_index":1257,"title":{},"body":{"classes/Table.html":{}}}],["key",{"_index":1107,"title":{},"body":{"interfaces/SelectedOptions.html":{},"classes/Table.html":{}}}],["label",{"_index":553,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadioButtonComponent.html":{},"components/SliderComponent.html":{}}}],["labelposition",{"_index":554,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["lastelement",{"_index":851,"title":{},"body":{"classes/Csv.html":{}}}],["lastelement.length",{"_index":855,"title":{},"body":{"classes/Csv.html":{}}}],["lastelement.substring(0",{"_index":854,"title":{},"body":{"classes/Csv.html":{}}}],["left",{"_index":578,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"components/FormGroupComponent.html":{},"classes/Queue.html":{},"components/RadioButtonGroupComponent.html":{}}}],["legend",{"_index":112,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"overview.html":{}}}],["length",{"_index":1016,"title":{},"body":{"classes/Queue.html":{},"classes/Table.html":{}}}],["lets",{"_index":272,"title":{},"body":{"injectables/AlertService.html":{}}}],["library",{"_index":625,"title":{},"body":{"classes/ColumnInformation.html":{},"index.html":{}}}],["lifecycle",{"_index":281,"title":{},"body":{"injectables/AlertService.html":{}}}],["light",{"_index":1332,"title":{},"body":{"injectables/ThemeService.html":{}}}],["limit",{"_index":900,"title":{},"body":{"components/FileInputComponent.html":{}}}],["link",{"_index":360,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"classes/ColumnInformation.html":{},"classes/Table.html":{},"interfaces/TableInterface.html":{}}}],["literal",{"_index":1444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["located",{"_index":1429,"title":{},"body":{"index.html":{}}}],["longer",{"_index":490,"title":{},"body":{"components/ButtonComponent.html":{}}}],["look",{"_index":1422,"title":{},"body":{"index.html":{}}}],["make",{"_index":707,"title":{},"body":{"interfaces/ColumnInformationInterface.html":{}}}],["management",{"_index":1017,"title":{},"body":{"classes/Queue.html":{}}}],["manager.directive",{"_index":430,"title":{},"body":{"modules/BaseModule.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/EventManagerDirective.html":{}}}],["manager.directive.ts",{"_index":859,"title":{},"body":{"directives/EventManagerDirective.html":{},"directives/StateManagerDirective.html":{},"coverage.html":{}}}],["manager.directive.ts:10",{"_index":881,"title":{},"body":{"directives/EventManagerDirective.html":{},"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:11",{"_index":1191,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:13",{"_index":871,"title":{},"body":{"directives/EventManagerDirective.html":{},"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:15",{"_index":1178,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:16",{"_index":870,"title":{},"body":{"directives/EventManagerDirective.html":{},"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:18",{"_index":1187,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:19",{"_index":872,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["manager.directive.ts:20",{"_index":1176,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:21",{"_index":1197,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:22",{"_index":873,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["manager.directive.ts:23",{"_index":1188,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:25",{"_index":1177,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:26",{"_index":1199,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:28",{"_index":1180,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:29",{"_index":876,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["manager.directive.ts:32",{"_index":1186,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:34",{"_index":875,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["manager.directive.ts:36",{"_index":1184,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:40",{"_index":1182,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:41",{"_index":878,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["manager.directive.ts:42",{"_index":880,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["manager.directive.ts:8",{"_index":1189,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:9",{"_index":882,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["manual",{"_index":1412,"title":{},"body":{"index.html":{}}}],["maps",{"_index":1260,"title":{},"body":{"classes/Table.html":{}}}],["matching",{"_index":26,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.floor(step",{"_index":1156,"title":{},"body":{"components/SliderComponent.html":{}}}],["math.round((this.max",{"_index":1163,"title":{},"body":{"components/SliderComponent.html":{}}}],["max",{"_index":1129,"title":{},"body":{"components/SliderComponent.html":{},"classes/Table.html":{}}}],["maximum",{"_index":1269,"title":{},"body":{"classes/Table.html":{}}}],["meaning",{"_index":340,"title":{},"body":{"injectables/AlertService.html":{},"classes/Table.html":{}}}],["means",{"_index":451,"title":{},"body":{"components/ButtonComponent.html":{}}}],["mega",{"_index":918,"title":{},"body":{"components/FileInputComponent.html":{}}}],["members",{"_index":808,"title":{},"body":{"classes/Csv.html":{}}}],["merge",{"_index":620,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["merge(overwrite",{"_index":654,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["merge]{@link",{"_index":681,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["merged",{"_index":661,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["merges",{"_index":657,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["mergevalues",{"_index":636,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["mergevalues(overwrite",{"_index":662,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["message",{"_index":19,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/FileInputComponent.html":{}}}],["metadata",{"_index":39,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{}}}],["method",{"_index":271,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"classes/ColumnInformation.html":{},"classes/Queue.html":{},"classes/Table.html":{}}}],["methods",{"_index":52,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["min",{"_index":1130,"title":{},"body":{"components/SliderComponent.html":{}}}],["minimal",{"_index":458,"title":{},"body":{"components/ButtonComponent.html":{}}}],["miscellaneous",{"_index":1385,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1232,"title":{},"body":{"classes/Table.html":{}}}],["models/alert/alert",{"_index":221,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{}}}],["models/queue/queue",{"_index":358,"title":{},"body":{"injectables/AlertService.html":{}}}],["models/table/table.interface",{"_index":1316,"title":{},"body":{"components/TableComponent.html":{}}}],["module",{"_index":403,"title":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{}},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"overview.html":{}}}],["modules",{"_index":405,"title":{"modules.html":{}},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"modules.html":{},"overview.html":{}}}],["multi",{"_index":550,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["name",{"_index":64,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["names",{"_index":1252,"title":{},"body":{"classes/Table.html":{}}}],["necessary",{"_index":1240,"title":{},"body":{"classes/Table.html":{},"interfaces/TableInterface.html":{},"index.html":{}}}],["need",{"_index":354,"title":{},"body":{"injectables/AlertService.html":{}}}],["needed",{"_index":480,"title":{},"body":{"components/ButtonComponent.html":{},"classes/ColumnInformation.html":{}}}],["needs",{"_index":261,"title":{},"body":{"injectables/AlertService.html":{}}}],["new",{"_index":242,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"directives/ClassNameInputDirective.html":{},"classes/ColumnInformation.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["newoption",{"_index":1060,"title":{},"body":{"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{}}}],["next",{"_index":346,"title":{},"body":{"injectables/AlertService.html":{},"classes/Queue.html":{}}}],["ng",{"_index":1404,"title":{},"body":{"index.html":{}}}],["ng_value_accessor",{"_index":548,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["ngmodule",{"_index":417,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{}}}],["night",{"_index":1333,"title":{},"body":{"injectables/ThemeService.html":{}}}],["normal",{"_index":435,"title":{},"body":{"components/ButtonComponent.html":{}}}],["nothing",{"_index":352,"title":{},"body":{"injectables/AlertService.html":{}}}],["notifies",{"_index":326,"title":{},"body":{"injectables/AlertService.html":{}}}],["now",{"_index":453,"title":{},"body":{"components/ButtonComponent.html":{}}}],["npm",{"_index":1415,"title":{},"body":{"index.html":{}}}],["null",{"_index":212,"title":{},"body":{"components/AlertComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/RadioButtonGroupComponent.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{}}}],["number",{"_index":196,"title":{},"body":{"components/AlertComponent.html":{},"classes/Csv.html":{},"components/FileInputComponent.html":{},"classes/Queue.html":{},"components/SliderComponent.html":{},"classes/Table.html":{},"components/TableComponent.html":{}}}],["numberpipingvalue",{"_index":1134,"title":{},"body":{"components/SliderComponent.html":{}}}],["object",{"_index":629,"title":{},"body":{"classes/ColumnInformation.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"classes/Table.html":{}}}],["object.entries(table",{"_index":1291,"title":{},"body":{"classes/Table.html":{}}}],["objects",{"_index":626,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["once",{"_index":348,"title":{},"body":{"injectables/AlertService.html":{}}}],["onchangecallback",{"_index":860,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["one",{"_index":447,"title":{},"body":{"components/ButtonComponent.html":{},"classes/ColumnInformation.html":{},"classes/Queue.html":{},"classes/Table.html":{}}}],["ontouchedcallback",{"_index":861,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["open",{"_index":1101,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["operations",{"_index":1011,"title":{},"body":{"classes/Queue.html":{}}}],["option",{"_index":666,"title":{},"body":{"classes/ColumnInformation.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{}}}],["optional",{"_index":65,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"directives/ClassNameInputDirective.html":{},"classes/ColumnInformation.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{}}}],["options",{"_index":436,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxGroupComponent.html":{},"classes/ColumnInformation.html":{},"directives/SelectionOptionsDirective.html":{},"classes/Table.html":{}}}],["options(options",{"_index":1120,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["options.directive",{"_index":588,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"modules/FormModule.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{}}}],["options.directive.ts",{"_index":1110,"title":{},"body":{"directives/SelectionOptionsDirective.html":{},"coverage.html":{}}}],["options.directive.ts:10",{"_index":1114,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["options.directive.ts:11",{"_index":1113,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["options.directive.ts:14",{"_index":1112,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["options.directive.ts:18",{"_index":1116,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["options.interface",{"_index":675,"title":{},"body":{"classes/ColumnInformation.html":{},"interfaces/ColumnInformationInterface.html":{},"classes/Table.html":{}}}],["options.interface.ts",{"_index":710,"title":{},"body":{"interfaces/ColumnInformationOptionsInterface.html":{},"coverage.html":{}}}],["options.ts",{"_index":1105,"title":{},"body":{"interfaces/SelectedOptions.html":{},"coverage.html":{}}}],["options.ts:1",{"_index":1108,"title":{},"body":{"interfaces/SelectedOptions.html":{}}}],["order",{"_index":392,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["otherwise",{"_index":1039,"title":{},"body":{"classes/Queue.html":{}}}],["out",{"_index":287,"title":{},"body":{"injectables/AlertService.html":{},"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"overview.html":{}}}],["output",{"_index":670,"title":{},"body":{"classes/ColumnInformation.html":{},"directives/EventManagerDirective.html":{}}}],["outputs",{"_index":866,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["over",{"_index":1251,"title":{},"body":{"classes/Table.html":{}}}],["overview",{"_index":1436,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":660,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["overwrites",{"_index":482,"title":{},"body":{"components/ButtonComponent.html":{}}}],["overwritten",{"_index":671,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["package",{"_index":1380,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["packages",{"_index":1409,"title":{},"body":{"index.html":{}}}],["page",{"_index":1426,"title":{},"body":{"index.html":{}}}],["param",{"_index":506,"title":{},"body":{"components/ButtonComponent.html":{}}}],["parameter",{"_index":260,"title":{},"body":{"injectables/AlertService.html":{}}}],["parameters",{"_index":63,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"directives/ClassNameInputDirective.html":{},"classes/ColumnInformation.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{}}}],["param{alert",{"_index":383,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["param{alertservicesubscriber",{"_index":371,"title":{},"body":{"injectables/AlertService.html":{}}}],["param{any",{"_index":520,"title":{},"body":{"components/ButtonComponent.html":{}}}],["param{array",{"_index":1274,"title":{},"body":{"classes/Table.html":{}}}],["param{boolean",{"_index":526,"title":{},"body":{"components/ButtonComponent.html":{}}}],["param{columninformationoptionsinterface",{"_index":682,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["param{file",{"_index":1279,"title":{},"body":{"classes/Table.html":{}}}],["param{object",{"_index":1290,"title":{},"body":{"classes/Table.html":{}}}],["param{string",{"_index":373,"title":{},"body":{"injectables/AlertService.html":{},"classes/ColumnInformation.html":{},"injectables/ThemeService.html":{}}}],["param{t",{"_index":1043,"title":{},"body":{"classes/Queue.html":{}}}],["param{themeservice",{"_index":521,"title":{},"body":{"components/ButtonComponent.html":{}}}],["parsefile",{"_index":780,"title":{},"body":{"classes/Csv.html":{},"classes/Table.html":{}}}],["parsefile(file",{"_index":806,"title":{},"body":{"classes/Csv.html":{}}}],["parsefile]{@link",{"_index":1277,"title":{},"body":{"classes/Table.html":{}}}],["parsestring",{"_index":781,"title":{},"body":{"classes/Csv.html":{}}}],["parsestring(string",{"_index":810,"title":{},"body":{"classes/Csv.html":{}}}],["passed",{"_index":442,"title":{},"body":{"components/ButtonComponent.html":{},"classes/ColumnInformation.html":{}}}],["passes",{"_index":269,"title":{},"body":{"injectables/AlertService.html":{}}}],["peer",{"_index":1383,"title":{},"body":{"dependencies.html":{}}}],["persistent",{"_index":655,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["persistent.alignment",{"_index":694,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["persistent.color",{"_index":690,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["persistent.name",{"_index":686,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["pill",{"_index":49,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["pill]{@link",{"_index":513,"title":{},"body":{"components/ButtonComponent.html":{}}}],["placed",{"_index":285,"title":{},"body":{"injectables/AlertService.html":{}}}],["placeholder",{"_index":901,"title":{},"body":{"components/FileInputComponent.html":{},"components/InputComponent.html":{}}}],["plain",{"_index":50,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["plain]{@link",{"_index":515,"title":{},"body":{"components/ButtonComponent.html":{}}}],["poesess",{"_index":712,"title":{},"body":{"interfaces/ColumnInformationOptionsInterface.html":{}}}],["possible",{"_index":439,"title":{},"body":{"components/ButtonComponent.html":{}}}],["predefinded",{"_index":270,"title":{},"body":{"injectables/AlertService.html":{}}}],["predefined",{"_index":266,"title":{},"body":{"injectables/AlertService.html":{}}}],["primary",{"_index":305,"title":{},"body":{"injectables/AlertService.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/ThemeColorInputDirective.html":{}}}],["primary(message",{"_index":320,"title":{},"body":{"injectables/AlertService.html":{}}}],["pristine",{"_index":754,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/StateManagerDirective.html":{}}}],["pristine(ispristine",{"_index":1204,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["private",{"_index":48,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"directives/ClassNameInputDirective.html":{},"classes/ColumnInformation.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"classes/Queue.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{}}}],["process",{"_index":342,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["produce",{"_index":1019,"title":{},"body":{"classes/Queue.html":{}}}],["progress",{"_index":351,"title":{},"body":{"injectables/AlertService.html":{}}}],["project",{"_index":1419,"title":{},"body":{"index.html":{}}}],["promise",{"_index":201,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"classes/Csv.html":{},"classes/Table.html":{}}}],["promise(resolve",{"_index":243,"title":{},"body":{"components/AlertComponent.html":{}}}],["promise.all(this.subscribers.map(subscriber",{"_index":385,"title":{},"body":{"injectables/AlertService.html":{}}}],["promise.reject(\"file",{"_index":831,"title":{},"body":{"classes/Csv.html":{}}}],["promise.resolve",{"_index":236,"title":{},"body":{"components/AlertComponent.html":{}}}],["promise.resolve(this.show",{"_index":238,"title":{},"body":{"components/AlertComponent.html":{}}}],["properly",{"_index":1262,"title":{},"body":{"classes/Table.html":{}}}],["properties",{"_index":17,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["property",{"_index":474,"title":{},"body":{"components/ButtonComponent.html":{}}}],["protected",{"_index":574,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/EventManagerDirective.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{}}}],["provide",{"_index":547,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["providedin",{"_index":367,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ThemeService.html":{}}}],["providers",{"_index":409,"title":{},"body":{"modules/BaseModule.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/FileInputComponent.html":{},"modules/FormModule.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{},"overview.html":{}}}],["provides",{"_index":253,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"classes/ColumnInformation.html":{},"injectables/ThemeService.html":{}}}],["providing",{"_index":613,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["public",{"_index":46,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["queue",{"_index":288,"title":{"classes/Queue.html":{}},"body":{"injectables/AlertService.html":{},"classes/Queue.html":{},"coverage.html":{}}}],["queue]{@link",{"_index":1042,"title":{},"body":{"classes/Queue.html":{}}}],["radio",{"_index":144,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["radiobuttoncomponent",{"_index":143,"title":{"components/RadioButtonComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["radiobuttongroupcomponent",{"_index":145,"title":{"components/RadioButtonGroupComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ready",{"_index":280,"title":{},"body":{"injectables/AlertService.html":{}}}],["receive",{"_index":393,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["received",{"_index":1241,"title":{},"body":{"classes/Table.html":{}}}],["regarding",{"_index":711,"title":{},"body":{"interfaces/ColumnInformationOptionsInterface.html":{}}}],["regexp",{"_index":788,"title":{},"body":{"classes/Csv.html":{}}}],["register",{"_index":390,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{},"directives/EventManagerDirective.html":{}}}],["registered",{"_index":399,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["registeronchange",{"_index":864,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["registeronchange(fn",{"_index":877,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["registerontouched",{"_index":865,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["registerontouched(fn",{"_index":879,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["remove",{"_index":345,"title":{},"body":{"injectables/AlertService.html":{}}}],["removed",{"_index":291,"title":{},"body":{"injectables/AlertService.html":{}}}],["removes",{"_index":286,"title":{},"body":{"injectables/AlertService.html":{},"classes/Queue.html":{}}}],["render",{"_index":1327,"title":{},"body":{"interfaces/TableInterface.html":{}}}],["require",{"_index":1378,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":415,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"overview.html":{}}}],["resetalert",{"_index":186,"title":{},"body":{"components/AlertComponent.html":{}}}],["resolve",{"_index":245,"title":{},"body":{"components/AlertComponent.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["resolved",{"_index":328,"title":{},"body":{"injectables/AlertService.html":{}}}],["rest",{"_index":1407,"title":{},"body":{"index.html":{}}}],["result",{"_index":25,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":27,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":105,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["returns",{"_index":75,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["returns{boolean",{"_index":1050,"title":{},"body":{"classes/Queue.html":{}}}],["returns{number",{"_index":1048,"title":{},"body":{"classes/Queue.html":{}}}],["returns{promise",{"_index":384,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["returns{string",{"_index":1341,"title":{},"body":{"injectables/ThemeService.html":{}}}],["returns{t",{"_index":1045,"title":{},"body":{"classes/Queue.html":{}}}],["right",{"_index":556,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["root",{"_index":368,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"injectables/ThemeService.html":{}}}],["rootclass",{"_index":51,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["round",{"_index":441,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{}}}],["round]{@link",{"_index":505,"title":{},"body":{"components/ButtonComponent.html":{}}}],["row",{"_index":816,"title":{},"body":{"classes/Csv.html":{},"classes/Table.html":{},"interfaces/TableInterface.html":{}}}],["row.push(column[i",{"_index":1299,"title":{},"body":{"classes/Table.html":{}}}],["row.split(this.usedelimiter(delimiter",{"_index":845,"title":{},"body":{"classes/Csv.html":{}}}],["row[index",{"_index":828,"title":{},"body":{"classes/Csv.html":{}}}],["rows",{"_index":782,"title":{},"body":{"classes/Csv.html":{},"classes/Table.html":{}}}],["rows(string",{"_index":812,"title":{},"body":{"classes/Csv.html":{}}}],["rows.foreach(row",{"_index":837,"title":{},"body":{"classes/Csv.html":{}}}],["rows.length",{"_index":844,"title":{},"body":{"classes/Csv.html":{}}}],["rows.push(row",{"_index":1301,"title":{},"body":{"classes/Table.html":{}}}],["rows.splice(rows.length",{"_index":843,"title":{},"body":{"classes/Csv.html":{}}}],["rows[rows.length",{"_index":842,"title":{},"body":{"classes/Csv.html":{}}}],["s",{"_index":790,"title":{},"body":{"classes/Csv.html":{}}}],["s*)(?:,|;|$)(?:\\s",{"_index":789,"title":{},"body":{"classes/Csv.html":{}}}],["save",{"_index":1416,"title":{},"body":{"index.html":{}}}],["sb",{"_index":41,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"index.html":{}}}],["sbelement",{"_index":1390,"title":{},"body":{"index.html":{}}}],["sbelementmodule",{"_index":1066,"title":{"modules/SbElementModule.html":{}},"body":{"modules/SbElementModule.html":{},"modules.html":{},"overview.html":{}}}],["schematics",{"_index":1399,"title":{},"body":{"index.html":{}}}],["scss",{"_index":1396,"title":{},"body":{"index.html":{}}}],["secondary",{"_index":306,"title":{},"body":{"injectables/AlertService.html":{}}}],["secondary(message",{"_index":322,"title":{},"body":{"injectables/AlertService.html":{}}}],["select",{"_index":148,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["select(newoption",{"_index":1091,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["selectbuttoncomponent",{"_index":147,"title":{"components/SelectButtonComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selected",{"_index":1118,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["selectedoptions",{"_index":585,"title":{"interfaces/SelectedOptions.html":{}},"body":{"components/CheckboxGroupComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"coverage.html":{}}}],["selectionoptionsdirective",{"_index":168,"title":{"directives/SelectionOptionsDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selector",{"_index":40,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{}}}],["selector]'},{'name",{"_index":158,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["semicolon",{"_index":822,"title":{},"body":{"classes/Csv.html":{},"miscellaneous/enumerations.html":{}}}],["separation",{"_index":1306,"title":{},"body":{"components/TableComponent.html":{}}}],["service",{"_index":222,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["services/alert/alert.service",{"_index":224,"title":{},"body":{"components/AlertComponent.html":{},"components/FileInputComponent.html":{}}}],["services/theme/theme.service",{"_index":84,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["set",{"_index":343,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"components/IconButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"injectables/ThemeService.html":{}}}],["setalert",{"_index":187,"title":{},"body":{"components/AlertComponent.html":{}}}],["setalert(alert",{"_index":206,"title":{},"body":{"components/AlertComponent.html":{}}}],["setdisabled(isdisabled",{"_index":503,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{},"directives/StateManagerDirective.html":{}}}],["setdisabledstate",{"_index":461,"title":{},"body":{"components/ButtonComponent.html":{},"directives/StateManagerDirective.html":{}}}],["setdisabledstate(disabled",{"_index":1179,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["setdisabledstate(isdisabled",{"_index":485,"title":{},"body":{"components/ButtonComponent.html":{}}}],["setextraclasses(extraclasses",{"_index":598,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["setfocused(isfocused",{"_index":1200,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["setfocusedstate",{"_index":1172,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["setfocusedstate(focused",{"_index":1181,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["setinnervalue",{"_index":723,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["setinnervalue(value",{"_index":726,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["setispill(ispill",{"_index":499,"title":{},"body":{"components/ButtonComponent.html":{}}}],["setisplain(isplain",{"_index":500,"title":{},"body":{"components/ButtonComponent.html":{}}}],["setisround(isround",{"_index":498,"title":{},"body":{"components/ButtonComponent.html":{}}}],["setoptions(options",{"_index":1117,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["setpristine(ispristine",{"_index":1195,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["setpristinestate",{"_index":1173,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["setpristinestate(pristine",{"_index":1183,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["sets",{"_index":468,"title":{},"body":{"components/ButtonComponent.html":{},"classes/ColumnInformation.html":{},"injectables/ThemeService.html":{}}}],["setsnap(snap",{"_index":1151,"title":{},"body":{"components/SliderComponent.html":{}}}],["setstep(step",{"_index":1150,"title":{},"body":{"components/SliderComponent.html":{}}}],["settimeout",{"_index":244,"title":{},"body":{"components/AlertComponent.html":{}}}],["settouched(istouched",{"_index":1192,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["settouchedstate",{"_index":1174,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["settouchedstate(touched",{"_index":1185,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["setvalue(value",{"_index":739,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["shadow",{"_index":534,"title":{},"body":{"components/CardComponent.html":{}}}],["shifts",{"_index":1031,"title":{},"body":{"classes/Queue.html":{}}}],["show",{"_index":182,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["showalert",{"_index":307,"title":{},"body":{"injectables/AlertService.html":{}}}],["showalert(alert",{"_index":324,"title":{},"body":{"injectables/AlertService.html":{}}}],["showalert]{@link",{"_index":378,"title":{},"body":{"injectables/AlertService.html":{}}}],["showarrow",{"_index":56,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{}}}],["showicon",{"_index":57,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{}}}],["showing",{"_index":296,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["shown",{"_index":257,"title":{},"body":{"injectables/AlertService.html":{}}}],["showoptions",{"_index":1087,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["shows",{"_index":313,"title":{},"body":{"injectables/AlertService.html":{}}}],["showvalue",{"_index":1131,"title":{},"body":{"components/SliderComponent.html":{}}}],["simple",{"_index":628,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["simpler",{"_index":1403,"title":{},"body":{"index.html":{}}}],["simultaneously",{"_index":512,"title":{},"body":{"components/ButtonComponent.html":{}}}],["size",{"_index":20,"title":{},"body":{"interfaces/Alert.html":{},"injectables/AlertService.html":{},"modules/BaseModule.html":{},"components/CheckboxComponent.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["sizecolorinputdirective",{"_index":169,"title":{"directives/SizeColorInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeColorInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sizeinputdirective",{"_index":170,"title":{"directives/SizeInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sizethemecolorinputdirective",{"_index":38,"title":{"directives/SizeThemeColorInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeThemeColorInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sizethemecolorinputdirective#getclasses",{"_index":529,"title":{},"body":{"components/ButtonComponent.html":{}}}],["sizethemeinputdirective",{"_index":171,"title":{"directives/SizeThemeInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["slider",{"_index":1124,"title":{},"body":{"components/SliderComponent.html":{}}}],["slider'},{'name",{"_index":150,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["slider.component.html",{"_index":1125,"title":{},"body":{"components/SliderComponent.html":{}}}],["slider/slider.component",{"_index":959,"title":{},"body":{"modules/FormModule.html":{}}}],["slidercomponent",{"_index":149,"title":{"components/SliderComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["snap",{"_index":1132,"title":{},"body":{"components/SliderComponent.html":{}}}],["snap(snap",{"_index":1159,"title":{},"body":{"components/SliderComponent.html":{}}}],["snappoints",{"_index":1128,"title":{},"body":{"components/SliderComponent.html":{}}}],["snapstep",{"_index":1162,"title":{},"body":{"components/SliderComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["spec\\.ts",{"_index":1443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specified",{"_index":314,"title":{},"body":{"injectables/AlertService.html":{}}}],["spellcheck",{"_index":996,"title":{},"body":{"components/InputComponent.html":{}}}],["split",{"_index":783,"title":{},"body":{"classes/Csv.html":{}}}],["split(row",{"_index":814,"title":{},"body":{"classes/Csv.html":{}}}],["split[0",{"_index":847,"title":{},"body":{"classes/Csv.html":{}}}],["split[split.length",{"_index":852,"title":{},"body":{"classes/Csv.html":{}}}],["splitrows",{"_index":836,"title":{},"body":{"classes/Csv.html":{}}}],["splitrows.push(this.split(row",{"_index":838,"title":{},"body":{"classes/Csv.html":{}}}],["splitrows.slice(1",{"_index":840,"title":{},"body":{"classes/Csv.html":{}}}],["splitrows[0",{"_index":839,"title":{},"body":{"classes/Csv.html":{}}}],["src",{"_index":1430,"title":{},"body":{"index.html":{}}}],["src/.../csv.ts",{"_index":1387,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/components/alert",{"_index":34,"title":{},"body":{"components/AlertBoxComponent.html":{},"coverage.html":{}}}],["src/lib/components/alert/alert.component.ts",{"_index":176,"title":{},"body":{"components/AlertComponent.html":{},"coverage.html":{}}}],["src/lib/components/alert/alert.component.ts:14",{"_index":217,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:17",{"_index":194,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:20",{"_index":195,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:22",{"_index":213,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:23",{"_index":218,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:24",{"_index":215,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:26",{"_index":198,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:27",{"_index":193,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:37",{"_index":200,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:45",{"_index":207,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:52",{"_index":202,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:57",{"_index":211,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:61",{"_index":204,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:66",{"_index":209,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:72",{"_index":205,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:77",{"_index":220,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:82",{"_index":203,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/base/base.module.ts",{"_index":416,"title":{},"body":{"modules/BaseModule.html":{}}}],["src/lib/components/base/control",{"_index":719,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"directives/StateManagerDirective.html":{},"coverage.html":{}}}],["src/lib/components/base/style",{"_index":590,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"coverage.html":{}}}],["src/lib/components/card/card.component.ts",{"_index":531,"title":{},"body":{"components/CardComponent.html":{},"coverage.html":{}}}],["src/lib/components/card/card.component.ts:11",{"_index":539,"title":{},"body":{"components/CardComponent.html":{}}}],["src/lib/components/card/card.component.ts:13",{"_index":538,"title":{},"body":{"components/CardComponent.html":{}}}],["src/lib/components/card/card.component.ts:14",{"_index":536,"title":{},"body":{"components/CardComponent.html":{}}}],["src/lib/components/card/card.component.ts:26",{"_index":537,"title":{},"body":{"components/CardComponent.html":{}}}],["src/lib/components/container/container.component.ts",{"_index":715,"title":{},"body":{"components/ContainerComponent.html":{},"coverage.html":{}}}],["src/lib/components/container/container.component.ts:10",{"_index":718,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/lib/components/form/button/button.component.ts",{"_index":433,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/button/button.component.ts:106",{"_index":502,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:112",{"_index":477,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:120",{"_index":497,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:128",{"_index":492,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:136",{"_index":494,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:144",{"_index":467,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:174",{"_index":486,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:195",{"_index":479,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:57",{"_index":496,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:65",{"_index":476,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:77",{"_index":473,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:89",{"_index":475,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:99",{"_index":471,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/checkbox/checkbox.component.ts",{"_index":546,"title":{},"body":{"components/CheckboxComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/checkbox/checkbox.component.ts:16",{"_index":560,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/lib/components/form/checkbox/checkbox.component.ts:19",{"_index":555,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/lib/components/form/checkbox/checkbox.component.ts:21",{"_index":557,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/lib/components/form/checkbox/checkbox.component.ts:23",{"_index":558,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/lib/components/form/checkbox/checkbox.component.ts:27",{"_index":559,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/lib/components/form/file",{"_index":894,"title":{},"body":{"components/FileInputComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/form.module.ts",{"_index":946,"title":{},"body":{"modules/FormModule.html":{}}}],["src/lib/components/form/group/base/selected",{"_index":1104,"title":{},"body":{"interfaces/SelectedOptions.html":{},"coverage.html":{}}}],["src/lib/components/form/group/base/selection",{"_index":1109,"title":{},"body":{"directives/SelectionOptionsDirective.html":{},"coverage.html":{}}}],["src/lib/components/form/group/checkbox/checkbox",{"_index":570,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/group/form",{"_index":930,"title":{},"body":{"components/FormGroupComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/group/radio",{"_index":1055,"title":{},"body":{"components/RadioButtonGroupComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/icon",{"_index":980,"title":{},"body":{"components/IconButtonComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/input/input.component.ts",{"_index":993,"title":{},"body":{"components/InputComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/input/input.component.ts:17",{"_index":1005,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/input/input.component.ts:20",{"_index":998,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/input/input.component.ts:23",{"_index":1000,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/input/input.component.ts:26",{"_index":999,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/input/input.component.ts:28",{"_index":1004,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/input/input.component.ts:29",{"_index":997,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/input/input.component.ts:42",{"_index":1002,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/input/input.component.ts:48",{"_index":1003,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/input/input.component.ts:56",{"_index":1001,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/radio",{"_index":1051,"title":{},"body":{"components/RadioButtonComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/select",{"_index":1086,"title":{},"body":{"components/SelectButtonComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/slider/slider.component.ts",{"_index":1123,"title":{},"body":{"components/SliderComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/slider/slider.component.ts:16",{"_index":1146,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:19",{"_index":1135,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:22",{"_index":1138,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:25",{"_index":1137,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:27",{"_index":1144,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:29",{"_index":1141,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:34",{"_index":1149,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:35",{"_index":1145,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:38",{"_index":1140,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:50",{"_index":1147,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:52",{"_index":1153,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:57",{"_index":1139,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:60",{"_index":1142,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:62",{"_index":1143,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/toggle",{"_index":1342,"title":{},"body":{"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["src/lib/components/grid/grid.component.ts",{"_index":966,"title":{},"body":{"components/GridComponent.html":{},"coverage.html":{}}}],["src/lib/components/grid/grid.component.ts:10",{"_index":975,"title":{},"body":{"components/GridComponent.html":{}}}],["src/lib/components/grid/grid.component.ts:13",{"_index":973,"title":{},"body":{"components/GridComponent.html":{}}}],["src/lib/components/grid/grid.component.ts:16",{"_index":972,"title":{},"body":{"components/GridComponent.html":{}}}],["src/lib/components/grid/grid.component.ts:18",{"_index":974,"title":{},"body":{"components/GridComponent.html":{}}}],["src/lib/components/icon/icon.component.ts",{"_index":990,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{}}}],["src/lib/components/icon/icon.component.ts:8",{"_index":992,"title":{},"body":{"components/IconComponent.html":{}}}],["src/lib/components/table/table.component.ts",{"_index":1302,"title":{},"body":{"components/TableComponent.html":{},"coverage.html":{}}}],["src/lib/components/table/table.component.ts:11",{"_index":1313,"title":{},"body":{"components/TableComponent.html":{}}}],["src/lib/components/table/table.component.ts:12",{"_index":1315,"title":{},"body":{"components/TableComponent.html":{}}}],["src/lib/components/table/table.component.ts:15",{"_index":1307,"title":{},"body":{"components/TableComponent.html":{}}}],["src/lib/components/table/table.component.ts:18",{"_index":1308,"title":{},"body":{"components/TableComponent.html":{}}}],["src/lib/components/table/table.component.ts:20",{"_index":1309,"title":{},"body":{"components/TableComponent.html":{}}}],["src/lib/components/table/table.component.ts:31",{"_index":1311,"title":{},"body":{"components/TableComponent.html":{}}}],["src/lib/models/alert/alert",{"_index":387,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{},"coverage.html":{}}}],["src/lib/models/alert/alert.ts",{"_index":6,"title":{},"body":{"interfaces/Alert.html":{},"coverage.html":{}}}],["src/lib/models/csv/csv.ts",{"_index":771,"title":{},"body":{"classes/Csv.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/lib/models/csv/csv.ts:10",{"_index":791,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:11",{"_index":786,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:14",{"_index":792,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:15",{"_index":787,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:18",{"_index":803,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:26",{"_index":798,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:34",{"_index":805,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:42",{"_index":807,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:53",{"_index":811,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:63",{"_index":813,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:69",{"_index":815,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:84",{"_index":818,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:9",{"_index":793,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/queue/queue.ts",{"_index":1010,"title":{},"body":{"classes/Queue.html":{},"coverage.html":{}}}],["src/lib/models/queue/queue.ts:13",{"_index":1025,"title":{},"body":{"classes/Queue.html":{}}}],["src/lib/models/queue/queue.ts:22",{"_index":1035,"title":{},"body":{"classes/Queue.html":{}}}],["src/lib/models/queue/queue.ts:39",{"_index":1027,"title":{},"body":{"classes/Queue.html":{}}}],["src/lib/models/queue/queue.ts:52",{"_index":1041,"title":{},"body":{"classes/Queue.html":{}}}],["src/lib/models/queue/queue.ts:63",{"_index":1038,"title":{},"body":{"classes/Queue.html":{}}}],["src/lib/models/table/column",{"_index":611,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"coverage.html":{}}}],["src/lib/models/table/table.interface.ts",{"_index":1326,"title":{},"body":{"interfaces/TableInterface.html":{},"coverage.html":{}}}],["src/lib/models/table/table.ts",{"_index":1211,"title":{},"body":{"classes/Table.html":{},"coverage.html":{}}}],["src/lib/models/table/table.ts:124",{"_index":1256,"title":{},"body":{"classes/Table.html":{}}}],["src/lib/models/table/table.ts:152",{"_index":1268,"title":{},"body":{"classes/Table.html":{}}}],["src/lib/models/table/table.ts:166",{"_index":1238,"title":{},"body":{"classes/Table.html":{}}}],["src/lib/models/table/table.ts:19",{"_index":1234,"title":{},"body":{"classes/Table.html":{}}}],["src/lib/models/table/table.ts:26",{"_index":1235,"title":{},"body":{"classes/Table.html":{}}}],["src/lib/models/table/table.ts:33",{"_index":1229,"title":{},"body":{"classes/Table.html":{}}}],["src/lib/models/table/table.ts:68",{"_index":1248,"title":{},"body":{"classes/Table.html":{}}}],["src/lib/models/table/table.ts:99",{"_index":1265,"title":{},"body":{"classes/Table.html":{}}}],["src/lib/sb",{"_index":1071,"title":{},"body":{"modules/SbElementModule.html":{}}}],["src/lib/services/alert/alert.service.ts",{"_index":252,"title":{},"body":{"injectables/AlertService.html":{},"coverage.html":{}}}],["src/lib/services/alert/alert.service.ts:100",{"_index":319,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:110",{"_index":321,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:120",{"_index":323,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:136",{"_index":311,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:160",{"_index":336,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:183",{"_index":325,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:51",{"_index":357,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:57",{"_index":353,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:63",{"_index":355,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:70",{"_index":330,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:80",{"_index":335,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:90",{"_index":333,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/theme/theme.service.ts",{"_index":1329,"title":{},"body":{"injectables/ThemeService.html":{},"coverage.html":{}}}],["src/lib/services/theme/theme.service.ts:22",{"_index":1339,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/lib/services/theme/theme.service.ts:29",{"_index":1337,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/lib/services/theme/theme.service.ts:36",{"_index":1338,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/test.ts",{"_index":1375,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start_delimiter",{"_index":776,"title":{},"body":{"classes/Csv.html":{}}}],["started",{"_index":1389,"title":{"index.html":{}},"body":{}}],["state",{"_index":472,"title":{},"body":{"components/ButtonComponent.html":{},"directives/EventManagerDirective.html":{}}}],["statemanagerdirective",{"_index":172,"title":{"directives/StateManagerDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["statements",{"_index":1351,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":469,"title":{},"body":{"components/ButtonComponent.html":{}}}],["static",{"_index":635,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/Csv.html":{},"components/FileInputComponent.html":{},"classes/Table.html":{}}}],["step",{"_index":301,"title":{},"body":{"injectables/AlertService.html":{},"components/SliderComponent.html":{}}}],["step(step",{"_index":1154,"title":{},"body":{"components/SliderComponent.html":{}}}],["step.tostring().split(\".\")[1].length",{"_index":1158,"title":{},"body":{"components/SliderComponent.html":{}}}],["steps",{"_index":1414,"title":{},"body":{"index.html":{}}}],["still",{"_index":341,"title":{},"body":{"injectables/AlertService.html":{}}}],["store",{"_index":1263,"title":{},"body":{"classes/Table.html":{}}}],["stored",{"_index":1221,"title":{},"body":{"classes/Table.html":{},"interfaces/TableInterface.html":{},"injectables/ThemeService.html":{}}}],["string",{"_index":21,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["string,columndata",{"_index":796,"title":{},"body":{"classes/Csv.html":{}}}],["string,index",{"_index":802,"title":{},"body":{"classes/Csv.html":{}}}],["string.split('\\n",{"_index":841,"title":{},"body":{"classes/Csv.html":{}}}],["style",{"_index":420,"title":{},"body":{"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"classes/Table.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["styling",{"_index":1217,"title":{},"body":{"classes/Table.html":{}}}],["subrootclass",{"_index":1304,"title":{},"body":{"components/TableComponent.html":{}}}],["subscibers",{"_index":327,"title":{},"body":{"injectables/AlertService.html":{}}}],["subscribe",{"_index":259,"title":{},"body":{"injectables/AlertService.html":{}}}],["subscribe(subscriber",{"_index":329,"title":{},"body":{"injectables/AlertService.html":{}}}],["subscribe]{@link",{"_index":359,"title":{},"body":{"injectables/AlertService.html":{}}}],["subscriber",{"_index":223,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["subscriber.alert(alert",{"_index":386,"title":{},"body":{"injectables/AlertService.html":{}}}],["subscriber.ts",{"_index":388,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{},"coverage.html":{}}}],["subscriber.ts:21",{"_index":398,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["subscribers",{"_index":290,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["subscribers]{@link",{"_index":370,"title":{},"body":{"injectables/AlertService.html":{}}}],["success",{"_index":308,"title":{},"body":{"injectables/AlertService.html":{}}}],["success(message",{"_index":332,"title":{},"body":{"injectables/AlertService.html":{}}}],["sum",{"_index":1165,"title":{},"body":{"components/SliderComponent.html":{}}}],["super",{"_index":766,"title":{},"body":{"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/IconComponent.html":{},"components/RadioButtonComponent.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["super(themeservice",{"_index":93,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["super.getclasses",{"_index":98,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{}}}],["supplied",{"_index":668,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["support",{"_index":1433,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":1398,"title":{},"body":{"index.html":{}}}],["sure",{"_index":708,"title":{},"body":{"interfaces/ColumnInformationInterface.html":{}}}],["surrounding",{"_index":622,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["svg",{"_index":1434,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":155,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["switch.component",{"_index":951,"title":{},"body":{"modules/FormModule.html":{}}}],["switch.component.html",{"_index":1344,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["switch.component.ts",{"_index":1343,"title":{},"body":{"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["switch.component.ts:16",{"_index":1347,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["switch.component.ts:18",{"_index":1346,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["switch.component.ts:22",{"_index":1345,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["switch/toggle",{"_index":950,"title":{},"body":{"modules/FormModule.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["syntax",{"_index":443,"title":{},"body":{"components/ButtonComponent.html":{}}}],["t",{"_index":1033,"title":{},"body":{"classes/Queue.html":{}}}],["table",{"_index":1210,"title":{"classes/Table.html":{}},"body":{"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":152,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["table(csv.data",{"_index":1286,"title":{},"body":{"classes/Table.html":{}}}],["table(rows",{"_index":1287,"title":{},"body":{"classes/Table.html":{}}}],["table(this.columnstorows(columns",{"_index":1296,"title":{},"body":{"classes/Table.html":{}}}],["table.component.html",{"_index":1303,"title":{},"body":{"components/TableComponent.html":{}}}],["table.interface",{"_index":1271,"title":{},"body":{"classes/Table.html":{}}}],["tablecomponent",{"_index":151,"title":{"components/TableComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tableinterface",{"_index":1222,"title":{"interfaces/TableInterface.html":{}},"body":{"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1379,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":268,"title":{},"body":{"injectables/AlertService.html":{},"index.html":{}}}],["tells",{"_index":289,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{}}}],["template",{"_index":31,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["templateurl",{"_index":44,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["terminates",{"_index":299,"title":{},"body":{"injectables/AlertService.html":{}}}],["test(firstelement",{"_index":848,"title":{},"body":{"classes/Csv.html":{}}}],["test(lastelement",{"_index":853,"title":{},"body":{"classes/Csv.html":{}}}],["testapp",{"_index":1427,"title":{},"body":{"index.html":{}}}],["text",{"_index":457,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputComponent.html":{}}}],["text/csv",{"_index":830,"title":{},"body":{"classes/Csv.html":{}}}],["tha",{"_index":1219,"title":{},"body":{"classes/Table.html":{}}}],["that's",{"_index":1406,"title":{},"body":{"index.html":{}}}],["theme",{"_index":87,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["themecolorinputdirective",{"_index":173,"title":{"directives/ThemeColorInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["themeinputdirective",{"_index":174,"title":{"directives/ThemeInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["themes",{"_index":1331,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themeservice",{"_index":60,"title":{"injectables/ThemeService.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["themeservice.get",{"_index":768,"title":{},"body":{"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["theming",{"_index":1397,"title":{},"body":{"index.html":{}}}],["therefore",{"_index":1030,"title":{},"body":{"classes/Queue.html":{}}}],["this._disabled",{"_index":519,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{},"directives/StateManagerDirective.html":{}}}],["this._extraclasses",{"_index":601,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["this._extraclasses.foreach(classname",{"_index":606,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["this._focused",{"_index":1207,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["this._options",{"_index":1121,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["this._options.foreach((option",{"_index":1122,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["this._pristine",{"_index":1205,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["this._step",{"_index":1155,"title":{},"body":{"components/SliderComponent.html":{}}}],["this._theme",{"_index":1340,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this._touched",{"_index":1203,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["this.alert(message",{"_index":374,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.alertobject",{"_index":231,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.alertobject.message",{"_index":246,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.alertqueue.dequeue",{"_index":381,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.alertqueue.enqueue",{"_index":375,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.alertqueue.isempty",{"_index":379,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.alertservice.subscribe(this",{"_index":225,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.alignment",{"_index":680,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["this.appears",{"_index":227,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.blur.emit",{"_index":887,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.change.emit(value",{"_index":892,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.checkfilesize(file",{"_index":921,"title":{},"body":{"components/FileInputComponent.html":{}}}],["this.color",{"_index":234,"title":{},"body":{"components/AlertComponent.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/ThemeColorInputDirective.html":{}}}],["this.columninformation",{"_index":1276,"title":{},"body":{"classes/Table.html":{}}}],["this.data",{"_index":1275,"title":{},"body":{"classes/Table.html":{}}}],["this.data.map(row",{"_index":827,"title":{},"body":{"classes/Csv.html":{}}}],["this.decimalplaces",{"_index":1157,"title":{},"body":{"components/SliderComponent.html":{}}}],["this.defaults.alignment",{"_index":695,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["this.defaults.color",{"_index":691,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["this.defaults.name",{"_index":687,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["this.delimiter",{"_index":858,"title":{},"body":{"classes/Csv.html":{}}}],["this.dim",{"_index":977,"title":{},"body":{"components/GridComponent.html":{}}}],["this.disabled",{"_index":527,"title":{},"body":{"components/ButtonComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/StateManagerDirective.html":{}}}],["this.emitchange(value",{"_index":747,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["this.end_delimiter.source",{"_index":857,"title":{},"body":{"classes/Csv.html":{}}}],["this.flipped",{"_index":94,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["this.focus.emit",{"_index":889,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.focused",{"_index":1008,"title":{},"body":{"components/InputComponent.html":{},"directives/StateManagerDirective.html":{}}}],["this.gap",{"_index":979,"title":{},"body":{"components/GridComponent.html":{}}}],["this.getcolumndata(index",{"_index":826,"title":{},"body":{"classes/Csv.html":{}}}],["this.groupalign",{"_index":940,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["this.grouptitle",{"_index":938,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["this.header.foreach((columnname",{"_index":823,"title":{},"body":{"classes/Csv.html":{}}}],["this.hides",{"_index":229,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.hover",{"_index":542,"title":{},"body":{"components/CardComponent.html":{}}}],["this.innervalue",{"_index":745,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["this.isbusy",{"_index":380,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.isempty",{"_index":1046,"title":{},"body":{"classes/Queue.html":{}}}],["this.ispill",{"_index":524,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.isplain",{"_index":525,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.isround",{"_index":523,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.labelposition",{"_index":565,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadioButtonComponent.html":{}}}],["this.limit",{"_index":926,"title":{},"body":{"components/FileInputComponent.html":{}}}],["this.mergevalues(overwrite.alignment",{"_index":693,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["this.mergevalues(overwrite.color",{"_index":689,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["this.mergevalues(overwrite.name",{"_index":685,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["this.message",{"_index":922,"title":{},"body":{"components/FileInputComponent.html":{}}}],["this.min",{"_index":1166,"title":{},"body":{"components/SliderComponent.html":{}}}],["this.min)/5/this.step)*this.step",{"_index":1164,"title":{},"body":{"components/SliderComponent.html":{}}}],["this.name",{"_index":677,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["this.onchangecallback",{"_index":893,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.onchangecallback(value",{"_index":891,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.ontouchedcallback",{"_index":886,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.options.foreach((option",{"_index":1063,"title":{},"body":{"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{}}}],["this.parsestring(content",{"_index":834,"title":{},"body":{"classes/Csv.html":{}}}],["this.pill",{"_index":95,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["this.plain",{"_index":96,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["this.pristine",{"_index":1209,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["this.queue.length",{"_index":1049,"title":{},"body":{"classes/Queue.html":{}}}],["this.queue.push(value",{"_index":1044,"title":{},"body":{"classes/Queue.html":{}}}],["this.queue.shift",{"_index":1047,"title":{},"body":{"classes/Queue.html":{}}}],["this.resetalert",{"_index":230,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.rootclass",{"_index":609,"title":{},"body":{"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/IconComponent.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["this.round",{"_index":508,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{}}}],["this.rows(string",{"_index":835,"title":{},"body":{"classes/Csv.html":{}}}],["this.selectedoptions",{"_index":589,"title":{},"body":{"components/CheckboxGroupComponent.html":{}}}],["this.selectedoptions[option",{"_index":1064,"title":{},"body":{"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{}}}],["this.separation",{"_index":1317,"title":{},"body":{"components/TableComponent.html":{}}}],["this.setalert(alert",{"_index":226,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.setfocusedstate(false",{"_index":884,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.setfocusedstate(true",{"_index":888,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.setinnervalue(value",{"_index":744,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["this.setpristinestate(false",{"_index":890,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.settouchedstate(true",{"_index":885,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.shadow",{"_index":543,"title":{},"body":{"components/CardComponent.html":{}}}],["this.showalert(alert).then",{"_index":382,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.showicon",{"_index":103,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["this.showoptions",{"_index":1096,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["this.size",{"_index":232,"title":{},"body":{"components/AlertComponent.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{}}}],["this.snappoints",{"_index":1161,"title":{},"body":{"components/SliderComponent.html":{}}}],["this.start_delimiter.source",{"_index":856,"title":{},"body":{"classes/Csv.html":{}}}],["this.subscribers.push(subscriber",{"_index":372,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.table.columninformation[columnindex",{"_index":1320,"title":{},"body":{"components/TableComponent.html":{}}}],["this.theme",{"_index":767,"title":{},"body":{"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["this.toggle",{"_index":1097,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["this.touched",{"_index":1208,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["this.updatevalues",{"_index":746,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["this.value",{"_index":563,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["this.wait(this.appeartime",{"_index":239,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.wait(this.hidetime",{"_index":241,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.wait(this.waittime",{"_index":240,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.waits",{"_index":228,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.work",{"_index":376,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.writevalueinnerchange(file",{"_index":924,"title":{},"body":{"components/FileInputComponent.html":{}}}],["this.writevalueinnerchange(newoption",{"_index":1065,"title":{},"body":{"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{}}}],["this.writevalueinnerchange(undefined",{"_index":925,"title":{},"body":{"components/FileInputComponent.html":{}}}],["three",{"_index":672,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["throw",{"_index":509,"title":{},"body":{"components/ButtonComponent.html":{}}}],["throwing",{"_index":1032,"title":{},"body":{"classes/Queue.html":{}}}],["time",{"_index":210,"title":{},"body":{"components/AlertComponent.html":{}}}],["times",{"_index":278,"title":{},"body":{"injectables/AlertService.html":{}}}],["toggle",{"_index":154,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["toggleswitchcomponent",{"_index":153,"title":{"components/ToggleSwitchComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["top",{"_index":1009,"title":{},"body":{"components/InputComponent.html":{}}}],["touched",{"_index":757,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/StateManagerDirective.html":{}}}],["touched(istouched",{"_index":1202,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["transform",{"_index":1245,"title":{},"body":{"classes/Table.html":{}}}],["transforms",{"_index":1239,"title":{},"body":{"classes/Table.html":{}}}],["tree",{"_index":33,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["true",{"_index":71,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/ToggleSwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1381,"title":{},"body":{"dependencies.html":{}}}],["ture",{"_index":448,"title":{},"body":{"components/ButtonComponent.html":{}}}],["two",{"_index":438,"title":{},"body":{"components/ButtonComponent.html":{},"classes/ColumnInformation.html":{},"injectables/ThemeService.html":{}}}],["type",{"_index":22,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":1216,"title":{},"body":{"classes/Table.html":{}}}],["unchecked",{"_index":568,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadioButtonComponent.html":{}}}],["undefinded",{"_index":1022,"title":{},"body":{"classes/Queue.html":{}}}],["undefined",{"_index":663,"title":{},"body":{"classes/ColumnInformation.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/EventManagerDirective.html":{},"classes/Queue.html":{}}}],["unset",{"_index":349,"title":{},"body":{"injectables/AlertService.html":{}}}],["untouched",{"_index":758,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["up",{"_index":1243,"title":{},"body":{"classes/Table.html":{}}}],["update",{"_index":1410,"title":{},"body":{"index.html":{}}}],["updated",{"_index":653,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["updatevalues",{"_index":575,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{}}}],["upon",{"_index":401,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["usage",{"_index":456,"title":{},"body":{"components/ButtonComponent.html":{}}}],["use",{"_index":511,"title":{},"body":{"components/ButtonComponent.html":{},"index.html":{}}}],["use/show",{"_index":15,"title":{},"body":{"interfaces/Alert.html":{}}}],["used",{"_index":9,"title":{},"body":{"interfaces/Alert.html":{},"injectables/AlertService.html":{},"interfaces/ColumnInformationInterface.html":{}}}],["usedelimiter",{"_index":784,"title":{},"body":{"classes/Csv.html":{}}}],["usedelimiter(delimiter",{"_index":817,"title":{},"body":{"classes/Csv.html":{}}}],["useexisting",{"_index":549,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["user",{"_index":624,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["uses",{"_index":648,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["value",{"_index":68,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value(value",{"_index":743,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["values",{"_index":649,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["valuesuffix",{"_index":1133,"title":{},"body":{"components/SliderComponent.html":{}}}],["valuetype",{"_index":727,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{},"directives/EventManagerDirective.html":{}}}],["var",{"_index":116,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["variable",{"_index":1376,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1440,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":617,"title":{},"body":{"classes/ColumnInformation.html":{},"index.html":{}}}],["via",{"_index":284,"title":{},"body":{"injectables/AlertService.html":{},"classes/ColumnInformation.html":{},"classes/Table.html":{}}}],["void",{"_index":317,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["wait",{"_index":188,"title":{},"body":{"components/AlertComponent.html":{}}}],["wait(time",{"_index":208,"title":{},"body":{"components/AlertComponent.html":{}}}],["waits",{"_index":189,"title":{},"body":{"components/AlertComponent.html":{}}}],["waittime",{"_index":190,"title":{},"body":{"components/AlertComponent.html":{}}}],["warn",{"_index":309,"title":{},"body":{"injectables/AlertService.html":{}}}],["warn(message",{"_index":334,"title":{},"body":{"injectables/AlertService.html":{}}}],["way",{"_index":1402,"title":{},"body":{"index.html":{}}}],["well",{"_index":619,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/Queue.html":{},"classes/Table.html":{}}}],["while(sum",{"_index":1167,"title":{},"body":{"components/SliderComponent.html":{}}}],["whishes",{"_index":256,"title":{},"body":{"injectables/AlertService.html":{}}}],["without",{"_index":630,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/Table.html":{}}}],["work",{"_index":13,"title":{},"body":{"interfaces/Alert.html":{},"injectables/AlertService.html":{}}}],["work]{@link",{"_index":363,"title":{},"body":{"injectables/AlertService.html":{}}}],["working",{"_index":339,"title":{},"body":{"injectables/AlertService.html":{}}}],["works",{"_index":337,"title":{},"body":{"injectables/AlertService.html":{}}}],["workspace",{"_index":1411,"title":{},"body":{"index.html":{}}}],["write",{"_index":652,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["writevalue",{"_index":724,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["writevalue(value",{"_index":732,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["writevalueinnerchange",{"_index":725,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["writevalueinnerchange(value",{"_index":734,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["writing",{"_index":742,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["written",{"_index":651,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["xe001",{"_index":107,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["xe2c6",{"_index":929,"title":{},"body":{"components/FileInputComponent.html":{}}}],["xe5cf",{"_index":1103,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["xe876",{"_index":569,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["xe87e",{"_index":111,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["xe88f",{"_index":109,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["xe92d",{"_index":108,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["xe994",{"_index":110,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["xf1df",{"_index":106,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["yes",{"_index":809,"title":{},"body":{"classes/Csv.html":{},"classes/Table.html":{}}}],["yourself",{"_index":1423,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":414,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Alert.html":{"url":"interfaces/Alert.html","title":"interface - Alert","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Alert\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/alert/alert.ts\n        \n\n            \n                Description\n            \n            \n                This interface describes an alert.\nThe interface is used by the AlertService to create alerts and work\nwith the AlertServiceSubscriber which use/show the alerts.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        color\n                                \n                                \n                                        message\n                                \n                                \n                                        size\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The color of the alert.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The message of the alert.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The size of the alert.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Alert {\n  /**\n   * The message of the alert.\n   */\n  message: string;\n\n  /**\n   * The size of the alert.\n   */\n  size: string;\n\n  /**\n   * The color of the alert.\n   */\n  color: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlertBoxComponent.html":{"url":"components/AlertBoxComponent.html","title":"component - AlertBoxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlertBoxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/alert-box/alert-box.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SizeThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-alert-box\n            \n\n\n\n\n            \n                templateUrl\n                ./alert-box.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                flipped\n                            \n                            \n                                    Private\n                                pill\n                            \n                            \n                                    Private\n                                plain\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                customIcon\n                            \n                            \n                                showArrow\n                            \n                            \n                                showIcon\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(flipped: any, pill: any, plain: any, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/alert-box/alert-box.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        flipped\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pill\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plain\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        customIcon\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/alert-box/alert-box.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showArrow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/alert-box/alert-box.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showIcon\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/alert-box/alert-box.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert-box/alert-box.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            flipped\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert-box/alert-box.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pill\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert-box/alert-box.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            plain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert-box/alert-box.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-alert-box'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert-box/alert-box.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Attribute, Component, Input, Optional } from '@angular/core';\nimport { ThemeService } from '../../services/theme/theme.service';\nimport { SizeThemeColorInputDirective } from '../base/style-input/size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-alert-box',\n  templateUrl: './alert-box.component.html'\n})\nexport class AlertBoxComponent extends SizeThemeColorInputDirective {\n\n  public rootClass: string = 'sb-el-alert-box';\n\n  @Input()\n  public showArrow: boolean = true;\n\n  @Input()\n  public showIcon: boolean = true;\n\n  @Input()\n  public customIcon: boolean = false;\n\n  public flipped: boolean = false;\n  private pill: boolean = false;\n  private plain: boolean = false;\n\n  constructor(\n    @Optional() @Attribute('flipped') flipped: any,\n    @Optional() @Attribute('pill') pill: any,\n    @Optional() @Attribute('plain') plain: any,\n    themeService: ThemeService\n  ) {\n    super(themeService);\n    if (flipped == '') this.flipped = true;\n    if (pill == '') this.pill = true;\n    if (plain == '') this.plain = true;\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.flipped ? 'is-flipped' : '');\n    classes.push(this.pill ? 'is-pill' : '');\n    classes.push(this.plain ? 'is-plain' : '');\n    classes.push(!this.showArrow && !this.showIcon ? 'is-center' : '');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n      &#xf1df;\n    \n    \n  \n  \n    \n    \n      &#xe001;\n      &#xe92d;\n      &#xe88f;\n      &#xe994;\n      &#xe87e;\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'AlertBoxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlertComponent.html":{"url":"components/AlertComponent.html","title":"component - AlertComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlertComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/alert/alert.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SizeThemeColorInputDirective\n    \n\n    \n        Implements\n    \n    \n                    AlertServiceSubscriber\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-alert\n            \n\n\n\n\n            \n                templateUrl\n                ./alert.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alertObject\n                            \n                            \n                                    Private\n                                appearTime\n                            \n                            \n                                    Private\n                                hideTime\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                alert\n                            \n                            \n                                    Private\n                                    Async\n                                appears\n                            \n                            \n                                    Public\n                                getClasses\n                            \n                            \n                                    Private\n                                    Async\n                                hides\n                            \n                            \n                                    Private\n                                    Async\n                                resetAlert\n                            \n                            \n                                    Private\n                                    Async\n                                setAlert\n                            \n                            \n                                    Private\n                                    Async\n                                wait\n                            \n                            \n                                    Private\n                                    Async\n                                waits\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                showArrow\n                            \n                            \n                                showIcon\n                            \n                            \n                                waitTime\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    message\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertService: AlertService, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/alert/alert.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        showArrow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/alert/alert.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showIcon\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/alert/alert.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        waitTime\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2000\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/alert/alert.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            alert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    alert(alert: Alert)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert/alert.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alert\n                                    \n                                                Alert\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            appears\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    appears()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert/alert.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert/alert.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            hides\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hides()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert/alert.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            resetAlert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetAlert()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert/alert.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            setAlert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setAlert(alert: Alert)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert/alert.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alert\n                                    \n                                                Alert\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            wait\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    wait(time: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert/alert.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            waits\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    waits()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert/alert.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alertObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Alert | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert/alert.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            appearTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 300\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert/alert.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hideTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1000\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert/alert.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-alert'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert/alert.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert/alert.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n\n                \n                    \n                        getmessage()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/alert/alert.component.ts:77\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Alert } from '../../models/alert/alert';\nimport { AlertServiceSubscriber } from '../../models/alert/alert-service-subscriber';\nimport { AlertService } from '../../services/alert/alert.service';\nimport { ThemeService } from '../../services/theme/theme.service';\nimport { SizeThemeColorInputDirective } from '../base/style-input/size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-alert',\n  templateUrl: './alert.component.html'\n})\nexport class AlertComponent extends SizeThemeColorInputDirective implements AlertServiceSubscriber {\n\n  public rootClass: string = 'sb-el-alert';\n\n  @Input()\n  public showArrow: boolean = true;\n\n  @Input()\n  public showIcon: boolean = true;\n\n  public alertObject: Alert | null = null;\n  public show: boolean = false;\n  private appearTime: number = 300;\n  @Input()\n  public waitTime: number = 2000;\n  private hideTime: number = 1000;\n\n  constructor(\n    private alertService: AlertService,\n    themeService: ThemeService\n  ) {\n    super(themeService);\n    this.alertService.subscribe(this);\n  }\n\n  public async alert(alert: Alert): Promise {\n    return this.setAlert(alert)\n    .then(() => this.appears())\n    .then(() => this.waits())\n    .then(() => this.hides())\n    .then(() => this.resetAlert())\n  }\n\n  private async setAlert(alert: Alert): Promise {\n    this.alertObject = alert;\n    this.size = alert.size;\n    this.color = alert.color;\n    return Promise.resolve();\n  }\n\n  private async appears(): Promise {\n    await Promise.resolve(this.show = true);\n    return await this.wait(this.appearTime);\n  }\n\n  private async waits(): Promise {\n    return this.wait(this.waitTime);\n  }\n\n  private async hides(): Promise {\n    await Promise.resolve(this.show = false);\n    return await this.wait(this.hideTime);\n  }\n\n  private async wait(time: number): Promise {\n    return new Promise(resolve => {\n      setTimeout(() => resolve(), time);\n    });\n  }\n\n  private async resetAlert(): Promise {\n    this.alertObject = null;\n    return Promise.resolve();\n  }\n\n  get message(): string {\n    if (this.alertObject) return this.alertObject.message;\n    else return '';\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.show ? 'is-active' : 'is-inactive');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      {{ message }}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ message }}      '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'AlertComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AlertService.html":{"url":"injectables/AlertService.html","title":"injectable - AlertService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AlertService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/alert/alert.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides a global service to display alerts.\nThe alert service can be used by any component which either whishes to show\nor to create an alert to be shown.\nIf a component wants to show alerts, the\ncomponent has to call subscribe with the component as the\nparameter. The component also needs to implement the\nAlertServiceSubscriber interface so the service can inform the\nsubscriber about the incoming alerts.\nIf a component wants to create an alert, the service provides different\nmethods which have predefined colors. The different methods take a message\nwhich is a string and an optional size parameter, which is also a\nstring. The methods then passes the alert to the\nAlertServiceSubscriber with a predefinded color. There is also a\nmethod, which lets you customize everything: alert. All these\nmethods then add the created alert to the alertQueue,\nand then call work. This method times the alerts and then\ninforms the subscriber when a alert needs to be shown (when an alert is\nready to be shown).\nThe lifecycle of an Alert inside the service:\n\nThe Alert gets created via a create call (like\nalert).\nThe Alert gets placed into the alertQueue.\nThe work method then removes an Alert out of the\nqueue and tells the subscribers to show the removed Alert. The\nAlert gets collected by the garbage collector after the Alert\nhas been shown.\nIf all subscribers have finished showing the Alert, the work\nmethod checks if the alertQueue is empty or not. If the\nqueue is empty, the work method terminates. If not, go to step\n3 again.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alertQueue\n                            \n                            \n                                    Private\n                                isBusy\n                            \n                            \n                                    Private\n                                subscribers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alert\n                            \n                            \n                                    Public\n                                inform\n                            \n                            \n                                    Public\n                                primary\n                            \n                            \n                                    Public\n                                secondary\n                            \n                            \n                                    Private\n                                    Async\n                                showAlert\n                            \n                            \n                                    Public\n                                subscribe\n                            \n                            \n                                    Public\n                                success\n                            \n                            \n                                    Public\n                                warn\n                            \n                            \n                                    Private\n                                    Async\n                                work\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            alert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    alert(message: string, size: string, color: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:136\n                \n            \n\n\n            \n                \n                    Creates and shows an Alert.\nThe message, size and color of the Alert can be specified as\nparameters. The Alert gets created with these parameters and\nplaced into the alertQueue. After that, the\nwork method gets called.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The message of the alert\n\n                                    \n                                \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'd'\n                                    \n\n                                    \n                                        The size of the alert\n\n                                    \n                                \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'warn'\n                                    \n\n                                    \n                                        The color of the alert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            inform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    inform(message: string, size: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:100\n                \n            \n\n\n            \n                \n                    Creates and shows an Alert with color info.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The message of the alert\n\n                                    \n                                \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'd'\n                                    \n\n                                    \n                                        The size of the alert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            primary\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    primary(message: string, size: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:110\n                \n            \n\n\n            \n                \n                    Creates and shows an Alert with color primary.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The message of the alert\n\n                                    \n                                \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'd'\n                                    \n\n                                    \n                                        The size of the alert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            secondary\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    secondary(message: string, size: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:120\n                \n            \n\n\n            \n                \n                    Creates and shows an Alert with color secondary.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The message of the alert\n\n                                    \n                                \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'd'\n                                    \n\n                                    \n                                        The size of the alert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            showAlert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showAlert(alert: Alert)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:183\n                \n            \n\n\n            \n                \n                    Notifies all subscibers to show an Alert.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    alert\n                                    \n                                                Alert\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Alert to show\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise, which is resolved when all subscribers\nhave finished showing the alert\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            subscribe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribe(subscriber: AlertServiceSubscriber)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:70\n                \n            \n\n\n            \n                \n                    Adds a new subscriber into subscribers.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    subscriber\n                                    \n                                                AlertServiceSubscriber\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new subscriber\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            success\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    success(message: string, size: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:90\n                \n            \n\n\n            \n                \n                    Creates and shows an Alert with color success.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The message of the alert\n\n                                    \n                                \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'd'\n                                    \n\n                                    \n                                        The size of the alert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    warn(message: string, size: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:80\n                \n            \n\n\n            \n                \n                    Creates and shows an Alert with color warn.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The message of the alert\n\n                                    \n                                \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'd'\n                                    \n\n                                    \n                                        The size of the alert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            work\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    work()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:160\n                \n            \n\n\n            \n                \n                    Works on the alertQueue.\nIf the service is not busy working on the alertQueue\nand the alertQueue is not empty, meaning that there\nare still Alerts to process, the method will set the\nisBusy flag, remove the next Alert from the queue\nand show the Alert by calling showAlert.\nOnce the show call has finished, the isBusy flag is unset\nand the work method gets called again.\nIf a current work call is still in progress, meaning the\nisBusy flag is set, a new work call will do nothing.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            alertQueue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Queue\n\n                        \n                    \n                    \n                        \n                            Default value : new Queue()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/alert/alert.service.ts:57\n                            \n                        \n\n                \n                    \n                        The queue of all Alerts which need to be shown.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isBusy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/alert/alert.service.ts:63\n                            \n                        \n\n                \n                    \n                        Flag to inidcate if the service is busy working on the\nalertQueue or not.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscribers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/alert/alert.service.ts:51\n                            \n                        \n\n                \n                    \n                        An array of all subscribers.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Alert } from '../../models/alert/alert';\nimport { AlertServiceSubscriber } from '../../models/alert/alert-service-subscriber';\nimport { Queue } from '../../models/queue/queue';\n\n/**\n * Provides a global service to display alerts.\n *\n * The alert service can be used by any component which either whishes to show\n * or to create an alert to be shown.\n *\n * If a component wants to show alerts, the\n * component has to call [subscribe]{@link #subscribe} with the component as the\n * parameter. The component also needs to implement the\n * {@link AlertServiceSubscriber} interface so the service can inform the\n * subscriber about the incoming alerts.\n *\n * If a component wants to create an alert, the service provides different\n * methods which have predefined colors. The different methods take a `message`\n * which is a `string` and an optional `size` parameter, which is also a\n * `string`. The methods then passes the alert to the\n * {@link AlertServiceSubscriber} with a predefinded color. There is also a\n * method, which lets you customize everything: [alert]{@link #alert}. All these\n * methods then add the created alert to the [alertQueue]{@link #alertQueue},\n * and then call [work]{@link #work}. This method times the alerts and then\n * informs the subscriber when a alert needs to be shown (when an alert is\n * ready to be shown).\n *\n * The lifecycle of an {@link Alert} inside the service:\n * 1. The {@link Alert} gets created via a create call (like\n * [alert]{@link #alert}).\n * 2. The {@link Alert} gets placed into the [alertQueue]{@link #alertQueue}.\n * 3. The [work]{@link #work} method then removes an {@link Alert} out of the\n * queue and tells the subscribers to show the removed {@link Alert}. The\n * {@link Alert} gets collected by the garbage collector after the {@link Alert}\n * has been shown.\n * 4. If all subscribers have finished showing the {@link Alert}, the work\n * method checks if the [alertQueue]{@link #alertQueue} is empty or not. If the\n * queue is empty, the [work]{@link #work} method terminates. If not, go to step\n * 3 again.\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  /**\n   * An array of all subscribers.\n   */\n  private subscribers: Array\n    = new Array();\n\n  /**\n   * The queue of all [Alerts]{@link Alert} which need to be shown.\n   */\n  private alertQueue: Queue = new Queue();\n\n  /**\n   * Flag to inidcate if the service is busy working on the\n   * [alertQueue]{@link #alertQueue} or not.\n   */\n  private isBusy: boolean = false;\n\n  /**\n   * Adds a new subscriber into [subscribers]{@link #subscribers}.\n   *\n   * @param{AlertServiceSubscriber} subscriber The new subscriber\n   */\n  public subscribe(subscriber: AlertServiceSubscriber): void {\n    this.subscribers.push(subscriber);\n  }\n\n  /**\n   * Creates and shows an {@link Alert} with color `warn`.\n   *\n   * @param{string} message The message of the alert\n   * @param{string} size The size of the alert\n   */\n  public warn(message: string, size = 'd'): void {\n    this.alert(message, size, 'warn');\n  }\n\n  /**\n   * Creates and shows an {@link Alert} with color `success`.\n   *\n   * @param{string} message The message of the alert\n   * @param{string} size The size of the alert\n   */\n  public success(message: string, size = 'd'): void {\n    this.alert(message, size, 'success');\n  }\n\n  /**\n   * Creates and shows an {@link Alert} with color `info`.\n   *\n   * @param{string} message The message of the alert\n   * @param{string} size The size of the alert\n   */\n  public inform(message: string, size = 'd'): void {\n    this.alert(message, size, 'info');\n  }\n\n  /**\n   * Creates and shows an {@link Alert} with color `primary`.\n   *\n   * @param{string} message The message of the alert\n   * @param{string} size The size of the alert\n   */\n  public primary(message: string, size = 'd'): void {\n    this.alert(message, size, 'primary');\n  }\n\n  /**\n   * Creates and shows an {@link Alert} with color `secondary`.\n   *\n   * @param{string} message The message of the alert\n   * @param{string} size The size of the alert\n   */\n  public secondary(message: string, size = 'd'): void {\n    this.alert(message, size, 'secondary');\n  }\n\n  /**\n   * Creates and shows an {@link Alert}.\n   *\n   * The `message`, `size` and `color` of the {@link Alert} can be specified as\n   * parameters. The {@link Alert} gets created with these parameters and\n   * placed into the [alertQueue]{@link #alertQueue}. After that, the\n   * [work]{@link #work} method gets called.\n   *\n   * @param{string} message The message of the alert\n   * @param{string} size The size of the alert\n   * @param{string} color The color of the alert\n   */\n  public alert(message: string, size = 'd', color = 'warn'): void {\n    this.alertQueue.enqueue({\n      message,\n      size,\n      color\n    });\n    this.work();\n  }\n\n  /**\n   * Works on the [alertQueue]{@link #alertQueue}.\n   *\n   * If the service is not busy working on the [alertQueue]{@link #alertQueue}\n   * and the [alertQueue]{@link #alertQueue} is not empty, meaning that there\n   * are still [Alerts]{@link Alert} to process, the method will set the\n   * [isBusy]{@link #isBusy} flag, remove the next {@link Alert} from the queue\n   * and show the {@link Alert} by calling [showAlert]{@link #showAlert}.\n   *\n   * Once the show call has finished, the [isBusy]{@link #isBusy} flag is unset\n   * and the [work]{@link #work} method gets called again.\n   *\n   * If a current work call is still in progress, meaning the\n   * [isBusy]{@link #isBusy} flag is set, a new work call will do nothing.\n   */\n  private async work(): Promise {\n    if (!this.alertQueue.isEmpty() && !this.isBusy) {\n      this.isBusy = true;\n      let alert = this.alertQueue.dequeue();\n      if (alert) {\n        this.showAlert(alert).then(() => {\n          this.isBusy = false;\n          this.work();\n        });\n      } else {\n        this.isBusy = false;\n      }\n    }\n  }\n\n\n  /**\n   * Notifies all subscibers to show an {@link Alert}.\n   *\n   * @param{Alert} alert The `Alert` to show\n   * @returns{Promise} A promise, which is resolved when all subscribers\n   * have finished showing the `alert`\n   */\n  private async showAlert(alert: Alert): Promise {\n    return Promise.all(this.subscribers.map(subscriber =>\n      subscriber.alert(alert)\n    ));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AlertServiceSubscriber.html":{"url":"interfaces/AlertServiceSubscriber.html","title":"interface - AlertServiceSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AlertServiceSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/alert/alert-service-subscriber.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a subscriber of the AlertService. The Interface has to\nbe implemented by a subscriber. The subscriber then has to register itself to\nthe AlertService in order to receive alerts. The AlertService\nthen calls the alert method of the subscriber with the given\nAlert. The subscriber is then free to do anything with the given\nAlert.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    alert\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alert\n                        \n                        \n                    \n                \n            \n            \n                \nalert(alert: Alert)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/alert/alert-service-subscriber.ts:21\n                \n            \n\n\n            \n                \n                    This method is called, when the subscriber has registered itself by the\nAlertService. When an Alert is created, the\nAlertService calles the subscribers alert method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    alert\n                                    \n                                                Alert\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The alert to show.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The subscriber has to return a Promise\nwhich will resolve upon finishing the process of showing the alert.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Alert } from './alert';\n\n/**\n * Interface for a subscriber of the {@link AlertService}. The Interface has to\n * be implemented by a subscriber. The subscriber then has to register itself to\n * the {@link AlertService} in order to receive alerts. The {@link AlertService}\n * then calls the [alert]{@link #alert} method of the subscriber with the given\n * {@link Alert}. The subscriber is then free to do anything with the given\n * {@link Alert}.\n */\nexport interface AlertServiceSubscriber {\n  /**\n   * This method is called, when the subscriber has registered itself by the\n   * {@link AlertService}. When an {@link Alert} is created, the\n   * {@link AlertService} calles the subscribers [alert]{@link #alert} method.\n   *\n   * @param{Alert} alert The alert to show.\n   * @returns{Promise} The subscriber has to return a `Promise`\n   * which will resolve upon finishing the process of showing the alert.\n   */\n  alert(alert: Alert): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BaseModule.html":{"url":"modules/BaseModule.html","title":"module - BaseModule","body":"\n                   \n\n\n\n\n    Modules\n    BaseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BaseModule\n\n\n\ncluster_BaseModule_exports\n\n\n\ncluster_BaseModule_declarations\n\n\n\n\nClassNameInputDirective\n\nClassNameInputDirective\n\n\n\nBaseModule\n\nBaseModule\n\nBaseModule -->\n\nClassNameInputDirective->BaseModule\n\n\n\n\n\nColorInputDirective\n\nColorInputDirective\n\nBaseModule -->\n\nColorInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorBaseDirective\n\nControlValueAccessorBaseDirective\n\nBaseModule -->\n\nControlValueAccessorBaseDirective->BaseModule\n\n\n\n\n\nControlValueAccessorClassNameInputDirective\n\nControlValueAccessorClassNameInputDirective\n\nBaseModule -->\n\nControlValueAccessorClassNameInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorColorInputDirective\n\nControlValueAccessorColorInputDirective\n\nBaseModule -->\n\nControlValueAccessorColorInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorSizeColorInputDirective\n\nControlValueAccessorSizeColorInputDirective\n\nBaseModule -->\n\nControlValueAccessorSizeColorInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorSizeInputDirective\n\nControlValueAccessorSizeInputDirective\n\nBaseModule -->\n\nControlValueAccessorSizeInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorSizeThemeColorInputDirective\n\nControlValueAccessorSizeThemeColorInputDirective\n\nBaseModule -->\n\nControlValueAccessorSizeThemeColorInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorThemeColorInputDirective\n\nControlValueAccessorThemeColorInputDirective\n\nBaseModule -->\n\nControlValueAccessorThemeColorInputDirective->BaseModule\n\n\n\n\n\nEventManagerDirective\n\nEventManagerDirective\n\nBaseModule -->\n\nEventManagerDirective->BaseModule\n\n\n\n\n\nSizeColorInputDirective\n\nSizeColorInputDirective\n\nBaseModule -->\n\nSizeColorInputDirective->BaseModule\n\n\n\n\n\nSizeInputDirective\n\nSizeInputDirective\n\nBaseModule -->\n\nSizeInputDirective->BaseModule\n\n\n\n\n\nSizeThemeColorInputDirective\n\nSizeThemeColorInputDirective\n\nBaseModule -->\n\nSizeThemeColorInputDirective->BaseModule\n\n\n\n\n\nSizeThemeInputDirective\n\nSizeThemeInputDirective\n\nBaseModule -->\n\nSizeThemeInputDirective->BaseModule\n\n\n\n\n\nStateManagerDirective\n\nStateManagerDirective\n\nBaseModule -->\n\nStateManagerDirective->BaseModule\n\n\n\n\n\nThemeColorInputDirective\n\nThemeColorInputDirective\n\nBaseModule -->\n\nThemeColorInputDirective->BaseModule\n\n\n\n\n\nThemeInputDirective\n\nThemeInputDirective\n\nBaseModule -->\n\nThemeInputDirective->BaseModule\n\n\n\n\n\nClassNameInputDirective \n\nClassNameInputDirective \n\nClassNameInputDirective  -->\n\nBaseModule->ClassNameInputDirective \n\n\n\n\n\nColorInputDirective \n\nColorInputDirective \n\nColorInputDirective  -->\n\nBaseModule->ColorInputDirective \n\n\n\n\n\nControlValueAccessorBaseDirective \n\nControlValueAccessorBaseDirective \n\nControlValueAccessorBaseDirective  -->\n\nBaseModule->ControlValueAccessorBaseDirective \n\n\n\n\n\nControlValueAccessorClassNameInputDirective \n\nControlValueAccessorClassNameInputDirective \n\nControlValueAccessorClassNameInputDirective  -->\n\nBaseModule->ControlValueAccessorClassNameInputDirective \n\n\n\n\n\nControlValueAccessorColorInputDirective \n\nControlValueAccessorColorInputDirective \n\nControlValueAccessorColorInputDirective  -->\n\nBaseModule->ControlValueAccessorColorInputDirective \n\n\n\n\n\nControlValueAccessorSizeColorInputDirective \n\nControlValueAccessorSizeColorInputDirective \n\nControlValueAccessorSizeColorInputDirective  -->\n\nBaseModule->ControlValueAccessorSizeColorInputDirective \n\n\n\n\n\nControlValueAccessorSizeInputDirective \n\nControlValueAccessorSizeInputDirective \n\nControlValueAccessorSizeInputDirective  -->\n\nBaseModule->ControlValueAccessorSizeInputDirective \n\n\n\n\n\nControlValueAccessorSizeThemeColorInputDirective \n\nControlValueAccessorSizeThemeColorInputDirective \n\nControlValueAccessorSizeThemeColorInputDirective  -->\n\nBaseModule->ControlValueAccessorSizeThemeColorInputDirective \n\n\n\n\n\nControlValueAccessorThemeColorInputDirective \n\nControlValueAccessorThemeColorInputDirective \n\nControlValueAccessorThemeColorInputDirective  -->\n\nBaseModule->ControlValueAccessorThemeColorInputDirective \n\n\n\n\n\nSizeColorInputDirective \n\nSizeColorInputDirective \n\nSizeColorInputDirective  -->\n\nBaseModule->SizeColorInputDirective \n\n\n\n\n\nSizeInputDirective \n\nSizeInputDirective \n\nSizeInputDirective  -->\n\nBaseModule->SizeInputDirective \n\n\n\n\n\nSizeThemeColorInputDirective \n\nSizeThemeColorInputDirective \n\nSizeThemeColorInputDirective  -->\n\nBaseModule->SizeThemeColorInputDirective \n\n\n\n\n\nSizeThemeInputDirective \n\nSizeThemeInputDirective \n\nSizeThemeInputDirective  -->\n\nBaseModule->SizeThemeInputDirective \n\n\n\n\n\nThemeColorInputDirective \n\nThemeColorInputDirective \n\nThemeColorInputDirective  -->\n\nBaseModule->ThemeColorInputDirective \n\n\n\n\n\nThemeInputDirective \n\nThemeInputDirective \n\nThemeInputDirective  -->\n\nBaseModule->ThemeInputDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/components/base/base.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ClassNameInputDirective\n                        \n                        \n                            ColorInputDirective\n                        \n                        \n                            ControlValueAccessorBaseDirective\n                        \n                        \n                            ControlValueAccessorClassNameInputDirective\n                        \n                        \n                            ControlValueAccessorColorInputDirective\n                        \n                        \n                            ControlValueAccessorSizeColorInputDirective\n                        \n                        \n                            ControlValueAccessorSizeInputDirective\n                        \n                        \n                            ControlValueAccessorSizeThemeColorInputDirective\n                        \n                        \n                            ControlValueAccessorThemeColorInputDirective\n                        \n                        \n                            EventManagerDirective\n                        \n                        \n                            SizeColorInputDirective\n                        \n                        \n                            SizeInputDirective\n                        \n                        \n                            SizeThemeColorInputDirective\n                        \n                        \n                            SizeThemeInputDirective\n                        \n                        \n                            StateManagerDirective\n                        \n                        \n                            ThemeColorInputDirective\n                        \n                        \n                            ThemeInputDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ClassNameInputDirective\n                        \n                        \n                            ColorInputDirective\n                        \n                        \n                            ControlValueAccessorBaseDirective\n                        \n                        \n                            ControlValueAccessorClassNameInputDirective\n                        \n                        \n                            ControlValueAccessorColorInputDirective\n                        \n                        \n                            ControlValueAccessorSizeColorInputDirective\n                        \n                        \n                            ControlValueAccessorSizeInputDirective\n                        \n                        \n                            ControlValueAccessorSizeThemeColorInputDirective\n                        \n                        \n                            ControlValueAccessorThemeColorInputDirective\n                        \n                        \n                            SizeColorInputDirective\n                        \n                        \n                            SizeInputDirective\n                        \n                        \n                            SizeThemeColorInputDirective\n                        \n                        \n                            SizeThemeInputDirective\n                        \n                        \n                            ThemeColorInputDirective\n                        \n                        \n                            ThemeInputDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ColorInputDirective } from './style-input/color-input.directive';\nimport { ThemeColorInputDirective } from './style-input/theme-color-input.directive';\nimport { SizeInputDirective } from './style-input/size-input.directive';\nimport { SizeColorInputDirective } from './style-input/size-color-input.directive';\nimport { SizeThemeColorInputDirective } from './style-input/size-theme-color-input.directive';\nimport { ControlValueAccessorBaseDirective } from './control-value-accessor/control-value-accessor.base.directive';\nimport { ClassNameInputDirective } from './style-input/class-name-input.directive';\nimport { ThemeInputDirective } from './style-input/theme-input.directive';\nimport { ControlValueAccessorClassNameInputDirective } from './control-value-accessor-style-input/control-value-accessor-class-name-input.directive';\nimport { ControlValueAccessorThemeColorInputDirective } from './control-value-accessor-style-input/control-value-accessor-theme-color-input.directive';\nimport { ControlValueAccessorColorInputDirective } from './control-value-accessor-style-input/control-value-accessor-color-input.directive';\nimport { ControlValueAccessorSizeInputDirective } from './control-value-accessor-style-input/control-value-accessor-size-input.directive';\nimport { ControlValueAccessorSizeColorInputDirective } from './control-value-accessor-style-input/control-value-accessor-size-color-input.directive';\nimport { ControlValueAccessorSizeThemeColorInputDirective } from './control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive';\nimport { SizeThemeInputDirective } from './style-input/size-theme-input.directive';\nimport { StateManagerDirective } from './control-value-accessor/state-manager.directive';\nimport { EventManagerDirective } from './control-value-accessor/event-manager.directive';\n\n\n\n@NgModule({\n  declarations: [\n    ControlValueAccessorBaseDirective,\n\n    ColorInputDirective,\n    ThemeColorInputDirective,\n    SizeInputDirective,\n    SizeColorInputDirective,\n    SizeThemeColorInputDirective,\n    ThemeInputDirective,\n    SizeThemeInputDirective,\n    ClassNameInputDirective,\n\n    ControlValueAccessorColorInputDirective,\n    ControlValueAccessorThemeColorInputDirective,\n    ControlValueAccessorSizeInputDirective,\n    ControlValueAccessorSizeColorInputDirective,\n    ControlValueAccessorSizeThemeColorInputDirective,\n    ControlValueAccessorClassNameInputDirective,\n    StateManagerDirective,\n    EventManagerDirective,\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ControlValueAccessorBaseDirective,\n\n    ColorInputDirective,\n    ThemeColorInputDirective,\n    SizeInputDirective,\n    SizeColorInputDirective,\n    SizeThemeColorInputDirective,\n    ThemeInputDirective,\n    SizeThemeInputDirective,\n    ClassNameInputDirective,\n\n    ControlValueAccessorColorInputDirective,\n    ControlValueAccessorThemeColorInputDirective,\n    ControlValueAccessorSizeInputDirective,\n    ControlValueAccessorSizeColorInputDirective,\n    ControlValueAccessorSizeThemeColorInputDirective,\n    ControlValueAccessorClassNameInputDirective,\n  ]\n})\nexport class BaseModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/button/button.component.ts\n\n\n    \n        Description\n    \n    \n        The button component acts like a normal html button, but provides different\nstyle options in the form of inputs or attributes.\nThere are two possible form changing options: round and pill. These can\nbe passed on either with attributes or with inputs. The input syntax is\ndifferent than the attribute syntax:\n\nround or pill for attribute syntax and\n[isPill]=\"{boolean}\" or [isRound]=\"{boolean}\" for the input syntax.\n\nYou cannot combine the two. Only one of these can be set to ture.\nThe other input / attribute is isPlain/plain. This tells the component\nto invert its colors, which means, that the hover colors are now 'normal'\ncolors and the 'normal' colors are now the hover colors.\n\n    \n\n    \n        Extends\n    \n    \n            SizeThemeColorInputDirective\n    \n\n\n    \n        Example\n    \n    \n                \n                    // Basic usage example where pill is set:\n\n  Button Text\n\n                \n                \n                    // Basic usage example where round is set:\n\n  Button Text\n\n                \n                \n                    // This is a minimal usage example:\n\n  Button Text\n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-button\n            \n\n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _disabled\n                            \n                            \n                                    Private\n                                pill\n                            \n                            \n                                    Private\n                                plain\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                            \n                                    Private\n                                round\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                isPill\n                            \n                            \n                                isPlain\n                            \n                            \n                                isRound\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isRound\n                                \n                                \n                                    isPill\n                                \n                                \n                                    isPlain\n                                \n                                \n                                    disabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(round: any, pill: any, plain: any, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/form/button/button.component.ts:144\n                            \n                        \n\n                \n                    \n                            Creates a new ButtonComponent.\nSets the different class states according to the attribute inputs.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        round\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Any value can be set and the is-round class will be set\n\n                                                        \n                                                \n                                                \n                                                        pill\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Any value can be set and the is-pill class will be set\n\n                                                        \n                                                \n                                                \n                                                        plain\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Any value can be set and the is-plain class will be set\n\n                                                        \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injectable for the\nSizeThemeColorInputDirective\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:99\n                            \n                        \n                \n                    \n                        Sets the disabled state of the component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isPill\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:77\n                            \n                        \n                \n                    \n                        Sets the pill property of the component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isPlain\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:89\n                            \n                        \n                \n                    \n                        Sets the plain property of the component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isRound\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:65\n                            \n                        \n                \n                    \n                        Sets the round property of the component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'button'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:112\n                            \n                        \n                \n                    \n                        Defines the type of the button element.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/button/button.component.ts:195\n                \n            \n\n\n            \n                \n                    Adds the needed classes based on the options of the component passed either\nby input or by attributes.\nOverwrites the getClasses\nmethod of the SizeThemeColorInputDirective by adding the is-pill,\nis-round and is-plain classes if needed.\nThe is-pill class gets included, if the pill property\nis true.\nThe is-round class gets included, if the round property\nis true.\nThe is-plain class gets included, if the plain property\nis true.\n\n\n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        The classes for the HTML button element\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/button/button.component.ts:174\n                \n            \n\n\n            \n                \n                    Provides access for a FormGroup to set the disabled state.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new disabled state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:144\n                            \n                        \n\n                \n                    \n                        Round state of the component.\nIf true, the HTML button element gets disabled and is no longer\nclickable.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pill\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:128\n                            \n                        \n\n                \n                    \n                        Pill state of the component.\nIf true, the is-pill class gets added to the classes of the HTML\nbutton element.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            plain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:136\n                            \n                        \n\n                \n                    \n                        Plain state of the component.\nIf true, the is-plain class gets added to the classes of the HTML\nbutton element.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-btn'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:57\n                            \n                        \n\n                \n                    \n                        The root class of the HTML button element.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            round\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:120\n                            \n                        \n\n                \n                    \n                        Round state of the component.\nIf true, the is-round class gets added to the classes of the HTML\nbutton element.\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isRound\n                    \n                \n\n\n                \n                    \n                        setisRound(isRound: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/button/button.component.ts:65\n                                \n                            \n                    \n                        \n                                Sets the round property of the component.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            isRound\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    The new value of the round state\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isPill\n                    \n                \n\n\n                \n                    \n                        setisPill(isPill: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/button/button.component.ts:77\n                                \n                            \n                    \n                        \n                                Sets the pill property of the component.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            isPill\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    The new value of pill\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isPlain\n                    \n                \n\n\n                \n                    \n                        setisPlain(isPlain: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/button/button.component.ts:89\n                                \n                            \n                    \n                        \n                                Sets the plain property of the component.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            isPlain\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    The new value of the plain state\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n\n                \n                    \n                        getdisabled()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/button/button.component.ts:106\n                                \n                            \n                    \n                        \n                                Gets the disabled state of the component.\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setdisabled(isDisabled: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/button/button.component.ts:99\n                                \n                            \n                    \n                        \n                                Sets the disabled state of the component.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            isDisabled\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    The new value of the disabled state\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Attribute, Component, Input, Optional } from '@angular/core';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { SizeThemeColorInputDirective } from '../../base/style-input/size-theme-color-input.directive';\n\n/**\n * The button component acts like a normal html button, but provides different\n * style options in the form of inputs or attributes.\n *\n * There are two possible form changing options: `round` and `pill`. These can\n * be passed on either with attributes or with inputs. The input syntax is\n * different than the attribute syntax:\n *\n * - `round` or `pill` for attribute syntax and\n * - `[isPill]=\"{boolean}\"` or `[isRound]=\"{boolean}\"` for the input syntax.\n *\n * You cannot combine the two. Only one of these can be set to `ture`.\n *\n * The other input / attribute is `isPlain`/`plain`. This tells the component\n * to invert its colors, which means, that the hover colors are now 'normal'\n * colors and the 'normal' colors are now the hover colors.\n *\n * @example\n * // Basic usage example where pill is set:\n * \n *              Button Text\n * \n *\n * @example\n * // Basic usage example where round is set:\n * \n *               Button Text\n * \n *\n * @example\n * // This is a minimal usage example:\n * \n *                Button Text\n * \n *\n */\n@Component({\n  selector: 'sb-el-button',\n  templateUrl: './button.component.html'\n})\nexport class ButtonComponent extends SizeThemeColorInputDirective {\n\n  /**\n   * The root class of the HTML button element.\n   */\n  public rootClass: string = 'sb-el-btn';\n\n  /**\n   *  Sets the [round]{@link #round} property of the component.\n   *\n   * @param {boolean} isRound The new value of the `round` state\n   */\n  @Input()\n  set isRound(isRound: boolean) {\n    if (!this.pill) this.round = isRound;\n    else if (isRound && this.pill) throw new Error('Cannot use pill and round'\n      + ' attribute simultaneously!');\n  }\n\n  /**\n   *  Sets the [pill]{@link #pill} property of the component.\n   *\n   * @param {boolean} isPill The new value of `pill`\n   */\n  @Input()\n  set isPill(isPill: boolean) {\n    if (!this.round) this.pill = isPill;\n    else if (isPill && this.round) throw new Error('Cannot use pill and round'\n      + ' attribute simultaneously!');\n  }\n\n  /**\n   *  Sets the [plain]{@link #plain} property of the component.\n   *\n   * @param {boolean} isPlain The new value of the `plain` state\n   */\n  @Input()\n  set isPlain(isPlain: boolean) {\n    this.plain = isPlain;\n  }\n\n  /**\n   *  Sets the [disabled]{@link disabled} state of the component.\n   *\n   * @param {boolean} isDisabled The new value of the `disabled` state\n   */\n  @Input()\n  set disabled(isDisabled: boolean) { this._disabled = isDisabled; }\n  /**\n   * Gets the [disabled]{@link disabled} state of the component.\n   *\n   * @returns {boolean} The current [disabled]{@link disabled} state of the\n   * component\n   */\n  get disabled(): boolean { return this._disabled; }\n\n  /**\n   * Defines the type of the button element.\n   */\n  @Input()\n  public type: string = 'button';\n\n  /**\n   * Round state of the component.\n   *\n   * If `true`, the `is-round` class gets added to the classes of the HTML\n   * button element.\n   */\n  private round: boolean = false;\n\n  /**\n   * Pill state of the component.\n   *\n   * If `true`, the `is-pill` class gets added to the classes of the HTML\n   * button element.\n   */\n  private pill: boolean = false;\n\n  /**\n   * Plain state of the component.\n   *\n   * If `true`, the `is-plain` class gets added to the classes of the HTML\n   * button element.\n   */\n  private plain: boolean = false;\n\n  /**\n   * Round state of the component.\n   *\n   * If `true`, the HTML button element gets disabled and is no longer\n   * clickable.\n   */\n  private _disabled: boolean = false;\n\n  /**\n   * Creates a new ButtonComponent.\n   *\n   * Sets the different class states according to the attribute inputs.\n   *\n   * @param{any} round Any value can be set and the `is-round` class will be set\n   * @param{any} pill Any value can be set and the `is-pill` class will be set\n   * @param{any} plain Any value can be set and the `is-plain` class will be set\n   * @param{ThemeService} themeService Injectable for the\n   * `SizeThemeColorInputDirective`\n   */\n  constructor(\n    @Optional() @Attribute('round') round: any,\n    @Optional() @Attribute('pill') pill: any,\n    @Optional() @Attribute('plain') plain: any,\n    themeService: ThemeService\n  ) {\n    super(themeService);\n    if (round === '') this.isRound = true;\n    if (pill === '') this.isPill = true;\n    if (plain === '') this.isPlain = true;\n  }\n\n  /**\n   *  Provides access for a `FormGroup` to set the disabled state.\n   *\n   * @param{boolean} isDisabled The new disabled state\n   */\n  public setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Adds the needed classes based on the options of the component passed either\n   * by input or by attributes.\n   *\n   * Overwrites the [getClasses]{@link SizeThemeColorInputDirective#getClasses}\n   * method of the {@link SizeThemeColorInputDirective} by adding the `is-pill`,\n   * `is-round` and `is-plain` classes if needed.\n   *\n   * The `is-pill` class gets included, if the [pill]{@link #pill} property\n   * is `true`.\n   * The `is-round` class gets included, if the [round]{@link #round} property\n   * is `true`.\n   * The `is-plain` class gets included, if the [plain]{@link #plain} property\n   * is `true`.\n   *\n   * @returns {Array} The classes for the HTML button element\n   */\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.round ? 'is-round' : '');\n    classes.push(this.pill ? 'is-pill' : '');\n    classes.push(this.plain ? 'is-plain' : '');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/card/card.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SizeThemeInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-card\n            \n\n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hover\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                            \n                                    Private\n                                shadow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(hover: any, shadow: any, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/card/card.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        hover\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        shadow\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/card/card.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hover\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/card/card.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-card'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/card/card.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            shadow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/card/card.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Attribute, Component, Optional } from '@angular/core';\nimport { ThemeService } from '../../services/theme/theme.service';\nimport { SizeThemeInputDirective } from '../base/style-input/size-theme-input.directive';\n\n@Component({\n  selector: 'sb-el-card',\n  templateUrl: './card.component.html'\n})\nexport class CardComponent extends SizeThemeInputDirective {\n\n  public rootClass: string = 'sb-el-card';\n\n  private hover: boolean = false;\n  private shadow: boolean = false;\n\n  constructor(\n    @Optional() @Attribute('hover') hover: any,\n    @Optional() @Attribute('shadow') shadow: any,\n    themeService: ThemeService\n  ) {\n    super(themeService);\n    if (hover === '') this.hover = true;\n    if (shadow === '') this.shadow = true;\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.hover ? 'is-hover' : '');\n    classes.push(this.shadow ? 'is-shadow' : '');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n  \n    \n  \n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/checkbox/checkbox.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ControlValueAccessorSizeThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: CheckboxComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-checkbox\n            \n\n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                check\n                            \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                labelPosition\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/checkbox/checkbox.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelPosition\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'right'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/checkbox/checkbox.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            check\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    check()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/checkbox/checkbox.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/checkbox/checkbox.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-checkbox'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/checkbox/checkbox.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlValueAccessorSizeThemeColorInputDirective } from '../../base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-checkbox',\n  templateUrl: './checkbox.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: CheckboxComponent,\n    multi: true\n  }]\n})\nexport class CheckboxComponent extends ControlValueAccessorSizeThemeColorInputDirective {\n\n  public rootClass = 'sb-el-checkbox';\n\n  @Input()\n  public label: string = '';\n  @Input()\n  public labelPosition: string = 'right';\n\n  public check(): void {\n    this.value = !this.value;\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.label ? 'is-label' : '');\n    classes.push(this.label ? 'label-is-' + this.labelPosition : '');\n    classes.push(this.value ? 'is-checked' : 'is-unchecked');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  {{ label }}\n  \n    \n      \n        &#xe876;\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}                                '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxGroupComponent.html":{"url":"components/CheckboxGroupComponent.html","title":"component - CheckboxGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CheckboxGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/group/checkbox/checkbox-group.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SelectionOptionsDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: CheckboxGroupComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-checkbox-group\n            \n\n\n\n\n            \n                templateUrl\n                ./checkbox-group.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                    Protected\n                                updateValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                groupAlign\n                            \n                            \n                                groupTitle\n                            \n                            \n                                labelPosition\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        groupAlign\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'left'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/checkbox/checkbox-group.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        groupTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/checkbox/checkbox-group.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelPosition\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'right'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/checkbox/checkbox-group.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/group/checkbox/checkbox-group.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValues()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/group/checkbox/checkbox-group.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-checkbox-group'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/group/checkbox/checkbox-group.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { SelectedOptions } from '../base/selected-options';\nimport { SelectionOptionsDirective } from '../base/selection-options.directive';\n\n@Component({\n  selector: 'sb-el-checkbox-group',\n  templateUrl: './checkbox-group.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: CheckboxGroupComponent,\n    multi: true\n  }]\n})\nexport class CheckboxGroupComponent extends SelectionOptionsDirective {\n\n  public rootClass = 'sb-el-checkbox-group';\n\n  @Input()\n  public groupTitle: string = '';\n\n  @Input()\n  public groupAlign: string | null = 'left';\n\n  @Input()\n  public labelPosition: string = 'right';\n\n  check() {\n    this.value = this.selectedOptions;\n  }\n\n  protected updateValues(): void {\n    this.selectedOptions = this.value as SelectedOptions;\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n      \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ClassNameInputDirective.html":{"url":"directives/ClassNameInputDirective.html","title":"directive - ClassNameInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ClassNameInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/style-input/class-name-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _extraClasses\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                extraClasses\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    extraClasses\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        extraClasses\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/class-name-input.directive.ts:12\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/style-input/class-name-input.directive.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _extraClasses\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/class-name-input.directive.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/class-name-input.directive.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        extraClasses\n                    \n                \n\n\n                \n                    \n                        setextraClasses(extraClasses)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/style-input/class-name-input.directive.ts:12\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            extraClasses\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ClassNameInputDirective {\n\n  public rootClass: string = '';\n\n  private _extraClasses: Array = new Array();\n  @Input()\n  set extraClasses(extraClasses: string | Array) {\n    if (Array.isArray(extraClasses)) this._extraClasses = extraClasses;\n    else {\n      this._extraClasses = extraClasses.split(' ').filter(className => {\n        return className !== '';\n      });\n    }\n  }\n\n  public getClasses(): Array {\n    let classes = new Array();\n    classes.push(this.rootClass);\n    this._extraClasses.forEach(className => classes.push(className))\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ColorInputDirective.html":{"url":"directives/ColorInputDirective.html","title":"directive - ColorInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ColorInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/style-input/color-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/color-input.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/style-input/color-input.directive.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ClassNameInputDirective } from './class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ColorInputDirective extends ClassNameInputDirective {\n\n  @Input()\n  public color: string | null = 'primary';\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.color ? this.rootClass + '--' + this.color : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ColumnInformation.html":{"url":"classes/ColumnInformation.html","title":"class - ColumnInformation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ColumnInformation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/table/column-information.ts\n        \n\n            \n                Description\n            \n            \n                A class providing different methods for handling column information. The\nclass provides a default version of itself via the\nColumnInformationDefaults class as well as options to merge\ninformation and clone the information.\nAll the interfaces and classes surrounding this class are needed for the case\nthat a user of the library wants to create new column information objects but\ndoes not care about the methods. A simple object can be created and passed on\nto the different methods, without caring about the details.\n\n            \n\n            \n                Extends\n            \n            \n                        ColumnInformationDefaults\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alignment\n                            \n                            \n                                    Public\n                                color\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clone\n                            \n                            \n                                    Public\n                                cloneAndSet\n                            \n                            \n                                    Static\n                                merge\n                            \n                            \n                                    Private\n                                    Static\n                                mergeValues\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    defaults\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alignment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'center'\n                        \n                    \n                            \n                                \n                                    Inherited from         ColumnInformationDefaults\n\n                                \n                            \n                        \n                            \n                                    Defined in         ColumnInformationDefaults:21\n\n                            \n                        \n\n                \n                    \n                        The default alignment for each column.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from         ColumnInformationDefaults\n\n                                \n                            \n                        \n                            \n                                    Defined in         ColumnInformationDefaults:16\n\n                            \n                        \n\n                \n                    \n                        The default color for each column.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from         ColumnInformationDefaults\n\n                                \n                            \n                        \n                            \n                                    Defined in         ColumnInformationDefaults:11\n\n                            \n                        \n\n                \n                    \n                        The default name for each column.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/table/column-information.ts:31\n                \n            \n\n\n            \n                \n                    Clones the current object into a new one.\n\n\n                    \n                    \n                    \n                        Returns :         ColumnInformation\n\n                    \n                    \n                        A clone of the current object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cloneAndSet\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cloneAndSet(information: ColumnInformationOptionsInterface)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/table/column-information.ts:50\n                \n            \n\n\n            \n                \n                    Clones the current object and sets the new information to the clone.\nThe method uses the merge method to clone and merge the\nnew values into the clone, so that the new values always get written to the\nclone.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    information\n                                    \n                                                ColumnInformationOptionsInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new information\nto write to the clone\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ColumnInformation\n\n                    \n                    \n                        A clone with the updated values\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            merge\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    merge(overwrite: ColumnInformationOptionsInterface, persistent: ColumnInformationOptionsInterface)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/table/column-information.ts:69\n                \n            \n\n\n            \n                \n                    Merges two column information objects into a new one.\nSince the two input object do not have to contain any information, the new\nobject defaults to the default values, if no value is available for the new\nobject. If values are available, the persistent values always overwrite\nthe overwrite values.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    overwrite\n                                    \n                                                ColumnInformationOptionsInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The object to overwrite\n\n                                    \n                                \n                                \n                                    persistent\n                                    \n                                                ColumnInformationOptionsInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The object not to\noverwrite\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ColumnInformation\n\n                    \n                    \n                        A merged version of the two input objects\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            mergeValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mergeValues(overwrite: string | undefined, persistent: string | undefined, defaultValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/table/column-information.ts:99\n                \n            \n\n\n            \n                \n                    Merges two values into one, with the option of a fallback.\nThe default value must always be supplied and not null. If both values,\noverwrite and persistent are undefined, the default value will be the\noutput of the method. If only one of the input values is defined, the\ndefined value will be the output. If both of the inputs are defined,\nthe persistent value will be the output.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    overwrite\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value to be overwritten\n\n                                    \n                                \n                                \n                                    persistent\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value not to overwrite\n\n                                    \n                                \n                                \n                                    defaultValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The fallback value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        A merged value of the three input values\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        defaults\n                    \n                \n\n                \n                    \n                        getdefaults()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/models/table/column-information.ts:22\n                                \n                            \n                    \n                        \n                                Creates and returns a new default ColumnInformation object.\n\n\n                                \n                                \n                                \n                                    Returns :         ColumnInformation\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { ColumnInformationDefaults } from \"./column-information-defaults\";\nimport { ColumnInformationOptionsInterface } from \"./column-information-options.interface\";\n\n/**\n * A class providing different methods for handling column information. The\n * class provides a default version of itself via the\n * {@link ColumnInformationDefaults} class as well as options to merge\n * information and clone the information.\n *\n * All the interfaces and classes surrounding this class are needed for the case\n * that a user of the library wants to create new column information objects but\n * does not care about the methods. A simple object can be created and passed on\n * to the different methods, without caring about the details.\n */\nexport class ColumnInformation extends ColumnInformationDefaults {\n\n  /**\n   * Creates and returns a new default {@link ColumnInformation} object.\n   *\n   * @returns A new `ColumnInformation` object\n   */\n  public static get defaults(): ColumnInformation {\n    return new ColumnInformation();\n  }\n\n  /**\n   * Clones the current object into a new one.\n   *\n   * @returns A clone of the current object\n   */\n  private clone(): ColumnInformation {\n    let clone = new ColumnInformation();\n    clone.name = this.name;\n    clone.color = this.color;\n    clone.alignment = this.alignment;\n    return clone;\n  }\n\n  /**\n   * Clones the current object and sets the new information to the clone.\n   *\n   * The method uses the [merge]{@link #merge} method to clone and merge the\n   * new values into the clone, so that the new values always get written to the\n   * clone.\n   *\n   * @param{ColumnInformationOptionsInterface} information The new information\n   * to write to the clone\n   * @returns A clone with the updated values\n   */\n  public cloneAndSet(\n    information: ColumnInformationOptionsInterface\n  ): ColumnInformation {\n    return ColumnInformation.merge(this, information);\n  }\n\n  /**\n   * Merges two column information objects into a new one.\n   *\n   * Since the two input object do not have to contain any information, the new\n   * object defaults to the default values, if no value is available for the new\n   * object. If values are available, the `persistent` values always overwrite\n   * the `overwrite` values.\n   *\n   * @param{ColumnInformationOptionsInterface} overwrite The object to overwrite\n   * @param{ColumnInformationOptionsInterface} persistent The object not to\n   * overwrite\n   * @returns A merged version of the two input objects\n   */\n  public static merge(\n    overwrite: ColumnInformationOptionsInterface,\n    persistent: ColumnInformationOptionsInterface\n  ): ColumnInformation {\n    let info = new ColumnInformation();\n\n    info.name = this.mergeValues(overwrite.name, persistent.name,\n      this.defaults.name);\n    info.color = this.mergeValues(overwrite.color, persistent.color,\n      this.defaults.color);\n    info.alignment = this.mergeValues(overwrite.alignment, persistent.alignment,\n      this.defaults.alignment);\n\n    return info;\n  }\n\n  /**\n   * Merges two values into one, with the option of a fallback.\n   *\n   * The default value must always be supplied and not `null`. If both values,\n   * `overwrite` and `persistent` are `undefined`, the default value will be the\n   * output of the method. If only one of the input values is `defined`, the\n   * `defined` value will be the output. If both of the inputs are `defined`,\n   * the `persistent` value will be the output.\n   *\n   * @param{string | undefined} overwrite The value to be overwritten\n   * @param{string | undefined} persistent The value not to overwrite\n   * @param{string} defaultValue The fallback value\n   * @returns A merged value of the three input values\n   */\n  private static mergeValues(\n    overwrite: string | undefined,\n    persistent: string | undefined,\n    defaultValue: string\n  ): string {\n    let value = defaultValue;\n    if (overwrite && defaultValue !== overwrite) value = overwrite;\n    if (persistent && defaultValue !== persistent) value = persistent;\n    return value;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ColumnInformationDefaults.html":{"url":"classes/ColumnInformationDefaults.html","title":"class - ColumnInformationDefaults","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ColumnInformationDefaults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/table/column-information-defaults.ts\n        \n\n            \n                Description\n            \n            \n                The default column information. Holds default entries for the information.\n\n            \n\n\n            \n                Implements\n            \n            \n                            ColumnInformationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alignment\n                            \n                            \n                                    Public\n                                color\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alignment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'center'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/table/column-information-defaults.ts:21\n                            \n                        \n\n                \n                    \n                        The default alignment for each column.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/table/column-information-defaults.ts:16\n                            \n                        \n\n                \n                    \n                        The default color for each column.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/table/column-information-defaults.ts:11\n                            \n                        \n\n                \n                    \n                        The default name for each column.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ColumnInformationInterface } from \"./column-information.interface\";\n\n/**\n * The default column information. Holds default entries for the information.\n */\nexport class ColumnInformationDefaults implements ColumnInformationInterface {\n\n  /**\n   * The default `name` for each column.\n   */\n  public name: string = '';\n\n  /**\n   * The default `color` for each column.\n   */\n  public color: string = '';\n\n  /**\n   * The default `alignment` for each column.\n   */\n  public alignment: string = 'center';\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColumnInformationInterface.html":{"url":"interfaces/ColumnInformationInterface.html","title":"interface - ColumnInformationInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ColumnInformationInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/table/column-information.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface which must have all the fields for the column information. The\ninterface is beeing used to make sure that all the fields are acessible and\ndefined.\n\n            \n\n            \n                Extends\n            \n            \n                        ColumnInformationOptionsInterface\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        alignment\n                                \n                                \n                                        color\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alignment\n                                    \n                                \n                                \n                                    \n                                        alignment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The alignment of the column.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The color of the column.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the column.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ColumnInformationOptionsInterface } from \"./column-information-options.interface\";\n\n/**\n * Interface which must have all the fields for the column information. The\n * interface is beeing used to make sure that all the fields are acessible and\n * defined.\n */\nexport interface ColumnInformationInterface\n  extends ColumnInformationOptionsInterface {\n    /**\n     * The name of the column.\n     */\n    name: string;\n\n    /**\n     * The `color` of the column.\n     */\n    color: string;\n\n    /**\n     * The `alignment` of the column.\n     */\n    alignment: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColumnInformationOptionsInterface.html":{"url":"interfaces/ColumnInformationOptionsInterface.html","title":"interface - ColumnInformationOptionsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ColumnInformationOptionsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/table/column-information-options.interface.ts\n        \n\n            \n                Description\n            \n            \n                Defines an interface for the column information. These are fields every\nobject regarding the column information can poesess. The fields are all\noptional, for easier definition of the information.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        alignment\n                                \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                            Optional\n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alignment\n                                    \n                                \n                                \n                                    \n                                        alignment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The alignment of the column.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The color of the column.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The name of the column.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ColumnInformationOptionsInterface {\n\n  /**\n   * The name of the column.\n   */\n  name?: string;\n\n  /**\n   * The `color` of the column.\n   */\n  color?: string;\n\n  /**\n   * The `alignment` of the column.\n   */\n  alignment?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent.html":{"url":"components/ContainerComponent.html","title":"component - ContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/container/container.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SizeThemeInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-container\n            \n\n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-container'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/container/container.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { SizeThemeInputDirective } from '../base/style-input/size-theme-input.directive';\n\n@Component({\n  selector: 'sb-el-container',\n  templateUrl: './container.component.html'\n})\nexport class ContainerComponent extends SizeThemeInputDirective {\n\n  public rootClass = 'sb-el-container';\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorBaseDirective.html":{"url":"directives/ControlValueAccessorBaseDirective.html","title":"directive - ControlValueAccessorBaseDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorBaseDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                innerValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                setInnerValue\n                            \n                            \n                                    Protected\n                                updateValues\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                            \n                                    Public\n                                writeValueInnerChange\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setInnerValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setInnerValue(value: ValueType | undefined, emitChange: boolean, innerChange: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            ValueType | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    emitChange\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    innerChange\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValues()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: ValueType | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            ValueType | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            writeValueInnerChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValueInnerChange(value: ValueType | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            ValueType | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            innerValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ValueType | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts:14\n                                \n                            \n\n                \n                    \n                        setvalue(value)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts:13\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { EventManagerDirective } from './event-manager.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ControlValueAccessorBaseDirective extends EventManagerDirective implements ControlValueAccessor {\n\n  private innerValue: ValueType | undefined;\n\n  // writing value\n  set value(value: ValueType | undefined) { this.setInnerValue(value, true, false) }\n  get value(): ValueType | undefined { return this.innerValue }\n  public writeValue(value: ValueType | undefined): void { this.setInnerValue(value, false, false) }\n  public writeValueInnerChange(value: ValueType | undefined) {\n    this.setInnerValue(value, true, true);\n  }\n\n  private setInnerValue(value: ValueType | undefined, emitChange: boolean, innerChange: boolean): void {\n    if (value !== this.innerValue && value !== null && !this.disabled) {\n      this.innerValue = value;\n      if (!innerChange) this.updateValues();\n      if (emitChange) this.emitChange(value);\n    }\n  }\n\n  protected updateValues(): void {};\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorClassNameInputDirective.html":{"url":"directives/ControlValueAccessorClassNameInputDirective.html","title":"directive - ControlValueAccessorClassNameInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorClassNameInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor-style-input/control-value-accessor-class-name-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _extraClasses\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                extraClasses\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    extraClasses\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        extraClasses\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-class-name-input.directive.ts:13\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-class-name-input.directive.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _extraClasses\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-class-name-input.directive.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-class-name-input.directive.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        extraClasses\n                    \n                \n\n\n                \n                    \n                        setextraClasses(extraClasses)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-class-name-input.directive.ts:13\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            extraClasses\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ControlValueAccessorBaseDirective } from '../control-value-accessor/control-value-accessor.base.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ControlValueAccessorClassNameInputDirective extends ControlValueAccessorBaseDirective {\n\n  public rootClass: string = '';\n\n  private _extraClasses: Array = new Array();\n  @Input()\n  set extraClasses(extraClasses: string | Array) {\n    if (Array.isArray(extraClasses)) this._extraClasses = extraClasses;\n    else {\n      this._extraClasses = extraClasses.split(' ').filter(className => {\n        return className !== '';\n      });\n    }\n  }\n\n  public getClasses(): Array {\n    let classes = new Array();\n    classes.push(this.rootClass);\n    this._extraClasses.forEach(className => classes.push(className))\n    classes.push(this.disabled ? 'disabled' : '');\n    classes.push(this.pristine ? 'pristine' : 'dirty');\n    classes.push(this.touched ? 'touched' : 'untouched');\n    classes.push(this.focused ? 'focus' : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorColorInputDirective.html":{"url":"directives/ControlValueAccessorColorInputDirective.html","title":"directive - ControlValueAccessorColorInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorColorInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor-style-input/control-value-accessor-color-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-color-input.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-color-input.directive.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ControlValueAccessorClassNameInputDirective } from './control-value-accessor-class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ControlValueAccessorColorInputDirective extends ControlValueAccessorClassNameInputDirective {\n\n  @Input()\n  public color: string | null = 'primary';\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.color ? this.rootClass + '--' + this.color : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorSizeColorInputDirective.html":{"url":"directives/ControlValueAccessorSizeColorInputDirective.html","title":"directive - ControlValueAccessorSizeColorInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorSizeColorInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-color-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-color-input.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'd'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-color-input.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-color-input.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ControlValueAccessorClassNameInputDirective } from './control-value-accessor-class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ControlValueAccessorSizeColorInputDirective extends ControlValueAccessorClassNameInputDirective {\n\n  @Input()\n  public size: string | null = 'd';\n\n  @Input()\n  public color: string | null = 'primary';\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.size ? this.rootClass + '--' + this.size : '');\n    classes.push(this.color ? this.rootClass + '--' + this.color : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorSizeInputDirective.html":{"url":"directives/ControlValueAccessorSizeInputDirective.html","title":"directive - ControlValueAccessorSizeInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorSizeInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'd'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-input.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-input.directive.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ControlValueAccessorClassNameInputDirective } from './control-value-accessor-class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ControlValueAccessorSizeInputDirective extends ControlValueAccessorClassNameInputDirective {\n\n  @Input()\n  public size: string | null = 'd';\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.size ? this.rootClass + '--' + this.size : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{"url":"directives/ControlValueAccessorSizeThemeColorInputDirective.html","title":"directive - ControlValueAccessorSizeThemeColorInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorSizeThemeColorInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'd'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive.ts:11\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { ControlValueAccessorClassNameInputDirective } from './control-value-accessor-class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ControlValueAccessorSizeThemeColorInputDirective extends ControlValueAccessorClassNameInputDirective {\n\n  @Input()\n  public size: string | null = 'd';\n\n  public theme: string;\n\n  @Input()\n  public color: string | null = 'primary';\n\n  constructor(\n    private themeService: ThemeService\n  ) {\n    super();\n    this.theme = themeService.get();\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.size ? this.rootClass + '--' + this.size : '');\n    classes.push(this.theme && this.color ?\n      this.rootClass + '--' + this.theme + '-' + this.color : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorThemeColorInputDirective.html":{"url":"directives/ControlValueAccessorThemeColorInputDirective.html","title":"directive - ControlValueAccessorThemeColorInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorThemeColorInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor-style-input/control-value-accessor-theme-color-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-theme-color-input.directive.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-theme-color-input.directive.ts:13\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-theme-color-input.directive.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-theme-color-input.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { ControlValueAccessorClassNameInputDirective } from './control-value-accessor-class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ControlValueAccessorThemeColorInputDirective extends ControlValueAccessorClassNameInputDirective {\n\n  public theme: string;\n\n  @Input()\n  public color: string | null = 'primary';\n\n  constructor(\n    private themeService: ThemeService\n  ) {\n    super();\n    this.theme = themeService.get();\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.theme && this.color ?\n      this.rootClass + '--' + this.theme + '-' + this.color : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Csv.html":{"url":"classes/Csv.html","title":"class - Csv","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Csv\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/csv/csv.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Private\n                                    Static\n                                DELIMITER\n                            \n                            \n                                    Private\n                                    Static\n                                END_DELIMITER\n                            \n                            \n                                    Public\n                                header\n                            \n                            \n                                    Private\n                                    Static\n                                START_DELIMITER\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forEachColumn\n                            \n                            \n                                    Public\n                                forEachColumnName\n                            \n                            \n                                    Public\n                                getColumnData\n                            \n                            \n                                    Static\n                                    Async\n                                parseFile\n                            \n                            \n                                    Static\n                                parseString\n                            \n                            \n                                    Private\n                                    Static\n                                rows\n                            \n                            \n                                    Private\n                                    Static\n                                split\n                            \n                            \n                                    Private\n                                    Static\n                                useDelimiter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(header: Array, data: Array>)\n                    \n                \n                        \n                            \n                                Defined in src/lib/models/csv/csv.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        header\n                                                  \n                                                        \n                                                                    Array\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    Array>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/csv/csv.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            DELIMITER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RegExp\n\n                        \n                    \n                    \n                        \n                            Default value : /(?:'|\"|)(?:\\s*)(?:,|;|$)(?:\\s*)(?:'|\"|)/\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/csv/csv.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            END_DELIMITER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RegExp\n\n                        \n                    \n                    \n                        \n                            Default value : /(?:\\s*)(?:'|\"|)/\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/csv/csv.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            header\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/csv/csv.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            START_DELIMITER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RegExp\n\n                        \n                    \n                    \n                        \n                            Default value : /(?:'|\"|)(?:\\s*)/\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/csv/csv.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            forEachColumn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forEachColumn(fn: (columnName: string,columnData: Array,index: number) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/csv/csv.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            forEachColumnName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forEachColumnName(fn: (columnName: string,index: number) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/csv/csv.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getColumnData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getColumnData(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/csv/csv.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            parseFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parseFile(file: File, delimiter?: Delimiter)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/csv/csv.ts:42\n                \n            \n\n\n            \n                \n                    Static Members\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    delimiter\n                                    \n                                                Delimiter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            parseString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parseString(string: string, delimiter?: Delimiter)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/csv/csv.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    delimiter\n                                    \n                                                Delimiter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Csv\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            rows\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    rows(string: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/csv/csv.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            split\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    split(row: string, delimiter?: Delimiter)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/csv/csv.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    delimiter\n                                    \n                                                Delimiter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            useDelimiter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    useDelimiter(delimiter?: Delimiter)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/csv/csv.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    delimiter\n                                    \n                                                Delimiter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     RegExp\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export enum Delimiter {\n  COMMA = ',',\n  COLON = ':',\n  SEMICOLON = ';'\n}\n\nexport class Csv {\n\n  private static START_DELIMITER: RegExp = /(?:'|\"|)(?:\\s*)/;\n  private static END_DELIMITER: RegExp = /(?:\\s*)(?:'|\"|)/;\n  private static DELIMITER: RegExp = /(?:'|\"|)(?:\\s*)(?:,|;|$)(?:\\s*)(?:'|\"|)/;\n\n  constructor(\n    public header: Array,\n    public data: Array>\n  ) {}\n\n  public forEachColumnName(\n    fn: (columnName: string, index: number) => void\n  ): void {\n    this.header.forEach((columnName: string, index: number) => {\n      fn(columnName, index);\n    });\n  }\n\n  public forEachColumn(\n    fn: (columnName: string, columnData: Array, index: number) => void\n  ): void {\n    this.header.forEach((columnName: string, index: number) => {\n      fn(columnName, this.getColumnData(index), index);\n    });\n  }\n\n  public getColumnData(index: number): Array {\n    return this.data.map(row => row[index]);\n  }\n\n  /**\n   * Static Members\n   */\n\n  public static async parseFile(\n    file: File,\n    delimiter?: Delimiter\n  ): Promise {\n    if (file.type != 'text/csv') {\n      return Promise.reject(\"File is not a CSV file!\");\n    }\n    let content = await file.text();\n    return this.parseString(content, delimiter);\n  }\n\n  public static parseString(string: string, delimiter?: Delimiter): Csv {\n    let rows = this.rows(string);\n    let splitRows = new Array>();\n    rows.forEach(row => splitRows.push(this.split(row, delimiter)));\n    return new Csv(\n      splitRows[0],\n      splitRows.slice(1)\n    )\n  }\n\n  private static rows(string: string): Array {\n    let rows = string.split('\\n');\n    if (rows[rows.length - 1] === \"\") rows.splice(rows.length - 1, rows.length);\n    return rows;\n  }\n\n  private static split(row: string, delimiter?: Delimiter): Array {\n    let split = row.split(this.useDelimiter(delimiter));\n\n    let firstElement = split[0];\n    if (firstElement && /^('|\").*$/.test(firstElement)) {\n      split[0] = firstElement.slice(1, firstElement.length);\n    }\n\n    let lastElement = split[split.length-1];\n    if (lastElement && /^.*('|\")$/.test(lastElement)) {\n      split[split.length-1] = lastElement.substring(0, lastElement.length - 1);\n    }\n    return split;\n  }\n\n  private static useDelimiter(delimiter?: Delimiter): RegExp {\n    if (delimiter) {\n      return new RegExp(\n        this.START_DELIMITER.source +\n        '(?:' + delimiter + ')' +\n        this.END_DELIMITER.source\n      );\n    } else return this.DELIMITER;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EventManagerDirective.html":{"url":"directives/EventManagerDirective.html","title":"directive - EventManagerDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  EventManagerDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor/event-manager.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                onChangeCallback\n                            \n                            \n                                    Protected\n                                onTouchedCallBack\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                emitBlur\n                            \n                            \n                                    Protected\n                                emitChange\n                            \n                            \n                                    Public\n                                emitFocus\n                            \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                change\n                            \n                            \n                                focus\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        focus\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:19\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            emitBlur\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitBlur()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            emitChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitChange(value: ValueType | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            ValueType | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            emitFocus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitFocus()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onChangeCallback\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onTouchedCallBack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, EventEmitter, Output } from '@angular/core';\nimport { StateManagerDirective } from './state-manager.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class EventManagerDirective extends StateManagerDirective {\n\n  protected onTouchedCallBack: () => void = () => {};\n  protected onChangeCallback: (value: ValueType | undefined) => void = () => {};\n\n  @Output()\n  public change: EventEmitter = new EventEmitter();\n\n  @Output()\n  public blur: EventEmitter = new EventEmitter();\n\n  @Output()\n  public focus: EventEmitter = new EventEmitter();\n\n  // events\n  public emitBlur(): void {\n    this.setFocusedState(false);\n    this.setTouchedState(true);\n    this.onTouchedCallBack();\n    this.blur.emit();\n  }\n\n  public emitFocus(): void {\n    this.setFocusedState(true);\n    this.focus.emit();\n  }\n\n  protected emitChange(value: ValueType | undefined): void {\n    this.setPristineState(false);\n    this.onChangeCallback(value);\n    this.change.emit(value);\n  }\n\n  // register events\n  public registerOnChange(fn: any): void { this.onChangeCallback = fn }\n  public registerOnTouched(fn: any): void { this.onTouchedCallBack = fn }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileInputComponent.html":{"url":"components/FileInputComponent.html","title":"component - FileInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FileInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/file-input/file-input.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ControlValueAccessorSizeThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: FileInputComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-file-input\n            \n\n\n\n\n            \n                templateUrl\n                ./file-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                defaultMessage\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                pill\n                            \n                            \n                                    Public\n                                plain\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkFileSize\n                            \n                            \n                                    Public\n                                getClasses\n                            \n                            \n                                    Public\n                                input\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                limit\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertService: AlertService, pill: any, plain: any, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/form/file-input/file-input.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pill\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plain\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        limit\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : -1\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/file-input/file-input.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/file-input/file-input.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            checkFileSize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkFileSize(file: File)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/file-input/file-input.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/file-input/file-input.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            input\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    input(files: FileList | null)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/file-input/file-input.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                            FileList | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            defaultMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Choose a file'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/file-input/file-input.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : FileInputComponent.defaultMessage\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/file-input/file-input.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pill\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/file-input/file-input.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            plain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/file-input/file-input.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-file-input'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/file-input/file-input.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Attribute, Component, Input, Optional } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AlertService } from '../../../services/alert/alert.service';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { ControlValueAccessorSizeThemeColorInputDirective } from '../../base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-file-input',\n  templateUrl: './file-input.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: FileInputComponent,\n    multi: true\n  }]\n})\nexport class FileInputComponent extends ControlValueAccessorSizeThemeColorInputDirective {\n\n  public rootClass = 'sb-el-file-input';\n\n  @Input()\n  public placeholder: string = '';\n\n  // the limit is in mega bytes\n  @Input()\n  public limit: number = -1;\n\n  public plain: boolean = false;\n  public pill: boolean = false;\n\n  private static defaultMessage: string = 'Choose a file';\n  public message: string = FileInputComponent.defaultMessage;\n\n  constructor(\n    private alertService: AlertService,\n    @Optional() @Attribute('pill') pill: any,\n    @Optional() @Attribute('plain') plain: any,\n    themeService: ThemeService\n  ) {\n    super(themeService);\n    if (pill === '') this.pill = true;\n    if (plain === '') this.plain = true;\n  }\n\n  public input(files: FileList | null) {\n    if (files) {\n      let file: File | null = files.item(0);\n      if (file && this.checkFileSize(file)) {\n        this.message = file.name;\n        this.writeValueInnerChange(file);\n      } else {\n        this.message = FileInputComponent.defaultMessage;\n        this.writeValueInnerChange(undefined);\n      }\n    }\n  }\n\n  private checkFileSize(file: File): boolean {\n    if (this.limit >= 0) {\n      if (file.size  {\n    let classes = super.getClasses();\n    classes.push(this.pill ? 'is-pill' : '');\n    classes.push(this.plain ? 'is-plain' : '');\n    return classes;\n  }\n}\n\n    \n\n    \n          \n  \n    {{ placeholder }}\n  \n  \n  \n    \n      {{ message }}\n      \n        &#xe2c6;\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ placeholder }}                {{ message }}                          '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'FileInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormGroupComponent.html":{"url":"components/FormGroupComponent.html","title":"component - FormGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/group/form-group.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SizeThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-form-group\n            \n\n\n\n\n            \n                templateUrl\n                ./form-group.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                groupAlign\n                            \n                            \n                                groupTitle\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasGroupTitle\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        groupAlign\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'left'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/form-group.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        groupTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/form-group.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/group/form-group.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-form-group'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/group/form-group.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasGroupTitle\n                    \n                \n\n                \n                    \n                        gethasGroupTitle()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/group/form-group.component.ts:14\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { SizeThemeColorInputDirective } from '../../base/style-input/size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-form-group',\n  templateUrl: './form-group.component.html'\n})\nexport class FormGroupComponent extends SizeThemeColorInputDirective {\n\n  public rootClass = 'sb-el-form-group';\n\n  @Input()\n  public groupTitle: string = '';\n  get hasGroupTitle(): boolean {\n    return this.groupTitle !== '';\n  }\n\n  @Input()\n  public groupAlign: string | null = 'left';\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.groupAlign ? 'is-' + this.groupAlign : '');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  {{groupTitle}}\n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{groupTitle}}        '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormModule.html":{"url":"modules/FormModule.html","title":"module - FormModule","body":"\n                   \n\n\n\n\n    Modules\n    FormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormModule\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_FormModule_imports\n\n\n\ncluster_FormModule_declarations\n\n\n\n\nButtonComponent\n\nButtonComponent\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nButtonComponent->FormModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nFormModule -->\n\nCheckboxComponent->FormModule\n\n\n\n\n\nCheckboxGroupComponent\n\nCheckboxGroupComponent\n\nFormModule -->\n\nCheckboxGroupComponent->FormModule\n\n\n\n\n\nFileInputComponent\n\nFileInputComponent\n\nFormModule -->\n\nFileInputComponent->FormModule\n\n\n\n\n\nFormGroupComponent\n\nFormGroupComponent\n\nFormModule -->\n\nFormGroupComponent->FormModule\n\n\n\n\n\nIconButtonComponent\n\nIconButtonComponent\n\nFormModule -->\n\nIconButtonComponent->FormModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nFormModule -->\n\nIconComponent->FormModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nFormModule -->\n\nInputComponent->FormModule\n\n\n\n\n\nRadioButtonComponent\n\nRadioButtonComponent\n\nFormModule -->\n\nRadioButtonComponent->FormModule\n\n\n\n\n\nRadioButtonGroupComponent\n\nRadioButtonGroupComponent\n\nFormModule -->\n\nRadioButtonGroupComponent->FormModule\n\n\n\n\n\nSelectButtonComponent\n\nSelectButtonComponent\n\nFormModule -->\n\nSelectButtonComponent->FormModule\n\n\n\n\n\nSelectionOptionsDirective\n\nSelectionOptionsDirective\n\nFormModule -->\n\nSelectionOptionsDirective->FormModule\n\n\n\n\n\nSliderComponent\n\nSliderComponent\n\nFormModule -->\n\nSliderComponent->FormModule\n\n\n\n\n\nToggleSwitchComponent\n\nToggleSwitchComponent\n\nFormModule -->\n\nToggleSwitchComponent->FormModule\n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nFormModule->ButtonComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nFormModule->CheckboxComponent \n\n\n\n\n\nCheckboxGroupComponent \n\nCheckboxGroupComponent \n\nCheckboxGroupComponent  -->\n\nFormModule->CheckboxGroupComponent \n\n\n\n\n\nFileInputComponent \n\nFileInputComponent \n\nFileInputComponent  -->\n\nFormModule->FileInputComponent \n\n\n\n\n\nFormGroupComponent \n\nFormGroupComponent \n\nFormGroupComponent  -->\n\nFormModule->FormGroupComponent \n\n\n\n\n\nIconButtonComponent \n\nIconButtonComponent \n\nIconButtonComponent  -->\n\nFormModule->IconButtonComponent \n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nFormModule->IconComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nFormModule->InputComponent \n\n\n\n\n\nRadioButtonComponent \n\nRadioButtonComponent \n\nRadioButtonComponent  -->\n\nFormModule->RadioButtonComponent \n\n\n\n\n\nRadioButtonGroupComponent \n\nRadioButtonGroupComponent \n\nRadioButtonGroupComponent  -->\n\nFormModule->RadioButtonGroupComponent \n\n\n\n\n\nSelectButtonComponent \n\nSelectButtonComponent \n\nSelectButtonComponent  -->\n\nFormModule->SelectButtonComponent \n\n\n\n\n\nSliderComponent \n\nSliderComponent \n\nSliderComponent  -->\n\nFormModule->SliderComponent \n\n\n\n\n\nToggleSwitchComponent \n\nToggleSwitchComponent \n\nToggleSwitchComponent  -->\n\nFormModule->ToggleSwitchComponent \n\n\n\n\n\nBaseModule\n\nBaseModule\n\nFormModule -->\n\nBaseModule->FormModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/components/form/form.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ButtonComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            CheckboxGroupComponent\n                        \n                        \n                            FileInputComponent\n                        \n                        \n                            FormGroupComponent\n                        \n                        \n                            IconButtonComponent\n                        \n                        \n                            IconComponent\n                        \n                        \n                            InputComponent\n                        \n                        \n                            RadioButtonComponent\n                        \n                        \n                            RadioButtonGroupComponent\n                        \n                        \n                            SelectButtonComponent\n                        \n                        \n                            SelectionOptionsDirective\n                        \n                        \n                            SliderComponent\n                        \n                        \n                            ToggleSwitchComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ButtonComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            CheckboxGroupComponent\n                        \n                        \n                            FileInputComponent\n                        \n                        \n                            FormGroupComponent\n                        \n                        \n                            IconButtonComponent\n                        \n                        \n                            IconComponent\n                        \n                        \n                            InputComponent\n                        \n                        \n                            RadioButtonComponent\n                        \n                        \n                            RadioButtonGroupComponent\n                        \n                        \n                            SelectButtonComponent\n                        \n                        \n                            SliderComponent\n                        \n                        \n                            ToggleSwitchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button/button.component';\nimport { IconButtonComponent } from './icon-button/icon-button.component';\nimport { ToggleSwitchComponent } from './toggle-switch/toggle-switch.component';\nimport { CheckboxComponent } from './checkbox/checkbox.component';\nimport { RadioButtonComponent } from './radio-button/radio-button.component';\nimport { RadioButtonGroupComponent } from './group/radio-button/radio-button-group.component';\nimport { CheckboxGroupComponent } from './group/checkbox/checkbox-group.component';\nimport { SelectionOptionsDirective } from './group/base/selection-options.directive';\nimport { SelectButtonComponent } from './select-button/select-button.component';\nimport { SliderComponent } from './slider/slider.component';\nimport { FormsModule } from '@angular/forms';\nimport { BaseModule } from '../base/base.module';\nimport { IconComponent } from '../icon/icon.component';\nimport { FormGroupComponent } from './group/form-group.component';\nimport { InputComponent } from './input/input.component';\nimport { FileInputComponent } from './file-input/file-input.component';\n\n@NgModule({\n  declarations: [\n    ButtonComponent,\n    IconButtonComponent,\n    ToggleSwitchComponent,\n    CheckboxComponent,\n    RadioButtonComponent,\n    RadioButtonGroupComponent,\n    CheckboxGroupComponent,\n    SelectionOptionsDirective,\n    SelectButtonComponent,\n    SliderComponent,\n    IconComponent,\n    FormGroupComponent,\n    InputComponent,\n    FileInputComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    BaseModule\n  ],\n  exports: [\n    ButtonComponent,\n    IconButtonComponent,\n    ToggleSwitchComponent,\n    CheckboxComponent,\n    RadioButtonComponent,\n    RadioButtonGroupComponent,\n    CheckboxGroupComponent,\n    SelectButtonComponent,\n    SliderComponent,\n    IconComponent,\n    FormGroupComponent,\n    InputComponent,\n    FileInputComponent\n  ]\n})\nexport class FormModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridComponent.html":{"url":"components/GridComponent.html","title":"component - GridComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GridComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/grid/grid.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ClassNameInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-grid\n            \n\n\n\n\n            \n                templateUrl\n                ./grid.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dim\n                            \n                            \n                                gap\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dim\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : '2x2'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gap\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/grid/grid.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-grid'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/grid.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ClassNameInputDirective } from \"../base/style-input/class-name-input.directive\";\n\n@Component({\n  selector: 'sb-el-grid',\n  templateUrl: './grid.component.html'\n})\nexport class GridComponent extends ClassNameInputDirective {\n\n  public rootClass = 'sb-el-grid';\n\n  @Input()\n  public gap: string | null = null\n\n  @Input()\n  public dim: string | null = '2x2';\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.dim ? 'dim' + '--' + this.dim : '');\n    classes.push(this.gap ? 'gap' + '--' + this.gap : '');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconButtonComponent.html":{"url":"components/IconButtonComponent.html","title":"component - IconButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IconButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/icon-button/icon-button.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SizeThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-icon-button\n            \n\n\n\n\n            \n                templateUrl\n                ./icon-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _disabled\n                            \n                            \n                                    Public\n                                pill\n                            \n                            \n                                    Public\n                                plain\n                            \n                            \n                                    Public\n                                round\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    disabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pill: any, round: any, plain: any, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/form/icon-button/icon-button.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pill\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        round\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plain\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/icon-button/icon-button.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/icon-button/icon-button.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pill\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/icon-button/icon-button.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            plain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/icon-button/icon-button.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            round\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/icon-button/icon-button.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n\n                \n                    \n                        getdisabled()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/icon-button/icon-button.component.ts:20\n                                \n                            \n\n                \n                    \n                        setdisabled(isDisabled: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/icon-button/icon-button.component.ts:17\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            isDisabled\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Attribute, Component, Input, Optional } from '@angular/core';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { SizeThemeColorInputDirective } from '../../base/style-input/size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-icon-button',\n  templateUrl: './icon-button.component.html'\n})\nexport class IconButtonComponent extends SizeThemeColorInputDirective {\n\n  public plain: boolean = false;\n  public pill: boolean = false;\n  public round: boolean = false;\n  private _disabled: boolean = false;\n\n  @Input()\n  set disabled(isDisabled: boolean) {\n    this._disabled = isDisabled;\n  }\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  constructor(\n    @Optional() @Attribute('pill') pill: any,\n    @Optional() @Attribute('round') round: any,\n    @Optional() @Attribute('plain') plain: any,\n    themeService: ThemeService\n  ) {\n    super(themeService);\n    if (pill === '') this.pill = true;\n    if (round === '') this.round = true;\n    if (plain === '') this.plain = true;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/icon/icon.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SizeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-icon\n            \n\n\n\n\n            \n                templateUrl\n                ./icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/icon/icon.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { SizeColorInputDirective } from '../base/style-input/size-color-input.directive';\n\n@Component({\n  selector: 'sb-el-icon',\n  templateUrl: './icon.component.html'\n})\nexport class IconComponent extends SizeColorInputDirective {\n\n  constructor() {\n    super();\n    this.rootClass = 'sb-el-icon';\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputComponent.html":{"url":"components/InputComponent.html","title":"component - InputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/input/input.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ControlValueAccessorSizeThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: InputComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-input\n            \n\n\n\n\n            \n                templateUrl\n                ./input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pill\n                            \n                            \n                                    Public\n                                plain\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                            \n                                    Public\n                                getInputClasses\n                            \n                            \n                                    Public\n                                getPlaceholderClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholder\n                            \n                            \n                                spellcheck\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pill: any, plain: any, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/form/input/input.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pill\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plain\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/input/input.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        spellcheck\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/input/input.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/input/input.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/input/input.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInputClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInputClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/input/input.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPlaceholderClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPlaceholderClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/input/input.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pill\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/input/input.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            plain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/input/input.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-input'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/input/input.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Attribute, Component, Input, Optional } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { ControlValueAccessorSizeThemeColorInputDirective } from '../../base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-input',\n  templateUrl: './input.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: InputComponent,\n    multi: true\n  }]\n})\nexport class InputComponent extends ControlValueAccessorSizeThemeColorInputDirective {\n\n  public rootClass = 'sb-el-input';\n\n  @Input()\n  public placeholder: string = '';\n\n  @Input()\n  public type: string = 'text';\n\n  @Input()\n  public spellcheck: boolean = false;\n\n  public plain: boolean = false;\n  public pill: boolean = false;\n\n\n  constructor(\n    @Optional() @Attribute('pill') pill: any,\n    @Optional() @Attribute('plain') plain: any,\n    themeService: ThemeService\n  ) {\n    super(themeService);\n    if (pill === '') this.pill = true;\n    if (plain === '') this.plain = true;\n  }\n\n  public getInputClasses(): Array {\n    let classes = new Array();\n    classes.push(this.rootClass + '__input')\n    return classes;\n  }\n\n  public getPlaceholderClasses(): Array {\n    let classes = new Array();\n    classes.push(this.rootClass + '__placeholder')\n    classes.push(this.value || this.focused ? 'is-top' : '')\n    return classes;\n  }\n\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.pill ? 'is-pill' : '');\n    classes.push(this.plain ? 'is-plain': '');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n  \n    {{ placeholder }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ placeholder }}  '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Queue.html":{"url":"classes/Queue.html","title":"class - Queue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Queue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/queue/queue.ts\n        \n\n            \n                Description\n            \n            \n                A queue class with basic queue operations.\nThe queue class handles dequeuing and enqueuing of elements, as well as\nlength management. The dequeue method checks for an empty\nqueue, but does not produce an error if the queue is empty. Instead it\nreturns undefinded.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                queue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dequeue\n                            \n                            \n                                    Public\n                                enqueue\n                            \n                            \n                                    Public\n                                isEmpty\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            queue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/queue/queue.ts:13\n                            \n                        \n\n                \n                    \n                        The actual queue, which holds the elements.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            dequeue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dequeue()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/queue/queue.ts:39\n                \n            \n\n\n            \n                \n                    Removes (dequeues) the next element in the Queue.\nThe next element is the first element of the queue Array.\nThe method therefore gets the first element of this Array and shifts the\nArray by one to the left.\nIf the Queue is empty (the queue Array is empty), the\nmethod will return undefined instead of throwing an error.\n\n\n                    \n                    \n                    \n                        Returns :     T | undefined\n\n                    \n                    \n                        The first element in the queue or undefined if the\nQueue is empty\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enqueue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enqueue(value: T)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/queue/queue.ts:22\n                \n            \n\n\n            \n                \n                    Enqueues an element into the Queue.\nIt appends an element to the queue Array.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The element to add to the Queue\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isEmpty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEmpty()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/queue/queue.ts:63\n                \n            \n\n\n            \n                \n                    Checks if the Queue is empty or not.\nThe Queue if the queue Array is empty.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the queue is empty or false otherwise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/models/queue/queue.ts:52\n                                \n                            \n                    \n                        \n                                Gets the current length of the Queue.\nThe method returns the length of the queue Array.\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        export class Queue {\n  /**\n   * The actual queue, which holds the elements.\n   */\n  private queue: Array = new Array();\n\n  /**\n   * Enqueues an element into the `Queue`.\n   *\n   * It appends an element to the [queue]{@link #queue} `Array`.\n   *\n   *  @param{T} value The element to add to the `Queue`\n   */\n  public enqueue(value: T): void {\n    this.queue.push(value);\n  }\n\n  /**\n   * Removes (dequeues) the next element in the `Queue`.\n   *\n   * The next element is the first element of the [queue]{@link #queue} `Array`.\n   * The method therefore gets the first element of this `Array` and shifts the\n   * `Array` by one to the left.\n   *\n   * If the `Queue` is empty (the [queue]{@link #queue} `Array` is empty), the\n   * method will return `undefined` instead of throwing an error.\n   *\n   * @returns{T | undefined} The first element in the queue or `undefined` if the\n   * `Queue` is empty\n   */\n  public dequeue(): T | undefined {\n    if (!this.isEmpty()) {\n      return this.queue.shift();\n    } else return undefined;\n  }\n\n  /**\n   * Gets the current length of the `Queue`.\n   *\n   * The method returns the length of the [queue]{@link #queue} `Array`.\n   *\n   * @returns{number} The length of the `Queue`\n   */\n  get length(): number {\n    return this.queue.length;\n  }\n\n  /**\n   * Checks if the `Queue` is empty or not.\n   *\n   * The `Queue` if the [queue]{@link #queue} `Array` is empty.\n   *\n   * @returns{boolean} `true` if the queue is empty or `false` otherwise\n   */\n  public isEmpty(): boolean {\n    return this.queue.length == 0;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RadioButtonComponent.html":{"url":"components/RadioButtonComponent.html","title":"component - RadioButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RadioButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/radio-button/radio-button.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ControlValueAccessorSizeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: RadioButtonComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-radio-button\n            \n\n\n\n\n            \n                templateUrl\n                ./radio-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                check\n                            \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                labelPosition\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/form/radio-button/radio-button.component.ts:19\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/radio-button/radio-button.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelPosition\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'right'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/radio-button/radio-button.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            check\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    check()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/radio-button/radio-button.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/radio-button/radio-button.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlValueAccessorSizeColorInputDirective } from '../../base/control-value-accessor-style-input/control-value-accessor-size-color-input.directive';\n\n@Component({\n  selector: 'sb-el-radio-button',\n  templateUrl: './radio-button.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: RadioButtonComponent,\n    multi: true\n  }]\n})\nexport class RadioButtonComponent extends ControlValueAccessorSizeColorInputDirective {\n\n  @Input()\n  public label: string = '';\n  @Input()\n  public labelPosition: string = 'right';\n\n  constructor() {\n    super();\n    this.rootClass = 'sb-el-radio-button';\n  }\n\n  public check(): void {\n    this.value = true;\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.value ? 'is-checked' : 'is-unchecked');\n    classes.push(this.label ? 'is-label' : '');\n    classes.push(this.label ? 'label-is-' + this.labelPosition : '');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  {{ label }}\n  \n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}            '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'RadioButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RadioButtonGroupComponent.html":{"url":"components/RadioButtonGroupComponent.html","title":"component - RadioButtonGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RadioButtonGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/group/radio-button/radio-button-group.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SelectionOptionsDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: RadioButtonGroupComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-radio-button-group\n            \n\n\n\n\n            \n                templateUrl\n                ./radio-button-group.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                check\n                            \n                            \n                                    Protected\n                                updateValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                groupAlign\n                            \n                            \n                                groupTitle\n                            \n                            \n                                labelPosition\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        groupAlign\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'left'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/radio-button/radio-button-group.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        groupTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/radio-button/radio-button-group.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelPosition\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'right'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/radio-button/radio-button-group.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            check\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    check(newOption: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/group/radio-button/radio-button-group.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newOption\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValues()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/group/radio-button/radio-button-group.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-radio-button-group'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/group/radio-button/radio-button-group.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { SelectionOptionsDirective } from '../base/selection-options.directive';\n\n@Component({\n  selector: 'sb-el-radio-button-group',\n  templateUrl: './radio-button-group.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: RadioButtonGroupComponent,\n    multi: true\n  }]\n})\nexport class RadioButtonGroupComponent extends SelectionOptionsDirective {\n\n  public rootClass = 'sb-el-radio-button-group';\n\n  @Input()\n  public groupTitle: string = '';\n\n  @Input()\n  public groupAlign: string | null = 'left';\n\n  @Input()\n  public labelPosition: string = 'right';\n\n  public check(newOption: string) {\n    this.options.forEach((option: string) => {\n      if (option !== newOption) this.selectedOptions[option] = false;\n    })\n    this.writeValueInnerChange(newOption);\n  }\n\n  protected updateValues(): void {\n    this.options.forEach((option: string) => {\n      if (option === this.value) {\n        this.selectedOptions[option] = true;\n      } else this.selectedOptions[option] = false;\n    })\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'RadioButtonGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SbElementModule.html":{"url":"modules/SbElementModule.html","title":"module - SbElementModule","body":"\n                   \n\n\n\n\n    Modules\n    SbElementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SbElementModule\n\n\n\ncluster_SbElementModule_imports\n\n\n\ncluster_SbElementModule_exports\n\n\n\ncluster_SbElementModule_declarations\n\n\n\n\nAlertBoxComponent\n\nAlertBoxComponent\n\n\n\nSbElementModule\n\nSbElementModule\n\nSbElementModule -->\n\nAlertBoxComponent->SbElementModule\n\n\n\n\n\nAlertComponent\n\nAlertComponent\n\nSbElementModule -->\n\nAlertComponent->SbElementModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nSbElementModule -->\n\nCardComponent->SbElementModule\n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nSbElementModule -->\n\nContainerComponent->SbElementModule\n\n\n\n\n\nGridComponent\n\nGridComponent\n\nSbElementModule -->\n\nGridComponent->SbElementModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nSbElementModule -->\n\nTableComponent->SbElementModule\n\n\n\n\n\nAlertBoxComponent \n\nAlertBoxComponent \n\nAlertBoxComponent  -->\n\nSbElementModule->AlertBoxComponent \n\n\n\n\n\nAlertComponent \n\nAlertComponent \n\nAlertComponent  -->\n\nSbElementModule->AlertComponent \n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nSbElementModule->CardComponent \n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nSbElementModule->ContainerComponent \n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nSbElementModule->FormModule \n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nSbElementModule->GridComponent \n\n\n\n\n\nTableComponent \n\nTableComponent \n\nTableComponent  -->\n\nSbElementModule->TableComponent \n\n\n\n\n\nThemeInputDirective \n\nThemeInputDirective \n\nThemeInputDirective  -->\n\nSbElementModule->ThemeInputDirective \n\n\n\n\n\nBaseModule\n\nBaseModule\n\nSbElementModule -->\n\nBaseModule->SbElementModule\n\n\n\n\n\nFormModule\n\nFormModule\n\nSbElementModule -->\n\nFormModule->SbElementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/sb-element.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AlertBoxComponent\n                        \n                        \n                            AlertComponent\n                        \n                        \n                            CardComponent\n                        \n                        \n                            ContainerComponent\n                        \n                        \n                            GridComponent\n                        \n                        \n                            TableComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BaseModule\n                        \n                        \n                            FormModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AlertBoxComponent\n                        \n                        \n                            AlertComponent\n                        \n                        \n                            CardComponent\n                        \n                        \n                            ContainerComponent\n                        \n                        \n                            FormModule\n                        \n                        \n                            GridComponent\n                        \n                        \n                            TableComponent\n                        \n                        \n                            ThemeInputDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BaseModule } from './components/base/base.module';\nimport { FormModule } from './components/form/form.module';\n\n/**\n * Components\n */\nimport { ContainerComponent } from './components/container/container.component';\nimport { AlertBoxComponent } from './components/alert-box/alert-box.component';\nimport { TableComponent } from './components/table/table.component';\nimport { AlertComponent } from './components/alert/alert.component';\nimport { CardComponent } from './components/card/card.component';\nimport { GridComponent } from './components/grid/grid.component';\nimport { ThemeInputDirective } from \"./components/base/style-input/theme-input.directive\";\n\n\n@NgModule({\n  declarations: [\n    ContainerComponent,\n    AlertBoxComponent,\n    TableComponent,\n    AlertComponent,\n    CardComponent,\n    GridComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    FormModule,\n    BaseModule,\n  ],\n  exports: [\n    ContainerComponent,\n    AlertBoxComponent,\n    TableComponent,\n    AlertComponent,\n    CardComponent,\n    GridComponent,\n    // modules\n    FormModule,\n    // directives\n    ThemeInputDirective\n  ]\n})\nexport class SbElementModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectButtonComponent.html":{"url":"components/SelectButtonComponent.html","title":"component - SelectButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/select-button/select-button.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SelectionOptionsDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: SelectButtonComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-select-button\n            \n\n\n\n\n            \n                templateUrl\n                ./select-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pill\n                            \n                            \n                                    Public\n                                plain\n                            \n                            \n                                    Public\n                                showOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getButtonClasses\n                            \n                            \n                                    Public\n                                getClasses\n                            \n                            \n                                    Public\n                                select\n                            \n                            \n                                    Public\n                                toggle\n                            \n                            \n                                    Protected\n                                updateValues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pill: any, plain: any, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/form/select-button/select-button.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pill\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plain\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getButtonClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getButtonClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/select-button/select-button.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/select-button/select-button.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            select\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    select(newOption: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/select-button/select-button.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newOption\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/select-button/select-button.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValues()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/select-button/select-button.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pill\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/select-button/select-button.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            plain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/select-button/select-button.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/select-button/select-button.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Attribute, Component, Optional } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { SelectionOptionsDirective } from '../group/base/selection-options.directive';\n\n@Component({\n  selector: 'sb-el-select-button',\n  templateUrl: './select-button.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: SelectButtonComponent,\n    multi: true\n  }]\n})\nexport class SelectButtonComponent extends SelectionOptionsDirective {\n\n  public plain: boolean = false;\n  public pill: boolean = false;\n  public showOptions: boolean = false;\n\n  constructor(\n    @Optional() @Attribute('pill') pill: any,\n    @Optional() @Attribute('plain') plain: any,\n    themeService: ThemeService\n  ) {\n    super(themeService);\n    if (pill === '') this.pill = true;\n    if (plain === '') this.plain = true;\n    this.rootClass = 'sb-el-select-button';\n  }\n\n  public toggle(): void {\n    this.showOptions = !this.showOptions;\n  }\n\n  public select(newOption: string) {\n    this.toggle();\n    this.options.forEach((option: string) => {\n      if (option !== newOption) this.selectedOptions[option] = false;\n    })\n    this.writeValueInnerChange(newOption);\n  }\n\n  protected updateValues(): void {\n    this.options.forEach((option: string) => {\n      if (option === this.value) {\n        this.selectedOptions[option] = true;\n      } else this.selectedOptions[option] = false;\n    })\n  }\n\n  public getButtonClasses(): Array {\n    let classes = new Array();\n    classes.push('sb-el-select-button__button');\n    return classes;\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.pill ? 'is-pill' : '');\n    classes.push(this.plain ? 'is-plain': '');\n    classes.push(this.showOptions ? 'is-open' : 'is-closed');\n    return classes;\n  }\n}\n\n    \n\n    \n        \n  \n    {{ value }}\n    \n    &#xe5cf;\n  \n  \n    \n      \n          {{ option }}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ value }}                                {{ option }}            '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'SelectButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectedOptions.html":{"url":"interfaces/SelectedOptions.html","title":"interface - SelectedOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SelectedOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/form/group/base/selected-options.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        boolean\n\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/form/group/base/selected-options.ts:1\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface SelectedOptions {\n  [key: string]: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SelectionOptionsDirective.html":{"url":"directives/SelectionOptionsDirective.html","title":"directive - SelectionOptionsDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SelectionOptionsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/form/group/base/selection-options.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _options\n                            \n                            \n                                    Public\n                                selectedOptions\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/base/selection-options.directive.ts:14\n                            \n                        \n            \n        \n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/group/base/selection-options.directive.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SelectedOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/group/base/selection-options.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/group/base/selection-options.directive.ts:18\n                                \n                            \n\n                \n                    \n                        setoptions(options)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/group/base/selection-options.directive.ts:14\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            options\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { SelectedOptions } from './selected-options';\nimport { ControlValueAccessorSizeThemeColorInputDirective } from '../../../../components/base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class SelectionOptionsDirective extends ControlValueAccessorSizeThemeColorInputDirective {\n\n  public selectedOptions: SelectedOptions = {};\n  protected _options: Array = new Array();\n\n  @Input()\n  set options(options: Array) {\n    this._options = options;\n    this._options.forEach((option: string) => this.selectedOptions[option] = false);\n  }\n  get options(): Array {return this._options}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SizeColorInputDirective.html":{"url":"directives/SizeColorInputDirective.html","title":"directive - SizeColorInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SizeColorInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/style-input/size-color-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/size-color-input.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'd'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/size-color-input.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/style-input/size-color-input.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ClassNameInputDirective } from './class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class SizeColorInputDirective extends ClassNameInputDirective {\n\n    @Input()\n    public size: string | null = 'd';\n\n    @Input()\n    public color: string | null = 'primary';\n\n    public getClasses(): Array {\n      let classes = super.getClasses();\n      classes.push(this.size ? this.rootClass + '--' + this.size : '');\n      classes.push(this.color ? this.rootClass + '--' + this.color : '');\n      return classes;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SizeInputDirective.html":{"url":"directives/SizeInputDirective.html","title":"directive - SizeInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SizeInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/style-input/size-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'd'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/size-input.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/style-input/size-input.directive.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ClassNameInputDirective } from './class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class SizeInputDirective extends ClassNameInputDirective {\n\n  @Input()\n  public size: string | null = 'd';\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.size ? this.rootClass + '--' + this.size : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SizeThemeColorInputDirective.html":{"url":"directives/SizeThemeColorInputDirective.html","title":"directive - SizeThemeColorInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SizeThemeColorInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/style-input/size-theme-color-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/base/style-input/size-theme-color-input.directive.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/size-theme-color-input.directive.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'd'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/size-theme-color-input.directive.ts:11\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/style-input/size-theme-color-input.directive.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/size-theme-color-input.directive.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { ClassNameInputDirective } from './class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class SizeThemeColorInputDirective extends ClassNameInputDirective {\n\n  @Input()\n  public size: string | null = 'd';\n\n  public theme: string;\n\n  @Input()\n  public color: string | null = 'primary';\n\n  constructor(\n    private themeService: ThemeService\n  ) {\n    super();\n    this.theme = themeService.get();\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.size ? this.rootClass + '--' + this.size : '');\n    classes.push(this.theme && this.color ?\n      this.rootClass + '--' + this.theme + '-' + this.color : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SizeThemeInputDirective.html":{"url":"directives/SizeThemeInputDirective.html","title":"directive - SizeThemeInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SizeThemeInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/style-input/size-theme-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/base/style-input/size-theme-input.directive.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'd'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/size-theme-input.directive.ts:11\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/style-input/size-theme-input.directive.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/size-theme-input.directive.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { ClassNameInputDirective } from './class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class SizeThemeInputDirective extends ClassNameInputDirective {\n\n  @Input()\n  public size: string | null = 'd';\n\n  public theme: string;\n\n  constructor(\n    private themeService: ThemeService\n  ) {\n    super();\n    this.theme = themeService.get();\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.size ? this.rootClass + '--' + this.size : '');\n    classes.push(this.theme ? this.rootClass + '--' + this.theme : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SliderComponent.html":{"url":"components/SliderComponent.html","title":"component - SliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/slider/slider.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ControlValueAccessorSizeThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: SliderComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-slider\n            \n\n\n\n\n            \n                templateUrl\n                ./slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _step\n                            \n                            \n                                    Private\n                                decimalPlaces\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                            \n                                    Public\n                                snapPoints\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                max\n                            \n                            \n                                min\n                            \n                            \n                                showValue\n                            \n                            \n                                snap\n                            \n                            \n                                step\n                            \n                            \n                                valueSuffix\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    step\n                                \n                                \n                                    snap\n                                \n                                \n                                    numberPipingValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showValue\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        snap\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        step\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueSuffix\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:60\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/slider/slider.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _step\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            decimalPlaces\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-slider'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snapPoints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:50\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        step\n                    \n                \n\n                \n                    \n                        getstep()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/slider/slider.component.ts:34\n                                \n                            \n\n                \n                    \n                        setstep(step: number)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/slider/slider.component.ts:29\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            step\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        snap\n                    \n                \n\n\n                \n                    \n                        setsnap(snap)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/slider/slider.component.ts:38\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            snap\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        numberPipingValue\n                    \n                \n\n                \n                    \n                        getnumberPipingValue()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/slider/slider.component.ts:52\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlValueAccessorSizeThemeColorInputDirective } from '../../base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-slider',\n  templateUrl: './slider.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: SliderComponent,\n    multi: true\n  }]\n})\nexport class SliderComponent extends ControlValueAccessorSizeThemeColorInputDirective {\n\n  public rootClass = 'sb-el-slider';\n\n  @Input()\n  public label: string = '';\n\n  @Input()\n  public min: number = 0;\n\n  @Input()\n  public max: number = 10;\n\n  private _step: number = 1;\n  @Input()\n  set step(step: number) {\n    this._step = step;\n    if (Math.floor(step) !== step)\n        this.decimalPlaces = step.toString().split(\".\")[1].length || 0;\n  }\n  get step(): number { return this._step }\n  private decimalPlaces: number = 0;\n\n  @Input()\n  set snap(snap: Array | boolean) {\n    if (Array.isArray(snap)) this.snapPoints = snap;\n    else if (snap) {\n      this.snapPoints = new Array();\n      let snapStep = Math.round((this.max-this.min)/5/this.step)*this.step;\n      let sum = this.min;\n      while(sum  = new Array();\n\n  get numberPipingValue(): string {\n    return '1.' + this.decimalPlaces + '-' + this.decimalPlaces;\n  }\n\n  @Input()\n  public showValue: boolean = false;\n\n  @Input()\n  public valueSuffix: string = '';\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.label ? 'is-label' : 'is-not-label');\n    classes.push(this.showValue ? 'is-value' : 'is-not-value');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  {{ label }}\n  \n  \n    {{ value | number: numberPipingValue }} {{ valueSuffix }}\n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}        {{ value | number: numberPipingValue }} {{ valueSuffix }}          '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'SliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/StateManagerDirective.html":{"url":"directives/StateManagerDirective.html","title":"directive - StateManagerDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  StateManagerDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor/state-manager.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _disabled\n                            \n                            \n                                    Private\n                                _focused\n                            \n                            \n                                    Private\n                                _pristine\n                            \n                            \n                                    Private\n                                _touched\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                setFocusedState\n                            \n                            \n                                    Public\n                                setPristineState\n                            \n                            \n                                    Public\n                                setTouchedState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                focused\n                            \n                            \n                                pristine\n                            \n                            \n                                touched\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    touched\n                                \n                                \n                                    pristine\n                                \n                                \n                                    disabled\n                                \n                                \n                                    focused\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        focused\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pristine\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        touched\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDisabledState(disabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    disabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setFocusedState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setFocusedState(focused: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    focused\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPristineState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPristineState(pristine: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pristine\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setTouchedState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTouchedState(touched: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    touched\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _focused\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _pristine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _touched\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        touched\n                    \n                \n\n                \n                    \n                        gettouched()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:11\n                                \n                            \n\n                \n                    \n                        settouched(isTouched: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:10\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            isTouched\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        pristine\n                    \n                \n\n                \n                    \n                        getpristine()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:16\n                                \n                            \n\n                \n                    \n                        setpristine(isPristine: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:15\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            isPristine\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n\n                \n                    \n                        getdisabled()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:21\n                                \n                            \n\n                \n                    \n                        setdisabled(isDisabled: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            isDisabled\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        focused\n                    \n                \n\n                \n                    \n                        getfocused()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:26\n                                \n                            \n\n                \n                    \n                        setfocused(isFocused: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:25\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            isFocused\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class StateManagerDirective {\n\n  private _touched: boolean = false;\n  @Input()\n  set touched(isTouched: boolean) { this._touched = isTouched }\n  get touched(): boolean {return this._touched}\n\n  private _pristine: boolean = true;\n  @Input()\n  set pristine(isPristine: boolean) { this._pristine = isPristine }\n  get pristine(): boolean {return this._pristine}\n\n  private _disabled: boolean = false;\n  @Input()\n  set disabled(isDisabled: boolean) { this._disabled = isDisabled }\n  get disabled(): boolean { return this._disabled }\n\n  private _focused: boolean = false;\n  @Input()\n  set focused(isFocused: boolean) { this._focused = isFocused }\n  get focused(): boolean { return this._focused }\n\n  public setDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\n\n  public setTouchedState(touched: boolean): void {\n    this.touched = touched;\n  }\n\n  public setPristineState(pristine: boolean): void {\n    this.pristine = pristine;\n  }\n\n  public setFocusedState(focused: boolean): void {\n    this.focused = focused\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Table.html":{"url":"classes/Table.html","title":"class - Table","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Table\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/table/table.ts\n        \n\n            \n                Description\n            \n            \n                Datastructure, holding information about a table. The table consists of\ncolumns of different data types. Each column has different styling options\nin the form of ColumnInformationInterface. The data can be accessed\nvia tha data field. The styling options are stored in the\ncolumnInformation array.\n\n            \n\n\n            \n                Implements\n            \n            \n                            TableInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                columnInformation\n                            \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                columnsToRows\n                            \n                            \n                                    Static\n                                    Async\n                                fromCSV\n                            \n                            \n                                    Static\n                                fromJSON\n                            \n                            \n                                    Static\n                                fromRows\n                            \n                            \n                                    Private\n                                    Static\n                                getMaxColumnLength\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data?: Array>, columnInformation?: Array)\n                    \n                \n                        \n                            \n                                Defined in src/lib/models/table/table.ts:33\n                            \n                        \n\n                \n                    \n                            Initiates a new Table. The table can be initiated with or without\n data and style. If one or the other is missing, the initiation will create\n an empty Table.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    Array>\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                The data of the Table stored as an\nArray of columns\n\n                                                        \n                                                \n                                                \n                                                        columnInformation\n                                                  \n                                                        \n                                                                        Array\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                The styling information\nfor each column\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            columnInformation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/table/table.ts:19\n                            \n                        \n\n                \n                    \n                        Information about the columns.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array>\n\n                        \n                    \n                    \n                        \n                            Default value : new Array>()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/table/table.ts:26\n                            \n                        \n\n                \n                    \n                        The data of the table. The data is stored as an array of data for each row.\nEach row contains the data for each column.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            columnsToRows\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    columnsToRows(columns: Array>)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/table/table.ts:166\n                \n            \n\n\n            \n                \n                    Transforms the columns into rows. This is necessary, when data is received\nin form of columns instead of rows. The missing entries get filled up with\nthe character '-'.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    columns\n                                    \n                                            Array>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The columns to transform\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array>\n\n                    \n                    \n                        The data in form of rows\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            fromCSV\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromCSV(csvFile: File, columnInformationOptions?: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/table/table.ts:68\n                \n            \n\n\n            \n                \n                    Creates a Table from a CSV file.\nThe Function returns a promise, since the Csv class has to access\nthe filesystem. The parseFile method is a static\nmethod, which is iterable over the column names of the table. The columns\nthen get set to the new table and the column names get set to the\ncolumnInformation of the Table.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    csvFile\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The CSV file\n\n                                    \n                                \n                                \n                                    columnInformationOptions\n                                    \n                                                Array\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The additional options for the columns\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The new Table in form of a Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            fromJSON\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromJSON(table: Object, columnInformationOptions?: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/table/table.ts:124\n                \n            \n\n\n            \n                \n                    Creates a Table from a JSON object.\nThe JSON object contains entries with column name as the key and the data\nof the column as the entry to the correspronding key. The column data has\nto be stored in an Array.\nThe method maps each column to rows. Meaning, that it extracts each row\nfrom the columns. This is necessary for the Table to properly store\nthe data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The JSON object\n\n                                    \n                                \n                                \n                                    columnInformationOptions\n                                    \n                                                Array\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The additional column information\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Table\n\n                    \n                    \n                        The new Table\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            fromRows\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromRows(rows: Array>, columnInformation: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/table/table.ts:99\n                \n            \n\n\n            \n                \n                    Creates a Table from an Array of rows.\nThe Array has to contain arrays of the data of the rows. The data then\ngets set to the Table as well as the columnInformation.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    rows\n                                    \n                                            Array>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The rows of the Table\n\n                                    \n                                \n                                \n                                    columnInformation\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The\nadditional column information\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Table\n\n                    \n                    \n                        The new Table\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getMaxColumnLength\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaxColumnLength(columns: Array>)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/table/table.ts:152\n                \n            \n\n\n            \n                \n                    Returns the maximum length of all the columns.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    columns\n                                    \n                                            Array>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The columns$\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The maximum length of all the columns\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Csv } from \"../csv/csv\";\nimport { ColumnInformation } from \"./column-information\";\nimport { TableInterface } from \"./table.interface\";\nimport { ColumnInformationInterface } from './column-information.interface';\nimport { ColumnInformationOptionsInterface } from \"./column-information-options.interface\";\n\n/**\n * Datastructure, holding information about a table. The table consists of\n * columns of different data types. Each column has different styling options\n * in the form of {@link ColumnInformationInterface}. The data can be accessed\n * via tha [data]{@link #data} field. The styling options are stored in the\n * [columnInformation]{@link #columnInformation} array.\n */\nexport class Table implements TableInterface {\n\n  /**\n   * Information about the columns.\n   */\n  public columnInformation: Array\n    = new Array();\n\n  /**\n   * The data of the table. The data is stored as an array of data for each row.\n   * Each row contains the data for each column.\n   */\n  public data: Array> = new Array>();\n\n\n  constructor();\n  constructor(\n    data: Array>,\n    columnInformation: Array\n  );\n  /**\n\t * Initiates a new {@link Table}. The table can be initiated with or without\n   * data and style. If one or the other is missing, the initiation will create\n   * an empty {@link Table}.\n   *\n   * @param{Array>} data The data of the `Table` stored as an\n   * `Array` of columns\n   * @param{Array} columnInformation The styling information\n   * for each column\n\t */\n  constructor(\n    data?: Array>,\n    columnInformation?: Array\n  ) {\n    if (data && columnInformation) {\n      this.data = data;\n      this.columnInformation = columnInformation;\n    }\n  }\n\n  /**\n   * Creates a {@link Table} from a `CSV` file.\n   *\n   * The Function returns a promise, since the {@link Csv} class has to access\n   * the filesystem. The [parseFile]{@link Csv#parseFile} method is a static\n   * method, which is iterable over the column names of the table. The columns\n   * then get set to the new table and the column names get set to the\n   * `columnInformation` of the `Table`.\n   *\n   * @param{File} csvFile The CSV file\n   * @param{Array} columnInformationOptions\n   * The additional options for the columns\n   * @returns The new Table in form of a `Promise`\n   */\n  public static async fromCSV(\n    csvFile: File,\n    columnInformationOptions?: Array\n  ): Promise {\n    return Csv.parseFile(csvFile).then(csv => {\n      let columnInformation = new Array();\n\n      csv.forEachColumnName((columnName: string, index: number) => {\n        let info = ColumnInformation.defaults.cloneAndSet({name: columnName});\n        if (columnInformationOptions && columnInformationOptions[index]) {\n          info = ColumnInformation.merge(info, columnInformationOptions[index])\n        }\n\n        columnInformation.push(info)\n      });\n\n      return new Table(csv.data, columnInformation);\n    });\n  }\n\n  /**\n   * Creates a {@link Table} from an `Array` of rows.\n   *\n   * The `Array` has to contain arrays of the data of the rows. The data then\n   * gets set to the {@link Table} as well as the `columnInformation`.\n   *\n   * @param{Array>} rows The rows of the `Table`\n   * @param{Array} columnInformation The\n   * additional column information\n   * @returns The new Table\n   */\n  public static fromRows(\n    rows: Array>,\n    columnInformation: Array\n  ): Table {\n    return new Table(rows, columnInformation.map(\n      info => ColumnInformation.defaults.cloneAndSet(info)\n    ));\n  }\n\n  /**\n   * Creates a {@link Table} from a `JSON` object.\n   *\n   * The `JSON` object contains entries with column name as the key and the data\n   * of the column as the entry to the correspronding key. The column data has\n   * to be stored in an `Array`.\n   *\n   * The method maps each column to rows. Meaning, that it extracts each row\n   * from the columns. This is necessary for the {@link Table} to properly store\n   * the data.\n   *\n   * @param{Object} table The `JSON` object\n   * @param{Array} columnInformationOptions\n   * The additional column information\n   * @returns The new Table\n   */\n  public static fromJSON(\n    table: Object,\n    columnInformationOptions?: Array\n  ): Table {\n    let entries = Object.entries(table);\n    let columns = new Array>();\n    let columnInformation = new Array();\n\n    entries.forEach((entry: any, index: number) => {\n      if (Array.isArray(entry[1])) {\n        columns.push(entry[1])\n        let info = ColumnInformation.defaults.cloneAndSet({name: entry[0]});\n        if (columnInformationOptions && columnInformationOptions[index]) {\n          info = ColumnInformation.merge(info, columnInformationOptions[index])\n        }\n        columnInformation.push(info)\n      }\n    })\n\n    return new Table(this.columnsToRows(columns), columnInformation);\n  }\n\n  /**\n   * Returns the maximum length of all the columns.\n   *\n   * @param{Array>} columns The columns$\n   * @returns The maximum length of all the columns\n   */\n  private static getMaxColumnLength(columns: Array>): number {\n    let max = 0;\n    columns.forEach(column => max = column.length > max ? column.length : max);\n    return max;\n  }\n\n  /**\n   * Transforms the columns into rows. This is necessary, when data is received\n   * in form of columns instead of rows. The missing entries get filled up with\n   * the character '-'.\n   *\n   * @param{Array>} columns The columns to transform\n   * @returns The data in form of rows\n   */\n  private static columnsToRows(columns: Array>): Array> {\n    let rows = new Array>();\n    for (let i = 0 ; i ();\n      columns.forEach(column => {\n        row.push(column[i] ? column[i] : '-')\n      })\n      rows.push(row);\n    }\n    return rows;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableComponent.html":{"url":"components/TableComponent.html","title":"component - TableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/table/table.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-table\n            \n\n\n\n\n            \n                templateUrl\n                ./table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rootClass\n                            \n                            \n                                    Public\n                                subRootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                            \n                                    Public\n                                getColumnClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                separation\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        separation\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'all'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/table/table.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        table\n                    \n                \n                \n                    \n                        Type :         TableInterface\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/table/table.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/table/table.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getColumnClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getColumnClasses(columnIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/table/table.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    columnIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-table'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/table/table.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subRootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : this.rootClass + '__data'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/table/table.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { TableInterface } from \"../../models/table/table.interface\";\nimport { ThemeColorInputDirective } from '../base/style-input/theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-table',\n  templateUrl: './table.component.html'\n})\nexport class TableComponent extends ThemeColorInputDirective {\n\n  public rootClass: string = 'sb-el-table';\n  public subRootClass: string = this.rootClass + '__data';\n\n  @Input()\n  public separation: string = 'all';\n\n  @Input()\n  public table!: TableInterface;\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    if (this.separation === 'all') {\n      classes.push('is-border-separation');\n      classes.push('is-color-separation');\n    } else if (this.separation) {\n      classes.push('is-' + this.separation + '-separation');\n    }\n    return classes;\n  }\n\n  public getColumnClasses(columnIndex: number): Array {\n    let classes = new Array();\n    let columnInformation = this.table.columnInformation[columnIndex];\n    classes.push(this.subRootClass);\n    classes.push(this.subRootClass + '--' + columnInformation.color)\n    classes.push('is-' + columnInformation.alignment)\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ column.name }}\n        \n      \n    \n    \n      \n        \n          {{ columnEntry }}\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ column.name }}                                              {{ columnEntry }}                    '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'TableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableInterface.html":{"url":"interfaces/TableInterface.html","title":"interface - TableInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TableInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/table/table.interface.ts\n        \n\n            \n                Description\n            \n            \n                An interface necessary for the TableComponent to be able to render\na table.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        columnInformation\n                                \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        columnInformation\n                                    \n                                \n                                \n                                    \n                                        columnInformation:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Information about the columns.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     Array>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array>\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data of the table. The data is stored as an array of data for each row.\nEach row contains the data for each column.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ColumnInformationInterface } from \"./column-information.interface\";\n\n/**\n * An interface necessary for the {@link TableComponent} to be able to render\n * a table.\n */\nexport interface TableInterface {\n\n  /**\n   * Information about the columns.\n   */\n  columnInformation: Array;\n\n  /**\n   * The data of the table. The data is stored as an array of data for each row.\n   * Each row contains the data for each column.\n   */\n  data: Array>;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ThemeColorInputDirective.html":{"url":"directives/ThemeColorInputDirective.html","title":"directive - ThemeColorInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ThemeColorInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/style-input/theme-color-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/base/style-input/theme-color-input.directive.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/theme-color-input.directive.ts:13\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/style-input/theme-color-input.directive.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/theme-color-input.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { ClassNameInputDirective } from './class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ThemeColorInputDirective extends ClassNameInputDirective {\n\n  public theme: string;\n\n  @Input()\n  public color: string | null = 'primary';\n\n  constructor(\n    private themeService: ThemeService\n  ) {\n    super();\n    this.theme = themeService.get();\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.theme && this.color ?\n      this.rootClass + '--' + this.theme + '-' + this.color : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ThemeInputDirective.html":{"url":"directives/ThemeInputDirective.html","title":"directive - ThemeInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ThemeInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/style-input/theme-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/base/style-input/theme-input.directive.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/style-input/theme-input.directive.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/theme-input.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { ClassNameInputDirective } from './class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ThemeInputDirective  extends ClassNameInputDirective {\n\n  public theme: string;\n\n  constructor(\n    private themeService: ThemeService\n  ) {\n    super();\n    this.theme = themeService.get();\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.theme ? this.rootClass + '--' + this.theme : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/theme/theme.service.ts\n        \n\n            \n                Description\n            \n            \n                A service which provides global access to the current theme.\nThe service allows a component to get and set the theme. There are two\nthemes:\n\nlight\nnight\n\nThe default theme is the night theme. The theme is stored in form of a\nstring, which is then included into classes of the different components or\nelements.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                commit\n                            \n                            \n                                    Public\n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            commit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    commit(theme: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/theme/theme.service.ts:29\n                \n            \n\n\n            \n                \n                    Sets the theme to the service.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    theme\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The theme to commit\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/theme/theme.service.ts:36\n                \n            \n\n\n            \n                \n                    Gets the current theme.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The current theme\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'night'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/theme/theme.service.ts:22\n                            \n                        \n\n                \n                    \n                        The current theme. The default theme is night.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n  * A service which provides global access to the current theme.\n  *\n  * The service allows a component to get and set the theme. There are two\n  * themes:\n  * - `light`\n  * - `night`\n  *\n  * The default theme is the `night` theme. The theme is stored in form of a\n  * string, which is then included into classes of the different components or\n  * elements.\n  */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  /**\n   * The current theme. The default theme is `night`.\n   */\n  private _theme: string = 'night';\n\n  /**\n   * Sets the theme to the service.\n   *\n   * @param{string} theme The theme to commit\n   */\n  public commit(theme: string): void { this._theme = theme }\n\n  /**\n   *  Gets the current theme.\n   *\n   * @returns{string} The current theme\n   */\n  public get(): string { return this._theme }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleSwitchComponent.html":{"url":"components/ToggleSwitchComponent.html","title":"component - ToggleSwitchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleSwitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/toggle-switch/toggle-switch.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ControlValueAccessorSizeThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: ToggleSwitchComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-toggle-switch\n            \n\n\n\n\n            \n                templateUrl\n                ./toggle-switch.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/toggle-switch/toggle-switch.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/toggle-switch/toggle-switch.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-toggle-switch'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/toggle-switch/toggle-switch.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlValueAccessorSizeThemeColorInputDirective } from '../../base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-toggle-switch',\n  templateUrl: './toggle-switch.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: ToggleSwitchComponent,\n    multi: true\n  }]\n})\nexport class ToggleSwitchComponent extends ControlValueAccessorSizeThemeColorInputDirective {\n\n  public rootClass = 'sb-el-toggle-switch';\n\n  public toggle(): void {\n    this.value = !this.value;\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.value ? 'is-on' : 'is-off');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToggleSwitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/components/alert-box/alert-box.component.ts\n            \n            component\n            AlertBoxComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/lib/components/alert/alert.component.ts\n            \n            component\n            AlertComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor-style-input/control-value-accessor-class-name-input.directive.ts\n            \n            directive\n            ControlValueAccessorClassNameInputDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor-style-input/control-value-accessor-color-input.directive.ts\n            \n            directive\n            ControlValueAccessorColorInputDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-color-input.directive.ts\n            \n            directive\n            ControlValueAccessorSizeColorInputDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-input.directive.ts\n            \n            directive\n            ControlValueAccessorSizeInputDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive.ts\n            \n            directive\n            ControlValueAccessorSizeThemeColorInputDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor-style-input/control-value-accessor-theme-color-input.directive.ts\n            \n            directive\n            ControlValueAccessorThemeColorInputDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts\n            \n            directive\n            ControlValueAccessorBaseDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor/event-manager.directive.ts\n            \n            directive\n            EventManagerDirective\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor/state-manager.directive.ts\n            \n            directive\n            StateManagerDirective\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/lib/components/base/style-input/class-name-input.directive.ts\n            \n            directive\n            ClassNameInputDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/components/base/style-input/color-input.directive.ts\n            \n            directive\n            ColorInputDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/components/base/style-input/size-color-input.directive.ts\n            \n            directive\n            SizeColorInputDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/components/base/style-input/size-input.directive.ts\n            \n            directive\n            SizeInputDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/components/base/style-input/size-theme-color-input.directive.ts\n            \n            directive\n            SizeThemeColorInputDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/components/base/style-input/size-theme-input.directive.ts\n            \n            directive\n            SizeThemeInputDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/components/base/style-input/theme-color-input.directive.ts\n            \n            directive\n            ThemeColorInputDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/components/base/style-input/theme-input.directive.ts\n            \n            directive\n            ThemeInputDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/components/card/card.component.ts\n            \n            component\n            CardComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/components/container/container.component.ts\n            \n            component\n            ContainerComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/components/form/button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/lib/components/form/checkbox/checkbox.component.ts\n            \n            component\n            CheckboxComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/components/form/file-input/file-input.component.ts\n            \n            component\n            FileInputComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/lib/components/form/group/base/selected-options.ts\n            \n            interface\n            SelectedOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/components/form/group/base/selection-options.directive.ts\n            \n            directive\n            SelectionOptionsDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/components/form/group/checkbox/checkbox-group.component.ts\n            \n            component\n            CheckboxGroupComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/components/form/group/form-group.component.ts\n            \n            component\n            FormGroupComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/components/form/group/radio-button/radio-button-group.component.ts\n            \n            component\n            RadioButtonGroupComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/components/form/icon-button/icon-button.component.ts\n            \n            component\n            IconButtonComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/components/form/input/input.component.ts\n            \n            component\n            InputComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/lib/components/form/radio-button/radio-button.component.ts\n            \n            component\n            RadioButtonComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/components/form/select-button/select-button.component.ts\n            \n            component\n            SelectButtonComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/lib/components/form/slider/slider.component.ts\n            \n            component\n            SliderComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/lib/components/form/toggle-switch/toggle-switch.component.ts\n            \n            component\n            ToggleSwitchComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/components/grid/grid.component.ts\n            \n            component\n            GridComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/components/icon/icon.component.ts\n            \n            component\n            IconComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/components/table/table.component.ts\n            \n            component\n            TableComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/models/alert/alert-service-subscriber.ts\n            \n            interface\n            AlertServiceSubscriber\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/lib/models/alert/alert.ts\n            \n            interface\n            Alert\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/lib/models/csv/csv.ts\n            \n            class\n            Csv\n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                src/lib/models/queue/queue.ts\n            \n            class\n            Queue\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/lib/models/table/column-information-defaults.ts\n            \n            class\n            ColumnInformationDefaults\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/lib/models/table/column-information-options.interface.ts\n            \n            interface\n            ColumnInformationOptionsInterface\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/lib/models/table/column-information.interface.ts\n            \n            interface\n            ColumnInformationInterface\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/lib/models/table/column-information.ts\n            \n            class\n            ColumnInformation\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/lib/models/table/table.interface.ts\n            \n            interface\n            TableInterface\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/lib/models/table/table.ts\n            \n            class\n            Table\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/lib/services/alert/alert.service.ts\n            \n            injectable\n            AlertService\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/lib/services/theme/theme.service.ts\n            \n            injectable\n            ThemeService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.1.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^12.0.1\n        \n            @angular/core : ^12.0.1\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Delimiter   (src/.../csv.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/models/csv/csv.ts\n    \n        \n            \n                \n                    \n                        \n                        Delimiter\n                    \n                \n                        \n                            \n                                 COMMA\n                            \n                        \n                        \n                            \n                                Value : ,\n                            \n                        \n                        \n                            \n                                 COLON\n                            \n                        \n                        \n                            \n                                Value : :\n                            \n                        \n                        \n                            \n                                 SEMICOLON\n                            \n                        \n                        \n                            \n                                Value : ;\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSbElement\nThis library was generated with Angular CLI version 12.0.1. It is a component library constructed around the SCSS library Sb-Theming and supports Angular Schematics.\nInstallation\nAngular Schematics\nFor the automatic and way simpler installation, you can use angular schematics\nng add sb-elementAnd that's it, angular will take care of the rest and install the necessary packages and update your workspace.\nManual\nFor the manual Installation follow these steps:\n\nInstall packages:\nnpm install --save-dev sb-element\nnpm install --save-dev sb-theming\nInclude the theming files into your Angular CLI project. For this, follow the installation documentation here.\n\nYou are good to go!\n\n\nDocumentation\nDocumentation is not yet available for this project.  If you would like to look into the package yourself, checkout the SbElement GitHub Page. There is a TestApp application (located in the src directory), which is implementing the library.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        BaseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SbElementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BaseModule\n\n\n\ncluster_BaseModule_declarations\n\n\n\ncluster_BaseModule_exports\n\n\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_SbElementModule\n\n\n\ncluster_SbElementModule_declarations\n\n\n\ncluster_SbElementModule_exports\n\n\n\n\nClassNameInputDirective\n\nClassNameInputDirective\n\n\n\nBaseModule\n\nBaseModule\n\nBaseModule -->\n\nClassNameInputDirective->BaseModule\n\n\n\n\n\nColorInputDirective\n\nColorInputDirective\n\nBaseModule -->\n\nColorInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorBaseDirective\n\nControlValueAccessorBaseDirective\n\nBaseModule -->\n\nControlValueAccessorBaseDirective->BaseModule\n\n\n\n\n\nControlValueAccessorClassNameInputDirective\n\nControlValueAccessorClassNameInputDirective\n\nBaseModule -->\n\nControlValueAccessorClassNameInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorColorInputDirective\n\nControlValueAccessorColorInputDirective\n\nBaseModule -->\n\nControlValueAccessorColorInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorSizeColorInputDirective\n\nControlValueAccessorSizeColorInputDirective\n\nBaseModule -->\n\nControlValueAccessorSizeColorInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorSizeInputDirective\n\nControlValueAccessorSizeInputDirective\n\nBaseModule -->\n\nControlValueAccessorSizeInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorSizeThemeColorInputDirective\n\nControlValueAccessorSizeThemeColorInputDirective\n\nBaseModule -->\n\nControlValueAccessorSizeThemeColorInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorThemeColorInputDirective\n\nControlValueAccessorThemeColorInputDirective\n\nBaseModule -->\n\nControlValueAccessorThemeColorInputDirective->BaseModule\n\n\n\n\n\nEventManagerDirective\n\nEventManagerDirective\n\nBaseModule -->\n\nEventManagerDirective->BaseModule\n\n\n\n\n\nSizeColorInputDirective\n\nSizeColorInputDirective\n\nBaseModule -->\n\nSizeColorInputDirective->BaseModule\n\n\n\n\n\nSizeInputDirective\n\nSizeInputDirective\n\nBaseModule -->\n\nSizeInputDirective->BaseModule\n\n\n\n\n\nSizeThemeColorInputDirective\n\nSizeThemeColorInputDirective\n\nBaseModule -->\n\nSizeThemeColorInputDirective->BaseModule\n\n\n\n\n\nSizeThemeInputDirective\n\nSizeThemeInputDirective\n\nBaseModule -->\n\nSizeThemeInputDirective->BaseModule\n\n\n\n\n\nStateManagerDirective\n\nStateManagerDirective\n\nBaseModule -->\n\nStateManagerDirective->BaseModule\n\n\n\n\n\nThemeColorInputDirective\n\nThemeColorInputDirective\n\nBaseModule -->\n\nThemeColorInputDirective->BaseModule\n\n\n\n\n\nThemeInputDirective\n\nThemeInputDirective\n\nBaseModule -->\n\nThemeInputDirective->BaseModule\n\n\n\n\n\nClassNameInputDirective \n\nClassNameInputDirective \n\nClassNameInputDirective  -->\n\nBaseModule->ClassNameInputDirective \n\n\n\n\n\nColorInputDirective \n\nColorInputDirective \n\nColorInputDirective  -->\n\nBaseModule->ColorInputDirective \n\n\n\n\n\nControlValueAccessorBaseDirective \n\nControlValueAccessorBaseDirective \n\nControlValueAccessorBaseDirective  -->\n\nBaseModule->ControlValueAccessorBaseDirective \n\n\n\n\n\nControlValueAccessorClassNameInputDirective \n\nControlValueAccessorClassNameInputDirective \n\nControlValueAccessorClassNameInputDirective  -->\n\nBaseModule->ControlValueAccessorClassNameInputDirective \n\n\n\n\n\nControlValueAccessorColorInputDirective \n\nControlValueAccessorColorInputDirective \n\nControlValueAccessorColorInputDirective  -->\n\nBaseModule->ControlValueAccessorColorInputDirective \n\n\n\n\n\nControlValueAccessorSizeColorInputDirective \n\nControlValueAccessorSizeColorInputDirective \n\nControlValueAccessorSizeColorInputDirective  -->\n\nBaseModule->ControlValueAccessorSizeColorInputDirective \n\n\n\n\n\nControlValueAccessorSizeInputDirective \n\nControlValueAccessorSizeInputDirective \n\nControlValueAccessorSizeInputDirective  -->\n\nBaseModule->ControlValueAccessorSizeInputDirective \n\n\n\n\n\nControlValueAccessorSizeThemeColorInputDirective \n\nControlValueAccessorSizeThemeColorInputDirective \n\nControlValueAccessorSizeThemeColorInputDirective  -->\n\nBaseModule->ControlValueAccessorSizeThemeColorInputDirective \n\n\n\n\n\nControlValueAccessorThemeColorInputDirective \n\nControlValueAccessorThemeColorInputDirective \n\nControlValueAccessorThemeColorInputDirective  -->\n\nBaseModule->ControlValueAccessorThemeColorInputDirective \n\n\n\n\n\nSizeColorInputDirective \n\nSizeColorInputDirective \n\nSizeColorInputDirective  -->\n\nBaseModule->SizeColorInputDirective \n\n\n\n\n\nSizeInputDirective \n\nSizeInputDirective \n\nSizeInputDirective  -->\n\nBaseModule->SizeInputDirective \n\n\n\n\n\nSizeThemeColorInputDirective \n\nSizeThemeColorInputDirective \n\nSizeThemeColorInputDirective  -->\n\nBaseModule->SizeThemeColorInputDirective \n\n\n\n\n\nSizeThemeInputDirective \n\nSizeThemeInputDirective \n\nSizeThemeInputDirective  -->\n\nBaseModule->SizeThemeInputDirective \n\n\n\n\n\nThemeColorInputDirective \n\nThemeColorInputDirective \n\nThemeColorInputDirective  -->\n\nBaseModule->ThemeColorInputDirective \n\n\n\n\n\nThemeInputDirective \n\nThemeInputDirective \n\nThemeInputDirective  -->\n\nBaseModule->ThemeInputDirective \n\n\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nBaseModule->FormModule\n\n\n\n\n\nSbElementModule\n\nSbElementModule\n\nSbElementModule -->\n\nBaseModule->SbElementModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nFormModule -->\n\nButtonComponent->FormModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nFormModule -->\n\nCheckboxComponent->FormModule\n\n\n\n\n\nCheckboxGroupComponent\n\nCheckboxGroupComponent\n\nFormModule -->\n\nCheckboxGroupComponent->FormModule\n\n\n\n\n\nFileInputComponent\n\nFileInputComponent\n\nFormModule -->\n\nFileInputComponent->FormModule\n\n\n\n\n\nFormGroupComponent\n\nFormGroupComponent\n\nFormModule -->\n\nFormGroupComponent->FormModule\n\n\n\n\n\nIconButtonComponent\n\nIconButtonComponent\n\nFormModule -->\n\nIconButtonComponent->FormModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nFormModule -->\n\nIconComponent->FormModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nFormModule -->\n\nInputComponent->FormModule\n\n\n\n\n\nRadioButtonComponent\n\nRadioButtonComponent\n\nFormModule -->\n\nRadioButtonComponent->FormModule\n\n\n\n\n\nRadioButtonGroupComponent\n\nRadioButtonGroupComponent\n\nFormModule -->\n\nRadioButtonGroupComponent->FormModule\n\n\n\n\n\nSelectButtonComponent\n\nSelectButtonComponent\n\nFormModule -->\n\nSelectButtonComponent->FormModule\n\n\n\n\n\nSelectionOptionsDirective\n\nSelectionOptionsDirective\n\nFormModule -->\n\nSelectionOptionsDirective->FormModule\n\n\n\n\n\nSliderComponent\n\nSliderComponent\n\nFormModule -->\n\nSliderComponent->FormModule\n\n\n\n\n\nToggleSwitchComponent\n\nToggleSwitchComponent\n\nFormModule -->\n\nToggleSwitchComponent->FormModule\n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nFormModule->ButtonComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nFormModule->CheckboxComponent \n\n\n\n\n\nCheckboxGroupComponent \n\nCheckboxGroupComponent \n\nCheckboxGroupComponent  -->\n\nFormModule->CheckboxGroupComponent \n\n\n\n\n\nFileInputComponent \n\nFileInputComponent \n\nFileInputComponent  -->\n\nFormModule->FileInputComponent \n\n\n\n\n\nFormGroupComponent \n\nFormGroupComponent \n\nFormGroupComponent  -->\n\nFormModule->FormGroupComponent \n\n\n\n\n\nIconButtonComponent \n\nIconButtonComponent \n\nIconButtonComponent  -->\n\nFormModule->IconButtonComponent \n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nFormModule->IconComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nFormModule->InputComponent \n\n\n\n\n\nRadioButtonComponent \n\nRadioButtonComponent \n\nRadioButtonComponent  -->\n\nFormModule->RadioButtonComponent \n\n\n\n\n\nRadioButtonGroupComponent \n\nRadioButtonGroupComponent \n\nRadioButtonGroupComponent  -->\n\nFormModule->RadioButtonGroupComponent \n\n\n\n\n\nSelectButtonComponent \n\nSelectButtonComponent \n\nSelectButtonComponent  -->\n\nFormModule->SelectButtonComponent \n\n\n\n\n\nSliderComponent \n\nSliderComponent \n\nSliderComponent  -->\n\nFormModule->SliderComponent \n\n\n\n\n\nToggleSwitchComponent \n\nToggleSwitchComponent \n\nToggleSwitchComponent  -->\n\nFormModule->ToggleSwitchComponent \n\n\n\nSbElementModule -->\n\nFormModule->SbElementModule\n\n\n\n\n\nAlertBoxComponent\n\nAlertBoxComponent\n\nSbElementModule -->\n\nAlertBoxComponent->SbElementModule\n\n\n\n\n\nAlertComponent\n\nAlertComponent\n\nSbElementModule -->\n\nAlertComponent->SbElementModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nSbElementModule -->\n\nCardComponent->SbElementModule\n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nSbElementModule -->\n\nContainerComponent->SbElementModule\n\n\n\n\n\nGridComponent\n\nGridComponent\n\nSbElementModule -->\n\nGridComponent->SbElementModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nSbElementModule -->\n\nTableComponent->SbElementModule\n\n\n\nThemeInputDirective  -->\n\nSbElementModule->ThemeInputDirective \n\n\n\n\n\nAlertBoxComponent \n\nAlertBoxComponent \n\nAlertBoxComponent  -->\n\nSbElementModule->AlertBoxComponent \n\n\n\n\n\nAlertComponent \n\nAlertComponent \n\nAlertComponent  -->\n\nSbElementModule->AlertComponent \n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nSbElementModule->CardComponent \n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nSbElementModule->ContainerComponent \n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nSbElementModule->FormModule \n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nSbElementModule->GridComponent \n\n\n\n\n\nTableComponent \n\nTableComponent \n\nTableComponent  -->\n\nSbElementModule->TableComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    19 Components\n                \n            \n        \n        \n            \n                \n                    \n                    18 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

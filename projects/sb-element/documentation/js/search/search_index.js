var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Alert.html",[0,1.794,1,0.878]],["body/interfaces/Alert.html",[0,2.691,1,1.559,2,3.521,3,0.218,4,0.218,5,0.187,6,4.717,7,0.315,8,0.819,9,1.336,10,4.986,11,2.19,12,0.785,13,0.397,14,0.019,15,0.218,16,0.014,17,0.016,18,0.014]],["title/components/AlertBoxComponent.html",[19,0.353,20,0.922]],["body/components/AlertBoxComponent.html",[1,1.5,3,0.108,4,0.108,5,0.139,7,0.157,8,0.512,9,0.51,12,0.421,13,0.369,14,0.019,15,0.108,16,0.007,17,0.01,18,0.007,19,0.469,20,1.356,21,1.076,22,0.836,23,0.836,24,0.836,25,5.74,26,5.119,27,2.345,28,0.512,29,1.292,30,0.323,31,0.898,32,2.135,33,2.241,34,5.384,35,1.244,36,4.067,37,0.615,38,6.252,39,1.676,40,3.822,41,3.822,42,1.64,43,0.421,44,1.058,45,0.759,46,4.86,47,4.174,48,4.174,49,1.307,50,2.731,51,2.009,52,0.458,53,4.067,54,0.484,55,0.309,56,1.019,57,2.437,58,0.647,59,0.518,60,2.398,61,2.731,62,1.913,63,2.731,64,2.731,65,2.731,66,0.244,67,0.611,68,2.731,69,2.731,70,2.731,71,0.309,72,1.517,73,0.953,74,0.208,75,1.019,76,1.338,77,1.019,78,0.688,79,0.484,80,0.108,81,2.731,82,1.625,83,1.625,84,1.422,85,2.731,86,1.625,87,1.625,88,0.611,89,0.593,90,2.731,91,1.751,92,1.751,93,2.731,94,2.731,95,2.345,96,0.344,97,2.731,98,2.731,99,2.731,100,2.731,101,2.731,102,2.731,103,0.688,104,1.244,105,1.185,106,0.007,107,1.647,108,0.836,109,0.836,110,0.688,111,0.836,112,0.688,113,1.647,114,0.688,115,0.836,116,0.688,117,0.836,118,0.688,119,0.836,120,1.487,121,0.688,122,0.836,123,0.688,124,1.244,125,0.688,126,0.796,127,0.688,128,0.796,129,0.688,130,0.836,131,0.688,132,0.688,133,1.185,134,0.688,135,0.758,136,0.688,137,0.796,138,0.688,139,0.836,140,0.688,141,0.836,142,0.688,143,0.796,144,0.836,145,0.303,146,0.458,147,2.19,148,0.655,149,0.624,150,0.51,151,0.655,152,0.655,153,0.655,154,0.624,155,0.655,156,0.624,157,0.655,158,0.655,159,0.655,160,0.655,161,0.624,162,0.655,163,0.655,164,0.836]],["title/components/AlertComponent.html",[19,0.353,110,0.922]],["body/components/AlertComponent.html",[1,1.687,3,0.09,4,0.09,5,0.12,7,0.13,8,0.444,9,0.423,10,3.69,12,0.448,13,0.378,14,0.019,15,0.09,16,0.006,17,0.009,18,0.006,19,0.418,20,0.57,21,0.933,22,0.693,23,0.693,24,0.693,28,0.444,29,1.173,30,0.268,31,0.885,32,2.083,33,2.187,35,1.079,37,0.625,39,2.009,42,1.462,43,0.365,44,0.96,45,0.658,47,3.719,48,3.719,49,1.133,51,1.882,52,0.488,54,0.866,55,0.336,56,0.866,57,1.991,58,0.627,59,0.501,60,1.616,62,1.621,66,0.542,67,0.53,71,0.356,73,0.866,74,0.173,75,0.845,76,1.11,77,0.845,78,0.57,79,0.401,80,0.09,84,1.179,88,0.53,89,0.492,96,0.801,103,0.57,104,1.079,105,1.028,106,0.006,107,1.496,108,0.693,109,0.693,110,1.231,111,0.693,112,0.57,113,1.496,114,0.57,115,0.693,116,0.57,117,0.693,118,0.57,119,0.693,120,1.325,121,0.57,122,0.693,123,0.57,124,1.079,125,0.57,126,0.66,127,0.57,128,0.66,129,0.57,130,0.693,131,0.57,132,0.57,133,1.028,134,0.57,135,0.629,136,0.57,137,0.66,138,0.57,139,0.693,140,0.57,141,0.693,142,0.57,143,0.66,144,0.693,145,0.251,146,0.38,147,2.122,148,0.543,149,0.517,150,0.423,151,0.543,152,0.543,153,0.543,154,0.517,155,0.543,156,0.517,157,0.543,158,0.543,159,0.543,160,0.543,161,0.517,162,0.543,163,0.543,164,0.693,165,1.945,166,3.029,167,2.776,168,3.526,169,4.331,170,4.331,171,4.331,172,4.331,173,6.108,174,4.888,175,4.888,176,4.888,177,3.526,178,3.526,179,4.888,180,4.331,181,1.542,182,1.945,183,3.597,184,3.526,185,2.264,186,2.264,187,3.456,188,3.526,189,2.264,190,3.029,191,2.264,192,5.17,193,2.264,194,2.264,195,2.264,196,2.264,197,3.526,198,2.264,199,3.526,200,2.264,201,3.526,202,2.264,203,1.702,204,2.264,205,3.526,206,2.264,207,3.526,208,2.264,209,2.264,210,2.264,211,2.264,212,3.029,213,1.452,214,1.945,215,1.945,216,2.264,217,2.264,218,2.264,219,2.264,220,2.264,221,2.264,222,4.331,223,1.179,224,2.264,225,1.11,226,2.264,227,3.526,228,4.888,229,3.526,230,2.264,231,2.264,232,2.264,233,0.845,234,2.264,235,2.264,236,2.264,237,2.264,238,2.264,239,2.264,240,2.264]],["title/injectables/AlertService.html",[183,2.346,241,2.346]],["body/injectables/AlertService.html",[1,1.603,3,0.17,4,0.116,5,0.1,7,0.168,8,0.538,9,1.038,10,4.45,11,2.273,12,0.782,13,0.395,14,0.019,15,0.116,16,0.007,17,0.011,18,0.007,37,0.659,39,1.983,43,0.443,49,1.625,52,0.491,54,1.16,55,0.376,56,1.16,57,1.517,58,0.692,59,0.553,60,2.077,62,0.894,66,0.598,67,0.836,71,0.353,74,0.223,80,0.116,96,0.368,167,3.567,173,5.313,183,2.741,192,4.262,212,3.673,213,1.874,214,3.673,233,2.077,241,2.741,242,2.239,243,2.51,244,5.057,245,5.057,246,5.057,247,4.276,248,2.338,249,5.057,250,4.276,251,4.276,252,5.057,253,5.921,254,5.564,255,4.276,256,4.276,257,2.923,258,3.626,259,2.049,260,4.276,261,2.923,262,4.276,263,2.923,264,4.276,265,2.923,266,4.276,267,2.923,268,4.276,269,2.923,270,4.276,271,2.923,272,4.276,273,2.923,274,2.923,275,4.124,276,2.923,277,2.923,278,2.923,279,2.51,280,2.239,281,2.923,282,5.921,283,2.923,284,4.276,285,2.923,286,5.564,287,2.923,288,2.923,289,2.923,290,2.923]],["title/interfaces/AlertServiceSubscriber.html",[0,1.794,167,2.346]],["body/interfaces/AlertServiceSubscriber.html",[0,2.686,1,1.808,2,3.513,3,0.218,4,0.218,5,0.187,7,0.314,13,0.314,14,0.019,15,0.218,16,0.014,17,0.016,18,0.014,43,0.672,52,0.382,54,0.97,55,0.314,56,0.97,66,0.491,71,0.348,167,4.162,190,5.576,192,4.973,213,4.162,291,5.576,292,4.706,293,5.48]],["title/modules/BaseModule.html",[294,2.033,295,2.177]],["body/modules/BaseModule.html",[3,0.111,4,0.111,5,0.095,9,1.176,11,1.509,14,0.019,15,0.111,16,0.007,17,0.01,18,0.007,29,1.656,55,0.238,59,0.591,71,0.461,74,0.213,77,2.035,78,1.373,79,1.246,80,0.165,103,0.706,146,1.159,148,1.656,149,1.577,150,1.288,151,1.656,152,1.656,153,1.656,154,1.577,155,1.656,156,1.391,158,1.656,159,1.656,160,1.656,161,1.391,162,1.656,163,1.656,294,1.556,295,4.579,296,1.667,297,1.667,298,3.436,299,1.951,300,1.101,301,3.436,302,2.406,303,2.406,304,2.406,305,2.887,306,1.951,307,1.951,308,2.801,309,3.175,310,3.56,311,2.146,312,2.376,313,2.146,314,2.657,315,3.671,316,1.951,317,2.406,318,2.146,319,2.45,320,2.162,321,2.146,322,3.175,323,2.146,324,2.146]],["title/components/ButtonComponent.html",[19,0.353,112,0.922]],["body/components/ButtonComponent.html",[1,0.36,3,0.06,4,0.06,5,0.086,7,0.086,8,0.318,9,0.28,12,0.397,13,0.379,14,0.019,15,0.06,16,0.004,17,0.006,18,0.004,19,0.677,20,0.378,21,0.668,22,0.459,23,0.459,24,0.459,28,0.318,29,1.112,30,0.177,31,0.848,32,1.941,33,2.038,35,0.772,37,0.498,39,1.627,40,4.143,41,3.962,42,1.103,43,0.261,44,0.84,45,0.966,49,0.811,51,1.584,52,0.448,54,0.821,55,0.309,56,0.985,57,2.508,58,0.48,59,0.461,60,1.932,62,1.944,66,0.482,67,0.491,71,0.208,72,3.178,73,1.078,74,0.114,75,0.56,76,0.735,77,0.56,78,0.378,79,0.266,80,0.252,82,0.892,83,0.892,84,0.781,86,1.945,87,0.892,88,0.915,89,0.326,91,0.962,92,0.962,96,0.318,103,0.378,104,1.92,105,1.828,106,0.004,107,1.173,108,0.459,109,0.459,110,0.378,111,0.459,112,1.168,113,1.173,114,0.378,115,0.459,116,0.378,117,0.459,118,0.378,119,0.459,120,1,121,0.378,122,0.459,123,0.378,124,0.772,125,0.378,126,1.247,127,0.378,128,0.437,129,0.378,130,0.459,131,0.378,132,0.378,133,0.736,134,0.378,135,1.925,136,0.378,137,0.437,138,0.378,139,0.459,140,0.378,141,0.459,142,0.378,143,0.437,144,0.459,145,0.166,146,0.252,147,1.944,148,0.36,149,0.343,150,0.28,151,0.36,152,0.36,153,0.36,154,0.343,155,0.36,156,0.343,157,0.36,158,0.36,159,0.36,160,0.36,161,0.343,162,0.36,163,0.36,164,0.459,181,1.104,233,1.932,259,1.351,280,1.934,312,0.852,325,1.288,326,1.288,327,2.525,328,4.635,329,3.293,330,3.981,331,3.55,332,4.635,333,3.293,334,2.525,335,2.525,336,6.005,337,3.834,338,5.176,339,2.525,340,2.525,341,2.525,342,2.525,343,2.872,344,2.525,345,1.5,346,2.525,347,2.525,348,5.566,349,2.525,350,3.293,351,3.834,352,5.566,353,3.834,354,4.635,355,3.981,356,2.525,357,1.758,358,2.504,359,2.168,360,4.37,361,4.929,362,4.635,363,4.929,364,1.5,365,2.525,366,2.525,367,5.23,368,2.525,369,2.525,370,2.525,371,5.457,372,2.525,373,6.187,374,2.525,375,2.525,376,1.5,377,2.525,378,1.5,379,2.525,380,3.834,381,2.525,382,2.525,383,2.525,384,2.525,385,5.389,386,3.981,387,2.525,388,1.5,389,2.168,390,2.525,391,2.936,392,2.525,393,2.525,394,1.5,395,4.635,396,1.5,397,2.525,398,1.5,399,1.5,400,1.5,401,1.5,402,1.5,403,1.149,404,1.5,405,1.149,406,1.5,407,3.269,408,3.834,409,1.5,410,2.807,411,2.168,412,2.525,413,2.168,414,2.525,415,3.269,416,1.5,417,3.269,418,1.5,419,3.834,420,1.149,421,1.934,422,1.288,423,1.288,424,1.5,425,1.5,426,1.5,427,1.149,428,1.5,429,1.5,430,1.5,431,1.5]],["title/components/CardComponent.html",[19,0.353,114,0.922]],["body/components/CardComponent.html",[1,0.768,3,0.127,4,0.127,5,0.156,7,0.184,8,0.575,12,0.473,13,0.333,14,0.019,15,0.127,16,0.008,17,0.011,18,0.008,19,0.513,20,0.806,21,1.207,22,0.979,23,0.979,24,0.979,28,0.575,29,0.768,30,0.378,31,0.907,32,2.174,33,2.282,35,1.397,37,0.571,39,1.771,42,1.797,43,0.473,44,1.14,49,1.467,51,2.11,52,0.428,54,0.567,55,0.333,56,1.028,57,2.06,58,0.551,59,0.441,60,2.167,62,1.397,66,0.287,67,0.686,71,0.338,72,1.778,74,0.244,75,1.195,76,1.569,77,1.195,78,0.806,79,0.567,80,0.127,84,1.667,88,0.686,89,0.696,96,0.403,103,0.806,104,1.397,105,1.331,106,0.008,107,1.776,108,0.979,109,0.979,110,0.806,111,0.979,112,0.806,113,1.776,114,1.462,115,0.979,116,0.806,117,0.979,118,0.806,119,0.979,120,1.629,121,0.806,122,0.979,123,0.806,124,1.397,125,0.806,126,0.933,127,0.806,128,0.933,129,0.806,130,0.979,131,0.806,132,0.806,133,1.331,134,0.806,135,0.888,136,0.806,137,0.933,138,0.806,139,0.979,140,0.806,141,0.979,142,0.806,143,0.933,144,0.979,145,0.355,146,0.537,147,2.241,148,0.768,149,0.731,150,0.597,151,0.768,152,0.768,153,0.768,154,0.731,155,0.768,156,0.731,157,0.768,158,0.768,159,0.768,160,1.392,161,0.731,162,0.768,163,0.768,164,0.979,350,5.641,432,2.749,433,5.804,434,4.566,435,6.715,436,3.2,437,4.566,438,3.2,439,3.2,440,3.2,441,3.2,442,3.2,443,3.2,444,3.2,445,3.2,446,3.2]],["title/components/CheckboxComponent.html",[19,0.353,116,0.922]],["body/components/CheckboxComponent.html",[1,0.752,3,0.125,4,0.125,5,0.153,7,0.18,8,0.567,9,0.585,11,0.96,12,0.63,13,0.302,14,0.019,15,0.125,16,0.008,17,0.011,18,0.008,19,0.507,20,0.79,21,1.19,22,0.96,23,0.96,24,0.96,28,0.567,29,0.752,30,0.371,31,0.906,32,2.169,33,2.277,35,1.377,37,0.625,42,1.777,43,0.466,44,1.13,45,0.84,52,0.425,55,0.302,58,0.545,59,0.504,62,1.377,66,0.403,67,0.676,71,0.334,73,0.932,74,0.239,78,0.79,79,0.555,80,0.125,88,0.676,89,0.682,96,0.395,103,0.79,104,1.377,105,1.311,106,0.008,107,1.76,108,0.96,109,0.96,110,0.79,111,0.96,112,0.79,113,1.76,114,0.79,115,0.96,116,1.596,117,0.96,118,0.79,119,1.863,120,1.61,121,0.79,122,0.96,123,0.79,124,1.377,125,0.79,126,0.914,127,0.79,128,0.914,129,0.79,130,0.96,131,0.79,132,0.79,133,1.311,134,0.79,135,0.871,136,0.79,137,0.914,138,0.79,139,0.96,140,0.79,141,0.96,142,0.79,143,0.914,144,0.96,145,0.347,146,0.526,147,2.234,148,0.752,149,0.716,150,0.585,151,0.752,152,0.752,153,0.752,154,1.313,155,0.752,156,0.716,157,0.752,158,0.752,159,0.752,160,0.752,161,0.716,162,0.752,163,0.752,164,0.96,259,1.311,300,1.769,312,1.059,319,1.597,320,1.113,447,2.694,448,2.205,449,2.579,450,2.205,451,2.205,452,4.5,453,4.005,454,5,455,3.666,456,3.136,457,3.134,458,3.136,459,3.136,460,3.136,461,3.136,462,1.299,463,1.866,464,2.677,465,3.447,466,2.694,467,2.184,468,2.694,469,2.694,470,3.136]],["title/components/CheckboxGroupComponent.html",[19,0.353,118,0.922]],["body/components/CheckboxGroupComponent.html",[1,0.752,3,0.125,4,0.125,5,0.153,7,0.18,8,0.567,12,0.676,13,0.33,14,0.019,15,0.125,16,0.008,17,0.011,18,0.008,19,0.507,20,0.79,21,1.19,22,0.96,23,0.96,24,0.96,28,0.567,29,0.752,30,0.371,31,0.906,32,2.169,33,2.277,35,1.377,37,0.567,42,1.777,43,0.466,45,0.84,52,0.442,55,0.302,58,0.595,59,0.476,62,1.377,66,0.403,71,0.365,73,1.018,74,0.239,80,0.125,103,0.79,104,1.377,105,1.311,106,0.008,107,1.76,108,0.96,109,0.96,110,0.79,111,0.96,112,0.79,113,1.76,114,0.79,115,0.96,116,0.79,117,0.96,118,1.596,119,1.997,120,1.61,121,0.79,122,0.96,123,0.79,124,1.377,125,0.79,126,0.914,127,0.79,128,0.914,129,0.79,130,0.96,131,0.79,132,0.79,133,1.311,134,0.79,135,0.871,136,0.79,137,0.914,138,0.79,139,0.96,140,0.79,141,0.96,142,0.79,143,0.914,144,0.96,145,0.347,146,0.526,147,2.234,148,0.752,149,0.716,150,0.585,151,0.752,152,0.752,153,0.752,154,0.716,155,0.752,156,0.716,157,1.379,158,0.752,159,0.752,160,0.752,161,0.716,162,0.752,163,0.752,164,0.96,203,1.446,259,1.534,300,1.769,331,2.402,448,2.205,449,2.579,450,2.205,451,2.205,453,4.005,455,3.666,457,3.134,462,1.299,464,2.677,471,5.607,472,2.184,473,4.405,474,3.447,475,3.131,476,4.005,477,4.031,478,4.031,479,3.447,480,3.136,481,3.136,482,3.136,483,3.136,484,3.136,485,3.136,486,2.885,487,3.136,488,2.694,489,2.184,490,4.5]],["title/directives/ClassNameInputDirective.html",[106,0.009,146,0.614]],["body/directives/ClassNameInputDirective.html",[3,0.174,4,0.174,5,0.149,7,0.251,8,0.712,12,0.648,13,0.324,14,0.019,15,0.174,16,0.011,17,0.014,18,0.011,30,0.518,31,0.782,37,0.627,39,1.737,42,2.113,43,0.585,44,1.299,45,1.055,52,0.478,54,0.776,55,0.409,56,0.776,58,0.585,59,0.468,66,0.506,67,1.086,71,0.278,73,1.001,74,0.334,80,0.174,88,0.85,96,0.712,106,0.014,145,0.485,146,0.949,181,2.472,233,2.336,259,1.277,318,5.368,343,2.147,491,3.435,492,1.555,493,5.375,494,6.02,495,3.624,496,4.382,497,2.026,498,4.382,499,3.763,500,3.763,501,3.763,502,4.855,503,3.763,504,3.763,505,3.763,506,3.356,507,3.763,508,3.763]],["title/directives/ColorInputDirective.html",[106,0.009,148,0.878]],["body/directives/ColorInputDirective.html",[3,0.195,4,0.195,5,0.167,7,0.282,9,1.231,12,0.629,13,0.282,14,0.019,15,0.195,16,0.012,17,0.015,18,0.012,28,0.618,30,0.58,31,0.815,37,0.617,43,0.629,44,1.354,45,1.133,52,0.424,55,0.282,58,0.508,59,0.406,66,0.439,67,0.913,71,0.386,73,1.075,74,0.374,79,0.869,80,0.241,88,0.913,89,1.067,96,0.618,106,0.015,145,0.544,146,1.019,148,1.457,203,1.951,225,2.405,248,2.808,313,5.051,491,3.232,492,1.742,495,3.146,497,2.27,509,3.418,510,1.657]],["title/interfaces/ColumnInformationInterface.html",[0,1.794,511,2.346]],["body/interfaces/ColumnInformationInterface.html",[0,2.686,2,3.513,3,0.218,4,0.218,5,0.187,7,0.314,8,0.818,9,1.335,12,0.785,13,0.397,14,0.019,15,0.218,16,0.014,17,0.016,18,0.014,55,0.41,511,4.162,512,4.706,513,4.706,514,6.144]],["title/components/ContainerComponent.html",[19,0.353,121,0.922]],["body/components/ContainerComponent.html",[1,0.903,3,0.15,4,0.15,5,0.174,7,0.216,8,0.644,12,0.39,13,0.216,14,0.019,15,0.15,16,0.009,17,0.013,18,0.009,19,0.56,20,0.949,21,1.352,22,1.152,23,1.152,24,1.152,28,0.644,29,0.903,30,0.445,31,0.916,32,2.209,33,2.319,35,1.565,37,0.52,42,1.96,52,0.263,55,0.333,58,0.39,59,0.312,71,0.325,74,0.287,76,1.846,77,1.406,78,0.949,79,0.667,80,0.15,103,0.949,104,1.565,105,1.49,106,0.009,107,1.906,108,1.152,109,1.152,110,0.949,111,1.152,112,0.949,113,1.906,114,0.949,115,1.152,116,0.949,117,1.152,118,0.949,119,1.152,120,1.777,121,1.569,122,1.152,123,0.949,124,1.565,125,0.949,126,1.098,127,0.949,128,1.098,129,0.949,130,1.152,131,0.949,132,0.949,133,1.49,134,0.949,135,1.046,136,0.949,137,1.098,138,0.949,139,1.152,140,0.949,141,1.152,142,0.949,143,1.098,144,1.152,145,0.417,146,0.632,147,2.287,148,0.903,149,0.86,150,0.703,151,0.903,152,0.903,153,0.903,154,0.86,155,0.903,156,0.86,157,0.903,158,0.903,159,0.903,160,1.494,161,0.86,162,0.903,163,0.903,164,1.152,515,3.235,516,6.228,517,5.114,518,3.766]],["title/directives/ControlValueAccessorBaseDirective.html",[106,0.009,149,0.836]],["body/directives/ControlValueAccessorBaseDirective.html",[3,0.145,4,0.145,5,0.124,7,0.209,8,0.63,13,0.352,14,0.019,15,0.145,16,0.009,17,0.012,18,0.009,28,0.459,30,0.431,31,0.726,37,0.595,39,1.846,43,0.518,52,0.475,54,1.088,55,0.352,56,1.088,57,2.36,59,0.632,60,2.131,62,1.747,66,0.576,71,0.363,74,0.278,80,0.145,96,0.459,106,0.012,145,0.404,149,1.142,156,1.142,166,4.295,181,2.187,203,1.171,259,2.021,316,4.831,322,2.792,343,1.786,427,2.792,462,1.51,475,3.396,476,4.279,519,3.208,520,3.131,521,5.709,522,5.709,523,5.001,524,5.001,525,5.001,526,5.001,527,6.269,528,5.59,529,5.277,530,6.144,531,3.645,532,3.645,533,5.001,534,3.645,535,5.001,536,3.645,537,3.645,538,3.645,539,3.645,540,3.645,541,3.645,542,3.645,543,3.645,544,3.645,545,5.709,546,5.709,547,3.645,548,3.645]],["title/directives/ControlValueAccessorClassNameInputDirective.html",[106,0.009,150,0.683]],["body/directives/ControlValueAccessorClassNameInputDirective.html",[3,0.156,4,0.156,5,0.134,7,0.225,8,0.662,12,0.613,13,0.301,14,0.019,15,0.156,16,0.01,17,0.013,18,0.01,28,0.494,30,0.464,31,0.749,37,0.608,39,1.645,42,2.001,43,0.544,44,1.244,45,0.98,52,0.461,54,0.694,55,0.398,56,0.694,58,0.544,59,0.619,66,0.47,67,1.06,71,0.334,73,0.93,74,0.299,80,0.276,88,0.79,96,0.662,106,0.013,145,0.434,149,1.2,150,0.98,181,2.298,233,2.212,259,1.142,312,2.294,315,2.177,316,2.73,317,3.367,319,2.602,320,2.411,343,1.921,360,2.73,492,1.391,493,5.09,494,5.837,499,3.367,500,3.367,501,3.367,502,4.513,503,3.367,504,3.367,505,3.367,506,3.003,507,3.367,508,3.367,519,3.142,549,2.736,550,2.73,551,2.73,552,3.92,553,3.92,554,3.92,555,3.367,556,3.92,557,3.92,558,3.367,559,3.92,560,3.92,561,3.367]],["title/directives/ControlValueAccessorColorInputDirective.html",[106,0.009,151,0.878]],["body/directives/ControlValueAccessorColorInputDirective.html",[3,0.187,4,0.187,5,0.161,7,0.27,9,1.333,12,0.613,13,0.27,14,0.019,15,0.187,16,0.012,17,0.015,18,0.012,28,0.593,30,0.557,31,0.803,37,0.608,43,0.613,44,1.334,45,1.105,52,0.413,55,0.27,58,0.488,59,0.607,66,0.422,67,0.89,71,0.376,73,1.049,74,0.359,79,0.835,80,0.235,88,0.89,89,1.024,96,0.593,106,0.015,145,0.522,150,1.105,151,1.421,203,1.903,225,2.31,248,2.738,312,2.186,315,2.618,319,2.572,320,2.298,492,1.672,495,3.021,497,2.18,509,3.283,510,1.591,519,2.994]],["title/directives/ControlValueAccessorSizeColorInputDirective.html",[106,0.009,152,0.878]],["body/directives/ControlValueAccessorSizeColorInputDirective.html",[3,0.173,4,0.173,5,0.149,7,0.25,9,1.329,11,2.179,12,0.683,13,0.323,14,0.019,15,0.173,16,0.011,17,0.014,18,0.011,28,0.549,30,0.515,31,0.78,37,0.612,43,0.583,44,1.296,45,1.051,52,0.436,55,0.25,58,0.583,59,0.613,66,0.39,67,0.847,71,0.358,73,1.105,74,0.332,79,0.772,80,0.224,88,0.847,89,0.947,96,0.549,106,0.014,145,0.483,150,1.051,152,1.351,203,2.12,223,2.27,225,2.136,248,2.605,258,2.934,312,2.228,315,2.421,319,2.588,320,2.342,492,1.547,497,2.016,509,3.036,510,1.902,519,3.052,549,2.27,562,3.744,563,2.421]],["title/directives/ControlValueAccessorSizeInputDirective.html",[106,0.009,153,0.878]],["body/directives/ControlValueAccessorSizeInputDirective.html",[3,0.187,4,0.187,5,0.161,7,0.27,11,2.185,12,0.613,13,0.27,14,0.019,15,0.187,16,0.012,17,0.015,18,0.012,28,0.593,30,0.557,31,0.803,37,0.608,43,0.613,44,1.334,45,1.105,52,0.413,55,0.27,58,0.488,59,0.607,66,0.422,67,0.89,71,0.376,73,1.049,74,0.359,79,0.835,80,0.235,88,0.89,89,1.024,96,0.593,106,0.015,145,0.522,150,1.105,153,1.421,203,1.903,223,2.455,258,3.084,312,2.186,315,2.618,319,2.572,320,2.298,492,1.672,495,3.021,497,2.18,510,1.591,519,2.994,563,2.618]],["title/directives/ControlValueAccessorSizeThemeColorInputDirective.html",[106,0.009,154,0.836]],["body/directives/ControlValueAccessorSizeThemeColorInputDirective.html",[3,0.154,4,0.154,5,0.132,7,0.222,8,0.655,9,1.329,11,2.18,12,0.701,13,0.361,14,0.019,15,0.154,16,0.01,17,0.013,18,0.01,28,0.487,30,0.457,31,0.744,37,0.629,39,1.073,43,0.539,44,1.237,45,0.971,49,1.672,51,2.175,52,0.458,54,0.684,55,0.299,56,0.684,58,0.539,59,0.616,66,0.346,67,0.782,71,0.374,73,1.042,74,0.295,75,1.443,78,1.795,79,0.684,80,0.207,88,0.782,89,0.84,96,0.487,106,0.013,145,0.428,150,0.971,154,1.189,203,2.023,223,2.013,225,2.551,248,2.407,258,2.711,312,2.285,315,2.147,319,2.613,320,2.402,492,1.372,510,1.757,519,3.13,549,2.013,551,2.692,563,2.147,564,2.3,565,4.47,566,3.32,567,2.013,568,3.096,569,2.3,570,2.3]],["title/directives/ControlValueAccessorThemeColorInputDirective.html",[106,0.009,155,0.878]],["body/directives/ControlValueAccessorThemeColorInputDirective.html",[3,0.165,4,0.165,5,0.142,7,0.239,8,0.688,9,1.334,12,0.671,13,0.35,14,0.019,15,0.165,16,0.01,17,0.014,18,0.01,28,0.524,30,0.492,31,0.767,37,0.631,39,1.155,43,0.566,44,1.274,45,1.02,49,1.757,51,2.221,52,0.452,54,0.737,55,0.314,56,0.737,58,0.431,59,0.613,66,0.373,67,0.822,71,0.388,73,0.968,74,0.317,75,1.554,78,1.8,79,0.737,80,0.217,88,0.822,89,0.905,96,0.524,106,0.014,145,0.461,150,1.02,155,1.311,203,1.757,225,2.679,248,2.528,312,2.273,315,2.312,319,2.609,320,2.389,492,1.477,497,1.925,510,1.405,519,3.114,549,2.847,550,2.899,564,2.476,567,2.168,568,3.253,569,2.476,570,2.476]],["title/directives/EventManagerDirective.html",[106,0.009,156,0.836]],["body/directives/EventManagerDirective.html",[3,0.141,4,0.141,5,0.121,7,0.204,8,0.619,13,0.396,14,0.019,15,0.141,16,0.009,17,0.012,18,0.009,28,0.448,30,0.421,31,0.719,37,0.659,43,0.509,52,0.494,54,0.998,55,0.323,56,0.998,58,0.509,59,0.609,66,0.571,71,0.312,74,0.271,80,0.141,106,0.012,145,0.394,156,1.123,161,1.123,233,2.104,259,2.104,322,2.724,323,5.482,371,3.055,475,4.164,519,3.31,527,5.222,528,4.657,529,4.223,561,4.841,571,2.724,572,5.636,573,5.636,574,6.08,575,6.08,576,4.917,577,4.917,578,4.917,579,5.636,580,5.636,581,7.086,582,3.055,583,3.055,584,3.557,585,3.557,586,4.917,587,3.557,588,3.557,589,4.917,590,3.557,591,6.08,592,4.917,593,3.557,594,4.917,595,3.055,596,3.557,597,6.08,598,4.917,599,3.557,600,3.557,601,4.917,602,3.557,603,3.557,604,3.557,605,3.557,606,3.557,607,3.557,608,3.557,609,3.557]],["title/components/FileInputComponent.html",[19,0.353,123,0.922]],["body/components/FileInputComponent.html",[1,0.584,3,0.097,4,0.097,5,0.239,7,0.14,8,0.47,9,0.454,10,3.814,11,0.745,12,0.622,13,0.372,14,0.019,15,0.097,16,0.006,17,0.009,18,0.006,19,0.437,20,0.613,21,0.986,22,0.745,23,0.745,24,0.745,28,0.47,29,0.584,30,0.288,31,0.89,32,2.104,33,2.209,35,1.141,37,0.637,39,1.669,40,3.69,41,3.69,42,1.53,43,0.386,44,0.89,45,0.696,49,1.198,51,1.932,52,0.461,54,0.803,55,0.331,56,1.023,57,2.05,58,0.622,59,0.526,60,1.896,62,1.554,66,0.406,67,0.366,71,0.348,72,1.352,73,1.126,74,0.186,75,0.909,78,0.613,79,0.431,80,0.097,82,1.448,83,1.448,84,1.268,86,1.448,87,1.448,88,0.561,89,0.529,91,1.561,92,1.561,96,0.307,103,0.613,104,1.141,105,1.087,106,0.006,107,1.554,108,0.745,109,0.745,110,0.613,111,0.745,112,0.613,113,1.554,114,0.613,115,0.745,116,0.613,117,0.745,118,0.613,119,0.745,120,1.387,121,0.613,122,0.745,123,1.455,124,1.141,125,0.613,126,0.71,127,0.613,128,0.71,129,0.613,130,0.745,131,0.613,132,0.613,133,1.087,134,0.613,135,0.676,136,0.613,137,0.71,138,0.613,139,0.745,140,0.613,141,0.745,142,0.613,143,0.71,144,0.745,145,0.27,146,0.409,147,2.15,148,0.584,149,0.556,150,0.454,151,0.584,152,0.584,153,0.584,154,1.16,155,0.584,156,0.556,157,0.584,158,0.584,159,0.584,160,0.584,161,0.556,162,0.584,163,0.584,164,0.745,182,2.091,183,3.704,187,2.071,203,1.632,215,2.091,259,0.71,300,1.466,312,0.822,319,1.323,320,0.864,448,1.828,449,2.221,450,1.828,451,1.828,462,1.009,463,1.448,610,5.751,611,5.129,612,2.091,613,3.203,614,4.533,615,4.533,616,3.729,617,5.08,618,4.704,619,3.729,620,3.203,621,2.435,622,2.435,623,3.729,624,2.435,625,2.435,626,3.729,627,4.533,628,2.435,629,3.203,630,3.729,631,2.435,632,4.533,633,2.435,634,2.435,635,2.435,636,2.435,637,2.435,638,2.435,639,2.435,640,3.729,641,2.435,642,2.435,643,2.435,644,2.435,645,1.696,646,2.435,647,2.435]],["title/components/FormGroupComponent.html",[19,0.353,125,0.922]],["body/components/FormGroupComponent.html",[1,0.785,3,0.13,4,0.13,5,0.158,7,0.188,8,0.584,9,0.611,12,0.641,13,0.309,14,0.019,15,0.13,16,0.008,17,0.011,18,0.008,19,0.52,20,0.824,21,1.227,22,1.001,23,1.001,24,1.001,28,0.584,29,1.406,30,0.387,31,0.908,32,2.179,33,2.288,35,1.419,37,0.605,42,1.819,43,0.48,44,1.152,45,0.865,52,0.432,55,0.309,57,1.161,58,0.558,59,0.446,66,0.293,67,0.697,71,0.295,73,0.954,74,0.249,76,1.604,77,1.221,78,0.824,79,0.579,80,0.13,88,0.697,89,0.711,96,0.584,103,0.824,104,1.419,105,1.352,106,0.008,107,1.794,108,1.001,109,1.001,110,0.824,111,1.001,112,0.824,113,1.794,114,0.824,115,1.001,116,0.824,117,1.001,118,0.824,119,1.001,120,1.649,121,0.824,122,1.001,123,0.824,124,1.419,125,1.477,126,1.926,127,0.824,128,0.954,129,0.824,130,1.001,131,0.824,132,0.824,133,1.352,134,0.824,135,0.908,136,0.824,137,0.954,138,0.824,139,1.001,140,0.824,141,1.001,142,0.824,143,0.954,144,1.001,145,0.362,146,0.549,147,2.247,148,0.785,149,0.747,150,0.611,151,0.785,152,0.785,153,0.785,154,0.747,155,0.785,156,0.747,157,0.785,158,0.785,159,0.785,160,0.785,161,0.747,162,0.785,163,0.785,164,1.001,181,2.028,203,1.49,472,2.279,473,4.49,474,3.553,477,4.127,478,4.74,479,3.553,648,5.521,649,5.388,650,2.81,651,3.272,652,3.272,653,3.272,654,3.272,655,3.272,656,3.272,657,3.272,658,3.272]],["title/modules/FormModule.html",[294,2.033,659,2.346]],["body/modules/FormModule.html",[3,0.126,4,0.126,5,0.154,14,0.019,15,0.126,16,0.008,17,0.011,18,0.008,71,0.466,74,0.241,80,0.126,103,0.798,112,1.781,116,1.781,118,1.781,123,1.781,125,1.781,127,1.781,128,0.923,129,1.781,131,1.781,132,1.781,133,0.923,134,1.781,135,0.879,136,1.781,137,0.923,138,1.781,142,1.781,143,0.923,157,1.525,294,1.759,295,3.783,296,1.885,297,1.885,298,3.687,299,2.206,300,1.245,301,3.687,305,3.157,306,2.206,307,2.206,309,3.472,310,3.893,311,2.426,324,3.472,462,1.312,489,2.206,611,2.426,659,4.946,660,2.721,661,2.721,662,2.721,663,3.168,664,3.168,665,3.168,666,2.426,667,5.293,668,2.426,669,3.168,670,3.168,671,3.157,672,3.168,673,5.293,674,3.168,675,2.721,676,2.426,677,3.168,678,3.893,679,3.168,680,3.168,681,3.168,682,3.168,683,3.168]],["title/components/IconButtonComponent.html",[19,0.353,127,0.922]],["body/components/IconButtonComponent.html",[1,0.711,3,0.118,4,0.118,5,0.147,7,0.17,8,0.544,9,0.553,13,0.368,14,0.019,15,0.118,16,0.007,17,0.011,18,0.007,19,0.492,20,0.747,21,1.143,22,0.907,23,0.907,24,0.907,28,0.544,29,1.344,30,0.351,31,0.903,32,2.14,33,2.247,35,1.322,37,0.6,39,1.415,40,3.698,41,3.818,45,0.806,49,1.388,51,2.062,52,0.459,54,0.765,55,0.342,56,1.101,57,2.501,58,0.58,59,0.464,60,2.455,62,1.56,66,0.265,71,0.324,72,1.646,73,0.765,74,0.226,75,1.107,76,1.453,77,1.107,78,0.747,79,0.525,80,0.118,82,1.764,83,1.764,84,1.544,86,1.764,87,1.764,96,0.373,103,0.747,104,1.322,105,1.259,106,0.007,107,1.714,108,0.907,109,0.907,110,0.747,111,0.907,112,0.747,113,1.714,114,0.747,115,0.907,116,0.747,117,0.907,118,0.747,119,0.907,120,1.56,121,0.747,122,0.907,123,0.747,124,1.322,125,0.747,126,0.864,127,1.411,128,1.736,129,0.747,130,0.907,131,0.747,132,0.747,133,1.259,134,0.747,135,1.415,136,0.747,137,0.864,138,0.747,139,0.907,140,0.747,141,0.907,142,0.747,143,0.864,144,0.907,145,0.328,146,0.498,147,2.217,148,0.711,149,0.677,150,0.553,151,0.711,152,0.711,153,0.711,154,0.677,155,0.711,156,0.677,157,0.711,158,0.711,159,0.711,160,0.711,161,0.677,162,0.711,163,0.711,164,0.907,181,1.889,259,0.864,336,5.512,343,1.453,357,3.009,358,3.905,360,4.148,391,3.309,403,2.271,405,2.271,410,2.546,420,2.271,421,3.309,423,2.546,666,5.137,684,5.761,685,2.065,686,2.271,687,2.965,688,3.309,689,2.965,690,2.965,691,2.965,692,2.965,693,2.965]],["title/components/IconComponent.html",[19,0.353,129,0.922]],["body/components/IconComponent.html",[1,0.919,3,0.152,4,0.152,5,0.176,9,0.715,14,0.019,15,0.152,16,0.009,17,0.013,18,0.009,19,0.565,20,0.965,21,1.368,22,1.172,23,1.172,24,1.172,28,0.651,29,0.919,30,0.453,31,0.916,32,2.207,33,2.318,35,1.583,49,1.882,52,0.267,55,0.336,71,0.328,74,0.292,76,1.877,77,1.43,79,0.678,80,0.152,103,0.965,104,1.583,105,1.507,106,0.009,107,1.919,108,1.172,109,1.172,110,0.965,111,1.172,112,0.965,113,1.919,114,0.965,115,1.172,116,0.965,117,1.172,118,0.965,119,1.172,120,1.792,121,0.965,122,1.172,123,0.965,124,1.583,125,0.965,126,1.116,127,0.965,128,1.828,129,1.58,130,1.172,131,0.965,132,0.965,133,1.507,134,0.965,135,1.063,136,0.965,137,1.116,138,0.965,139,1.172,140,0.965,141,1.172,142,0.965,143,1.116,144,1.172,145,0.424,146,0.643,147,2.291,148,0.919,149,0.875,150,0.715,151,0.919,152,0.919,153,0.919,154,0.875,155,0.919,156,0.875,157,0.919,158,1.504,159,0.919,160,0.919,161,0.875,162,0.919,163,0.919,164,1.172,510,1.293,567,1.995,694,3.289,695,5.172,696,3.83]],["title/components/InputComponent.html",[19,0.353,131,0.922]],["body/components/InputComponent.html",[1,0.649,3,0.107,4,0.107,5,0.138,7,0.155,8,0.508,9,0.505,11,0.827,12,0.593,13,0.382,14,0.019,15,0.107,16,0.007,17,0.01,18,0.007,19,0.466,20,0.681,21,1.068,22,0.827,23,0.827,24,0.827,28,0.508,29,0.649,30,0.32,31,0.897,32,2.132,33,2.239,35,1.235,37,0.652,40,3.708,41,3.811,42,1.631,43,0.418,44,1.053,45,0.753,49,1.297,51,2.002,52,0.465,54,0.479,55,0.307,56,0.949,57,2.134,58,0.623,59,0.53,60,2.245,62,1.639,66,0.432,67,0.963,71,0.34,72,1.502,73,1.134,74,0.206,75,1.009,78,0.681,79,0.479,80,0.107,82,1.609,83,1.609,84,1.408,86,1.609,87,1.609,88,0.904,89,0.588,91,1.733,92,1.733,96,0.608,103,0.681,104,1.235,105,1.177,106,0.007,107,1.639,108,0.827,109,0.827,110,0.681,111,0.827,112,0.681,113,1.639,114,0.681,115,0.827,116,0.681,117,0.827,118,0.681,119,0.827,120,1.478,121,0.681,122,0.827,123,0.681,124,1.235,125,0.681,126,0.788,127,0.681,128,0.788,129,0.681,130,0.827,131,1.515,132,0.681,133,1.177,134,0.681,135,0.751,136,0.681,137,0.788,138,0.681,139,0.827,140,0.681,141,0.827,142,0.681,143,0.788,144,0.827,145,0.3,146,0.454,147,2.187,148,0.649,149,0.618,150,0.505,151,0.649,152,0.649,153,0.649,154,1.224,155,0.649,156,0.618,157,0.649,158,0.649,159,0.649,160,0.649,161,0.618,162,0.649,163,0.649,164,0.827,233,1.507,300,1.587,312,0.913,319,1.433,320,0.96,355,3.468,448,1.979,449,2.368,450,1.979,451,1.979,462,1.12,463,1.609,467,1.883,506,3.092,613,3.468,618,4.924,686,2.071,697,2.322,698,5.358,699,5.358,700,4.831,701,4.037,702,2.704,703,2.704,704,2.704,705,2.704,706,2.704,707,2.704,708,2.704,709,2.704,710,2.704,711,2.704,712,2.322,713,2.704]],["title/classes/Queue.html",[80,0.145,275,2.549]],["body/classes/Queue.html",[3,0.187,4,0.187,5,0.16,7,0.269,8,0.744,13,0.339,14,0.019,15,0.187,16,0.012,17,0.015,18,0.012,37,0.662,39,1.794,43,0.611,52,0.488,54,0.831,55,0.269,56,0.831,57,2.096,58,0.486,59,0.489,66,0.579,67,1.02,80,0.187,88,0.706,96,0.854,181,2.583,187,2.608,233,2.205,259,1.368,275,4.869,528,4.951,645,3.27,714,4.033,715,6.783,716,5.908,717,6.783,718,6.464,719,4.695,720,4.695,721,6.991,722,5.908,723,4.695,724,4.695,725,4.695,726,4.695,727,4.695,728,4.695,729,4.695,730,5.908]],["title/components/RadioButtonComponent.html",[19,0.353,132,0.922]],["body/components/RadioButtonComponent.html",[1,0.749,3,0.124,4,0.124,5,0.153,7,0.179,9,0.582,11,0.955,12,0.594,13,0.257,14,0.019,15,0.124,16,0.008,17,0.011,18,0.008,19,0.506,20,0.786,21,1.186,22,0.955,23,0.955,24,0.955,28,0.565,29,0.749,30,0.369,31,0.906,32,2.161,33,2.269,35,1.372,37,0.597,43,0.464,44,1.127,45,0.837,49,1.686,52,0.424,55,0.301,58,0.464,59,0.475,62,1.606,66,0.401,67,0.674,71,0.333,73,0.929,74,0.238,79,0.553,80,0.124,88,0.674,89,0.678,96,0.393,103,0.786,104,1.372,105,1.307,106,0.008,107,1.755,108,0.955,109,0.955,110,0.786,111,0.955,112,0.786,113,1.755,114,0.786,115,0.955,116,0.786,117,0.955,118,0.786,119,0.955,120,1.606,121,0.786,122,0.955,123,0.786,124,1.372,125,0.786,126,0.909,127,0.786,128,0.909,129,0.786,130,0.955,131,0.786,132,1.594,133,1.9,134,0.786,135,1.593,136,0.786,137,0.909,138,0.786,139,0.955,140,0.786,141,0.955,142,0.786,143,0.909,144,0.955,145,0.346,146,0.524,147,2.233,148,0.749,149,0.713,150,0.582,151,0.749,152,1.376,153,0.749,154,0.713,155,0.749,156,0.713,157,0.749,158,0.749,159,0.749,160,0.749,161,0.713,162,0.749,163,0.749,164,0.955,259,1.307,300,1.762,312,1.053,319,1.591,320,1.107,357,3.123,448,2.197,449,2.572,450,2.197,451,2.197,453,3.996,454,4.993,455,3.655,457,3.123,462,1.293,463,1.856,464,1.856,465,3.434,466,2.68,467,2.173,468,2.68,469,2.68,510,1.053,567,1.625,671,4.407,685,2.173,688,2.39,731,5.434,732,3.851,733,3.12,734,3.12]],["title/components/RadioButtonGroupComponent.html",[19,0.353,134,0.922]],["body/components/RadioButtonGroupComponent.html",[1,0.71,3,0.118,4,0.118,5,0.147,7,0.17,8,0.544,12,0.723,13,0.341,14,0.019,15,0.118,16,0.007,17,0.011,18,0.007,19,0.491,20,0.746,21,1.142,22,0.906,23,0.906,24,0.906,28,0.544,29,0.71,30,0.35,31,0.903,32,2.155,33,2.263,35,1.321,37,0.6,42,1.72,43,0.447,45,0.806,52,0.434,54,0.524,55,0.321,56,0.524,58,0.58,59,0.463,60,1.611,62,1.559,66,0.386,71,0.324,73,0.991,74,0.226,80,0.118,103,0.746,104,1.321,105,1.258,106,0.007,107,1.713,108,0.906,109,0.906,110,0.746,111,0.906,112,0.746,113,1.713,114,0.746,115,0.906,116,0.746,117,0.906,118,0.746,119,0.906,120,1.559,121,0.746,122,0.906,123,0.746,124,1.321,125,0.746,126,0.863,127,0.746,128,0.863,129,0.746,130,0.906,131,0.746,132,0.746,133,1.916,134,1.565,135,1.973,136,0.746,137,0.863,138,0.746,139,0.906,140,0.746,141,0.906,142,0.746,143,0.863,144,0.906,145,0.328,146,0.497,147,2.216,148,0.71,149,0.676,150,0.553,151,0.71,152,0.71,153,0.71,154,0.676,155,0.71,156,0.676,157,1.343,158,0.71,159,0.71,160,0.71,161,0.676,162,0.71,163,0.71,164,0.906,203,1.387,259,1.485,300,1.697,448,2.116,449,2.497,450,2.116,451,2.116,453,3.007,455,3.548,457,3.007,462,1.227,464,1.762,472,2.062,473,4.288,474,3.306,475,3.031,476,3.9,477,3.902,478,3.902,479,3.306,488,2.543,489,2.062,650,2.543,671,4.468,735,5.51,736,2.961,737,2.961,738,4.317,739,2.961,740,3.708,741,2.961,742,2.961,743,3.708,744,3.708,745,3.902,746,2.543]],["title/modules/SbElementModule.html",[294,2.033,747,2.549]],["body/modules/SbElementModule.html",[3,0.159,4,0.159,5,0.137,14,0.019,15,0.159,16,0.01,17,0.013,18,0.01,20,1.854,21,1.062,26,3.075,71,0.46,74,0.306,80,0.159,103,1.011,110,1.854,114,1.854,121,1.854,140,1.854,294,2.23,295,4.071,296,3.176,297,2.388,298,4.177,299,2.796,300,1.578,301,4.177,305,3.718,306,2.796,307,2.796,309,4.089,324,4.089,462,1.663,659,4.719,678,4.585,747,5.328,748,3.448,749,3.448,750,4.015,751,3.448,752,4.015,753,4.015,754,5.338,755,4.015,756,3.448,757,4.015,758,4.015,759,4.015,760,4.015,761,4.015,762,4.015,763,4.015,764,4.015]],["title/components/SelectButtonComponent.html",[19,0.353,136,0.922]],["body/components/SelectButtonComponent.html",[1,0.627,3,0.104,4,0.104,5,0.134,7,0.15,8,0.496,12,0.585,13,0.324,14,0.019,15,0.104,16,0.006,17,0.01,18,0.006,19,0.456,20,0.658,21,1.041,22,0.8,23,0.8,24,0.8,28,0.496,29,0.627,30,0.309,31,0.895,32,2.115,33,2.229,35,1.204,37,0.65,40,3.666,41,3.772,43,0.407,44,1.035,49,1.265,51,1.98,52,0.453,54,0.697,55,0.324,56,1,57,2.107,58,0.49,59,0.468,60,2.367,62,1.729,66,0.506,67,0.849,71,0.334,72,1.451,74,0.199,75,0.975,80,0.104,82,1.555,83,1.555,84,1.361,86,1.555,87,1.555,88,0.792,89,0.568,91,1.675,92,1.675,96,0.496,103,0.658,104,1.204,105,1.147,106,0.006,107,1.612,108,0.8,109,0.8,110,0.658,111,0.8,112,0.658,113,1.612,114,0.658,115,0.8,116,0.658,117,0.8,118,0.658,119,0.8,120,1.448,121,0.658,122,0.8,123,0.658,124,1.204,125,0.658,126,0.762,127,0.658,128,0.762,129,0.658,130,0.8,131,0.658,132,0.658,133,1.147,134,0.658,135,1.462,136,1.496,137,1.891,138,0.658,139,0.8,140,0.658,141,0.8,142,0.658,143,1.647,144,0.8,145,0.29,146,0.439,147,2.175,148,0.627,149,0.597,150,0.488,151,0.627,152,0.627,153,0.627,154,0.597,155,0.627,156,0.597,157,1.264,158,0.627,159,0.627,160,0.627,161,0.597,162,0.627,163,0.627,164,0.8,233,0.975,259,1.647,300,1.547,357,2.741,448,1.929,449,2.32,450,1.929,451,1.929,462,1.083,464,1.555,475,2.816,476,3.669,489,1.82,510,0.882,675,2.245,676,5.063,685,1.82,686,2.002,688,2.002,732,3.38,740,3.38,743,3.38,744,4.524,745,3.626,746,2.245,765,5.678,766,4.733,767,5.268,768,2.613,769,2.613,770,3.935,771,2.613,772,2.613,773,2.613,774,2.613,775,3.935,776,2.613,777,2.613,778,2.613,779,2.613,780,2.613,781,2.613,782,2.613]],["title/interfaces/SelectedOptions.html",[0,1.794,486,2.346]],["body/interfaces/SelectedOptions.html",[0,2.809,2,3.674,3,0.228,4,0.228,5,0.195,12,0.69,14,0.018,15,0.228,16,0.014,17,0.017,18,0.014,52,0.4,57,2.365,486,4.273,783,5.725,784,4.923,785,5.732,786,6.666,787,5.732]],["title/directives/SelectionOptionsDirective.html",[106,0.009,157,0.878]],["body/directives/SelectionOptionsDirective.html",[3,0.18,4,0.18,5,0.155,7,0.26,8,0.728,9,0.846,11,1.387,12,0.469,13,0.331,14,0.019,15,0.18,16,0.011,17,0.014,18,0.011,28,0.571,30,0.536,31,0.792,37,0.569,45,1.078,52,0.483,54,0.803,55,0.26,56,0.803,58,0.598,59,0.554,60,1.692,66,0.406,67,1.063,71,0.404,73,1.023,74,0.345,78,1.142,79,0.803,80,0.18,96,0.571,106,0.014,145,0.502,154,1.319,157,1.386,181,2.527,233,2.157,259,1.321,312,1.53,319,2.05,320,1.609,331,5.573,343,2.222,475,3.783,486,4.534,745,3.472,788,6.074,789,3.893,790,6.359,791,5.778,792,4.533,793,4.533,794,4.533,795,4.533,796,4.533,797,4.533,798,4.533,799,4.533,800,5.778,801,4.533]],["title/directives/SizeColorInputDirective.html",[106,0.009,158,0.878]],["body/directives/SizeColorInputDirective.html",[3,0.182,4,0.182,5,0.156,7,0.262,9,1.344,11,1.954,12,0.696,13,0.333,14,0.019,15,0.182,16,0.011,17,0.014,18,0.011,28,0.576,30,0.541,31,0.795,37,0.621,43,0.602,44,1.32,45,1.084,52,0.446,55,0.262,58,0.602,59,0.481,66,0.41,67,0.873,71,0.369,73,1.131,74,0.349,77,2.508,79,0.81,80,0.231,88,0.873,89,0.994,96,0.576,106,0.014,145,0.507,146,0.975,158,1.394,203,2.159,223,2.383,225,2.242,248,2.687,258,3.027,491,3.293,492,1.623,497,2.116,509,3.186,510,1.962,549,2.383,562,3.929,563,2.541]],["title/directives/SizeInputDirective.html",[106,0.009,159,0.878]],["body/directives/SizeInputDirective.html",[3,0.195,4,0.195,5,0.167,7,0.282,11,2.018,12,0.629,13,0.282,14,0.019,15,0.195,16,0.012,17,0.015,18,0.012,28,0.618,30,0.58,31,0.815,37,0.617,43,0.629,44,1.354,45,1.133,52,0.424,55,0.282,58,0.508,59,0.406,66,0.439,67,0.913,71,0.386,73,1.075,74,0.374,77,2.462,79,0.869,80,0.241,88,0.913,89,1.067,96,0.618,106,0.015,145,0.544,146,1.019,159,1.457,203,1.951,223,2.556,258,3.163,491,3.232,492,1.742,495,3.146,497,2.27,510,1.657,563,2.726]],["title/directives/SizeThemeColorInputDirective.html",[29,0.878,106,0.009]],["body/directives/SizeThemeColorInputDirective.html",[3,0.163,4,0.163,5,0.14,7,0.236,8,0.683,9,1.346,11,1.857,12,0.713,13,0.37,14,0.019,15,0.163,16,0.01,17,0.013,18,0.01,28,0.518,29,1.301,30,0.486,31,0.763,37,0.638,39,1.142,43,0.562,44,1.268,45,1.012,49,1.743,51,2.214,52,0.468,54,0.728,55,0.311,56,0.728,58,0.562,59,0.449,66,0.368,67,0.816,71,0.385,73,1.075,74,0.314,75,1.536,77,2.572,78,1.817,79,0.728,80,0.216,88,0.816,89,0.894,96,0.518,106,0.013,145,0.456,146,0.911,203,2.074,223,2.143,225,2.659,248,2.509,258,2.826,491,3.376,492,1.46,510,1.832,549,2.143,551,2.866,563,2.285,564,2.448,565,4.66,566,3.534,567,2.143,568,3.228,569,2.448,570,2.448]],["title/directives/SizeThemeInputDirective.html",[106,0.009,160,0.878]],["body/directives/SizeThemeInputDirective.html",[3,0.174,4,0.174,5,0.149,7,0.251,8,0.712,11,1.915,12,0.684,13,0.359,14,0.019,15,0.174,16,0.011,17,0.014,18,0.011,28,0.552,30,0.518,31,0.782,37,0.638,39,1.216,43,0.585,44,1.299,45,1.055,49,1.816,51,2.252,52,0.461,54,0.776,55,0.324,56,0.776,58,0.454,59,0.363,66,0.392,67,0.85,71,0.397,73,1.001,74,0.334,75,1.636,77,2.555,78,1.82,79,0.776,80,0.225,88,0.85,89,0.952,96,0.552,106,0.014,145,0.485,146,0.949,160,1.356,203,1.816,223,2.282,258,2.944,491,3.354,492,1.555,510,1.908,549,2.944,550,3.052,551,3.052,563,2.434,564,2.607,567,2.282,568,3.363,569,2.607,570,2.607]],["title/components/SliderComponent.html",[19,0.353,138,0.922]],["body/components/SliderComponent.html",[1,0.598,3,0.099,4,0.099,5,0.129,7,0.143,8,0.478,9,0.465,11,0.763,12,0.604,13,0.381,14,0.019,15,0.099,16,0.006,17,0.009,18,0.006,19,0.444,20,0.628,21,1.004,22,0.763,23,0.763,24,0.763,28,0.478,29,0.598,30,0.295,31,0.892,32,2.11,33,2.216,35,1.162,37,0.61,39,1.619,42,1.553,43,0.393,44,1.01,45,0.709,52,0.489,54,0.672,55,0.317,56,0.672,57,1.632,58,0.663,59,0.575,60,1.417,62,1.162,66,0.412,67,0.911,71,0.292,73,1.107,74,0.19,78,0.628,79,0.441,80,0.099,88,0.571,89,0.542,96,0.579,103,0.628,104,1.162,105,1.107,106,0.006,107,1.574,108,0.763,109,0.763,110,0.628,111,0.763,112,0.628,113,1.574,114,0.628,115,0.763,116,0.628,117,0.763,118,0.628,119,0.763,120,1.407,121,0.628,122,0.763,123,0.628,124,1.162,125,0.628,126,0.727,127,0.628,128,0.727,129,0.628,130,0.763,131,0.628,132,0.628,133,1.107,134,0.628,135,0.692,136,0.628,137,0.727,138,1.469,139,0.763,140,0.628,141,0.763,142,0.628,143,0.727,144,0.763,145,0.276,146,0.418,147,2.158,148,0.598,149,0.569,150,0.465,151,0.598,152,0.598,153,0.598,154,1.174,155,0.598,156,0.569,157,0.598,158,0.598,159,0.598,160,0.598,161,0.569,162,0.598,163,0.598,164,0.763,181,1.661,187,3.859,233,1.717,259,1.107,300,1.492,312,0.842,319,1.348,320,0.885,343,1.861,448,1.861,449,2.254,450,1.861,451,1.861,454,4.644,462,1.033,463,1.483,465,1.91,620,3.95,645,3.855,802,2.141,803,5.143,804,3.797,805,4.6,806,4.6,807,3.797,808,4.6,809,4.6,810,4.6,811,6.063,812,6.25,813,5.535,814,5.535,815,2.493,816,3.797,817,2.493,818,2.493,819,2.493,820,3.797,821,3.797,822,2.493,823,2.493,824,2.493,825,2.493,826,2.493,827,2.493,828,2.493,829,2.493,830,2.493,831,2.493,832,2.493,833,2.493,834,2.493,835,3.797,836,2.493,837,4.6,838,2.493,839,2.493,840,2.493,841,3.797,842,2.493,843,2.493,844,2.493,845,2.493,846,2.493,847,2.493,848,2.493]],["title/directives/StateManagerDirective.html",[106,0.009,161,0.836]],["body/directives/StateManagerDirective.html",[3,0.117,4,0.117,5,0.1,7,0.168,8,0.54,13,0.413,14,0.019,15,0.117,16,0.007,17,0.011,18,0.007,30,0.347,31,0.659,37,0.624,39,1.935,43,0.444,45,0.801,52,0.512,54,1.162,55,0.376,56,1.162,57,2.71,58,0.577,59,0.617,60,2.313,62,1.313,66,0.587,71,0.186,73,1.05,74,0.224,80,0.117,96,0.702,106,0.011,145,0.325,161,0.98,181,1.876,259,2.031,321,5.64,343,2.733,358,3.884,359,3.685,360,4.457,391,3.287,403,2.249,405,2.249,420,2.249,421,3.287,427,2.249,519,3.405,555,5.496,558,5.496,571,2.249,582,2.522,583,2.522,595,3.685,712,2.522,849,5.07,850,5.07,851,5.07,852,4.291,853,4.291,854,4.291,855,6.399,856,4.291,857,4.291,858,4.291,859,4.291,860,2.937,861,4.291,862,2.937,863,4.291,864,2.937,865,4.291,866,2.937,867,2.937,868,2.937,869,2.937,870,2.937,871,2.937,872,2.937,873,4.291,874,2.937,875,2.937,876,4.291,877,2.937,878,2.937,879,2.937,880,2.937,881,4.291,882,2.937,883,4.291,884,2.937,885,4.291,886,2.937,887,4.291,888,2.937,889,2.937]],["title/classes/TableAbstract.html",[80,0.145,890,2.346]],["body/classes/TableAbstract.html",[3,0.271,4,0.19,5,0.163,7,0.274,8,0.752,12,0.674,13,0.374,14,0.019,15,0.19,16,0.012,17,0.015,18,0.012,37,0.583,43,0.618,52,0.455,54,0.846,55,0.343,56,0.846,66,0.428,67,1.026,71,0.303,80,0.19,88,0.718,96,0.82,187,3.791,233,1.783,411,4.102,511,4.176,890,3.828,891,4.102,892,6.245,893,4.99,894,5.595,895,5.129,896,4.776,897,4.776,898,5.129,899,4.776,900,5.862,901,4.776,902,4.776,903,4.776,904,4.776,905,4.776,906,4.776,907,4.776,908,4.776,909,4.776]],["title/components/TableComponent.html",[19,0.353,140,0.922]],["body/components/TableComponent.html",[1,0.732,3,0.121,4,0.121,5,0.15,7,0.175,8,0.556,9,0.823,12,0.65,13,0.346,14,0.019,15,0.121,16,0.008,17,0.011,18,0.008,19,0.5,20,0.769,21,1.167,22,0.934,23,0.934,24,0.934,28,0.556,29,0.732,30,0.361,31,0.904,32,2.163,33,2.271,35,1.35,37,0.639,42,1.75,43,0.457,44,1.116,45,0.823,52,0.438,54,0.54,55,0.326,56,0.54,58,0.536,59,0.429,66,0.395,67,0.906,71,0.329,73,0.918,74,0.233,76,1.496,79,0.54,80,0.121,88,0.854,89,0.663,96,0.556,103,0.769,104,1.35,105,1.286,106,0.008,107,1.737,108,0.934,109,0.934,110,0.769,111,0.934,112,0.769,113,1.737,114,0.769,115,0.934,116,0.769,117,0.934,118,0.769,119,0.934,120,1.586,121,0.769,122,0.934,123,0.769,124,1.35,125,0.769,126,0.889,127,0.769,128,0.889,129,0.769,130,0.934,131,0.769,132,0.769,133,1.286,134,0.769,135,0.847,136,0.769,137,0.889,138,0.769,139,0.934,140,1.43,141,0.934,142,0.769,143,0.889,144,0.934,145,0.338,146,0.512,147,2.226,148,0.732,149,0.697,150,0.569,151,0.732,152,0.732,153,0.732,154,0.697,155,0.732,156,0.697,157,0.732,158,0.732,159,0.732,160,0.732,161,0.697,162,1.362,163,0.732,164,0.934,187,2.878,233,1.139,314,1.956,510,1.49,890,3.323,893,2.337,910,2.621,911,5.561,912,4.412,913,5.183,914,4.412,915,6.279,916,3.052,917,3.052,918,3.052,919,4.412,920,3.052,921,3.052,922,3.052,923,4.412,924,3.052,925,3.052,926,5.183,927,5.679,928,3.052,929,3.052,930,4.412,931,3.052,932,3.052,933,4.412,934,4.412]],["title/classes/TableModel.html",[80,0.145,935,2.803]],["body/classes/TableModel.html",[3,0.163,4,0.163,5,0.14,7,0.235,8,0.682,9,1.284,12,0.56,13,0.384,14,0.019,15,0.163,16,0.01,17,0.013,18,0.01,28,0.682,37,0.485,43,0.56,52,0.468,54,0.726,55,0.421,56,0.726,58,0.56,59,0.448,66,0.367,67,0.814,71,0.26,80,0.163,88,0.616,95,5.912,187,3.007,248,2.504,511,2.629,514,5.912,890,4.413,892,5.536,893,5.133,894,5.756,895,4.65,898,3.522,900,3.522,935,4.147,936,3.522,937,5.414,938,5.414,939,5.414,940,4.101,941,5.414,942,7.278,943,7.278,944,7.278,945,5.414,946,5.414,947,6.446,948,4.101,949,6.061,950,4.101,951,4.101,952,4.101,953,4.101]],["title/directives/ThemeColorInputDirective.html",[106,0.009,162,0.878]],["body/directives/ThemeColorInputDirective.html",[3,0.175,4,0.175,5,0.15,7,0.253,8,0.714,9,1.35,12,0.686,13,0.36,14,0.019,15,0.175,16,0.011,17,0.014,18,0.011,28,0.555,30,0.521,31,0.783,37,0.639,39,1.223,43,0.587,44,1.302,45,1.058,49,1.823,51,2.255,52,0.462,54,0.78,55,0.325,56,0.78,58,0.456,59,0.365,66,0.394,67,0.853,71,0.398,73,1.004,74,0.336,75,1.644,78,1.58,79,0.78,80,0.225,88,0.853,89,0.957,96,0.555,106,0.014,145,0.488,146,0.952,162,1.361,203,1.823,225,2.78,248,2.623,314,4.395,491,3.36,492,1.563,497,2.037,510,1.487,549,2.954,550,3.068,564,2.621,567,2.294,568,3.375,569,2.621,570,2.621]],["title/directives/ThemeInputDirective.html",[106,0.009,163,0.878]],["body/directives/ThemeInputDirective.html",[3,0.188,4,0.188,5,0.161,7,0.271,8,0.747,12,0.614,13,0.34,14,0.019,15,0.188,16,0.012,17,0.015,18,0.012,28,0.595,30,0.558,31,0.804,37,0.64,39,1.311,43,0.614,44,1.335,49,1.905,51,2.296,52,0.452,54,0.836,55,0.34,56,0.836,66,0.423,67,0.891,71,0.412,74,0.36,75,1.763,78,1.632,79,0.836,80,0.235,88,0.891,89,1.026,96,0.595,106,0.015,145,0.523,146,0.995,163,1.422,314,4.357,491,3.331,492,1.676,497,2.742,510,1.594,564,2.809,567,2.459,568,3.527,569,2.809,570,2.809,954,4.722]],["title/injectables/ThemeService.html",[51,1.176,241,2.346]],["body/injectables/ThemeService.html",[3,0.163,4,0.163,5,0.14,7,0.235,8,0.682,12,0.746,13,0.311,14,0.019,15,0.163,16,0.01,17,0.013,18,0.01,19,0.522,21,1.432,37,0.616,39,1.682,43,0.56,51,1.74,52,0.423,54,0.726,55,0.235,56,0.726,58,0.694,59,0.339,66,0.485,71,0.26,74,0.312,78,1.927,80,0.163,88,0.814,96,0.516,126,1.578,213,4.413,241,3.471,242,3.141,259,1.578,279,3.522,280,3.141,326,3.522,329,4.65,330,4.65,333,4.65,343,2.653,367,4.65,385,4.65,386,4.65,389,4.65,422,6.119,955,3.522,956,5.414,957,5.414,958,5.414,959,5.414,960,7.125,961,5.414,962,5.414,963,6.061,964,6.061,965,5.414,966,4.101,967,4.101,968,4.101,969,4.101,970,5.414,971,4.101]],["title/components/ToggleSwitchComponent.html",[19,0.353,142,0.922]],["body/components/ToggleSwitchComponent.html",[1,0.797,3,0.132,4,0.132,5,0.16,7,0.191,8,0.591,9,0.62,11,1.017,12,0.344,13,0.191,14,0.019,15,0.132,16,0.008,17,0.012,18,0.008,19,0.524,20,0.837,21,1.24,22,1.017,23,1.017,24,1.017,28,0.591,29,0.797,30,0.393,31,0.909,32,2.182,33,2.291,35,1.435,37,0.617,42,1.835,43,0.486,44,1.16,52,0.379,55,0.312,58,0.344,59,0.45,62,1.435,66,0.42,67,0.705,71,0.345,73,0.589,74,0.253,78,0.837,79,0.589,80,0.132,88,0.705,89,0.722,96,0.419,103,0.837,104,1.435,105,1.367,106,0.008,107,1.806,108,1.017,109,1.017,110,0.837,111,1.017,112,0.837,113,1.806,114,0.837,115,1.017,116,0.837,117,1.017,118,0.837,119,1.017,120,1.663,121,0.837,122,1.017,123,0.837,124,1.435,125,0.837,126,0.969,127,0.837,128,0.969,129,0.837,130,1.017,131,0.837,132,0.837,133,1.367,134,0.837,135,0.923,136,0.837,137,0.969,138,0.837,139,1.017,140,0.837,141,1.017,142,1.627,143,2.06,144,1.905,145,0.368,146,0.558,147,2.252,148,0.797,149,0.759,150,0.62,151,0.797,152,0.797,153,0.797,154,1.348,155,0.797,156,0.759,157,0.797,158,0.797,159,0.797,160,0.797,161,0.759,162,0.797,163,0.797,164,1.017,259,1.367,300,1.843,312,1.122,319,1.664,320,1.18,448,2.299,449,2.664,450,2.299,451,2.299,462,1.377,463,1.978,464,2.791,467,2.315,668,4.522,972,5.071,973,2.855,974,4.691,975,3.324,976,3.324,977,3.324]],["title/coverage.html",[978,4.307]],["body/coverage.html",[0,2.793,1,0.737,5,0.105,6,2.64,9,1.211,11,1.592,13,0.176,14,0.019,16,0.008,17,0.011,18,0.008,19,0.706,20,0.774,25,2.64,26,2.355,27,2.64,29,0.737,51,0.988,55,0.254,59,0.6,77,2.127,78,1.435,80,0.226,106,0.018,110,0.774,112,0.774,114,0.774,116,0.774,118,0.774,121,0.774,123,0.774,125,0.774,127,0.774,129,0.774,131,0.774,132,0.774,134,0.774,135,0.853,136,0.774,138,0.774,140,0.774,142,0.774,146,0.516,148,0.737,149,0.702,150,0.574,151,0.737,152,0.737,153,0.737,154,0.702,155,0.737,156,0.702,157,0.737,158,0.737,159,0.737,160,0.737,161,0.702,162,0.737,163,0.737,165,2.64,167,1.971,183,1.971,213,1.971,233,1.148,241,2.844,243,2.64,275,2.141,291,2.64,292,2.64,312,2.125,313,2.355,314,2.844,316,2.141,318,2.355,319,2.495,320,2.234,321,2.355,323,2.355,325,2.64,432,2.64,447,2.64,471,2.64,472,3.625,486,1.971,491,3.256,492,2.538,511,1.971,512,2.64,513,2.64,515,2.64,519,3.13,520,2.64,571,3.398,610,2.64,611,2.355,612,2.64,645,5.357,648,2.64,666,2.355,668,2.355,671,3.09,676,2.355,684,2.64,685,3.625,694,2.64,697,2.64,714,2.64,731,2.64,735,2.64,765,2.64,783,2.64,784,2.64,788,2.64,789,2.64,802,2.64,890,1.971,891,2.64,910,2.64,911,2.64,935,2.355,936,2.64,955,2.64,972,2.64,973,2.64,978,2.64,979,2.64,980,3.074,981,3.074,982,4.436,983,3.074,984,6.489,985,5.698,986,6.643,987,6.489,988,4.436,989,4.436,990,5.204,991,4.436,992,3.074,993,3.074,994,5.204,995,5.698,996,3.074,997,3.074,998,3.81,999,4.436,1000,2.64,1001,2.64,1002,3.074]],["title/dependencies.html",[297,2.622,1003,2.616]],["body/dependencies.html",[14,0.018,16,0.015,17,0.017,18,0.015,74,0.447,297,4.019,311,4.493,1004,5.866,1005,5.866,1006,5.866,1007,5.803]],["title/index.html",[7,0.175,1008,3.046,1009,3.046]],["body/index.html",[14,0.015,16,0.012,17,0.015,18,0.012,19,0.477,32,2.014,105,1.442,413,4.249,629,4.249,979,5.684,1003,4.249,1007,4.249,1010,6.103,1011,6.91,1012,4.947,1013,7.229,1014,6.103,1015,4.947,1016,4.947,1017,4.947,1018,4.947,1019,6.618,1020,4.947,1021,6.618,1022,6.91,1023,4.947,1024,4.947,1025,4.947,1026,4.947,1027,4.947,1028,4.947,1029,4.947,1030,4.947,1031,4.947,1032,4.947,1033,6.91,1034,4.947,1035,6.103,1036,4.947,1037,4.947,1038,6.103,1039,6.103,1040,4.947,1041,6.103,1042,6.103,1043,6.103,1044,4.947,1045,6.103,1046,4.947,1047,4.947,1048,4.947,1049,4.947,1050,4.947,1051,4.947,1052,4.947,1053,4.947,1054,4.947,1055,4.947,1056,4.947,1057,4.947,1058,4.947,1059,4.947,1060,4.947]],["title/modules.html",[296,2.983]],["body/modules.html",[14,0.017,16,0.014,17,0.017,18,0.014,295,3.458,296,3.458,659,3.726,747,4.048,756,6.088,1061,7.089,1062,7.089,1063,7.089]],["title/overview.html",[1064,4.307]],["body/overview.html",[2,1.808,14,0.019,16,0.007,17,0.01,18,0.007,20,1.591,21,0.746,29,1.516,88,0.424,103,0.71,110,1.591,112,1.591,114,1.591,116,1.591,118,1.591,121,1.591,123,1.591,125,1.591,127,1.591,129,1.591,131,1.591,132,1.591,134,1.591,136,1.591,138,1.591,140,1.591,142,1.591,145,0.312,146,1.06,148,1.516,149,1.443,150,1.179,151,1.516,152,1.516,153,1.516,154,1.443,155,1.516,156,1.131,157,1.188,158,1.516,159,1.516,160,1.516,161,1.131,162,1.516,163,1.516,242,2.16,294,1.566,295,4.58,296,1.678,297,1.678,298,1.964,299,1.964,300,1.108,301,1.964,302,2.422,303,2.422,304,2.422,305,2.901,306,1.964,307,1.964,659,4.926,660,2.422,661,2.422,662,2.422,747,5.122,748,2.422,749,2.422,751,2.422,1064,2.422,1065,4.165,1066,4.165,1067,2.82,1068,2.82]],["title/miscellaneous/variables.html",[1069,2.616,1070,3.785]],["body/miscellaneous/variables.html",[7,0.33,13,0.383,14,0.018,16,0.014,17,0.017,18,0.014,58,0.596,59,0.477,62,1.762,998,4.946,1000,5.74,1001,5.74,1069,4.946,1070,4.946,1071,6.684,1072,5.758,1073,5.758,1074,5.758]],["title/routes.html",[1075,4.307]],["body/routes.html",[14,0.017,16,0.015,17,0.017,18,0.015,1075,5.173]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"interfaces/ColumnInformationInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/TableAbstract.html":{},"components/TableComponent.html":{},"classes/TableModel.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["0",{"_index":645,"title":{},"body":{"components/FileInputComponent.html":{},"classes/Queue.html":{},"components/SliderComponent.html":{},"coverage.html":{}}}],["0/1",{"_index":994,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":982,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":988,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":993,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":989,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":996,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":983,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":990,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":985,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":986,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":984,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":987,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":995,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":620,"title":{},"body":{"components/FileInputComponent.html":{},"components/SliderComponent.html":{}}}],["10",{"_index":816,"title":{},"body":{"components/SliderComponent.html":{}}}],["100",{"_index":991,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":207,"title":{},"body":{"components/AlertComponent.html":{}}}],["12.0.1",{"_index":1007,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["14/14",{"_index":992,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":1066,"title":{},"body":{"overview.html":{}}}],["2",{"_index":1067,"title":{},"body":{"overview.html":{}}}],["2.1.0",{"_index":1005,"title":{},"body":{"dependencies.html":{}}}],["2000",{"_index":188,"title":{},"body":{"components/AlertComponent.html":{}}}],["3",{"_index":1065,"title":{},"body":{"overview.html":{}}}],["300",{"_index":205,"title":{},"body":{"components/AlertComponent.html":{}}}],["4",{"_index":1068,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":997,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":944,"title":{},"body":{"classes/TableModel.html":{}}}],["__data",{"_index":923,"title":{},"body":{"components/TableComponent.html":{}}}],["__input",{"_index":710,"title":{},"body":{"components/InputComponent.html":{}}}],["__placeholder",{"_index":711,"title":{},"body":{"components/InputComponent.html":{}}}],["_disabled",{"_index":358,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{},"directives/StateManagerDirective.html":{}}}],["_extraclasses",{"_index":493,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["_focused",{"_index":849,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["_options",{"_index":790,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["_pristine",{"_index":850,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["_step",{"_index":805,"title":{},"body":{"components/SliderComponent.html":{}}}],["_theme",{"_index":963,"title":{},"body":{"injectables/ThemeService.html":{}}}],["_touched",{"_index":851,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["abstract",{"_index":892,"title":{},"body":{"classes/TableAbstract.html":{},"classes/TableModel.html":{}}}],["access",{"_index":389,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/ThemeService.html":{}}}],["accessor",{"_index":319,"title":{},"body":{"modules/BaseModule.html":{},"components/CheckboxComponent.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["accessor.base.directive",{"_index":317,"title":{},"body":{"modules/BaseModule.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["accessor.base.directive.ts",{"_index":520,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{},"coverage.html":{}}}],["accessor.base.directive.ts:10",{"_index":537,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["accessor.base.directive.ts:13",{"_index":541,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["accessor.base.directive.ts:14",{"_index":539,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["accessor.base.directive.ts:15",{"_index":534,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["accessor.base.directive.ts:16",{"_index":536,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["accessor.base.directive.ts:20",{"_index":531,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["accessor.base.directive.ts:28",{"_index":532,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["accessor/control",{"_index":316,"title":{},"body":{"modules/BaseModule.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"coverage.html":{}}}],["accessor/event",{"_index":323,"title":{},"body":{"modules/BaseModule.html":{},"directives/EventManagerDirective.html":{},"coverage.html":{}}}],["accessor/state",{"_index":321,"title":{},"body":{"modules/BaseModule.html":{},"directives/StateManagerDirective.html":{},"coverage.html":{}}}],["accessors",{"_index":181,"title":{},"body":{"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"classes/Queue.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{}}}],["according",{"_index":369,"title":{},"body":{"components/ButtonComponent.html":{}}}],["active",{"_index":239,"title":{},"body":{"components/AlertComponent.html":{}}}],["acts",{"_index":327,"title":{},"body":{"components/ButtonComponent.html":{}}}],["actual_component",{"_index":164,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["add",{"_index":1027,"title":{},"body":{"index.html":{}}}],["added",{"_index":395,"title":{},"body":{"components/ButtonComponent.html":{}}}],["adding",{"_index":384,"title":{},"body":{"components/ButtonComponent.html":{}}}],["address",{"_index":939,"title":{},"body":{"classes/TableModel.html":{}}}],["adds",{"_index":379,"title":{},"body":{"components/ButtonComponent.html":{}}}],["alert",{"_index":1,"title":{"interfaces/Alert.html":{}},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["alert'},{'name",{"_index":111,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["alert(alert",{"_index":190,"title":{},"body":{"components/AlertComponent.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["alert(message",{"_index":256,"title":{},"body":{"injectables/AlertService.html":{}}}],["alert.color",{"_index":226,"title":{},"body":{"components/AlertComponent.html":{}}}],["alert.component.html",{"_index":168,"title":{},"body":{"components/AlertComponent.html":{}}}],["alert.size",{"_index":224,"title":{},"body":{"components/AlertComponent.html":{}}}],["alertboxcomponent",{"_index":20,"title":{"components/AlertBoxComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alertcomponent",{"_index":110,"title":{"components/AlertComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alertobject",{"_index":169,"title":{},"body":{"components/AlertComponent.html":{}}}],["alertqueue",{"_index":244,"title":{},"body":{"injectables/AlertService.html":{}}}],["alertservice",{"_index":183,"title":{"injectables/AlertService.html":{}},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/FileInputComponent.html":{},"coverage.html":{}}}],["alertservicesubscriber",{"_index":167,"title":{"interfaces/AlertServiceSubscriber.html":{}},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"coverage.html":{}}}],["alignment",{"_index":514,"title":{},"body":{"interfaces/ColumnInformationInterface.html":{},"classes/TableModel.html":{}}}],["allows",{"_index":957,"title":{},"body":{"injectables/ThemeService.html":{}}}],["angular",{"_index":1013,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":311,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"dependencies.html":{}}}],["angular/core",{"_index":74,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":462,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"components/FileInputComponent.html":{},"modules/FormModule.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["angular/platform",{"_index":755,"title":{},"body":{"modules/SbElementModule.html":{}}}],["appears",{"_index":174,"title":{},"body":{"components/AlertComponent.html":{}}}],["appeartime",{"_index":170,"title":{},"body":{"components/AlertComponent.html":{}}}],["application",{"_index":1056,"title":{},"body":{"index.html":{}}}],["around",{"_index":1017,"title":{},"body":{"index.html":{}}}],["array",{"_index":67,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"classes/TableAbstract.html":{},"components/TableComponent.html":{},"classes/TableModel.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{}}}],["array.isarray(extraclasses",{"_index":501,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["array.isarray(snap",{"_index":840,"title":{},"body":{"components/SliderComponent.html":{}}}],["async",{"_index":173,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{}}}],["attribute",{"_index":72,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["attribute('flipped",{"_index":81,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["attribute('hover",{"_index":441,"title":{},"body":{"components/CardComponent.html":{}}}],["attribute('pill",{"_index":82,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["attribute('plain",{"_index":83,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["attribute('round",{"_index":423,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{}}}],["attribute('shadow",{"_index":442,"title":{},"body":{"components/CardComponent.html":{}}}],["attributes",{"_index":332,"title":{},"body":{"components/ButtonComponent.html":{}}}],["automatic",{"_index":1023,"title":{},"body":{"index.html":{}}}],["available",{"_index":1049,"title":{},"body":{"index.html":{}}}],["await",{"_index":228,"title":{},"body":{"components/AlertComponent.html":{}}}],["base/base.module",{"_index":679,"title":{},"body":{"modules/FormModule.html":{}}}],["base/control",{"_index":463,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["base/selected",{"_index":487,"title":{},"body":{"components/CheckboxGroupComponent.html":{}}}],["base/selection",{"_index":488,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["base/style",{"_index":76,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ContainerComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/TableComponent.html":{}}}],["based",{"_index":381,"title":{},"body":{"components/ButtonComponent.html":{}}}],["basemodule",{"_index":295,"title":{"modules/BaseModule.html":{}},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"modules.html":{},"overview.html":{}}}],["basic",{"_index":353,"title":{},"body":{"components/ButtonComponent.html":{}}}],["beatrice",{"_index":947,"title":{},"body":{"classes/TableModel.html":{}}}],["blur",{"_index":579,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["boolean",{"_index":57,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{}}}],["bootstrap",{"_index":299,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"overview.html":{}}}],["border",{"_index":928,"title":{},"body":{"components/TableComponent.html":{}}}],["box",{"_index":34,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box'},{'name",{"_index":109,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["box.component",{"_index":761,"title":{},"body":{"modules/SbElementModule.html":{}}}],["box.component.html",{"_index":36,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box.component.ts",{"_index":27,"title":{},"body":{"components/AlertBoxComponent.html":{},"coverage.html":{}}}],["box.component.ts:11",{"_index":70,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box.component.ts:14",{"_index":63,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box.component.ts:17",{"_index":64,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box.component.ts:20",{"_index":61,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box.component.ts:22",{"_index":68,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box.component.ts:23",{"_index":69,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box.component.ts:24",{"_index":53,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box.component.ts:38",{"_index":65,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box/alert",{"_index":26,"title":{},"body":{"components/AlertBoxComponent.html":{},"modules/SbElementModule.html":{},"coverage.html":{}}}],["browse",{"_index":1063,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":756,"title":{},"body":{"modules/SbElementModule.html":{},"modules.html":{}}}],["browsermodule",{"_index":754,"title":{},"body":{"modules/SbElementModule.html":{}}}],["btn",{"_index":397,"title":{},"body":{"components/ButtonComponent.html":{}}}],["buchser",{"_index":942,"title":{},"body":{"classes/TableModel.html":{}}}],["button",{"_index":135,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["button'},{'name",{"_index":113,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["button.component",{"_index":667,"title":{},"body":{"modules/FormModule.html":{}}}],["button.component.html",{"_index":357,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{}}}],["button.component.ts",{"_index":685,"title":{},"body":{"components/IconButtonComponent.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:11",{"_index":691,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:12",{"_index":690,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:13",{"_index":692,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:14",{"_index":689,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:17",{"_index":688,"title":{},"body":{"components/IconButtonComponent.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{}}}],["button.component.ts:18",{"_index":774,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["button.component.ts:19",{"_index":732,"title":{},"body":{"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{}}}],["button.component.ts:20",{"_index":693,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:22",{"_index":687,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:26",{"_index":733,"title":{},"body":{"components/RadioButtonComponent.html":{}}}],["button.component.ts:30",{"_index":734,"title":{},"body":{"components/RadioButtonComponent.html":{}}}],["button.component.ts:32",{"_index":772,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["button.component.ts:36",{"_index":771,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["button.component.ts:44",{"_index":773,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["button.component.ts:52",{"_index":768,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["button.component.ts:58",{"_index":769,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["button/button.component",{"_index":665,"title":{},"body":{"modules/FormModule.html":{}}}],["button/icon",{"_index":666,"title":{},"body":{"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"coverage.html":{}}}],["button/radio",{"_index":671,"title":{},"body":{"modules/FormModule.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"coverage.html":{}}}],["button/select",{"_index":676,"title":{},"body":{"modules/FormModule.html":{},"components/SelectButtonComponent.html":{},"coverage.html":{}}}],["button__button",{"_index":778,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["buttoncomponent",{"_index":112,"title":{"components/ButtonComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bytes",{"_index":637,"title":{},"body":{"components/FileInputComponent.html":{}}}],["card",{"_index":433,"title":{},"body":{"components/CardComponent.html":{}}}],["card'},{'name",{"_index":115,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["card.component.html",{"_index":434,"title":{},"body":{"components/CardComponent.html":{}}}],["cardcomponent",{"_index":114,"title":{"components/CardComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["care",{"_index":1031,"title":{},"body":{"index.html":{}}}],["center",{"_index":95,"title":{},"body":{"components/AlertBoxComponent.html":{},"classes/TableModel.html":{}}}],["change",{"_index":580,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["changing",{"_index":335,"title":{},"body":{"components/ButtonComponent.html":{}}}],["check",{"_index":453,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["check(newoption",{"_index":738,"title":{},"body":{"components/RadioButtonGroupComponent.html":{}}}],["checkbox",{"_index":119,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["checkbox'},{'name",{"_index":117,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["checkbox.component.html",{"_index":452,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox/checkbox.component",{"_index":670,"title":{},"body":{"modules/FormModule.html":{}}}],["checkboxcomponent",{"_index":116,"title":{"components/CheckboxComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["checkboxgroupcomponent",{"_index":118,"title":{"components/CheckboxGroupComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["checked",{"_index":468,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadioButtonComponent.html":{}}}],["checkfilesize",{"_index":616,"title":{},"body":{"components/FileInputComponent.html":{}}}],["checkfilesize(file",{"_index":623,"title":{},"body":{"components/FileInputComponent.html":{}}}],["checkout",{"_index":1052,"title":{},"body":{"index.html":{}}}],["choose",{"_index":630,"title":{},"body":{"components/FileInputComponent.html":{}}}],["christoph",{"_index":946,"title":{},"body":{"classes/TableModel.html":{}}}],["class",{"_index":80,"title":{"classes/Queue.html":{},"classes/TableAbstract.html":{},"classes/TableModel.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/TableAbstract.html":{},"components/TableComponent.html":{},"classes/TableModel.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["classes",{"_index":88,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"classes/TableAbstract.html":{},"components/TableComponent.html":{},"classes/TableModel.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"overview.html":{}}}],["classes.push(!this.showarrow",{"_index":93,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["classes.push('is",{"_index":927,"title":{},"body":{"components/TableComponent.html":{}}}],["classes.push('sb",{"_index":777,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["classes.push(classname",{"_index":508,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["classes.push(this.color",{"_index":509,"title":{},"body":{"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{}}}],["classes.push(this.disabled",{"_index":553,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["classes.push(this.flipped",{"_index":90,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["classes.push(this.focused",{"_index":560,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["classes.push(this.groupalign",{"_index":657,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["classes.push(this.hover",{"_index":445,"title":{},"body":{"components/CardComponent.html":{}}}],["classes.push(this.label",{"_index":465,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadioButtonComponent.html":{},"components/SliderComponent.html":{}}}],["classes.push(this.pill",{"_index":91,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["classes.push(this.plain",{"_index":92,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["classes.push(this.pristine",{"_index":554,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["classes.push(this.rootclass",{"_index":506,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"components/InputComponent.html":{}}}],["classes.push(this.round",{"_index":431,"title":{},"body":{"components/ButtonComponent.html":{}}}],["classes.push(this.shadow",{"_index":446,"title":{},"body":{"components/CardComponent.html":{}}}],["classes.push(this.show",{"_index":238,"title":{},"body":{"components/AlertComponent.html":{}}}],["classes.push(this.showoptions",{"_index":779,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["classes.push(this.showvalue",{"_index":848,"title":{},"body":{"components/SliderComponent.html":{}}}],["classes.push(this.size",{"_index":563,"title":{},"body":{"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{}}}],["classes.push(this.subrootclass",{"_index":930,"title":{},"body":{"components/TableComponent.html":{}}}],["classes.push(this.theme",{"_index":570,"title":{},"body":{"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["classes.push(this.touched",{"_index":557,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["classes.push(this.value",{"_index":467,"title":{},"body":{"components/CheckboxComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["classname",{"_index":505,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["classnameinputdirective",{"_index":146,"title":{"directives/ClassNameInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cli",{"_index":1014,"title":{},"body":{"index.html":{}}}],["clickable",{"_index":393,"title":{},"body":{"components/ButtonComponent.html":{}}}],["closed",{"_index":781,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["cluster_basemodule",{"_index":302,"title":{},"body":{"modules/BaseModule.html":{},"overview.html":{}}}],["cluster_basemodule_declarations",{"_index":303,"title":{},"body":{"modules/BaseModule.html":{},"overview.html":{}}}],["cluster_basemodule_exports",{"_index":304,"title":{},"body":{"modules/BaseModule.html":{},"overview.html":{}}}],["cluster_formmodule",{"_index":660,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_declarations",{"_index":661,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_exports",{"_index":662,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_imports",{"_index":663,"title":{},"body":{"modules/FormModule.html":{}}}],["cluster_sbelementmodule",{"_index":748,"title":{},"body":{"modules/SbElementModule.html":{},"overview.html":{}}}],["cluster_sbelementmodule_declarations",{"_index":751,"title":{},"body":{"modules/SbElementModule.html":{},"overview.html":{}}}],["cluster_sbelementmodule_exports",{"_index":749,"title":{},"body":{"modules/SbElementModule.html":{},"overview.html":{}}}],["cluster_sbelementmodule_imports",{"_index":750,"title":{},"body":{"modules/SbElementModule.html":{}}}],["color",{"_index":9,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"directives/ColorInputDirective.html":{},"interfaces/ColumnInformationInterface.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"classes/TableModel.html":{},"directives/ThemeColorInputDirective.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["colorinputdirective",{"_index":148,"title":{"directives/ColorInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["colors",{"_index":348,"title":{},"body":{"components/ButtonComponent.html":{}}}],["column",{"_index":901,"title":{},"body":{"classes/TableAbstract.html":{}}}],["column.name",{"_index":933,"title":{},"body":{"components/TableComponent.html":{}}}],["columnentry",{"_index":934,"title":{},"body":{"components/TableComponent.html":{}}}],["columnindex",{"_index":921,"title":{},"body":{"components/TableComponent.html":{}}}],["columninformation",{"_index":893,"title":{},"body":{"classes/TableAbstract.html":{},"components/TableComponent.html":{},"classes/TableModel.html":{}}}],["columninformation.alignment",{"_index":932,"title":{},"body":{"components/TableComponent.html":{}}}],["columninformation.color",{"_index":931,"title":{},"body":{"components/TableComponent.html":{}}}],["columninformation.name",{"_index":906,"title":{},"body":{"classes/TableAbstract.html":{}}}],["columninformationinterface",{"_index":511,"title":{"interfaces/ColumnInformationInterface.html":{}},"body":{"interfaces/ColumnInformationInterface.html":{},"classes/TableAbstract.html":{},"classes/TableModel.html":{},"coverage.html":{}}}],["combine",{"_index":341,"title":{},"body":{"components/ButtonComponent.html":{}}}],["commit",{"_index":964,"title":{},"body":{"injectables/ThemeService.html":{}}}],["commit(theme",{"_index":965,"title":{},"body":{"injectables/ThemeService.html":{}}}],["commonmodule",{"_index":310,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{}}}],["component",{"_index":19,"title":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":108,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["components",{"_index":21,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"overview.html":{}}}],["components/alert",{"_index":760,"title":{},"body":{"modules/SbElementModule.html":{}}}],["components/alert/alert.component",{"_index":763,"title":{},"body":{"modules/SbElementModule.html":{}}}],["components/base/base.module",{"_index":757,"title":{},"body":{"modules/SbElementModule.html":{}}}],["components/base/control",{"_index":798,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["components/card/card.component",{"_index":764,"title":{},"body":{"modules/SbElementModule.html":{}}}],["components/container/container.component",{"_index":759,"title":{},"body":{"modules/SbElementModule.html":{}}}],["components/form/form.module",{"_index":758,"title":{},"body":{"modules/SbElementModule.html":{}}}],["components/table/table.component",{"_index":762,"title":{},"body":{"modules/SbElementModule.html":{}}}],["constructed",{"_index":1016,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":49,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["constructor(alertservice",{"_index":182,"title":{},"body":{"components/AlertComponent.html":{},"components/FileInputComponent.html":{}}}],["constructor(flipped",{"_index":50,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["constructor(hover",{"_index":436,"title":{},"body":{"components/CardComponent.html":{}}}],["constructor(pill",{"_index":686,"title":{},"body":{"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["constructor(round",{"_index":364,"title":{},"body":{"components/ButtonComponent.html":{}}}],["constructor(themeservice",{"_index":564,"title":{},"body":{"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["container",{"_index":516,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container'},{'name",{"_index":122,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["container.component.html",{"_index":517,"title":{},"body":{"components/ContainerComponent.html":{}}}],["containercomponent",{"_index":121,"title":{"components/ContainerComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["context",{"_index":1000,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":315,"title":{},"body":{"modules/BaseModule.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{}}}],["controlvalueaccessor",{"_index":521,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["controlvalueaccessorbasedirective",{"_index":149,"title":{"directives/ControlValueAccessorBaseDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["controlvalueaccessorclassnameinputdirective",{"_index":150,"title":{"directives/ControlValueAccessorClassNameInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["controlvalueaccessorcolorinputdirective",{"_index":151,"title":{"directives/ControlValueAccessorColorInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["controlvalueaccessorsizecolorinputdirective",{"_index":152,"title":{"directives/ControlValueAccessorSizeColorInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["controlvalueaccessorsizeinputdirective",{"_index":153,"title":{"directives/ControlValueAccessorSizeInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["controlvalueaccessorsizethemecolorinputdirective",{"_index":154,"title":{"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["controlvalueaccessorthemecolorinputdirective",{"_index":155,"title":{"directives/ControlValueAccessorThemeColorInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coverage",{"_index":978,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creates",{"_index":366,"title":{},"body":{"components/ButtonComponent.html":{}}}],["current",{"_index":422,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/ThemeService.html":{}}}],["customicon",{"_index":46,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["d",{"_index":258,"title":{},"body":{"injectables/AlertService.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{}}}],["data",{"_index":894,"title":{},"body":{"classes/TableAbstract.html":{},"classes/TableModel.html":{}}}],["decimalplaces",{"_index":806,"title":{},"body":{"components/SliderComponent.html":{}}}],["declarations",{"_index":298,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"overview.html":{}}}],["default",{"_index":58,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"classes/TableModel.html":{},"directives/ThemeColorInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultmessage",{"_index":615,"title":{},"body":{"components/FileInputComponent.html":{}}}],["defined",{"_index":52,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/TableAbstract.html":{},"components/TableComponent.html":{},"classes/TableModel.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["defines",{"_index":377,"title":{},"body":{"components/ButtonComponent.html":{}}}],["dependencies",{"_index":297,"title":{"dependencies.html":{}},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dequeue",{"_index":715,"title":{},"body":{"classes/Queue.html":{}}}],["description",{"_index":326,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/ThemeService.html":{}}}],["dev",{"_index":1043,"title":{},"body":{"index.html":{}}}],["different",{"_index":330,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/ThemeService.html":{}}}],["directive",{"_index":106,"title":{"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/StateManagerDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["directives",{"_index":145,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{},"overview.html":{}}}],["directory",{"_index":1059,"title":{},"body":{"index.html":{}}}],["dirty",{"_index":556,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["disabled",{"_index":360,"title":{},"body":{"components/ButtonComponent.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"components/IconButtonComponent.html":{},"directives/StateManagerDirective.html":{}}}],["disabled(isdisabled",{"_index":420,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{},"directives/StateManagerDirective.html":{}}}],["disabled]{@link",{"_index":419,"title":{},"body":{"components/ButtonComponent.html":{}}}],["documentation",{"_index":979,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":23,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["el",{"_index":33,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["element",{"_index":105,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"index.html":{}}}],["element.module.ts",{"_index":753,"title":{},"body":{"modules/SbElementModule.html":{}}}],["elementand",{"_index":1028,"title":{},"body":{"index.html":{}}}],["elements",{"_index":962,"title":{},"body":{"injectables/ThemeService.html":{}}}],["emitblur",{"_index":574,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["emitchange",{"_index":529,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{},"directives/EventManagerDirective.html":{}}}],["emitchange(value",{"_index":586,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["emitfocus",{"_index":575,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["enqueue",{"_index":716,"title":{},"body":{"classes/Queue.html":{}}}],["enqueue(value",{"_index":722,"title":{},"body":{"classes/Queue.html":{}}}],["error('cannot",{"_index":412,"title":{},"body":{"components/ButtonComponent.html":{}}}],["error('column",{"_index":907,"title":{},"body":{"classes/TableAbstract.html":{}}}],["event",{"_index":542,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["eventemitter",{"_index":581,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["eventmanagerdirective",{"_index":156,"title":{"directives/EventManagerDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["events",{"_index":598,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["example",{"_index":352,"title":{},"body":{"components/ButtonComponent.html":{}}}],["exist",{"_index":909,"title":{},"body":{"classes/TableAbstract.html":{}}}],["export",{"_index":15,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"interfaces/ColumnInformationInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/TableAbstract.html":{},"components/TableComponent.html":{},"classes/TableModel.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["exports",{"_index":301,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"overview.html":{}}}],["extends",{"_index":28,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"classes/TableModel.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{}}}],["extraclasses",{"_index":494,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["extraclasses(extraclasses",{"_index":500,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["extraclasses.split",{"_index":503,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["false",{"_index":60,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"interfaces/ColumnInformationInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/TableAbstract.html":{},"components/TableComponent.html":{},"classes/TableModel.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["file.name",{"_index":641,"title":{},"body":{"components/FileInputComponent.html":{}}}],["file.size",{"_index":646,"title":{},"body":{"components/FileInputComponent.html":{}}}],["fileinputcomponent",{"_index":123,"title":{"components/FileInputComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fileinputcomponent.defaultmessage",{"_index":632,"title":{},"body":{"components/FileInputComponent.html":{}}}],["filelist",{"_index":627,"title":{},"body":{"components/FileInputComponent.html":{}}}],["files",{"_index":629,"title":{},"body":{"components/FileInputComponent.html":{},"index.html":{}}}],["files.item(0",{"_index":638,"title":{},"body":{"components/FileInputComponent.html":{}}}],["filter(classname",{"_index":504,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["first",{"_index":937,"title":{},"body":{"classes/TableModel.html":{}}}],["flipped",{"_index":38,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["fn",{"_index":591,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["focus",{"_index":561,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/EventManagerDirective.html":{}}}],["focused",{"_index":855,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["focused(isfocused",{"_index":886,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["follow",{"_index":1039,"title":{},"body":{"index.html":{}}}],["form",{"_index":126,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["formgroup",{"_index":390,"title":{},"body":{"components/ButtonComponent.html":{}}}],["formgroupcomponent",{"_index":125,"title":{"components/FormGroupComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formmodule",{"_index":659,"title":{"modules/FormModule.html":{}},"body":{"modules/FormModule.html":{},"modules/SbElementModule.html":{},"modules.html":{},"overview.html":{}}}],["formsmodule",{"_index":678,"title":{},"body":{"modules/FormModule.html":{},"modules/SbElementModule.html":{}}}],["function",{"_index":594,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["generated",{"_index":1012,"title":{},"body":{"index.html":{}}}],["getbuttonclasses",{"_index":767,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["getclasses",{"_index":44,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{}}}],["getclasses]{@link",{"_index":428,"title":{},"body":{"components/ButtonComponent.html":{}}}],["getcolumnclasses",{"_index":914,"title":{},"body":{"components/TableComponent.html":{}}}],["getcolumnclasses(columnindex",{"_index":919,"title":{},"body":{"components/TableComponent.html":{}}}],["getcolumninformation",{"_index":895,"title":{},"body":{"classes/TableAbstract.html":{},"classes/TableModel.html":{}}}],["getcolumninformation(nameorindex",{"_index":898,"title":{},"body":{"classes/TableAbstract.html":{},"classes/TableModel.html":{}}}],["getdisabled",{"_index":403,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{},"directives/StateManagerDirective.html":{}}}],["getfocused",{"_index":878,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["gethasgrouptitle",{"_index":654,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["getinputclasses",{"_index":698,"title":{},"body":{"components/InputComponent.html":{}}}],["getlength",{"_index":725,"title":{},"body":{"classes/Queue.html":{}}}],["getmessage",{"_index":210,"title":{},"body":{"components/AlertComponent.html":{}}}],["getnumberpipingvalue",{"_index":832,"title":{},"body":{"components/SliderComponent.html":{}}}],["getoptions",{"_index":794,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["getplaceholderclasses",{"_index":699,"title":{},"body":{"components/InputComponent.html":{}}}],["getpristine",{"_index":874,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["gets",{"_index":385,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/ThemeService.html":{}}}],["getstep",{"_index":828,"title":{},"body":{"components/SliderComponent.html":{}}}],["getting",{"_index":1008,"title":{"index.html":{}},"body":{}}],["gettouched",{"_index":870,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["getvalue",{"_index":538,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["github",{"_index":1053,"title":{},"body":{"index.html":{}}}],["global",{"_index":956,"title":{},"body":{"injectables/ThemeService.html":{}}}],["go",{"_index":1048,"title":{},"body":{"index.html":{}}}],["good",{"_index":1047,"title":{},"body":{"index.html":{}}}],["group",{"_index":473,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"components/FormGroupComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["group'},{'name",{"_index":120,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["group.component",{"_index":673,"title":{},"body":{"modules/FormModule.html":{}}}],["group.component.html",{"_index":474,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"components/FormGroupComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["group.component.ts",{"_index":472,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"components/FormGroupComponent.html":{},"components/RadioButtonGroupComponent.html":{},"coverage.html":{}}}],["group.component.ts:10",{"_index":653,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["group.component.ts:13",{"_index":651,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["group.component.ts:14",{"_index":655,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["group.component.ts:16",{"_index":742,"title":{},"body":{"components/RadioButtonGroupComponent.html":{}}}],["group.component.ts:17",{"_index":485,"title":{},"body":{"components/CheckboxGroupComponent.html":{}}}],["group.component.ts:19",{"_index":650,"title":{},"body":{"components/FormGroupComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["group.component.ts:20",{"_index":481,"title":{},"body":{"components/CheckboxGroupComponent.html":{}}}],["group.component.ts:21",{"_index":652,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["group.component.ts:22",{"_index":736,"title":{},"body":{"components/RadioButtonGroupComponent.html":{}}}],["group.component.ts:23",{"_index":480,"title":{},"body":{"components/CheckboxGroupComponent.html":{}}}],["group.component.ts:25",{"_index":737,"title":{},"body":{"components/RadioButtonGroupComponent.html":{}}}],["group.component.ts:26",{"_index":482,"title":{},"body":{"components/CheckboxGroupComponent.html":{}}}],["group.component.ts:27",{"_index":739,"title":{},"body":{"components/RadioButtonGroupComponent.html":{}}}],["group.component.ts:28",{"_index":483,"title":{},"body":{"components/CheckboxGroupComponent.html":{}}}],["group.component.ts:32",{"_index":484,"title":{},"body":{"components/CheckboxGroupComponent.html":{}}}],["group.component.ts:34",{"_index":741,"title":{},"body":{"components/RadioButtonGroupComponent.html":{}}}],["group/base/selection",{"_index":675,"title":{},"body":{"modules/FormModule.html":{},"components/SelectButtonComponent.html":{}}}],["group/checkbox/checkbox",{"_index":674,"title":{},"body":{"modules/FormModule.html":{}}}],["group/form",{"_index":681,"title":{},"body":{"modules/FormModule.html":{}}}],["group/radio",{"_index":672,"title":{},"body":{"modules/FormModule.html":{}}}],["groupalign",{"_index":477,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"components/FormGroupComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["grouptitle",{"_index":478,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"components/FormGroupComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["gumisweg",{"_index":943,"title":{},"body":{"classes/TableModel.html":{}}}],["hasgrouptitle",{"_index":649,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["here",{"_index":1046,"title":{},"body":{"index.html":{}}}],["hides",{"_index":175,"title":{},"body":{"components/AlertComponent.html":{}}}],["hidetime",{"_index":171,"title":{},"body":{"components/AlertComponent.html":{}}}],["hover",{"_index":350,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{}}}],["html",{"_index":104,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["icon",{"_index":128,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["icon'},{'name",{"_index":130,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["icon.component.html",{"_index":695,"title":{},"body":{"components/IconComponent.html":{}}}],["icon/icon.component",{"_index":680,"title":{},"body":{"modules/FormModule.html":{}}}],["iconbuttoncomponent",{"_index":127,"title":{"components/IconButtonComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["iconcomponent",{"_index":129,"title":{"components/IconComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["identifier",{"_index":980,"title":{},"body":{"coverage.html":{}}}],["implementing",{"_index":1060,"title":{},"body":{"index.html":{}}}],["implements",{"_index":166,"title":{},"body":{"components/AlertComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{}}}],["import",{"_index":71,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/TableAbstract.html":{},"components/TableComponent.html":{},"classes/TableModel.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["imports",{"_index":324,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{}}}],["inactive",{"_index":240,"title":{},"body":{"components/AlertComponent.html":{}}}],["include",{"_index":1044,"title":{},"body":{"index.html":{}}}],["included",{"_index":386,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/ThemeService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"interfaces/ColumnInformationInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/TableAbstract.html":{},"components/TableComponent.html":{},"classes/TableModel.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":785,"title":{},"body":{"interfaces/SelectedOptions.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"interfaces/ColumnInformationInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/TableAbstract.html":{},"components/TableComponent.html":{},"classes/TableModel.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["inform",{"_index":247,"title":{},"body":{"injectables/AlertService.html":{}}}],["inform(message",{"_index":260,"title":{},"body":{"injectables/AlertService.html":{}}}],["information",{"_index":908,"title":{},"body":{"classes/TableAbstract.html":{}}}],["information.interface",{"_index":902,"title":{},"body":{"classes/TableAbstract.html":{}}}],["information.interface.ts",{"_index":513,"title":{},"body":{"interfaces/ColumnInformationInterface.html":{},"coverage.html":{}}}],["inherited",{"_index":949,"title":{},"body":{"classes/TableModel.html":{}}}],["injectable",{"_index":241,"title":{"injectables/AlertService.html":{},"injectables/ThemeService.html":{}},"body":{"injectables/AlertService.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["injectables",{"_index":242,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ThemeService.html":{},"overview.html":{}}}],["innerchange",{"_index":530,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["innervalue",{"_index":522,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["input",{"_index":73,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"components/ToggleSwitchComponent.html":{}}}],["input'},{'name",{"_index":124,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["input(files",{"_index":626,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component",{"_index":683,"title":{},"body":{"modules/FormModule.html":{}}}],["input.component.html",{"_index":613,"title":{},"body":{"components/FileInputComponent.html":{},"components/InputComponent.html":{}}}],["input.component.ts",{"_index":612,"title":{},"body":{"components/FileInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:18",{"_index":635,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:21",{"_index":622,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:25",{"_index":621,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:27",{"_index":634,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:28",{"_index":633,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:30",{"_index":631,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:31",{"_index":619,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:44",{"_index":628,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:57",{"_index":624,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:67",{"_index":625,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.directive",{"_index":79,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{}}}],["input.directive.ts",{"_index":492,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"coverage.html":{}}}],["input.directive.ts:10",{"_index":497,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["input.directive.ts:11",{"_index":551,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{}}}],["input.directive.ts:12",{"_index":495,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/SizeInputDirective.html":{}}}],["input.directive.ts:13",{"_index":549,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{}}}],["input.directive.ts:15",{"_index":562,"title":{},"body":{"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{}}}],["input.directive.ts:16",{"_index":565,"title":{},"body":{"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{}}}],["input.directive.ts:19",{"_index":954,"title":{},"body":{"directives/ThemeInputDirective.html":{}}}],["input.directive.ts:21",{"_index":496,"title":{},"body":{"directives/ClassNameInputDirective.html":{}}}],["input.directive.ts:22",{"_index":550,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{}}}],["input.directive.ts:25",{"_index":566,"title":{},"body":{"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{}}}],["input.directive.ts:8",{"_index":498,"title":{},"body":{"directives/ClassNameInputDirective.html":{}}}],["input.directive.ts:9",{"_index":552,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["input/class",{"_index":318,"title":{},"body":{"modules/BaseModule.html":{},"directives/ClassNameInputDirective.html":{},"coverage.html":{}}}],["input/color",{"_index":313,"title":{},"body":{"modules/BaseModule.html":{},"directives/ColorInputDirective.html":{},"coverage.html":{}}}],["input/control",{"_index":320,"title":{},"body":{"modules/BaseModule.html":{},"components/CheckboxComponent.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["input/file",{"_index":611,"title":{},"body":{"components/FileInputComponent.html":{},"modules/FormModule.html":{},"coverage.html":{}}}],["input/input.component",{"_index":682,"title":{},"body":{"modules/FormModule.html":{}}}],["input/size",{"_index":77,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ContainerComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"coverage.html":{}}}],["input/theme",{"_index":314,"title":{},"body":{"modules/BaseModule.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"coverage.html":{}}}],["inputcomponent",{"_index":131,"title":{"components/InputComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inputs",{"_index":45,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{}}}],["install",{"_index":1033,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1022,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Alert.html":{},"interfaces/AlertServiceSubscriber.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/SelectedOptions.html":{}},"body":{"interfaces/Alert.html":{},"interfaces/AlertServiceSubscriber.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/SelectedOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Alert.html":{},"interfaces/AlertServiceSubscriber.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/SelectedOptions.html":{},"overview.html":{}}}],["invert",{"_index":347,"title":{},"body":{"components/ButtonComponent.html":{}}}],["isbusy",{"_index":245,"title":{},"body":{"injectables/AlertService.html":{}}}],["isdisabled",{"_index":391,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{},"directives/StateManagerDirective.html":{}}}],["isempty",{"_index":717,"title":{},"body":{"classes/Queue.html":{}}}],["isfocused",{"_index":881,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["ispill",{"_index":361,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ispill(ispill",{"_index":416,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ispill]=\"{boolean",{"_index":339,"title":{},"body":{"components/ButtonComponent.html":{}}}],["isplain",{"_index":362,"title":{},"body":{"components/ButtonComponent.html":{}}}],["isplain(isplain",{"_index":418,"title":{},"body":{"components/ButtonComponent.html":{}}}],["isplain/plain",{"_index":345,"title":{},"body":{"components/ButtonComponent.html":{}}}],["isplain`/`plain",{"_index":406,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ispristine",{"_index":876,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["isround",{"_index":363,"title":{},"body":{"components/ButtonComponent.html":{}}}],["isround(isround",{"_index":409,"title":{},"body":{"components/ButtonComponent.html":{}}}],["isround]=\"{boolean",{"_index":340,"title":{},"body":{"components/ButtonComponent.html":{}}}],["istouched",{"_index":873,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["key",{"_index":786,"title":{},"body":{"interfaces/SelectedOptions.html":{}}}],["label",{"_index":454,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadioButtonComponent.html":{},"components/SliderComponent.html":{}}}],["labelposition",{"_index":455,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["last",{"_index":938,"title":{},"body":{"classes/TableModel.html":{}}}],["left",{"_index":479,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"components/FormGroupComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["legend",{"_index":103,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"overview.html":{}}}],["length",{"_index":718,"title":{},"body":{"classes/Queue.html":{}}}],["library",{"_index":1011,"title":{},"body":{"index.html":{}}}],["light",{"_index":959,"title":{},"body":{"injectables/ThemeService.html":{}}}],["limit",{"_index":617,"title":{},"body":{"components/FileInputComponent.html":{}}}],["link",{"_index":430,"title":{},"body":{"components/ButtonComponent.html":{}}}],["literal",{"_index":1074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["located",{"_index":1057,"title":{},"body":{"index.html":{}}}],["longer",{"_index":392,"title":{},"body":{"components/ButtonComponent.html":{}}}],["look",{"_index":1050,"title":{},"body":{"index.html":{}}}],["manager.directive",{"_index":322,"title":{},"body":{"modules/BaseModule.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/EventManagerDirective.html":{}}}],["manager.directive.ts",{"_index":571,"title":{},"body":{"directives/EventManagerDirective.html":{},"directives/StateManagerDirective.html":{},"coverage.html":{}}}],["manager.directive.ts:10",{"_index":595,"title":{},"body":{"directives/EventManagerDirective.html":{},"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:11",{"_index":871,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:13",{"_index":583,"title":{},"body":{"directives/EventManagerDirective.html":{},"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:15",{"_index":858,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:16",{"_index":582,"title":{},"body":{"directives/EventManagerDirective.html":{},"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:18",{"_index":867,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:19",{"_index":584,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["manager.directive.ts:20",{"_index":856,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:21",{"_index":877,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:22",{"_index":585,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["manager.directive.ts:23",{"_index":868,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:25",{"_index":857,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:26",{"_index":879,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:28",{"_index":860,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:29",{"_index":588,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["manager.directive.ts:32",{"_index":866,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:34",{"_index":587,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["manager.directive.ts:36",{"_index":864,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:40",{"_index":862,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:41",{"_index":590,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["manager.directive.ts:42",{"_index":593,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["manager.directive.ts:8",{"_index":869,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:9",{"_index":596,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["manual",{"_index":1038,"title":{},"body":{"index.html":{}}}],["matching",{"_index":17,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"interfaces/ColumnInformationInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/TableAbstract.html":{},"components/TableComponent.html":{},"classes/TableModel.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["math.floor(step",{"_index":836,"title":{},"body":{"components/SliderComponent.html":{}}}],["math.round((this.max",{"_index":843,"title":{},"body":{"components/SliderComponent.html":{}}}],["max",{"_index":808,"title":{},"body":{"components/SliderComponent.html":{}}}],["means",{"_index":349,"title":{},"body":{"components/ButtonComponent.html":{}}}],["mega",{"_index":636,"title":{},"body":{"components/FileInputComponent.html":{}}}],["message",{"_index":10,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/FileInputComponent.html":{}}}],["metadata",{"_index":30,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{}}}],["method",{"_index":383,"title":{},"body":{"components/ButtonComponent.html":{}}}],["methods",{"_index":43,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/TableAbstract.html":{},"components/TableComponent.html":{},"classes/TableModel.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["min",{"_index":809,"title":{},"body":{"components/SliderComponent.html":{}}}],["minimal",{"_index":356,"title":{},"body":{"components/ButtonComponent.html":{}}}],["miscellaneous",{"_index":1069,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["models/alert/alert",{"_index":212,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{}}}],["models/queue/queue",{"_index":278,"title":{},"body":{"injectables/AlertService.html":{}}}],["models/table/table.abstract",{"_index":925,"title":{},"body":{"components/TableComponent.html":{}}}],["module",{"_index":294,"title":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{}},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"overview.html":{}}}],["modules",{"_index":296,"title":{"modules.html":{}},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"modules.html":{},"overview.html":{}}}],["multi",{"_index":451,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["name",{"_index":55,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"interfaces/ColumnInformationInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/TableAbstract.html":{},"components/TableComponent.html":{},"classes/TableModel.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["nameorindex",{"_index":900,"title":{},"body":{"classes/TableAbstract.html":{},"classes/TableModel.html":{}}}],["necessary",{"_index":1034,"title":{},"body":{"index.html":{}}}],["needed",{"_index":380,"title":{},"body":{"components/ButtonComponent.html":{}}}],["new",{"_index":233,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"classes/TableAbstract.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["newoption",{"_index":740,"title":{},"body":{"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{}}}],["ng",{"_index":1026,"title":{},"body":{"index.html":{}}}],["ng_value_accessor",{"_index":449,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["ngmodule",{"_index":309,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{}}}],["night",{"_index":960,"title":{},"body":{"injectables/ThemeService.html":{}}}],["normal",{"_index":328,"title":{},"body":{"components/ButtonComponent.html":{}}}],["now",{"_index":351,"title":{},"body":{"components/ButtonComponent.html":{}}}],["npm",{"_index":1041,"title":{},"body":{"index.html":{}}}],["null",{"_index":203,"title":{},"body":{"components/AlertComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/RadioButtonGroupComponent.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{}}}],["number",{"_index":187,"title":{},"body":{"components/AlertComponent.html":{},"components/FileInputComponent.html":{},"classes/Queue.html":{},"components/SliderComponent.html":{},"classes/TableAbstract.html":{},"components/TableComponent.html":{},"classes/TableModel.html":{}}}],["numberpipingvalue",{"_index":814,"title":{},"body":{"components/SliderComponent.html":{}}}],["onchangecallback",{"_index":572,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["one",{"_index":342,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ontouchedcallback",{"_index":573,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["open",{"_index":780,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["option",{"_index":744,"title":{},"body":{"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{}}}],["optional",{"_index":56,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/TableAbstract.html":{},"components/TableComponent.html":{},"classes/TableModel.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{}}}],["options",{"_index":331,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/SelectionOptionsDirective.html":{}}}],["options(options",{"_index":799,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["options.directive",{"_index":489,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"modules/FormModule.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{}}}],["options.directive.ts",{"_index":789,"title":{},"body":{"directives/SelectionOptionsDirective.html":{},"coverage.html":{}}}],["options.directive.ts:10",{"_index":793,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["options.directive.ts:11",{"_index":792,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["options.directive.ts:14",{"_index":791,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["options.directive.ts:18",{"_index":795,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["options.ts",{"_index":784,"title":{},"body":{"interfaces/SelectedOptions.html":{},"coverage.html":{}}}],["options.ts:1",{"_index":787,"title":{},"body":{"interfaces/SelectedOptions.html":{}}}],["out",{"_index":307,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"overview.html":{}}}],["output",{"_index":597,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["outputs",{"_index":578,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["overview",{"_index":1064,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrites",{"_index":382,"title":{},"body":{"components/ButtonComponent.html":{}}}],["package",{"_index":1003,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["packages",{"_index":1035,"title":{},"body":{"index.html":{}}}],["page",{"_index":1054,"title":{},"body":{"index.html":{}}}],["param",{"_index":408,"title":{},"body":{"components/ButtonComponent.html":{}}}],["parameters",{"_index":54,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/TableAbstract.html":{},"components/TableComponent.html":{},"classes/TableModel.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{}}}],["param{string",{"_index":969,"title":{},"body":{"injectables/ThemeService.html":{}}}],["passed",{"_index":337,"title":{},"body":{"components/ButtonComponent.html":{}}}],["peer",{"_index":1006,"title":{},"body":{"dependencies.html":{}}}],["pill",{"_index":40,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["pill]{@link",{"_index":415,"title":{},"body":{"components/ButtonComponent.html":{}}}],["placeholder",{"_index":618,"title":{},"body":{"components/FileInputComponent.html":{},"components/InputComponent.html":{}}}],["plain",{"_index":41,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["plain]{@link",{"_index":417,"title":{},"body":{"components/ButtonComponent.html":{}}}],["possible",{"_index":334,"title":{},"body":{"components/ButtonComponent.html":{}}}],["primary",{"_index":248,"title":{},"body":{"injectables/AlertService.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"classes/TableModel.html":{},"directives/ThemeColorInputDirective.html":{}}}],["primary(message",{"_index":262,"title":{},"body":{"injectables/AlertService.html":{}}}],["pristine",{"_index":555,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/StateManagerDirective.html":{}}}],["pristine(ispristine",{"_index":884,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["private",{"_index":39,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"classes/Queue.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{}}}],["project",{"_index":1045,"title":{},"body":{"index.html":{}}}],["promise",{"_index":192,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["promise(resolve",{"_index":234,"title":{},"body":{"components/AlertComponent.html":{}}}],["promise.all(this.subscribers.map(subscriber",{"_index":289,"title":{},"body":{"injectables/AlertService.html":{}}}],["promise.resolve",{"_index":227,"title":{},"body":{"components/AlertComponent.html":{}}}],["promise.resolve(this.show",{"_index":229,"title":{},"body":{"components/AlertComponent.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"interfaces/ColumnInformationInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/TableAbstract.html":{},"components/TableComponent.html":{},"classes/TableModel.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["property",{"_index":373,"title":{},"body":{"components/ButtonComponent.html":{}}}],["protected",{"_index":475,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/EventManagerDirective.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{}}}],["provide",{"_index":448,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["providedin",{"_index":279,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ThemeService.html":{}}}],["providers",{"_index":300,"title":{},"body":{"modules/BaseModule.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/FileInputComponent.html":{},"modules/FormModule.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{},"overview.html":{}}}],["provides",{"_index":329,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/ThemeService.html":{}}}],["public",{"_index":37,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/TableAbstract.html":{},"components/TableComponent.html":{},"classes/TableModel.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["queue",{"_index":275,"title":{"classes/Queue.html":{}},"body":{"injectables/AlertService.html":{},"classes/Queue.html":{},"coverage.html":{}}}],["radio",{"_index":133,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["radiobuttoncomponent",{"_index":132,"title":{"components/RadioButtonComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["radiobuttongroupcomponent",{"_index":134,"title":{"components/RadioButtonGroupComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["rafael",{"_index":945,"title":{},"body":{"classes/TableModel.html":{}}}],["register",{"_index":608,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["registeronchange",{"_index":576,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["registeronchange(fn",{"_index":589,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["registerontouched",{"_index":577,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["registerontouched(fn",{"_index":592,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["require",{"_index":1001,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":306,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"overview.html":{}}}],["resetalert",{"_index":176,"title":{},"body":{"components/AlertComponent.html":{}}}],["resolve",{"_index":236,"title":{},"body":{"components/AlertComponent.html":{}}}],["rest",{"_index":1032,"title":{},"body":{"index.html":{}}}],["result",{"_index":16,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"interfaces/ColumnInformationInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/TableAbstract.html":{},"components/TableComponent.html":{},"classes/TableModel.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["results",{"_index":18,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"interfaces/ColumnInformationInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/TableAbstract.html":{},"components/TableComponent.html":{},"classes/TableModel.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["return",{"_index":96,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/TableAbstract.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["returns",{"_index":66,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/TableAbstract.html":{},"components/TableComponent.html":{},"classes/TableModel.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["returns{string",{"_index":971,"title":{},"body":{"injectables/ThemeService.html":{}}}],["right",{"_index":457,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["root",{"_index":280,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"injectables/ThemeService.html":{}}}],["rootclass",{"_index":42,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["round",{"_index":336,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{}}}],["round]{@link",{"_index":407,"title":{},"body":{"components/ButtonComponent.html":{}}}],["routes",{"_index":1075,"title":{"routes.html":{}},"body":{"routes.html":{}}}],["save",{"_index":1042,"title":{},"body":{"index.html":{}}}],["sb",{"_index":32,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"index.html":{}}}],["sbelement",{"_index":1010,"title":{},"body":{"index.html":{}}}],["sbelementmodule",{"_index":747,"title":{"modules/SbElementModule.html":{}},"body":{"modules/SbElementModule.html":{},"modules.html":{},"overview.html":{}}}],["schematics",{"_index":1021,"title":{},"body":{"index.html":{}}}],["scss",{"_index":1018,"title":{},"body":{"index.html":{}}}],["secondary",{"_index":249,"title":{},"body":{"injectables/AlertService.html":{}}}],["secondary(message",{"_index":264,"title":{},"body":{"injectables/AlertService.html":{}}}],["select",{"_index":137,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["select(newoption",{"_index":770,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["selectbuttoncomponent",{"_index":136,"title":{"components/SelectButtonComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selected",{"_index":797,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["selectedoptions",{"_index":486,"title":{"interfaces/SelectedOptions.html":{}},"body":{"components/CheckboxGroupComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"coverage.html":{}}}],["selectionoptionsdirective",{"_index":157,"title":{"directives/SelectionOptionsDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selector",{"_index":31,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{}}}],["selector]'},{'name",{"_index":147,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["separation",{"_index":915,"title":{},"body":{"components/TableComponent.html":{}}}],["service",{"_index":213,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["services/alert/alert.service",{"_index":215,"title":{},"body":{"components/AlertComponent.html":{},"components/FileInputComponent.html":{}}}],["services/theme/theme.service",{"_index":75,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["set",{"_index":343,"title":{},"body":{"components/ButtonComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"components/IconButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"injectables/ThemeService.html":{}}}],["setalert",{"_index":177,"title":{},"body":{"components/AlertComponent.html":{}}}],["setalert(alert",{"_index":197,"title":{},"body":{"components/AlertComponent.html":{}}}],["setdisabled(isdisabled",{"_index":405,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{},"directives/StateManagerDirective.html":{}}}],["setdisabledstate",{"_index":359,"title":{},"body":{"components/ButtonComponent.html":{},"directives/StateManagerDirective.html":{}}}],["setdisabledstate(disabled",{"_index":859,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["setdisabledstate(isdisabled",{"_index":387,"title":{},"body":{"components/ButtonComponent.html":{}}}],["setextraclasses(extraclasses",{"_index":499,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["setfocused(isfocused",{"_index":880,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["setfocusedstate",{"_index":852,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["setfocusedstate(focused",{"_index":861,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["setinnervalue",{"_index":523,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["setinnervalue(value",{"_index":526,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["setispill(ispill",{"_index":401,"title":{},"body":{"components/ButtonComponent.html":{}}}],["setisplain(isplain",{"_index":402,"title":{},"body":{"components/ButtonComponent.html":{}}}],["setisround(isround",{"_index":400,"title":{},"body":{"components/ButtonComponent.html":{}}}],["setoptions(options",{"_index":796,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["setpristine(ispristine",{"_index":875,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["setpristinestate",{"_index":853,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["setpristinestate(pristine",{"_index":863,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["sets",{"_index":367,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/ThemeService.html":{}}}],["setsnap(snap",{"_index":831,"title":{},"body":{"components/SliderComponent.html":{}}}],["setstep(step",{"_index":830,"title":{},"body":{"components/SliderComponent.html":{}}}],["settimeout",{"_index":235,"title":{},"body":{"components/AlertComponent.html":{}}}],["settouched(istouched",{"_index":872,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["settouchedstate",{"_index":854,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["settouchedstate(touched",{"_index":865,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["setvalue(value",{"_index":540,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["severin",{"_index":941,"title":{},"body":{"classes/TableModel.html":{}}}],["shadow",{"_index":435,"title":{},"body":{"components/CardComponent.html":{}}}],["show",{"_index":172,"title":{},"body":{"components/AlertComponent.html":{}}}],["showalert",{"_index":250,"title":{},"body":{"injectables/AlertService.html":{}}}],["showalert(alert",{"_index":266,"title":{},"body":{"injectables/AlertService.html":{}}}],["showarrow",{"_index":47,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{}}}],["showicon",{"_index":48,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{}}}],["showoptions",{"_index":766,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["showvalue",{"_index":810,"title":{},"body":{"components/SliderComponent.html":{}}}],["simpler",{"_index":1025,"title":{},"body":{"index.html":{}}}],["simultaneously",{"_index":414,"title":{},"body":{"components/ButtonComponent.html":{}}}],["size",{"_index":11,"title":{},"body":{"interfaces/Alert.html":{},"injectables/AlertService.html":{},"modules/BaseModule.html":{},"components/CheckboxComponent.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["sizecolorinputdirective",{"_index":158,"title":{"directives/SizeColorInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeColorInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sizeinputdirective",{"_index":159,"title":{"directives/SizeInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sizethemecolorinputdirective",{"_index":29,"title":{"directives/SizeThemeColorInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeThemeColorInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sizethemecolorinputdirective#getclasses",{"_index":429,"title":{},"body":{"components/ButtonComponent.html":{}}}],["sizethemeinputdirective",{"_index":160,"title":{"directives/SizeThemeInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["slider",{"_index":803,"title":{},"body":{"components/SliderComponent.html":{}}}],["slider'},{'name",{"_index":139,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["slider.component.html",{"_index":804,"title":{},"body":{"components/SliderComponent.html":{}}}],["slider/slider.component",{"_index":677,"title":{},"body":{"modules/FormModule.html":{}}}],["slidercomponent",{"_index":138,"title":{"components/SliderComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["snap",{"_index":811,"title":{},"body":{"components/SliderComponent.html":{}}}],["snap(snap",{"_index":839,"title":{},"body":{"components/SliderComponent.html":{}}}],["snappoints",{"_index":807,"title":{},"body":{"components/SliderComponent.html":{}}}],["snapstep",{"_index":842,"title":{},"body":{"components/SliderComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"interfaces/ColumnInformationInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/TableAbstract.html":{},"components/TableComponent.html":{},"classes/TableModel.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["spec\\.ts",{"_index":1073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spellcheck",{"_index":700,"title":{},"body":{"components/InputComponent.html":{}}}],["src",{"_index":1058,"title":{},"body":{"index.html":{}}}],["src/.../test.ts",{"_index":1071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/components/alert",{"_index":25,"title":{},"body":{"components/AlertBoxComponent.html":{},"coverage.html":{}}}],["src/lib/components/alert/alert.component.ts",{"_index":165,"title":{},"body":{"components/AlertComponent.html":{},"coverage.html":{}}}],["src/lib/components/alert/alert.component.ts:14",{"_index":208,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:17",{"_index":185,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:20",{"_index":186,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:22",{"_index":204,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:23",{"_index":209,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:24",{"_index":206,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:26",{"_index":189,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:27",{"_index":184,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:37",{"_index":191,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:45",{"_index":198,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:52",{"_index":193,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:57",{"_index":202,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:61",{"_index":195,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:66",{"_index":200,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:72",{"_index":196,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:77",{"_index":211,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:82",{"_index":194,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/base/base.module.ts",{"_index":308,"title":{},"body":{"modules/BaseModule.html":{}}}],["src/lib/components/base/control",{"_index":519,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"directives/StateManagerDirective.html":{},"coverage.html":{}}}],["src/lib/components/base/style",{"_index":491,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"coverage.html":{}}}],["src/lib/components/card/card.component.ts",{"_index":432,"title":{},"body":{"components/CardComponent.html":{},"coverage.html":{}}}],["src/lib/components/card/card.component.ts:11",{"_index":440,"title":{},"body":{"components/CardComponent.html":{}}}],["src/lib/components/card/card.component.ts:13",{"_index":439,"title":{},"body":{"components/CardComponent.html":{}}}],["src/lib/components/card/card.component.ts:14",{"_index":437,"title":{},"body":{"components/CardComponent.html":{}}}],["src/lib/components/card/card.component.ts:26",{"_index":438,"title":{},"body":{"components/CardComponent.html":{}}}],["src/lib/components/container/container.component.ts",{"_index":515,"title":{},"body":{"components/ContainerComponent.html":{},"coverage.html":{}}}],["src/lib/components/container/container.component.ts:10",{"_index":518,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/lib/components/form/button/button.component.ts",{"_index":325,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/button/button.component.ts:103",{"_index":404,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:109",{"_index":376,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:117",{"_index":399,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:125",{"_index":394,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:133",{"_index":396,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:141",{"_index":365,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:163",{"_index":388,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:184",{"_index":378,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:57",{"_index":398,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:65",{"_index":375,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:76",{"_index":372,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:87",{"_index":374,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:97",{"_index":370,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/checkbox/checkbox.component.ts",{"_index":447,"title":{},"body":{"components/CheckboxComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/checkbox/checkbox.component.ts:16",{"_index":461,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/lib/components/form/checkbox/checkbox.component.ts:19",{"_index":456,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/lib/components/form/checkbox/checkbox.component.ts:21",{"_index":458,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/lib/components/form/checkbox/checkbox.component.ts:23",{"_index":459,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/lib/components/form/checkbox/checkbox.component.ts:27",{"_index":460,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/lib/components/form/file",{"_index":610,"title":{},"body":{"components/FileInputComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/form.module.ts",{"_index":664,"title":{},"body":{"modules/FormModule.html":{}}}],["src/lib/components/form/group/base/selected",{"_index":783,"title":{},"body":{"interfaces/SelectedOptions.html":{},"coverage.html":{}}}],["src/lib/components/form/group/base/selection",{"_index":788,"title":{},"body":{"directives/SelectionOptionsDirective.html":{},"coverage.html":{}}}],["src/lib/components/form/group/checkbox/checkbox",{"_index":471,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/group/form",{"_index":648,"title":{},"body":{"components/FormGroupComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/group/radio",{"_index":735,"title":{},"body":{"components/RadioButtonGroupComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/icon",{"_index":684,"title":{},"body":{"components/IconButtonComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/input/input.component.ts",{"_index":697,"title":{},"body":{"components/InputComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/input/input.component.ts:17",{"_index":709,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/input/input.component.ts:20",{"_index":702,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/input/input.component.ts:23",{"_index":704,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/input/input.component.ts:26",{"_index":703,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/input/input.component.ts:28",{"_index":708,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/input/input.component.ts:29",{"_index":701,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/input/input.component.ts:42",{"_index":706,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/input/input.component.ts:48",{"_index":707,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/input/input.component.ts:56",{"_index":705,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/radio",{"_index":731,"title":{},"body":{"components/RadioButtonComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/select",{"_index":765,"title":{},"body":{"components/SelectButtonComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/slider/slider.component.ts",{"_index":802,"title":{},"body":{"components/SliderComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/slider/slider.component.ts:16",{"_index":826,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:19",{"_index":815,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:22",{"_index":818,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:25",{"_index":817,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:27",{"_index":824,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:29",{"_index":821,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:34",{"_index":829,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:35",{"_index":825,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:38",{"_index":820,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:50",{"_index":827,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:52",{"_index":833,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:57",{"_index":819,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:60",{"_index":822,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:62",{"_index":823,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/toggle",{"_index":972,"title":{},"body":{"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["src/lib/components/icon/icon.component.ts",{"_index":694,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{}}}],["src/lib/components/icon/icon.component.ts:8",{"_index":696,"title":{},"body":{"components/IconComponent.html":{}}}],["src/lib/components/table/table.component.ts",{"_index":910,"title":{},"body":{"components/TableComponent.html":{},"coverage.html":{}}}],["src/lib/components/table/table.component.ts:11",{"_index":922,"title":{},"body":{"components/TableComponent.html":{}}}],["src/lib/components/table/table.component.ts:12",{"_index":924,"title":{},"body":{"components/TableComponent.html":{}}}],["src/lib/components/table/table.component.ts:15",{"_index":916,"title":{},"body":{"components/TableComponent.html":{}}}],["src/lib/components/table/table.component.ts:18",{"_index":917,"title":{},"body":{"components/TableComponent.html":{}}}],["src/lib/components/table/table.component.ts:20",{"_index":918,"title":{},"body":{"components/TableComponent.html":{}}}],["src/lib/components/table/table.component.ts:31",{"_index":920,"title":{},"body":{"components/TableComponent.html":{}}}],["src/lib/models/alert/alert",{"_index":291,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{},"coverage.html":{}}}],["src/lib/models/alert/alert.ts",{"_index":6,"title":{},"body":{"interfaces/Alert.html":{},"coverage.html":{}}}],["src/lib/models/queue/queue.ts",{"_index":714,"title":{},"body":{"classes/Queue.html":{},"coverage.html":{}}}],["src/lib/models/queue/queue.ts:15",{"_index":726,"title":{},"body":{"classes/Queue.html":{}}}],["src/lib/models/queue/queue.ts:19",{"_index":724,"title":{},"body":{"classes/Queue.html":{}}}],["src/lib/models/queue/queue.ts:3",{"_index":719,"title":{},"body":{"classes/Queue.html":{}}}],["src/lib/models/queue/queue.ts:5",{"_index":723,"title":{},"body":{"classes/Queue.html":{}}}],["src/lib/models/queue/queue.ts:9",{"_index":720,"title":{},"body":{"classes/Queue.html":{}}}],["src/lib/models/table/column",{"_index":512,"title":{},"body":{"interfaces/ColumnInformationInterface.html":{},"coverage.html":{}}}],["src/lib/models/table/table.abstract.ts",{"_index":891,"title":{},"body":{"classes/TableAbstract.html":{},"coverage.html":{}}}],["src/lib/models/table/table.abstract.ts:4",{"_index":896,"title":{},"body":{"classes/TableAbstract.html":{}}}],["src/lib/models/table/table.abstract.ts:5",{"_index":897,"title":{},"body":{"classes/TableAbstract.html":{}}}],["src/lib/models/table/table.abstract.ts:6",{"_index":899,"title":{},"body":{"classes/TableAbstract.html":{}}}],["src/lib/models/table/table.model.ts",{"_index":936,"title":{},"body":{"classes/TableModel.html":{},"coverage.html":{}}}],["src/lib/models/table/table.model.ts:21",{"_index":948,"title":{},"body":{"classes/TableModel.html":{}}}],["src/lib/models/table/table.model.ts:4",{"_index":940,"title":{},"body":{"classes/TableModel.html":{}}}],["src/lib/sb",{"_index":752,"title":{},"body":{"modules/SbElementModule.html":{}}}],["src/lib/services/alert/alert.service.ts",{"_index":243,"title":{},"body":{"injectables/AlertService.html":{},"coverage.html":{}}}],["src/lib/services/alert/alert.service.ts:11",{"_index":277,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:12",{"_index":276,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:14",{"_index":255,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:18",{"_index":269,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:22",{"_index":273,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:26",{"_index":271,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:30",{"_index":261,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:34",{"_index":263,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:38",{"_index":265,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:42",{"_index":257,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:51",{"_index":274,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:66",{"_index":267,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/theme/theme.service.ts",{"_index":955,"title":{},"body":{"injectables/ThemeService.html":{},"coverage.html":{}}}],["src/lib/services/theme/theme.service.ts:22",{"_index":968,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/lib/services/theme/theme.service.ts:29",{"_index":966,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/lib/services/theme/theme.service.ts:36",{"_index":967,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/test.ts",{"_index":998,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1009,"title":{"index.html":{}},"body":{}}],["state",{"_index":371,"title":{},"body":{"components/ButtonComponent.html":{},"directives/EventManagerDirective.html":{}}}],["statemanagerdirective",{"_index":161,"title":{"directives/StateManagerDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["statements",{"_index":981,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":368,"title":{},"body":{"components/ButtonComponent.html":{}}}],["static",{"_index":614,"title":{},"body":{"components/FileInputComponent.html":{}}}],["step",{"_index":812,"title":{},"body":{"components/SliderComponent.html":{}}}],["step(step",{"_index":834,"title":{},"body":{"components/SliderComponent.html":{}}}],["step.tostring().split(\".\")[1].length",{"_index":838,"title":{},"body":{"components/SliderComponent.html":{}}}],["steps",{"_index":1040,"title":{},"body":{"index.html":{}}}],["stored",{"_index":961,"title":{},"body":{"injectables/ThemeService.html":{}}}],["string",{"_index":12,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"interfaces/ColumnInformationInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"classes/TableAbstract.html":{},"components/TableComponent.html":{},"classes/TableModel.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["style",{"_index":312,"title":{},"body":{"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["subrootclass",{"_index":913,"title":{},"body":{"components/TableComponent.html":{}}}],["subscribe",{"_index":251,"title":{},"body":{"injectables/AlertService.html":{}}}],["subscribe(subscriber",{"_index":268,"title":{},"body":{"injectables/AlertService.html":{}}}],["subscriber",{"_index":214,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{}}}],["subscriber.alert(alert",{"_index":290,"title":{},"body":{"injectables/AlertService.html":{}}}],["subscriber.ts",{"_index":292,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{},"coverage.html":{}}}],["subscriber.ts:4",{"_index":293,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["subscribers",{"_index":246,"title":{},"body":{"injectables/AlertService.html":{}}}],["success",{"_index":252,"title":{},"body":{"injectables/AlertService.html":{}}}],["success(message",{"_index":270,"title":{},"body":{"injectables/AlertService.html":{}}}],["sum",{"_index":845,"title":{},"body":{"components/SliderComponent.html":{}}}],["super",{"_index":567,"title":{},"body":{"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/IconComponent.html":{},"components/RadioButtonComponent.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["super(themeservice",{"_index":84,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["super.getclasses",{"_index":89,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{}}}],["support",{"_index":1061,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":1020,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1062,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":144,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["switch.component",{"_index":669,"title":{},"body":{"modules/FormModule.html":{}}}],["switch.component.html",{"_index":974,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["switch.component.ts",{"_index":973,"title":{},"body":{"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["switch.component.ts:16",{"_index":977,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["switch.component.ts:18",{"_index":976,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["switch.component.ts:22",{"_index":975,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["switch/toggle",{"_index":668,"title":{},"body":{"modules/FormModule.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["syntax",{"_index":338,"title":{},"body":{"components/ButtonComponent.html":{}}}],["t",{"_index":721,"title":{},"body":{"classes/Queue.html":{}}}],["table",{"_index":911,"title":{},"body":{"components/TableComponent.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":141,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["table.abstract",{"_index":953,"title":{},"body":{"classes/TableModel.html":{}}}],["table.component.html",{"_index":912,"title":{},"body":{"components/TableComponent.html":{}}}],["tableabstract",{"_index":890,"title":{"classes/TableAbstract.html":{}},"body":{"classes/TableAbstract.html":{},"components/TableComponent.html":{},"classes/TableModel.html":{},"coverage.html":{}}}],["tableabstract:4",{"_index":950,"title":{},"body":{"classes/TableModel.html":{}}}],["tableabstract:5",{"_index":951,"title":{},"body":{"classes/TableModel.html":{}}}],["tableabstract:6",{"_index":952,"title":{},"body":{"classes/TableModel.html":{}}}],["tablecomponent",{"_index":140,"title":{"components/TableComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tablemodel",{"_index":935,"title":{"classes/TableModel.html":{}},"body":{"classes/TableModel.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1002,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1030,"title":{},"body":{"index.html":{}}}],["tells",{"_index":346,"title":{},"body":{"components/ButtonComponent.html":{}}}],["template",{"_index":22,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["templateurl",{"_index":35,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["testapp",{"_index":1055,"title":{},"body":{"index.html":{}}}],["text",{"_index":355,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputComponent.html":{}}}],["that's",{"_index":1029,"title":{},"body":{"index.html":{}}}],["theme",{"_index":78,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["themecolorinputdirective",{"_index":162,"title":{"directives/ThemeColorInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["themeinputdirective",{"_index":163,"title":{"directives/ThemeInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["themes",{"_index":958,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themeservice",{"_index":51,"title":{"injectables/ThemeService.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["themeservice.get",{"_index":569,"title":{},"body":{"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["theming",{"_index":1019,"title":{},"body":{"index.html":{}}}],["this._disabled",{"_index":421,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{},"directives/StateManagerDirective.html":{}}}],["this._extraclasses",{"_index":502,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["this._extraclasses.foreach(classname",{"_index":507,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["this._focused",{"_index":887,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["this._options",{"_index":800,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["this._options.foreach((option",{"_index":801,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["this._pristine",{"_index":885,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["this._step",{"_index":835,"title":{},"body":{"components/SliderComponent.html":{}}}],["this._theme",{"_index":970,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this._touched",{"_index":883,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["this.alert(message",{"_index":282,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.alertobject",{"_index":222,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.alertobject.message",{"_index":237,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.alertqueue.dequeue",{"_index":287,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.alertqueue.enqueue",{"_index":283,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.alertqueue.isempty",{"_index":285,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.alertservice.subscribe(this",{"_index":216,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.appears",{"_index":218,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.blur.emit",{"_index":602,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.change.emit(value",{"_index":607,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.checkfilesize(file",{"_index":639,"title":{},"body":{"components/FileInputComponent.html":{}}}],["this.color",{"_index":225,"title":{},"body":{"components/AlertComponent.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/ThemeColorInputDirective.html":{}}}],["this.columninformation.find(columninformation",{"_index":905,"title":{},"body":{"classes/TableAbstract.html":{}}}],["this.columninformation[nameorindex",{"_index":904,"title":{},"body":{"classes/TableAbstract.html":{}}}],["this.decimalplaces",{"_index":837,"title":{},"body":{"components/SliderComponent.html":{}}}],["this.disabled",{"_index":427,"title":{},"body":{"components/ButtonComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/StateManagerDirective.html":{}}}],["this.emitchange(value",{"_index":548,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["this.flipped",{"_index":85,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["this.focus.emit",{"_index":604,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.focused",{"_index":712,"title":{},"body":{"components/InputComponent.html":{},"directives/StateManagerDirective.html":{}}}],["this.groupalign",{"_index":658,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["this.grouptitle",{"_index":656,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["this.hides",{"_index":220,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.hover",{"_index":443,"title":{},"body":{"components/CardComponent.html":{}}}],["this.innervalue",{"_index":546,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["this.isbusy",{"_index":286,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.isempty",{"_index":728,"title":{},"body":{"classes/Queue.html":{}}}],["this.ispill",{"_index":425,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.isplain",{"_index":426,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.isround",{"_index":424,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.labelposition",{"_index":466,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadioButtonComponent.html":{}}}],["this.limit",{"_index":644,"title":{},"body":{"components/FileInputComponent.html":{}}}],["this.message",{"_index":640,"title":{},"body":{"components/FileInputComponent.html":{}}}],["this.min",{"_index":846,"title":{},"body":{"components/SliderComponent.html":{}}}],["this.min)/5/this.step)*this.step",{"_index":844,"title":{},"body":{"components/SliderComponent.html":{}}}],["this.onchangecallback",{"_index":609,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.onchangecallback(value",{"_index":606,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.ontouchedcallback",{"_index":601,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.options.foreach((option",{"_index":743,"title":{},"body":{"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{}}}],["this.pill",{"_index":86,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["this.plain",{"_index":87,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["this.pristine",{"_index":889,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["this.queue.length",{"_index":730,"title":{},"body":{"classes/Queue.html":{}}}],["this.queue.push(value",{"_index":727,"title":{},"body":{"classes/Queue.html":{}}}],["this.queue.shift",{"_index":729,"title":{},"body":{"classes/Queue.html":{}}}],["this.resetalert",{"_index":221,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.rootclass",{"_index":510,"title":{},"body":{"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/IconComponent.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["this.round",{"_index":410,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{}}}],["this.selectedoptions",{"_index":490,"title":{},"body":{"components/CheckboxGroupComponent.html":{}}}],["this.selectedoptions[option",{"_index":745,"title":{},"body":{"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{}}}],["this.separation",{"_index":926,"title":{},"body":{"components/TableComponent.html":{}}}],["this.setalert(alert",{"_index":217,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.setfocusedstate(false",{"_index":599,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.setfocusedstate(true",{"_index":603,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.setinnervalue(value",{"_index":545,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["this.setpristinestate(false",{"_index":605,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.settouchedstate(true",{"_index":600,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.shadow",{"_index":444,"title":{},"body":{"components/CardComponent.html":{}}}],["this.showalert(alert).then",{"_index":288,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.showicon",{"_index":94,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["this.showoptions",{"_index":775,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["this.size",{"_index":223,"title":{},"body":{"components/AlertComponent.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{}}}],["this.snappoints",{"_index":841,"title":{},"body":{"components/SliderComponent.html":{}}}],["this.subscribers.push(subscriber",{"_index":281,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.table.getcolumninformation(columnindex",{"_index":929,"title":{},"body":{"components/TableComponent.html":{}}}],["this.theme",{"_index":568,"title":{},"body":{"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["this.toggle",{"_index":776,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["this.touched",{"_index":888,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["this.updatevalues",{"_index":547,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["this.value",{"_index":464,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["this.wait(this.appeartime",{"_index":230,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.wait(this.hidetime",{"_index":232,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.wait(this.waittime",{"_index":231,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.waits",{"_index":219,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.work",{"_index":284,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.writevalueinnerchange(file",{"_index":642,"title":{},"body":{"components/FileInputComponent.html":{}}}],["this.writevalueinnerchange(newoption",{"_index":746,"title":{},"body":{"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{}}}],["this.writevalueinnerchange(undefined",{"_index":643,"title":{},"body":{"components/FileInputComponent.html":{}}}],["throw",{"_index":411,"title":{},"body":{"components/ButtonComponent.html":{},"classes/TableAbstract.html":{}}}],["time",{"_index":201,"title":{},"body":{"components/AlertComponent.html":{}}}],["toggle",{"_index":143,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["toggleswitchcomponent",{"_index":142,"title":{"components/ToggleSwitchComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["top",{"_index":713,"title":{},"body":{"components/InputComponent.html":{}}}],["touched",{"_index":558,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/StateManagerDirective.html":{}}}],["touched(istouched",{"_index":882,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["tree",{"_index":24,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["true",{"_index":62,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/ToggleSwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1004,"title":{},"body":{"dependencies.html":{}}}],["ture",{"_index":344,"title":{},"body":{"components/ButtonComponent.html":{}}}],["two",{"_index":333,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/ThemeService.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"interfaces/ColumnInformationInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/TableAbstract.html":{},"components/TableComponent.html":{},"classes/TableModel.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":903,"title":{},"body":{"classes/TableAbstract.html":{}}}],["unchecked",{"_index":469,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadioButtonComponent.html":{}}}],["undefined",{"_index":528,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{},"directives/EventManagerDirective.html":{},"classes/Queue.html":{}}}],["untouched",{"_index":559,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["update",{"_index":1036,"title":{},"body":{"index.html":{}}}],["updatevalues",{"_index":476,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{}}}],["usage",{"_index":354,"title":{},"body":{"components/ButtonComponent.html":{}}}],["use",{"_index":413,"title":{},"body":{"components/ButtonComponent.html":{},"index.html":{}}}],["useexisting",{"_index":450,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["value",{"_index":59,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"classes/TableModel.html":{},"directives/ThemeColorInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["value(value",{"_index":544,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["valuesuffix",{"_index":813,"title":{},"body":{"components/SliderComponent.html":{}}}],["valuetype",{"_index":527,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{},"directives/EventManagerDirective.html":{}}}],["var",{"_index":107,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["variable",{"_index":999,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1070,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1015,"title":{},"body":{"index.html":{}}}],["void",{"_index":259,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["wait",{"_index":178,"title":{},"body":{"components/AlertComponent.html":{}}}],["wait(time",{"_index":199,"title":{},"body":{"components/AlertComponent.html":{}}}],["waits",{"_index":179,"title":{},"body":{"components/AlertComponent.html":{}}}],["waittime",{"_index":180,"title":{},"body":{"components/AlertComponent.html":{}}}],["warn",{"_index":253,"title":{},"body":{"injectables/AlertService.html":{}}}],["warn(message",{"_index":272,"title":{},"body":{"injectables/AlertService.html":{}}}],["way",{"_index":1024,"title":{},"body":{"index.html":{}}}],["while(sum",{"_index":847,"title":{},"body":{"components/SliderComponent.html":{}}}],["work",{"_index":254,"title":{},"body":{"injectables/AlertService.html":{}}}],["workspace",{"_index":1037,"title":{},"body":{"index.html":{}}}],["writevalue",{"_index":524,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["writevalue(value",{"_index":533,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["writevalueinnerchange",{"_index":525,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["writevalueinnerchange(value",{"_index":535,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["writing",{"_index":543,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["xe001",{"_index":98,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["xe2c6",{"_index":647,"title":{},"body":{"components/FileInputComponent.html":{}}}],["xe5cf",{"_index":782,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["xe876",{"_index":470,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["xe87e",{"_index":102,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["xe88f",{"_index":100,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["xe92d",{"_index":99,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["xe994",{"_index":101,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["xf1df",{"_index":97,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["yourself",{"_index":1051,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":305,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Alert.html":{"url":"interfaces/Alert.html","title":"interface - Alert","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Alert\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/alert/alert.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        color\n                                \n                                \n                                        message\n                                \n                                \n                                        size\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Alert {\n  message: string;\n  size: string;\n  color: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlertBoxComponent.html":{"url":"components/AlertBoxComponent.html","title":"component - AlertBoxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlertBoxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/alert-box/alert-box.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SizeThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-alert-box\n            \n\n\n\n\n            \n                templateUrl\n                ./alert-box.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                flipped\n                            \n                            \n                                    Private\n                                pill\n                            \n                            \n                                    Private\n                                plain\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                customIcon\n                            \n                            \n                                showArrow\n                            \n                            \n                                showIcon\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(flipped: any, pill: any, plain: any, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/alert-box/alert-box.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        flipped\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pill\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plain\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        customIcon\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/alert-box/alert-box.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showArrow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/alert-box/alert-box.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showIcon\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/alert-box/alert-box.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert-box/alert-box.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            flipped\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert-box/alert-box.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pill\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert-box/alert-box.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            plain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert-box/alert-box.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-alert-box'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert-box/alert-box.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Attribute, Component, Input, Optional } from '@angular/core';\nimport { ThemeService } from '../../services/theme/theme.service';\nimport { SizeThemeColorInputDirective } from '../base/style-input/size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-alert-box',\n  templateUrl: './alert-box.component.html'\n})\nexport class AlertBoxComponent extends SizeThemeColorInputDirective {\n\n  public rootClass: string = 'sb-el-alert-box';\n\n  @Input()\n  public showArrow: boolean = true;\n\n  @Input()\n  public showIcon: boolean = true;\n\n  @Input()\n  public customIcon: boolean = false;\n\n  public flipped: boolean = false;\n  private pill: boolean = false;\n  private plain: boolean = false;\n\n  constructor(\n    @Optional() @Attribute('flipped') flipped: any,\n    @Optional() @Attribute('pill') pill: any,\n    @Optional() @Attribute('plain') plain: any,\n    themeService: ThemeService\n  ) {\n    super(themeService);\n    if (flipped == '') this.flipped = true;\n    if (pill == '') this.pill = true;\n    if (plain == '') this.plain = true;\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.flipped ? 'is-flipped' : '');\n    classes.push(this.pill ? 'is-pill' : '');\n    classes.push(this.plain ? 'is-plain' : '');\n    classes.push(!this.showArrow && !this.showIcon ? 'is-center' : '');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n      &#xf1df;\n    \n    \n  \n  \n    \n    \n      &#xe001;\n      &#xe92d;\n      &#xe88f;\n      &#xe994;\n      &#xe87e;\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'AlertBoxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlertComponent.html":{"url":"components/AlertComponent.html","title":"component - AlertComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlertComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/alert/alert.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SizeThemeColorInputDirective\n    \n\n    \n        Implements\n    \n    \n                    AlertServiceSubscriber\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-alert\n            \n\n\n\n\n            \n                templateUrl\n                ./alert.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alertObject\n                            \n                            \n                                    Private\n                                appearTime\n                            \n                            \n                                    Private\n                                hideTime\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                alert\n                            \n                            \n                                    Private\n                                    Async\n                                appears\n                            \n                            \n                                    Public\n                                getClasses\n                            \n                            \n                                    Private\n                                    Async\n                                hides\n                            \n                            \n                                    Private\n                                    Async\n                                resetAlert\n                            \n                            \n                                    Private\n                                    Async\n                                setAlert\n                            \n                            \n                                    Private\n                                    Async\n                                wait\n                            \n                            \n                                    Private\n                                    Async\n                                waits\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                showArrow\n                            \n                            \n                                showIcon\n                            \n                            \n                                waitTime\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    message\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertService: AlertService, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/alert/alert.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        showArrow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/alert/alert.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showIcon\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/alert/alert.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        waitTime\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2000\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/alert/alert.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            alert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    alert(alert: Alert)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert/alert.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alert\n                                    \n                                                Alert\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            appears\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    appears()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert/alert.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert/alert.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            hides\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hides()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert/alert.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            resetAlert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetAlert()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert/alert.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            setAlert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setAlert(alert: Alert)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert/alert.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alert\n                                    \n                                                Alert\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            wait\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    wait(time: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert/alert.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            waits\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    waits()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert/alert.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alertObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Alert | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert/alert.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            appearTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 300\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert/alert.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hideTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1000\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert/alert.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-alert'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert/alert.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert/alert.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n\n                \n                    \n                        getmessage()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/alert/alert.component.ts:77\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Alert } from '../../models/alert/alert';\nimport { AlertServiceSubscriber } from '../../models/alert/alert-service-subscriber';\nimport { AlertService } from '../../services/alert/alert.service';\nimport { ThemeService } from '../../services/theme/theme.service';\nimport { SizeThemeColorInputDirective } from '../base/style-input/size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-alert',\n  templateUrl: './alert.component.html'\n})\nexport class AlertComponent extends SizeThemeColorInputDirective implements AlertServiceSubscriber {\n\n  public rootClass: string = 'sb-el-alert';\n\n  @Input()\n  public showArrow: boolean = true;\n\n  @Input()\n  public showIcon: boolean = true;\n\n  public alertObject: Alert | null = null;\n  public show: boolean = false;\n  private appearTime: number = 300;\n  @Input()\n  public waitTime: number = 2000;\n  private hideTime: number = 1000;\n\n  constructor(\n    private alertService: AlertService,\n    themeService: ThemeService\n  ) {\n    super(themeService);\n    this.alertService.subscribe(this);\n  }\n\n  public async alert(alert: Alert): Promise {\n    return this.setAlert(alert)\n    .then(() => this.appears())\n    .then(() => this.waits())\n    .then(() => this.hides())\n    .then(() => this.resetAlert())\n  }\n\n  private async setAlert(alert: Alert): Promise {\n    this.alertObject = alert;\n    this.size = alert.size;\n    this.color = alert.color;\n    return Promise.resolve();\n  }\n\n  private async appears(): Promise {\n    await Promise.resolve(this.show = true);\n    return await this.wait(this.appearTime);\n  }\n\n  private async waits(): Promise {\n    return this.wait(this.waitTime);\n  }\n\n  private async hides(): Promise {\n    await Promise.resolve(this.show = false);\n    return await this.wait(this.hideTime);\n  }\n\n  private async wait(time: number): Promise {\n    return new Promise(resolve => {\n      setTimeout(() => resolve(), time);\n    });\n  }\n\n  private async resetAlert(): Promise {\n    this.alertObject = null;\n    return Promise.resolve();\n  }\n\n  get message(): string {\n    if (this.alertObject) return this.alertObject.message;\n    else return '';\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.show ? 'is-active' : 'is-inactive');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      {{ message }}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ message }}      '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'AlertComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AlertService.html":{"url":"injectables/AlertService.html","title":"injectable - AlertService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AlertService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/alert/alert.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alertQueue\n                            \n                            \n                                    Private\n                                isBusy\n                            \n                            \n                                    Private\n                                subscribers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alert\n                            \n                            \n                                    Public\n                                inform\n                            \n                            \n                                    Public\n                                primary\n                            \n                            \n                                    Public\n                                secondary\n                            \n                            \n                                    Private\n                                    Async\n                                showAlert\n                            \n                            \n                                    Public\n                                subscribe\n                            \n                            \n                                    Public\n                                success\n                            \n                            \n                                    Public\n                                warn\n                            \n                            \n                                    Private\n                                    Async\n                                work\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/alert/alert.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            alert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    alert(message: string, size: string, color: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'd'\n                                    \n\n                                \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'warn'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            inform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    inform(message: string, size: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'd'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            primary\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    primary(message: string, size: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'd'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            secondary\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    secondary(message: string, size: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'd'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            showAlert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showAlert(alert: Alert)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alert\n                                    \n                                                Alert\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            subscribe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribe(subscriber: AlertServiceSubscriber)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subscriber\n                                    \n                                                AlertServiceSubscriber\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            success\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    success(message: string, size: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'd'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    warn(message: string, size: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'd'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            work\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    work()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            alertQueue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Queue\n\n                        \n                    \n                    \n                        \n                            Default value : new Queue()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/alert/alert.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isBusy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/alert/alert.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscribers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/alert/alert.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Alert } from '../../models/alert/alert';\nimport { AlertServiceSubscriber } from '../../models/alert/alert-service-subscriber';\nimport { Queue } from '../../models/queue/queue';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  private subscribers: Array = new Array();\n  private alertQueue: Queue = new Queue();\n\n  private isBusy: boolean = false;\n\n  constructor() { }\n\n  public subscribe(subscriber: AlertServiceSubscriber) {\n    this.subscribers.push(subscriber);\n  }\n\n  public warn(message: string, size = 'd'): void {\n    this.alert(message, size, 'warn');\n  }\n\n  public success(message: string, size = 'd'): void {\n    this.alert(message, size, 'success');\n  }\n\n  public inform(message: string, size = 'd'): void {\n    this.alert(message, size, 'info');\n  }\n\n  public primary(message: string, size = 'd'): void {\n    this.alert(message, size, 'primary');\n  }\n\n  public secondary(message: string, size = 'd'): void {\n    this.alert(message, size, 'secondary');\n  }\n\n  public alert(message: string, size = 'd', color = 'warn'): void {\n    this.alertQueue.enqueue({\n      message,\n      size,\n      color\n    });\n    this.work();\n  }\n\n  private async work(): Promise {\n    if (!this.alertQueue.isEmpty() && !this.isBusy) {\n      this.isBusy = true;\n      let alert = this.alertQueue.dequeue();\n      if (alert) {\n        this.showAlert(alert).then(() => {\n          this.isBusy = false;\n          this.work();\n        });\n      } else {\n        this.isBusy = false;\n      }\n    }\n  }\n\n  private async showAlert(alert: Alert): Promise {\n    return Promise.all(this.subscribers.map(subscriber => subscriber.alert(alert)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AlertServiceSubscriber.html":{"url":"interfaces/AlertServiceSubscriber.html","title":"interface - AlertServiceSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AlertServiceSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/alert/alert-service-subscriber.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    alert\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alert\n                        \n                        \n                    \n                \n            \n            \n                \nalert(alert: Alert)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/alert/alert-service-subscriber.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alert\n                                    \n                                                Alert\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Alert } from './alert';\n\nexport interface AlertServiceSubscriber {\n  alert(alert: Alert): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BaseModule.html":{"url":"modules/BaseModule.html","title":"module - BaseModule","body":"\n                   \n\n\n\n\n    Modules\n    BaseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BaseModule\n\n\n\ncluster_BaseModule_declarations\n\n\n\ncluster_BaseModule_exports\n\n\n\n\nClassNameInputDirective\n\nClassNameInputDirective\n\n\n\nBaseModule\n\nBaseModule\n\nBaseModule -->\n\nClassNameInputDirective->BaseModule\n\n\n\n\n\nColorInputDirective\n\nColorInputDirective\n\nBaseModule -->\n\nColorInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorBaseDirective\n\nControlValueAccessorBaseDirective\n\nBaseModule -->\n\nControlValueAccessorBaseDirective->BaseModule\n\n\n\n\n\nControlValueAccessorClassNameInputDirective\n\nControlValueAccessorClassNameInputDirective\n\nBaseModule -->\n\nControlValueAccessorClassNameInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorColorInputDirective\n\nControlValueAccessorColorInputDirective\n\nBaseModule -->\n\nControlValueAccessorColorInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorSizeColorInputDirective\n\nControlValueAccessorSizeColorInputDirective\n\nBaseModule -->\n\nControlValueAccessorSizeColorInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorSizeInputDirective\n\nControlValueAccessorSizeInputDirective\n\nBaseModule -->\n\nControlValueAccessorSizeInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorSizeThemeColorInputDirective\n\nControlValueAccessorSizeThemeColorInputDirective\n\nBaseModule -->\n\nControlValueAccessorSizeThemeColorInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorThemeColorInputDirective\n\nControlValueAccessorThemeColorInputDirective\n\nBaseModule -->\n\nControlValueAccessorThemeColorInputDirective->BaseModule\n\n\n\n\n\nEventManagerDirective\n\nEventManagerDirective\n\nBaseModule -->\n\nEventManagerDirective->BaseModule\n\n\n\n\n\nSizeColorInputDirective\n\nSizeColorInputDirective\n\nBaseModule -->\n\nSizeColorInputDirective->BaseModule\n\n\n\n\n\nSizeInputDirective\n\nSizeInputDirective\n\nBaseModule -->\n\nSizeInputDirective->BaseModule\n\n\n\n\n\nSizeThemeColorInputDirective\n\nSizeThemeColorInputDirective\n\nBaseModule -->\n\nSizeThemeColorInputDirective->BaseModule\n\n\n\n\n\nSizeThemeInputDirective\n\nSizeThemeInputDirective\n\nBaseModule -->\n\nSizeThemeInputDirective->BaseModule\n\n\n\n\n\nStateManagerDirective\n\nStateManagerDirective\n\nBaseModule -->\n\nStateManagerDirective->BaseModule\n\n\n\n\n\nThemeColorInputDirective\n\nThemeColorInputDirective\n\nBaseModule -->\n\nThemeColorInputDirective->BaseModule\n\n\n\n\n\nThemeInputDirective\n\nThemeInputDirective\n\nBaseModule -->\n\nThemeInputDirective->BaseModule\n\n\n\n\n\nClassNameInputDirective \n\nClassNameInputDirective \n\nClassNameInputDirective  -->\n\nBaseModule->ClassNameInputDirective \n\n\n\n\n\nColorInputDirective \n\nColorInputDirective \n\nColorInputDirective  -->\n\nBaseModule->ColorInputDirective \n\n\n\n\n\nControlValueAccessorBaseDirective \n\nControlValueAccessorBaseDirective \n\nControlValueAccessorBaseDirective  -->\n\nBaseModule->ControlValueAccessorBaseDirective \n\n\n\n\n\nControlValueAccessorClassNameInputDirective \n\nControlValueAccessorClassNameInputDirective \n\nControlValueAccessorClassNameInputDirective  -->\n\nBaseModule->ControlValueAccessorClassNameInputDirective \n\n\n\n\n\nControlValueAccessorColorInputDirective \n\nControlValueAccessorColorInputDirective \n\nControlValueAccessorColorInputDirective  -->\n\nBaseModule->ControlValueAccessorColorInputDirective \n\n\n\n\n\nControlValueAccessorSizeColorInputDirective \n\nControlValueAccessorSizeColorInputDirective \n\nControlValueAccessorSizeColorInputDirective  -->\n\nBaseModule->ControlValueAccessorSizeColorInputDirective \n\n\n\n\n\nControlValueAccessorSizeInputDirective \n\nControlValueAccessorSizeInputDirective \n\nControlValueAccessorSizeInputDirective  -->\n\nBaseModule->ControlValueAccessorSizeInputDirective \n\n\n\n\n\nControlValueAccessorSizeThemeColorInputDirective \n\nControlValueAccessorSizeThemeColorInputDirective \n\nControlValueAccessorSizeThemeColorInputDirective  -->\n\nBaseModule->ControlValueAccessorSizeThemeColorInputDirective \n\n\n\n\n\nControlValueAccessorThemeColorInputDirective \n\nControlValueAccessorThemeColorInputDirective \n\nControlValueAccessorThemeColorInputDirective  -->\n\nBaseModule->ControlValueAccessorThemeColorInputDirective \n\n\n\n\n\nSizeColorInputDirective \n\nSizeColorInputDirective \n\nSizeColorInputDirective  -->\n\nBaseModule->SizeColorInputDirective \n\n\n\n\n\nSizeInputDirective \n\nSizeInputDirective \n\nSizeInputDirective  -->\n\nBaseModule->SizeInputDirective \n\n\n\n\n\nSizeThemeColorInputDirective \n\nSizeThemeColorInputDirective \n\nSizeThemeColorInputDirective  -->\n\nBaseModule->SizeThemeColorInputDirective \n\n\n\n\n\nSizeThemeInputDirective \n\nSizeThemeInputDirective \n\nSizeThemeInputDirective  -->\n\nBaseModule->SizeThemeInputDirective \n\n\n\n\n\nThemeColorInputDirective \n\nThemeColorInputDirective \n\nThemeColorInputDirective  -->\n\nBaseModule->ThemeColorInputDirective \n\n\n\n\n\nThemeInputDirective \n\nThemeInputDirective \n\nThemeInputDirective  -->\n\nBaseModule->ThemeInputDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/components/base/base.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ClassNameInputDirective\n                        \n                        \n                            ColorInputDirective\n                        \n                        \n                            ControlValueAccessorBaseDirective\n                        \n                        \n                            ControlValueAccessorClassNameInputDirective\n                        \n                        \n                            ControlValueAccessorColorInputDirective\n                        \n                        \n                            ControlValueAccessorSizeColorInputDirective\n                        \n                        \n                            ControlValueAccessorSizeInputDirective\n                        \n                        \n                            ControlValueAccessorSizeThemeColorInputDirective\n                        \n                        \n                            ControlValueAccessorThemeColorInputDirective\n                        \n                        \n                            EventManagerDirective\n                        \n                        \n                            SizeColorInputDirective\n                        \n                        \n                            SizeInputDirective\n                        \n                        \n                            SizeThemeColorInputDirective\n                        \n                        \n                            SizeThemeInputDirective\n                        \n                        \n                            StateManagerDirective\n                        \n                        \n                            ThemeColorInputDirective\n                        \n                        \n                            ThemeInputDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ClassNameInputDirective\n                        \n                        \n                            ColorInputDirective\n                        \n                        \n                            ControlValueAccessorBaseDirective\n                        \n                        \n                            ControlValueAccessorClassNameInputDirective\n                        \n                        \n                            ControlValueAccessorColorInputDirective\n                        \n                        \n                            ControlValueAccessorSizeColorInputDirective\n                        \n                        \n                            ControlValueAccessorSizeInputDirective\n                        \n                        \n                            ControlValueAccessorSizeThemeColorInputDirective\n                        \n                        \n                            ControlValueAccessorThemeColorInputDirective\n                        \n                        \n                            SizeColorInputDirective\n                        \n                        \n                            SizeInputDirective\n                        \n                        \n                            SizeThemeColorInputDirective\n                        \n                        \n                            SizeThemeInputDirective\n                        \n                        \n                            ThemeColorInputDirective\n                        \n                        \n                            ThemeInputDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ColorInputDirective } from './style-input/color-input.directive';\nimport { ThemeColorInputDirective } from './style-input/theme-color-input.directive';\nimport { SizeInputDirective } from './style-input/size-input.directive';\nimport { SizeColorInputDirective } from './style-input/size-color-input.directive';\nimport { SizeThemeColorInputDirective } from './style-input/size-theme-color-input.directive';\nimport { ControlValueAccessorBaseDirective } from './control-value-accessor/control-value-accessor.base.directive';\nimport { ClassNameInputDirective } from './style-input/class-name-input.directive';\nimport { ThemeInputDirective } from './style-input/theme-input.directive';\nimport { ControlValueAccessorClassNameInputDirective } from './control-value-accessor-style-input/control-value-accessor-class-name-input.directive';\nimport { ControlValueAccessorThemeColorInputDirective } from './control-value-accessor-style-input/control-value-accessor-theme-color-input.directive';\nimport { ControlValueAccessorColorInputDirective } from './control-value-accessor-style-input/control-value-accessor-color-input.directive';\nimport { ControlValueAccessorSizeInputDirective } from './control-value-accessor-style-input/control-value-accessor-size-input.directive';\nimport { ControlValueAccessorSizeColorInputDirective } from './control-value-accessor-style-input/control-value-accessor-size-color-input.directive';\nimport { ControlValueAccessorSizeThemeColorInputDirective } from './control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive';\nimport { SizeThemeInputDirective } from './style-input/size-theme-input.directive';\nimport { StateManagerDirective } from './control-value-accessor/state-manager.directive';\nimport { EventManagerDirective } from './control-value-accessor/event-manager.directive';\n\n\n\n@NgModule({\n  declarations: [\n    ControlValueAccessorBaseDirective,\n\n    ColorInputDirective,\n    ThemeColorInputDirective,\n    SizeInputDirective,\n    SizeColorInputDirective,\n    SizeThemeColorInputDirective,\n    ThemeInputDirective,\n    SizeThemeInputDirective,\n    ClassNameInputDirective,\n\n    ControlValueAccessorColorInputDirective,\n    ControlValueAccessorThemeColorInputDirective,\n    ControlValueAccessorSizeInputDirective,\n    ControlValueAccessorSizeColorInputDirective,\n    ControlValueAccessorSizeThemeColorInputDirective,\n    ControlValueAccessorClassNameInputDirective,\n    StateManagerDirective,\n    EventManagerDirective,\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ControlValueAccessorBaseDirective,\n\n    ColorInputDirective,\n    ThemeColorInputDirective,\n    SizeInputDirective,\n    SizeColorInputDirective,\n    SizeThemeColorInputDirective,\n    ThemeInputDirective,\n    SizeThemeInputDirective,\n    ClassNameInputDirective,\n\n    ControlValueAccessorColorInputDirective,\n    ControlValueAccessorThemeColorInputDirective,\n    ControlValueAccessorSizeInputDirective,\n    ControlValueAccessorSizeColorInputDirective,\n    ControlValueAccessorSizeThemeColorInputDirective,\n    ControlValueAccessorClassNameInputDirective,\n  ]\n})\nexport class BaseModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/button/button.component.ts\n\n\n    \n        Description\n    \n    \n        The button component acts like a normal html button, but provides different\nstyle options in the form of inputs or attributes.\nThere are two possible form changing options: round and pill. These can\nbe passed on either with attributes or with inputs. The input syntax is\ndifferent than the attribute syntax:\n\nround or pill for attribute syntax and\n[isPill]=\"{boolean}\" or [isRound]=\"{boolean}\" for the input syntax.\n\nYou cannot combine the two. Only one of these can be set to ture.\nThe other input / attribute is isPlain/plain. This tells the component\nto invert its colors, which means, that the hover colors are now 'normal'\ncolors and the 'normal' colors are now the hover colors.\n\n    \n\n    \n        Extends\n    \n    \n            SizeThemeColorInputDirective\n    \n\n\n    \n        Example\n    \n    \n                \n                    // Basic usage example where pill is set:\n\n  Button Text\n\n                \n                \n                    // Basic usage example where round is set:\n\n  Button Text\n\n                \n                \n                    // This is a minimal usage example:\n\n  Button Text\n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-button\n            \n\n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _disabled\n                            \n                            \n                                    Private\n                                pill\n                            \n                            \n                                    Private\n                                plain\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                            \n                                    Private\n                                round\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                isPill\n                            \n                            \n                                isPlain\n                            \n                            \n                                isRound\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isRound\n                                \n                                \n                                    isPill\n                                \n                                \n                                    isPlain\n                                \n                                \n                                    disabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(round: any, pill: any, plain: any, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/form/button/button.component.ts:141\n                            \n                        \n\n                \n                    \n                            Creates a new ButtonComponent.\nSets the different class states according to the attribute inputs.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        round\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pill\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plain\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:97\n                            \n                        \n                \n                    \n                        Sets the disabled state of the component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isPill\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:76\n                            \n                        \n                \n                    \n                        Sets the pill property of the component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isPlain\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:87\n                            \n                        \n                \n                    \n                        Sets the plain property of the component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isRound\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:65\n                            \n                        \n                \n                    \n                        Sets the round property of the component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'button'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:109\n                            \n                        \n                \n                    \n                        Defines the type of the button element.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/button/button.component.ts:184\n                \n            \n\n\n            \n                \n                    Adds the needed classes based on the options of the component passed either\nby input or by attributes.\nOverwrites the getClasses\nmethod of the SizeThemeColorInputDirective by adding the is-pill,\nis-round and is-plain classes if needed.\nThe is-pill class gets included, if the pill property\nis true.\nThe is-round class gets included, if the round property\nis true.\nThe is-plain class gets included, if the plain property\nis true.\n\n\n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        The classes for the HTML button element\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/button/button.component.ts:163\n                \n            \n\n\n            \n                \n                    Provides access for a FormGroup to set the disabled state.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:141\n                            \n                        \n\n                \n                    \n                        Round state of the component.\nIf true, the HTML button element gets disabled and is no longer\nclickable.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pill\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:125\n                            \n                        \n\n                \n                    \n                        Pill state of the component.\nIf true, the is-pill class gets added to the classes of the HTML\nbutton element.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            plain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:133\n                            \n                        \n\n                \n                    \n                        Plain state of the component.\nIf true, the is-plain class gets added to the classes of the HTML\nbutton element.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-btn'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:57\n                            \n                        \n\n                \n                    \n                        The root class of the HTML button element.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            round\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:117\n                            \n                        \n\n                \n                    \n                        Round state of the component.\nIf true, the is-round class gets added to the classes of the HTML\nbutton element.\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isRound\n                    \n                \n\n\n                \n                    \n                        setisRound(isRound: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/button/button.component.ts:65\n                                \n                            \n                    \n                        \n                                Sets the round property of the component.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            isRound\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isPill\n                    \n                \n\n\n                \n                    \n                        setisPill(isPill: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/button/button.component.ts:76\n                                \n                            \n                    \n                        \n                                Sets the pill property of the component.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            isPill\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isPlain\n                    \n                \n\n\n                \n                    \n                        setisPlain(isPlain: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/button/button.component.ts:87\n                                \n                            \n                    \n                        \n                                Sets the plain property of the component.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            isPlain\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n\n                \n                    \n                        getdisabled()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/button/button.component.ts:103\n                                \n                            \n                    \n                        \n                                Gets the disabled state of the component.\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setdisabled(isDisabled: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/button/button.component.ts:97\n                                \n                            \n                    \n                        \n                                Sets the disabled state of the component.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            isDisabled\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Attribute, Component, Input, Optional } from '@angular/core';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { SizeThemeColorInputDirective } from '../../base/style-input/size-theme-color-input.directive';\n\n/**\n * The button component acts like a normal html button, but provides different\n * style options in the form of inputs or attributes.\n *\n * There are two possible form changing options: `round` and `pill`. These can\n * be passed on either with attributes or with inputs. The input syntax is\n * different than the attribute syntax:\n *\n * - `round` or `pill` for attribute syntax and\n * - `[isPill]=\"{boolean}\"` or `[isRound]=\"{boolean}\"` for the input syntax.\n *\n * You cannot combine the two. Only one of these can be set to `ture`.\n *\n * The other input / attribute is `isPlain`/`plain`. This tells the component\n * to invert its colors, which means, that the hover colors are now 'normal'\n * colors and the 'normal' colors are now the hover colors.\n *\n * @example\n * // Basic usage example where pill is set:\n * \n *              Button Text\n * \n *\n * @example\n * // Basic usage example where round is set:\n * \n *               Button Text\n * \n *\n * @example\n * // This is a minimal usage example:\n * \n *                Button Text\n * \n *\n */\n@Component({\n  selector: 'sb-el-button',\n  templateUrl: './button.component.html'\n})\nexport class ButtonComponent extends SizeThemeColorInputDirective {\n\n  /**\n   * The root class of the HTML button element.\n   */\n  public rootClass: string = 'sb-el-btn';\n\n  /**\n   *  Sets the [round]{@link #round} property of the component.\n   *\n   * @param {boolean} The new value of [round]{@link #round}\n   */\n  @Input()\n  set isRound(isRound: boolean) {\n    if (!this.pill) this.round = isRound;\n    else if (isRound && this.pill) throw new Error('Cannot use pill and round attribute simultaneously!');\n  }\n\n  /**\n   *  Sets the [pill]{@link #pill} property of the component.\n   *\n   * @param {boolean} The new value of [pill]{@link #pill}\n   */\n  @Input()\n  set isPill(isPill: boolean) {\n    if (!this.round) this.pill = isPill;\n    else if (isPill && this.round) throw new Error('Cannot use pill and round attribute simultaneously!');\n  }\n\n  /**\n   *  Sets the [plain]{@link #plain} property of the component.\n   *\n   * @param {boolean} The new value of [plain]{@link #plain}\n   */\n  @Input()\n  set isPlain(isPlain: boolean) {\n    this.plain = isPlain;\n  }\n\n  /**\n   *  Sets the [disabled]{@link disabled} state of the component.\n   *\n   * @param {boolean} The new [disabled]{@link disabled} state value\n   */\n  @Input()\n  set disabled(isDisabled: boolean) { this._disabled = isDisabled; }\n  /**\n   * Gets the [disabled]{@link disabled} state of the component.\n   *\n   * @returns {boolean} The current [disabled]{@link disabled} state of the component\n   */\n  get disabled(): boolean { return this._disabled; }\n\n  /**\n   * Defines the type of the button element.\n   */\n  @Input()\n  public type: string = 'button';\n\n  /**\n   * Round state of the component.\n   *\n   * If `true`, the `is-round` class gets added to the classes of the HTML\n   * button element.\n   */\n  private round: boolean = false;\n\n  /**\n   * Pill state of the component.\n   *\n   * If `true`, the `is-pill` class gets added to the classes of the HTML\n   * button element.\n   */\n  private pill: boolean = false;\n\n  /**\n   * Plain state of the component.\n   *\n   * If `true`, the `is-plain` class gets added to the classes of the HTML\n   * button element.\n   */\n  private plain: boolean = false;\n\n  /**\n   * Round state of the component.\n   *\n   * If `true`, the HTML button element gets disabled and is no longer\n   * clickable.\n   */\n  private _disabled: boolean = false;\n\n  /**\n   * Creates a new ButtonComponent.\n   *\n   * Sets the different class states according to the attribute inputs.\n   */\n  constructor(\n    @Optional() @Attribute('round') round: any,\n    @Optional() @Attribute('pill') pill: any,\n    @Optional() @Attribute('plain') plain: any,\n    themeService: ThemeService\n  ) {\n    super(themeService);\n    if (round === '') this.isRound = true;\n    if (pill === '') this.isPill = true;\n    if (plain === '') this.isPlain = true;\n  }\n\n  /**\n   *  Provides access for a `FormGroup` to set the disabled state.\n   */\n  public setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Adds the needed classes based on the options of the component passed either\n   * by input or by attributes.\n   *\n   * Overwrites the [getClasses]{@link SizeThemeColorInputDirective#getClasses}\n   * method of the {@link SizeThemeColorInputDirective} by adding the `is-pill`,\n   * `is-round` and `is-plain` classes if needed.\n   *\n   * The `is-pill` class gets included, if the [pill]{@link #pill} property\n   * is `true`.\n   * The `is-round` class gets included, if the [round]{@link #round} property\n   * is `true`.\n   * The `is-plain` class gets included, if the [plain]{@link #plain} property\n   * is `true`.\n   *\n   * @returns {Array} The classes for the HTML button element\n   */\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.round ? 'is-round' : '');\n    classes.push(this.pill ? 'is-pill' : '');\n    classes.push(this.plain ? 'is-plain' : '');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/card/card.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SizeThemeInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-card\n            \n\n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hover\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                            \n                                    Private\n                                shadow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(hover: any, shadow: any, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/card/card.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        hover\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        shadow\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/card/card.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hover\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/card/card.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-card'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/card/card.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            shadow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/card/card.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Attribute, Component, Optional } from '@angular/core';\nimport { ThemeService } from '../../services/theme/theme.service';\nimport { SizeThemeInputDirective } from '../base/style-input/size-theme-input.directive';\n\n@Component({\n  selector: 'sb-el-card',\n  templateUrl: './card.component.html'\n})\nexport class CardComponent extends SizeThemeInputDirective {\n\n  public rootClass: string = 'sb-el-card';\n\n  private hover: boolean = false;\n  private shadow: boolean = false;\n\n  constructor(\n    @Optional() @Attribute('hover') hover: any,\n    @Optional() @Attribute('shadow') shadow: any,\n    themeService: ThemeService\n  ) {\n    super(themeService);\n    if (hover === '') this.hover = true;\n    if (shadow === '') this.shadow = true;\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.hover ? 'is-hover' : '');\n    classes.push(this.shadow ? 'is-shadow' : '');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n  \n    \n  \n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/checkbox/checkbox.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ControlValueAccessorSizeThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: CheckboxComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-checkbox\n            \n\n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                check\n                            \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                labelPosition\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/checkbox/checkbox.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelPosition\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'right'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/checkbox/checkbox.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            check\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    check()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/checkbox/checkbox.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/checkbox/checkbox.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-checkbox'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/checkbox/checkbox.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlValueAccessorSizeThemeColorInputDirective } from '../../base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-checkbox',\n  templateUrl: './checkbox.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: CheckboxComponent,\n    multi: true\n  }]\n})\nexport class CheckboxComponent extends ControlValueAccessorSizeThemeColorInputDirective {\n\n  public rootClass = 'sb-el-checkbox';\n\n  @Input()\n  public label: string = '';\n  @Input()\n  public labelPosition: string = 'right';\n\n  public check(): void {\n    this.value = !this.value;\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.label ? 'is-label' : '');\n    classes.push(this.label ? 'label-is-' + this.labelPosition : '');\n    classes.push(this.value ? 'is-checked' : 'is-unchecked');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  {{ label }}\n  \n    \n      \n        &#xe876;\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}                                '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxGroupComponent.html":{"url":"components/CheckboxGroupComponent.html","title":"component - CheckboxGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CheckboxGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/group/checkbox/checkbox-group.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SelectionOptionsDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: CheckboxGroupComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-checkbox-group\n            \n\n\n\n\n            \n                templateUrl\n                ./checkbox-group.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                    Protected\n                                updateValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                groupAlign\n                            \n                            \n                                groupTitle\n                            \n                            \n                                labelPosition\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        groupAlign\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'left'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/checkbox/checkbox-group.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        groupTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/checkbox/checkbox-group.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelPosition\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'right'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/checkbox/checkbox-group.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/group/checkbox/checkbox-group.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValues()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/group/checkbox/checkbox-group.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-checkbox-group'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/group/checkbox/checkbox-group.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { SelectedOptions } from '../base/selected-options';\nimport { SelectionOptionsDirective } from '../base/selection-options.directive';\n\n@Component({\n  selector: 'sb-el-checkbox-group',\n  templateUrl: './checkbox-group.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: CheckboxGroupComponent,\n    multi: true\n  }]\n})\nexport class CheckboxGroupComponent extends SelectionOptionsDirective {\n\n  public rootClass = 'sb-el-checkbox-group';\n\n  @Input()\n  public groupTitle: string = '';\n\n  @Input()\n  public groupAlign: string | null = 'left';\n\n  @Input()\n  public labelPosition: string = 'right';\n\n  check() {\n    this.value = this.selectedOptions;\n  }\n\n  protected updateValues(): void {\n    this.selectedOptions = this.value as SelectedOptions;\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n      \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ClassNameInputDirective.html":{"url":"directives/ClassNameInputDirective.html","title":"directive - ClassNameInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ClassNameInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/style-input/class-name-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _extraClasses\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                extraClasses\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    extraClasses\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        extraClasses\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/class-name-input.directive.ts:12\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/style-input/class-name-input.directive.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _extraClasses\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/class-name-input.directive.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/class-name-input.directive.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        extraClasses\n                    \n                \n\n\n                \n                    \n                        setextraClasses(extraClasses)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/style-input/class-name-input.directive.ts:12\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            extraClasses\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ClassNameInputDirective {\n\n  public rootClass: string = '';\n\n  private _extraClasses: Array = new Array();\n  @Input()\n  set extraClasses(extraClasses: string | Array) {\n    if (Array.isArray(extraClasses)) this._extraClasses = extraClasses;\n    else {\n      this._extraClasses = extraClasses.split(' ').filter(className => {\n        return className !== '';\n      });\n    }\n  }\n\n  public getClasses(): Array {\n    let classes = new Array();\n    classes.push(this.rootClass);\n    this._extraClasses.forEach(className => classes.push(className))\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ColorInputDirective.html":{"url":"directives/ColorInputDirective.html","title":"directive - ColorInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ColorInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/style-input/color-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/color-input.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/style-input/color-input.directive.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ClassNameInputDirective } from './class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ColorInputDirective extends ClassNameInputDirective {\n\n  @Input()\n  public color: string | null = 'primary';\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.color ? this.rootClass + '--' + this.color : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColumnInformationInterface.html":{"url":"interfaces/ColumnInformationInterface.html","title":"interface - ColumnInformationInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ColumnInformationInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/table/column-information.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        alignment\n                                \n                                \n                                        color\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alignment\n                                    \n                                \n                                \n                                    \n                                        alignment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ColumnInformationInterface {\n  name: string;\n  color: string;\n  alignment: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent.html":{"url":"components/ContainerComponent.html","title":"component - ContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/container/container.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SizeThemeInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-container\n            \n\n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-container'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/container/container.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { SizeThemeInputDirective } from '../base/style-input/size-theme-input.directive';\n\n@Component({\n  selector: 'sb-el-container',\n  templateUrl: './container.component.html'\n})\nexport class ContainerComponent extends SizeThemeInputDirective {\n\n  public rootClass = 'sb-el-container';\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorBaseDirective.html":{"url":"directives/ControlValueAccessorBaseDirective.html","title":"directive - ControlValueAccessorBaseDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorBaseDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                innerValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                setInnerValue\n                            \n                            \n                                    Protected\n                                updateValues\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                            \n                                    Public\n                                writeValueInnerChange\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setInnerValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setInnerValue(value: ValueType | undefined, emitChange: boolean, innerChange: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            ValueType | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    emitChange\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    innerChange\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValues()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: ValueType | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            ValueType | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            writeValueInnerChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValueInnerChange(value: ValueType | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            ValueType | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            innerValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ValueType | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts:14\n                                \n                            \n\n                \n                    \n                        setvalue(value)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts:13\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { EventManagerDirective } from './event-manager.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ControlValueAccessorBaseDirective extends EventManagerDirective implements ControlValueAccessor {\n\n  private innerValue: ValueType | undefined;\n\n  // writing value\n  set value(value: ValueType | undefined) { this.setInnerValue(value, true, false) }\n  get value(): ValueType | undefined { return this.innerValue }\n  public writeValue(value: ValueType | undefined): void { this.setInnerValue(value, false, false) }\n  public writeValueInnerChange(value: ValueType | undefined) {\n    this.setInnerValue(value, true, true);\n  }\n\n  private setInnerValue(value: ValueType | undefined, emitChange: boolean, innerChange: boolean): void {\n    if (value !== this.innerValue && value !== null && !this.disabled) {\n      this.innerValue = value;\n      if (!innerChange) this.updateValues();\n      if (emitChange) this.emitChange(value);\n    }\n  }\n\n  protected updateValues(): void {};\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorClassNameInputDirective.html":{"url":"directives/ControlValueAccessorClassNameInputDirective.html","title":"directive - ControlValueAccessorClassNameInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorClassNameInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor-style-input/control-value-accessor-class-name-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _extraClasses\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                extraClasses\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    extraClasses\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        extraClasses\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-class-name-input.directive.ts:13\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-class-name-input.directive.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _extraClasses\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-class-name-input.directive.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-class-name-input.directive.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        extraClasses\n                    \n                \n\n\n                \n                    \n                        setextraClasses(extraClasses)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-class-name-input.directive.ts:13\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            extraClasses\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ControlValueAccessorBaseDirective } from '../control-value-accessor/control-value-accessor.base.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ControlValueAccessorClassNameInputDirective extends ControlValueAccessorBaseDirective {\n\n  public rootClass: string = '';\n\n  private _extraClasses: Array = new Array();\n  @Input()\n  set extraClasses(extraClasses: string | Array) {\n    if (Array.isArray(extraClasses)) this._extraClasses = extraClasses;\n    else {\n      this._extraClasses = extraClasses.split(' ').filter(className => {\n        return className !== '';\n      });\n    }\n  }\n\n  public getClasses(): Array {\n    let classes = new Array();\n    classes.push(this.rootClass);\n    this._extraClasses.forEach(className => classes.push(className))\n    classes.push(this.disabled ? 'disabled' : '');\n    classes.push(this.pristine ? 'pristine' : 'dirty');\n    classes.push(this.touched ? 'touched' : 'untouched');\n    classes.push(this.focused ? 'focus' : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorColorInputDirective.html":{"url":"directives/ControlValueAccessorColorInputDirective.html","title":"directive - ControlValueAccessorColorInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorColorInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor-style-input/control-value-accessor-color-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-color-input.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-color-input.directive.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ControlValueAccessorClassNameInputDirective } from './control-value-accessor-class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ControlValueAccessorColorInputDirective extends ControlValueAccessorClassNameInputDirective {\n\n  @Input()\n  public color: string | null = 'primary';\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.color ? this.rootClass + '--' + this.color : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorSizeColorInputDirective.html":{"url":"directives/ControlValueAccessorSizeColorInputDirective.html","title":"directive - ControlValueAccessorSizeColorInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorSizeColorInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-color-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-color-input.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'd'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-color-input.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-color-input.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ControlValueAccessorClassNameInputDirective } from './control-value-accessor-class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ControlValueAccessorSizeColorInputDirective extends ControlValueAccessorClassNameInputDirective {\n\n  @Input()\n  public size: string | null = 'd';\n\n  @Input()\n  public color: string | null = 'primary';\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.size ? this.rootClass + '--' + this.size : '');\n    classes.push(this.color ? this.rootClass + '--' + this.color : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorSizeInputDirective.html":{"url":"directives/ControlValueAccessorSizeInputDirective.html","title":"directive - ControlValueAccessorSizeInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorSizeInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'd'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-input.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-input.directive.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ControlValueAccessorClassNameInputDirective } from './control-value-accessor-class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ControlValueAccessorSizeInputDirective extends ControlValueAccessorClassNameInputDirective {\n\n  @Input()\n  public size: string | null = 'd';\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.size ? this.rootClass + '--' + this.size : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{"url":"directives/ControlValueAccessorSizeThemeColorInputDirective.html","title":"directive - ControlValueAccessorSizeThemeColorInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorSizeThemeColorInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'd'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive.ts:11\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { ControlValueAccessorClassNameInputDirective } from './control-value-accessor-class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ControlValueAccessorSizeThemeColorInputDirective extends ControlValueAccessorClassNameInputDirective {\n\n  @Input()\n  public size: string | null = 'd';\n\n  public theme: string;\n\n  @Input()\n  public color: string | null = 'primary';\n\n  constructor(\n    private themeService: ThemeService\n  ) {\n    super();\n    this.theme = themeService.get();\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.size ? this.rootClass + '--' + this.size : '');\n    classes.push(this.theme && this.color ?\n      this.rootClass + '--' + this.theme + '-' + this.color : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorThemeColorInputDirective.html":{"url":"directives/ControlValueAccessorThemeColorInputDirective.html","title":"directive - ControlValueAccessorThemeColorInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorThemeColorInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor-style-input/control-value-accessor-theme-color-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-theme-color-input.directive.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-theme-color-input.directive.ts:13\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-theme-color-input.directive.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-theme-color-input.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { ControlValueAccessorClassNameInputDirective } from './control-value-accessor-class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ControlValueAccessorThemeColorInputDirective extends ControlValueAccessorClassNameInputDirective {\n\n  public theme: string;\n\n  @Input()\n  public color: string | null = 'primary';\n\n  constructor(\n    private themeService: ThemeService\n  ) {\n    super();\n    this.theme = themeService.get();\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.theme && this.color ?\n      this.rootClass + '--' + this.theme + '-' + this.color : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EventManagerDirective.html":{"url":"directives/EventManagerDirective.html","title":"directive - EventManagerDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  EventManagerDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor/event-manager.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                onChangeCallback\n                            \n                            \n                                    Protected\n                                onTouchedCallBack\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                emitBlur\n                            \n                            \n                                    Protected\n                                emitChange\n                            \n                            \n                                    Public\n                                emitFocus\n                            \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                change\n                            \n                            \n                                focus\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        focus\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:19\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            emitBlur\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitBlur()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            emitChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitChange(value: ValueType | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            ValueType | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            emitFocus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitFocus()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onChangeCallback\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onTouchedCallBack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, EventEmitter, Output } from '@angular/core';\nimport { StateManagerDirective } from './state-manager.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class EventManagerDirective extends StateManagerDirective {\n\n  protected onTouchedCallBack: () => void = () => {};\n  protected onChangeCallback: (value: ValueType | undefined) => void = () => {};\n\n  @Output()\n  public change: EventEmitter = new EventEmitter();\n\n  @Output()\n  public blur: EventEmitter = new EventEmitter();\n\n  @Output()\n  public focus: EventEmitter = new EventEmitter();\n\n  // events\n  public emitBlur(): void {\n    this.setFocusedState(false);\n    this.setTouchedState(true);\n    this.onTouchedCallBack();\n    this.blur.emit();\n  }\n\n  public emitFocus(): void {\n    this.setFocusedState(true);\n    this.focus.emit();\n  }\n\n  protected emitChange(value: ValueType | undefined): void {\n    this.setPristineState(false);\n    this.onChangeCallback(value);\n    this.change.emit(value);\n  }\n\n  // register events\n  public registerOnChange(fn: any): void { this.onChangeCallback = fn }\n  public registerOnTouched(fn: any): void { this.onTouchedCallBack = fn }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileInputComponent.html":{"url":"components/FileInputComponent.html","title":"component - FileInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FileInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/file-input/file-input.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ControlValueAccessorSizeThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: FileInputComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-file-input\n            \n\n\n\n\n            \n                templateUrl\n                ./file-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                defaultMessage\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                pill\n                            \n                            \n                                    Public\n                                plain\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkFileSize\n                            \n                            \n                                    Public\n                                getClasses\n                            \n                            \n                                    Public\n                                input\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                limit\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertService: AlertService, pill: any, plain: any, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/form/file-input/file-input.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pill\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plain\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        limit\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : -1\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/file-input/file-input.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/file-input/file-input.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            checkFileSize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkFileSize(file: File)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/file-input/file-input.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/file-input/file-input.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            input\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    input(files: FileList | null)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/file-input/file-input.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                            FileList | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            defaultMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Choose a file'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/file-input/file-input.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : FileInputComponent.defaultMessage\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/file-input/file-input.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pill\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/file-input/file-input.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            plain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/file-input/file-input.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-file-input'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/file-input/file-input.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Attribute, Component, Input, Optional } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AlertService } from '../../../services/alert/alert.service';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { ControlValueAccessorSizeThemeColorInputDirective } from '../../base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-file-input',\n  templateUrl: './file-input.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: FileInputComponent,\n    multi: true\n  }]\n})\nexport class FileInputComponent extends ControlValueAccessorSizeThemeColorInputDirective {\n\n  public rootClass = 'sb-el-file-input';\n\n  @Input()\n  public placeholder: string = '';\n\n  // the limit is in mega bytes\n  @Input()\n  public limit: number = -1;\n\n  public plain: boolean = false;\n  public pill: boolean = false;\n\n  private static defaultMessage: string = 'Choose a file';\n  public message: string = FileInputComponent.defaultMessage;\n\n  constructor(\n    private alertService: AlertService,\n    @Optional() @Attribute('pill') pill: any,\n    @Optional() @Attribute('plain') plain: any,\n    themeService: ThemeService\n  ) {\n    super(themeService);\n    if (pill === '') this.pill = true;\n    if (plain === '') this.plain = true;\n  }\n\n  public input(files: FileList | null) {\n    if (files) {\n      let file: File | null = files.item(0);\n      if (file && this.checkFileSize(file)) {\n        this.message = file.name;\n        this.writeValueInnerChange(file);\n      } else {\n        this.message = FileInputComponent.defaultMessage;\n        this.writeValueInnerChange(undefined);\n      }\n    }\n  }\n\n  private checkFileSize(file: File): boolean {\n    if (this.limit >= 0) {\n      if (file.size  {\n    let classes = super.getClasses();\n    classes.push(this.pill ? 'is-pill' : '');\n    classes.push(this.plain ? 'is-plain' : '');\n    return classes;\n  }\n}\n\n    \n\n    \n          \n  \n    {{ placeholder }}\n  \n  \n  \n    \n      {{ message }}\n      \n        &#xe2c6;\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ placeholder }}                {{ message }}                          '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'FileInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormGroupComponent.html":{"url":"components/FormGroupComponent.html","title":"component - FormGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/group/form-group.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SizeThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-form-group\n            \n\n\n\n\n            \n                templateUrl\n                ./form-group.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                groupAlign\n                            \n                            \n                                groupTitle\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasGroupTitle\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        groupAlign\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'left'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/form-group.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        groupTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/form-group.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/group/form-group.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-form-group'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/group/form-group.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasGroupTitle\n                    \n                \n\n                \n                    \n                        gethasGroupTitle()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/group/form-group.component.ts:14\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { SizeThemeColorInputDirective } from '../../base/style-input/size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-form-group',\n  templateUrl: './form-group.component.html'\n})\nexport class FormGroupComponent extends SizeThemeColorInputDirective {\n\n  public rootClass = 'sb-el-form-group';\n\n  @Input()\n  public groupTitle: string = '';\n  get hasGroupTitle(): boolean {\n    return this.groupTitle !== '';\n  }\n\n  @Input()\n  public groupAlign: string | null = 'left';\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.groupAlign ? 'is-' + this.groupAlign : '');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  {{groupTitle}}\n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{groupTitle}}        '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormModule.html":{"url":"modules/FormModule.html","title":"module - FormModule","body":"\n                   \n\n\n\n\n    Modules\n    FormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_FormModule_imports\n\n\n\n\nButtonComponent\n\nButtonComponent\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nButtonComponent->FormModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nFormModule -->\n\nCheckboxComponent->FormModule\n\n\n\n\n\nCheckboxGroupComponent\n\nCheckboxGroupComponent\n\nFormModule -->\n\nCheckboxGroupComponent->FormModule\n\n\n\n\n\nFileInputComponent\n\nFileInputComponent\n\nFormModule -->\n\nFileInputComponent->FormModule\n\n\n\n\n\nFormGroupComponent\n\nFormGroupComponent\n\nFormModule -->\n\nFormGroupComponent->FormModule\n\n\n\n\n\nIconButtonComponent\n\nIconButtonComponent\n\nFormModule -->\n\nIconButtonComponent->FormModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nFormModule -->\n\nIconComponent->FormModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nFormModule -->\n\nInputComponent->FormModule\n\n\n\n\n\nRadioButtonComponent\n\nRadioButtonComponent\n\nFormModule -->\n\nRadioButtonComponent->FormModule\n\n\n\n\n\nRadioButtonGroupComponent\n\nRadioButtonGroupComponent\n\nFormModule -->\n\nRadioButtonGroupComponent->FormModule\n\n\n\n\n\nSelectButtonComponent\n\nSelectButtonComponent\n\nFormModule -->\n\nSelectButtonComponent->FormModule\n\n\n\n\n\nSelectionOptionsDirective\n\nSelectionOptionsDirective\n\nFormModule -->\n\nSelectionOptionsDirective->FormModule\n\n\n\n\n\nSliderComponent\n\nSliderComponent\n\nFormModule -->\n\nSliderComponent->FormModule\n\n\n\n\n\nToggleSwitchComponent\n\nToggleSwitchComponent\n\nFormModule -->\n\nToggleSwitchComponent->FormModule\n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nFormModule->ButtonComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nFormModule->CheckboxComponent \n\n\n\n\n\nCheckboxGroupComponent \n\nCheckboxGroupComponent \n\nCheckboxGroupComponent  -->\n\nFormModule->CheckboxGroupComponent \n\n\n\n\n\nFileInputComponent \n\nFileInputComponent \n\nFileInputComponent  -->\n\nFormModule->FileInputComponent \n\n\n\n\n\nFormGroupComponent \n\nFormGroupComponent \n\nFormGroupComponent  -->\n\nFormModule->FormGroupComponent \n\n\n\n\n\nIconButtonComponent \n\nIconButtonComponent \n\nIconButtonComponent  -->\n\nFormModule->IconButtonComponent \n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nFormModule->IconComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nFormModule->InputComponent \n\n\n\n\n\nRadioButtonComponent \n\nRadioButtonComponent \n\nRadioButtonComponent  -->\n\nFormModule->RadioButtonComponent \n\n\n\n\n\nRadioButtonGroupComponent \n\nRadioButtonGroupComponent \n\nRadioButtonGroupComponent  -->\n\nFormModule->RadioButtonGroupComponent \n\n\n\n\n\nSelectButtonComponent \n\nSelectButtonComponent \n\nSelectButtonComponent  -->\n\nFormModule->SelectButtonComponent \n\n\n\n\n\nSliderComponent \n\nSliderComponent \n\nSliderComponent  -->\n\nFormModule->SliderComponent \n\n\n\n\n\nToggleSwitchComponent \n\nToggleSwitchComponent \n\nToggleSwitchComponent  -->\n\nFormModule->ToggleSwitchComponent \n\n\n\n\n\nBaseModule\n\nBaseModule\n\nFormModule -->\n\nBaseModule->FormModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/components/form/form.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ButtonComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            CheckboxGroupComponent\n                        \n                        \n                            FileInputComponent\n                        \n                        \n                            FormGroupComponent\n                        \n                        \n                            IconButtonComponent\n                        \n                        \n                            IconComponent\n                        \n                        \n                            InputComponent\n                        \n                        \n                            RadioButtonComponent\n                        \n                        \n                            RadioButtonGroupComponent\n                        \n                        \n                            SelectButtonComponent\n                        \n                        \n                            SelectionOptionsDirective\n                        \n                        \n                            SliderComponent\n                        \n                        \n                            ToggleSwitchComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ButtonComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            CheckboxGroupComponent\n                        \n                        \n                            FileInputComponent\n                        \n                        \n                            FormGroupComponent\n                        \n                        \n                            IconButtonComponent\n                        \n                        \n                            IconComponent\n                        \n                        \n                            InputComponent\n                        \n                        \n                            RadioButtonComponent\n                        \n                        \n                            RadioButtonGroupComponent\n                        \n                        \n                            SelectButtonComponent\n                        \n                        \n                            SliderComponent\n                        \n                        \n                            ToggleSwitchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button/button.component';\nimport { IconButtonComponent } from './icon-button/icon-button.component';\nimport { ToggleSwitchComponent } from './toggle-switch/toggle-switch.component';\nimport { CheckboxComponent } from './checkbox/checkbox.component';\nimport { RadioButtonComponent } from './radio-button/radio-button.component';\nimport { RadioButtonGroupComponent } from './group/radio-button/radio-button-group.component';\nimport { CheckboxGroupComponent } from './group/checkbox/checkbox-group.component';\nimport { SelectionOptionsDirective } from './group/base/selection-options.directive';\nimport { SelectButtonComponent } from './select-button/select-button.component';\nimport { SliderComponent } from './slider/slider.component';\nimport { FormsModule } from '@angular/forms';\nimport { BaseModule } from '../base/base.module';\nimport { IconComponent } from '../icon/icon.component';\nimport { FormGroupComponent } from './group/form-group.component';\nimport { InputComponent } from './input/input.component';\nimport { FileInputComponent } from './file-input/file-input.component';\n\n@NgModule({\n  declarations: [\n    ButtonComponent,\n    IconButtonComponent,\n    ToggleSwitchComponent,\n    CheckboxComponent,\n    RadioButtonComponent,\n    RadioButtonGroupComponent,\n    CheckboxGroupComponent,\n    SelectionOptionsDirective,\n    SelectButtonComponent,\n    SliderComponent,\n    IconComponent,\n    FormGroupComponent,\n    InputComponent,\n    FileInputComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    BaseModule\n  ],\n  exports: [\n    ButtonComponent,\n    IconButtonComponent,\n    ToggleSwitchComponent,\n    CheckboxComponent,\n    RadioButtonComponent,\n    RadioButtonGroupComponent,\n    CheckboxGroupComponent,\n    SelectButtonComponent,\n    SliderComponent,\n    IconComponent,\n    FormGroupComponent,\n    InputComponent,\n    FileInputComponent\n  ]\n})\nexport class FormModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconButtonComponent.html":{"url":"components/IconButtonComponent.html","title":"component - IconButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IconButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/icon-button/icon-button.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SizeThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-icon-button\n            \n\n\n\n\n            \n                templateUrl\n                ./icon-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _disabled\n                            \n                            \n                                    Public\n                                pill\n                            \n                            \n                                    Public\n                                plain\n                            \n                            \n                                    Public\n                                round\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    disabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pill: any, round: any, plain: any, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/form/icon-button/icon-button.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pill\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        round\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plain\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/icon-button/icon-button.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/icon-button/icon-button.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pill\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/icon-button/icon-button.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            plain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/icon-button/icon-button.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            round\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/icon-button/icon-button.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n\n                \n                    \n                        getdisabled()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/icon-button/icon-button.component.ts:20\n                                \n                            \n\n                \n                    \n                        setdisabled(isDisabled: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/icon-button/icon-button.component.ts:17\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            isDisabled\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Attribute, Component, Input, Optional } from '@angular/core';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { SizeThemeColorInputDirective } from '../../base/style-input/size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-icon-button',\n  templateUrl: './icon-button.component.html'\n})\nexport class IconButtonComponent extends SizeThemeColorInputDirective {\n\n  public plain: boolean = false;\n  public pill: boolean = false;\n  public round: boolean = false;\n  private _disabled: boolean = false;\n\n  @Input()\n  set disabled(isDisabled: boolean) {\n    this._disabled = isDisabled;\n  }\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  constructor(\n    @Optional() @Attribute('pill') pill: any,\n    @Optional() @Attribute('round') round: any,\n    @Optional() @Attribute('plain') plain: any,\n    themeService: ThemeService\n  ) {\n    super(themeService);\n    if (pill === '') this.pill = true;\n    if (round === '') this.round = true;\n    if (plain === '') this.plain = true;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/icon/icon.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SizeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-icon\n            \n\n\n\n\n            \n                templateUrl\n                ./icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/icon/icon.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { SizeColorInputDirective } from '../base/style-input/size-color-input.directive';\n\n@Component({\n  selector: 'sb-el-icon',\n  templateUrl: './icon.component.html'\n})\nexport class IconComponent extends SizeColorInputDirective {\n\n  constructor() {\n    super();\n    this.rootClass = 'sb-el-icon';\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputComponent.html":{"url":"components/InputComponent.html","title":"component - InputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/input/input.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ControlValueAccessorSizeThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: InputComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-input\n            \n\n\n\n\n            \n                templateUrl\n                ./input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pill\n                            \n                            \n                                    Public\n                                plain\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                            \n                                    Public\n                                getInputClasses\n                            \n                            \n                                    Public\n                                getPlaceholderClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholder\n                            \n                            \n                                spellcheck\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pill: any, plain: any, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/form/input/input.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pill\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plain\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/input/input.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        spellcheck\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/input/input.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/input/input.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/input/input.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInputClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInputClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/input/input.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPlaceholderClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPlaceholderClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/input/input.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pill\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/input/input.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            plain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/input/input.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-input'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/input/input.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Attribute, Component, Input, Optional } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { ControlValueAccessorSizeThemeColorInputDirective } from '../../base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-input',\n  templateUrl: './input.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: InputComponent,\n    multi: true\n  }]\n})\nexport class InputComponent extends ControlValueAccessorSizeThemeColorInputDirective {\n\n  public rootClass = 'sb-el-input';\n\n  @Input()\n  public placeholder: string = '';\n\n  @Input()\n  public type: string = 'text';\n\n  @Input()\n  public spellcheck: boolean = false;\n\n  public plain: boolean = false;\n  public pill: boolean = false;\n\n\n  constructor(\n    @Optional() @Attribute('pill') pill: any,\n    @Optional() @Attribute('plain') plain: any,\n    themeService: ThemeService\n  ) {\n    super(themeService);\n    if (pill === '') this.pill = true;\n    if (plain === '') this.plain = true;\n  }\n\n  public getInputClasses(): Array {\n    let classes = new Array();\n    classes.push(this.rootClass + '__input')\n    return classes;\n  }\n\n  public getPlaceholderClasses(): Array {\n    let classes = new Array();\n    classes.push(this.rootClass + '__placeholder')\n    classes.push(this.value || this.focused ? 'is-top' : '')\n    return classes;\n  }\n\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.pill ? 'is-pill' : '');\n    classes.push(this.plain ? 'is-plain': '');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n  \n    {{ placeholder }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ placeholder }}  '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Queue.html":{"url":"classes/Queue.html","title":"class - Queue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Queue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/queue/queue.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                queue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dequeue\n                            \n                            \n                                    Public\n                                enqueue\n                            \n                            \n                                    Public\n                                isEmpty\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            queue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/queue/queue.ts:3\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            dequeue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dequeue()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/queue/queue.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enqueue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enqueue(value: T)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/queue/queue.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isEmpty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEmpty()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/queue/queue.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/models/queue/queue.ts:15\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export class Queue {\n\n  private queue: Array = new Array();\n\n  public enqueue(value: T) {\n    this.queue.push(value);\n  }\n\n  public dequeue(): T | undefined {\n    if (!this.isEmpty()) {\n      return this.queue.shift();\n    } else return undefined;\n  }\n\n  get length(): number {\n    return this.queue.length;\n  }\n\n  public isEmpty(): boolean {\n    return this.queue.length == 0;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RadioButtonComponent.html":{"url":"components/RadioButtonComponent.html","title":"component - RadioButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RadioButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/radio-button/radio-button.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ControlValueAccessorSizeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: RadioButtonComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-radio-button\n            \n\n\n\n\n            \n                templateUrl\n                ./radio-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                check\n                            \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                labelPosition\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/form/radio-button/radio-button.component.ts:19\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/radio-button/radio-button.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelPosition\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'right'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/radio-button/radio-button.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            check\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    check()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/radio-button/radio-button.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/radio-button/radio-button.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlValueAccessorSizeColorInputDirective } from '../../base/control-value-accessor-style-input/control-value-accessor-size-color-input.directive';\n\n@Component({\n  selector: 'sb-el-radio-button',\n  templateUrl: './radio-button.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: RadioButtonComponent,\n    multi: true\n  }]\n})\nexport class RadioButtonComponent extends ControlValueAccessorSizeColorInputDirective {\n\n  @Input()\n  public label: string = '';\n  @Input()\n  public labelPosition: string = 'right';\n\n  constructor() {\n    super();\n    this.rootClass = 'sb-el-radio-button';\n  }\n\n  public check(): void {\n    this.value = true;\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.value ? 'is-checked' : 'is-unchecked');\n    classes.push(this.label ? 'is-label' : '');\n    classes.push(this.label ? 'label-is-' + this.labelPosition : '');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  {{ label }}\n  \n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}            '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'RadioButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RadioButtonGroupComponent.html":{"url":"components/RadioButtonGroupComponent.html","title":"component - RadioButtonGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RadioButtonGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/group/radio-button/radio-button-group.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SelectionOptionsDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: RadioButtonGroupComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-radio-button-group\n            \n\n\n\n\n            \n                templateUrl\n                ./radio-button-group.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                check\n                            \n                            \n                                    Protected\n                                updateValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                groupAlign\n                            \n                            \n                                groupTitle\n                            \n                            \n                                labelPosition\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        groupAlign\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'left'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/radio-button/radio-button-group.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        groupTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/radio-button/radio-button-group.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelPosition\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'right'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/radio-button/radio-button-group.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            check\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    check(newOption: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/group/radio-button/radio-button-group.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newOption\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValues()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/group/radio-button/radio-button-group.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-radio-button-group'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/group/radio-button/radio-button-group.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { SelectionOptionsDirective } from '../base/selection-options.directive';\n\n@Component({\n  selector: 'sb-el-radio-button-group',\n  templateUrl: './radio-button-group.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: RadioButtonGroupComponent,\n    multi: true\n  }]\n})\nexport class RadioButtonGroupComponent extends SelectionOptionsDirective {\n\n  public rootClass = 'sb-el-radio-button-group';\n\n  @Input()\n  public groupTitle: string = '';\n\n  @Input()\n  public groupAlign: string | null = 'left';\n\n  @Input()\n  public labelPosition: string = 'right';\n\n  public check(newOption: string) {\n    this.options.forEach((option: string) => {\n      if (option !== newOption) this.selectedOptions[option] = false;\n    })\n    this.writeValueInnerChange(newOption);\n  }\n\n  protected updateValues(): void {\n    this.options.forEach((option: string) => {\n      if (option === this.value) {\n        this.selectedOptions[option] = true;\n      } else this.selectedOptions[option] = false;\n    })\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'RadioButtonGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SbElementModule.html":{"url":"modules/SbElementModule.html","title":"module - SbElementModule","body":"\n                   \n\n\n\n\n    Modules\n    SbElementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SbElementModule\n\n\n\ncluster_SbElementModule_exports\n\n\n\ncluster_SbElementModule_imports\n\n\n\ncluster_SbElementModule_declarations\n\n\n\n\nAlertBoxComponent\n\nAlertBoxComponent\n\n\n\nSbElementModule\n\nSbElementModule\n\nSbElementModule -->\n\nAlertBoxComponent->SbElementModule\n\n\n\n\n\nAlertComponent\n\nAlertComponent\n\nSbElementModule -->\n\nAlertComponent->SbElementModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nSbElementModule -->\n\nCardComponent->SbElementModule\n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nSbElementModule -->\n\nContainerComponent->SbElementModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nSbElementModule -->\n\nTableComponent->SbElementModule\n\n\n\n\n\nAlertBoxComponent \n\nAlertBoxComponent \n\nAlertBoxComponent  -->\n\nSbElementModule->AlertBoxComponent \n\n\n\n\n\nAlertComponent \n\nAlertComponent \n\nAlertComponent  -->\n\nSbElementModule->AlertComponent \n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nSbElementModule->CardComponent \n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nSbElementModule->ContainerComponent \n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nSbElementModule->FormModule \n\n\n\n\n\nTableComponent \n\nTableComponent \n\nTableComponent  -->\n\nSbElementModule->TableComponent \n\n\n\n\n\nBaseModule\n\nBaseModule\n\nSbElementModule -->\n\nBaseModule->SbElementModule\n\n\n\n\n\nFormModule\n\nFormModule\n\nSbElementModule -->\n\nFormModule->SbElementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/sb-element.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AlertBoxComponent\n                        \n                        \n                            AlertComponent\n                        \n                        \n                            CardComponent\n                        \n                        \n                            ContainerComponent\n                        \n                        \n                            TableComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BaseModule\n                        \n                        \n                            FormModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AlertBoxComponent\n                        \n                        \n                            AlertComponent\n                        \n                        \n                            CardComponent\n                        \n                        \n                            ContainerComponent\n                        \n                        \n                            FormModule\n                        \n                        \n                            TableComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BaseModule } from './components/base/base.module';\nimport { FormModule } from './components/form/form.module';\n\n/**\n * Components\n */\nimport { ContainerComponent } from './components/container/container.component';\nimport { AlertBoxComponent } from './components/alert-box/alert-box.component';\nimport { TableComponent } from './components/table/table.component';\nimport { AlertComponent } from './components/alert/alert.component';\nimport { CardComponent } from './components/card/card.component';\n\n\n@NgModule({\n  declarations: [\n    ContainerComponent,\n    AlertBoxComponent,\n    TableComponent,\n    AlertComponent,\n    CardComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    FormModule,\n    BaseModule,\n  ],\n  exports: [\n    ContainerComponent,\n    AlertBoxComponent,\n    TableComponent,\n    AlertComponent,\n    CardComponent,\n    // modules\n    FormModule\n  ]\n})\nexport class SbElementModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectButtonComponent.html":{"url":"components/SelectButtonComponent.html","title":"component - SelectButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/select-button/select-button.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SelectionOptionsDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: SelectButtonComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-select-button\n            \n\n\n\n\n            \n                templateUrl\n                ./select-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pill\n                            \n                            \n                                    Public\n                                plain\n                            \n                            \n                                    Public\n                                showOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getButtonClasses\n                            \n                            \n                                    Public\n                                getClasses\n                            \n                            \n                                    Public\n                                select\n                            \n                            \n                                    Public\n                                toggle\n                            \n                            \n                                    Protected\n                                updateValues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pill: any, plain: any, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/form/select-button/select-button.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pill\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plain\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getButtonClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getButtonClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/select-button/select-button.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/select-button/select-button.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            select\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    select(newOption: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/select-button/select-button.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newOption\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/select-button/select-button.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValues()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/select-button/select-button.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pill\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/select-button/select-button.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            plain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/select-button/select-button.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/select-button/select-button.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Attribute, Component, Optional } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { SelectionOptionsDirective } from '../group/base/selection-options.directive';\n\n@Component({\n  selector: 'sb-el-select-button',\n  templateUrl: './select-button.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: SelectButtonComponent,\n    multi: true\n  }]\n})\nexport class SelectButtonComponent extends SelectionOptionsDirective {\n\n  public plain: boolean = false;\n  public pill: boolean = false;\n  public showOptions: boolean = false;\n\n  constructor(\n    @Optional() @Attribute('pill') pill: any,\n    @Optional() @Attribute('plain') plain: any,\n    themeService: ThemeService\n  ) {\n    super(themeService);\n    if (pill === '') this.pill = true;\n    if (plain === '') this.plain = true;\n    this.rootClass = 'sb-el-select-button';\n  }\n\n  public toggle(): void {\n    this.showOptions = !this.showOptions;\n  }\n\n  public select(newOption: string) {\n    this.toggle();\n    this.options.forEach((option: string) => {\n      if (option !== newOption) this.selectedOptions[option] = false;\n    })\n    this.writeValueInnerChange(newOption);\n  }\n\n  protected updateValues(): void {\n    this.options.forEach((option: string) => {\n      if (option === this.value) {\n        this.selectedOptions[option] = true;\n      } else this.selectedOptions[option] = false;\n    })\n  }\n\n  public getButtonClasses(): Array {\n    let classes = new Array();\n    classes.push('sb-el-select-button__button');\n    return classes;\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.pill ? 'is-pill' : '');\n    classes.push(this.plain ? 'is-plain': '');\n    classes.push(this.showOptions ? 'is-open' : 'is-closed');\n    return classes;\n  }\n}\n\n    \n\n    \n        \n  \n    {{ value }}\n    \n    &#xe5cf;\n  \n  \n    \n      \n          {{ option }}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ value }}                                {{ option }}            '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'SelectButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectedOptions.html":{"url":"interfaces/SelectedOptions.html","title":"interface - SelectedOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SelectedOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/form/group/base/selected-options.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        boolean\n\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/form/group/base/selected-options.ts:1\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface SelectedOptions {\n  [key: string]: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SelectionOptionsDirective.html":{"url":"directives/SelectionOptionsDirective.html","title":"directive - SelectionOptionsDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SelectionOptionsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/form/group/base/selection-options.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _options\n                            \n                            \n                                    Public\n                                selectedOptions\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/base/selection-options.directive.ts:14\n                            \n                        \n            \n        \n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/group/base/selection-options.directive.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SelectedOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/group/base/selection-options.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/group/base/selection-options.directive.ts:18\n                                \n                            \n\n                \n                    \n                        setoptions(options)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/group/base/selection-options.directive.ts:14\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            options\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { SelectedOptions } from './selected-options';\nimport { ControlValueAccessorSizeThemeColorInputDirective } from '../../../../components/base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class SelectionOptionsDirective extends ControlValueAccessorSizeThemeColorInputDirective {\n\n  public selectedOptions: SelectedOptions = {};\n  protected _options: Array = new Array();\n\n  @Input()\n  set options(options: Array) {\n    this._options = options;\n    this._options.forEach((option: string) => this.selectedOptions[option] = false);\n  }\n  get options(): Array {return this._options}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SizeColorInputDirective.html":{"url":"directives/SizeColorInputDirective.html","title":"directive - SizeColorInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SizeColorInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/style-input/size-color-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/size-color-input.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'd'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/size-color-input.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/style-input/size-color-input.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ClassNameInputDirective } from './class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class SizeColorInputDirective extends ClassNameInputDirective {\n\n    @Input()\n    public size: string | null = 'd';\n\n    @Input()\n    public color: string | null = 'primary';\n\n    public getClasses(): Array {\n      let classes = super.getClasses();\n      classes.push(this.size ? this.rootClass + '--' + this.size : '');\n      classes.push(this.color ? this.rootClass + '--' + this.color : '');\n      return classes;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SizeInputDirective.html":{"url":"directives/SizeInputDirective.html","title":"directive - SizeInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SizeInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/style-input/size-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'd'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/size-input.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/style-input/size-input.directive.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ClassNameInputDirective } from './class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class SizeInputDirective extends ClassNameInputDirective {\n\n  @Input()\n  public size: string | null = 'd';\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.size ? this.rootClass + '--' + this.size : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SizeThemeColorInputDirective.html":{"url":"directives/SizeThemeColorInputDirective.html","title":"directive - SizeThemeColorInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SizeThemeColorInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/style-input/size-theme-color-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/base/style-input/size-theme-color-input.directive.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/size-theme-color-input.directive.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'd'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/size-theme-color-input.directive.ts:11\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/style-input/size-theme-color-input.directive.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/size-theme-color-input.directive.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { ClassNameInputDirective } from './class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class SizeThemeColorInputDirective extends ClassNameInputDirective {\n\n  @Input()\n  public size: string | null = 'd';\n\n  public theme: string;\n\n  @Input()\n  public color: string | null = 'primary';\n\n  constructor(\n    private themeService: ThemeService\n  ) {\n    super();\n    this.theme = themeService.get();\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.size ? this.rootClass + '--' + this.size : '');\n    classes.push(this.theme && this.color ?\n      this.rootClass + '--' + this.theme + '-' + this.color : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SizeThemeInputDirective.html":{"url":"directives/SizeThemeInputDirective.html","title":"directive - SizeThemeInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SizeThemeInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/style-input/size-theme-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/base/style-input/size-theme-input.directive.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'd'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/size-theme-input.directive.ts:11\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/style-input/size-theme-input.directive.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/size-theme-input.directive.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { ClassNameInputDirective } from './class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class SizeThemeInputDirective extends ClassNameInputDirective {\n\n  @Input()\n  public size: string | null = 'd';\n\n  public theme: string;\n\n  constructor(\n    private themeService: ThemeService\n  ) {\n    super();\n    this.theme = themeService.get();\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.size ? this.rootClass + '--' + this.size : '');\n    classes.push(this.theme ? this.rootClass + '--' + this.theme : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SliderComponent.html":{"url":"components/SliderComponent.html","title":"component - SliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/slider/slider.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ControlValueAccessorSizeThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: SliderComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-slider\n            \n\n\n\n\n            \n                templateUrl\n                ./slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _step\n                            \n                            \n                                    Private\n                                decimalPlaces\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                            \n                                    Public\n                                snapPoints\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                max\n                            \n                            \n                                min\n                            \n                            \n                                showValue\n                            \n                            \n                                snap\n                            \n                            \n                                step\n                            \n                            \n                                valueSuffix\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    step\n                                \n                                \n                                    snap\n                                \n                                \n                                    numberPipingValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showValue\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        snap\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        step\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueSuffix\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:60\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/slider/slider.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _step\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            decimalPlaces\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-slider'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snapPoints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:50\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        step\n                    \n                \n\n                \n                    \n                        getstep()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/slider/slider.component.ts:34\n                                \n                            \n\n                \n                    \n                        setstep(step: number)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/slider/slider.component.ts:29\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            step\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        snap\n                    \n                \n\n\n                \n                    \n                        setsnap(snap)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/slider/slider.component.ts:38\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            snap\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        numberPipingValue\n                    \n                \n\n                \n                    \n                        getnumberPipingValue()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/slider/slider.component.ts:52\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlValueAccessorSizeThemeColorInputDirective } from '../../base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-slider',\n  templateUrl: './slider.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: SliderComponent,\n    multi: true\n  }]\n})\nexport class SliderComponent extends ControlValueAccessorSizeThemeColorInputDirective {\n\n  public rootClass = 'sb-el-slider';\n\n  @Input()\n  public label: string = '';\n\n  @Input()\n  public min: number = 0;\n\n  @Input()\n  public max: number = 10;\n\n  private _step: number = 1;\n  @Input()\n  set step(step: number) {\n    this._step = step;\n    if (Math.floor(step) !== step)\n        this.decimalPlaces = step.toString().split(\".\")[1].length || 0;\n  }\n  get step(): number { return this._step }\n  private decimalPlaces: number = 0;\n\n  @Input()\n  set snap(snap: Array | boolean) {\n    if (Array.isArray(snap)) this.snapPoints = snap;\n    else if (snap) {\n      this.snapPoints = new Array();\n      let snapStep = Math.round((this.max-this.min)/5/this.step)*this.step;\n      let sum = this.min;\n      while(sum  = new Array();\n\n  get numberPipingValue(): string {\n    return '1.' + this.decimalPlaces + '-' + this.decimalPlaces;\n  }\n\n  @Input()\n  public showValue: boolean = false;\n\n  @Input()\n  public valueSuffix: string = '';\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.label ? 'is-label' : 'is-not-label');\n    classes.push(this.showValue ? 'is-value' : 'is-not-value');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  {{ label }}\n  \n  \n    {{ value | number: numberPipingValue }} {{ valueSuffix }}\n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}        {{ value | number: numberPipingValue }} {{ valueSuffix }}          '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'SliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/StateManagerDirective.html":{"url":"directives/StateManagerDirective.html","title":"directive - StateManagerDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  StateManagerDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor/state-manager.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _disabled\n                            \n                            \n                                    Private\n                                _focused\n                            \n                            \n                                    Private\n                                _pristine\n                            \n                            \n                                    Private\n                                _touched\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                setFocusedState\n                            \n                            \n                                    Public\n                                setPristineState\n                            \n                            \n                                    Public\n                                setTouchedState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                focused\n                            \n                            \n                                pristine\n                            \n                            \n                                touched\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    touched\n                                \n                                \n                                    pristine\n                                \n                                \n                                    disabled\n                                \n                                \n                                    focused\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        focused\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pristine\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        touched\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDisabledState(disabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    disabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setFocusedState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setFocusedState(focused: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    focused\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPristineState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPristineState(pristine: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pristine\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setTouchedState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTouchedState(touched: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    touched\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _focused\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _pristine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _touched\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        touched\n                    \n                \n\n                \n                    \n                        gettouched()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:11\n                                \n                            \n\n                \n                    \n                        settouched(isTouched: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:10\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            isTouched\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        pristine\n                    \n                \n\n                \n                    \n                        getpristine()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:16\n                                \n                            \n\n                \n                    \n                        setpristine(isPristine: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:15\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            isPristine\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n\n                \n                    \n                        getdisabled()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:21\n                                \n                            \n\n                \n                    \n                        setdisabled(isDisabled: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            isDisabled\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        focused\n                    \n                \n\n                \n                    \n                        getfocused()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:26\n                                \n                            \n\n                \n                    \n                        setfocused(isFocused: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:25\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            isFocused\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class StateManagerDirective {\n\n  private _touched: boolean = false;\n  @Input()\n  set touched(isTouched: boolean) { this._touched = isTouched }\n  get touched(): boolean {return this._touched}\n\n  private _pristine: boolean = true;\n  @Input()\n  set pristine(isPristine: boolean) { this._pristine = isPristine }\n  get pristine(): boolean {return this._pristine}\n\n  private _disabled: boolean = false;\n  @Input()\n  set disabled(isDisabled: boolean) { this._disabled = isDisabled }\n  get disabled(): boolean { return this._disabled }\n\n  private _focused: boolean = false;\n  @Input()\n  set focused(isFocused: boolean) { this._focused = isFocused }\n  get focused(): boolean { return this._focused }\n\n  public setDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\n\n  public setTouchedState(touched: boolean): void {\n    this.touched = touched;\n  }\n\n  public setPristineState(pristine: boolean): void {\n    this.pristine = pristine;\n  }\n\n  public setFocusedState(focused: boolean): void {\n    this.focused = focused\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TableAbstract.html":{"url":"classes/TableAbstract.html","title":"class - TableAbstract","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TableAbstract\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/table/table.abstract.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                columnInformation\n                            \n                            \n                                    Abstract\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getColumnInformation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            columnInformation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/table/table.abstract.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/table/table.abstract.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getColumnInformation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getColumnInformation(nameOrIndex: string | number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/table/table.abstract.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nameOrIndex\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ColumnInformationInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ColumnInformationInterface } from './column-information.interface';\n\nexport abstract class TableAbstract {\n  abstract columnInformation: Array;\n  abstract data: Array>\n  public getColumnInformation(nameOrIndex: string | number): ColumnInformationInterface {\n    if (typeof nameOrIndex === 'number') {\n      return this.columnInformation[nameOrIndex]\n    } else {\n      let info = this.columnInformation.find(columnInformation => {\n        return columnInformation.name === nameOrIndex\n      })\n      if (info) return info;\n      else throw new Error('Column Information with name' + nameOrIndex + 'does not exist!')\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableComponent.html":{"url":"components/TableComponent.html","title":"component - TableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/table/table.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-table\n            \n\n\n\n\n            \n                templateUrl\n                ./table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rootClass\n                            \n                            \n                                    Public\n                                subRootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                            \n                                    Public\n                                getColumnClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                separation\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        separation\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'all'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/table/table.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        table\n                    \n                \n                \n                    \n                        Type :         TableAbstract\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/table/table.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/table/table.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getColumnClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getColumnClasses(columnIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/table/table.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    columnIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-table'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/table/table.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subRootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : this.rootClass + '__data'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/table/table.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { TableAbstract } from '../../models/table/table.abstract';\nimport { ThemeColorInputDirective } from '../base/style-input/theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-table',\n  templateUrl: './table.component.html'\n})\nexport class TableComponent extends ThemeColorInputDirective {\n\n  public rootClass: string = 'sb-el-table';\n  public subRootClass: string = this.rootClass + '__data';\n\n  @Input()\n  public separation: string = 'all';\n\n  @Input()\n  public table!: TableAbstract;\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    if (this.separation === 'all') {\n      classes.push('is-border-separation');\n      classes.push('is-color-separation');\n    } else if (this.separation) {\n      classes.push('is-' + this.separation + '-separation');\n    }\n    return classes;\n  }\n\n  public getColumnClasses(columnIndex: number): Array {\n    let classes = new Array();\n    let columnInformation = this.table.getColumnInformation(columnIndex);\n    classes.push(this.subRootClass);\n    classes.push(this.subRootClass + '--' + columnInformation.color)\n    classes.push('is-' + columnInformation.alignment)\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ column.name }}\n        \n      \n    \n    \n      \n        \n          {{ columnEntry }}\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ column.name }}                                              {{ columnEntry }}                    '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'TableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TableModel.html":{"url":"classes/TableModel.html","title":"class - TableModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TableModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/table/table.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        TableAbstract\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columnInformation\n                            \n                            \n                                data\n                            \n                            \n                                    Abstract\n                                columnInformation\n                            \n                            \n                                    Abstract\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getColumnInformation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnInformation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n      {\n        name: 'First Name',\n        color: 'primary',\n        alignment: 'center'\n      },\n      {\n        name: 'Last Name',\n        color: '',\n        alignment: 'center'\n      },\n      {\n        name: 'Address',\n        color: '',\n        alignment: 'center'\n      }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/table/table.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    ['Severin', 'Buchser', 'Gumisweg 7'],\n    ['Rafael', 'Buchser', 'Gumisweg 7'],\n    ['Christoph', 'Buchser', 'Gumisweg 7'],\n    ['Beatrice', 'Buchser', 'Gumisweg 7'],\n    ['Beatrice', 'Buchser', 'Gumisweg 7'],\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/table/table.model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            columnInformation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TableAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         TableAbstract:4\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array>\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TableAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         TableAbstract:5\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getColumnInformation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getColumnInformation(nameOrIndex: string | number)\n                \n            \n\n\n            \n                \n                    Inherited from         TableAbstract\n\n                \n            \n            \n                \n                        Defined in         TableAbstract:6\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nameOrIndex\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ColumnInformationInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TableAbstract } from './table.abstract';\n\nexport class TableModel extends TableAbstract {\n  columnInformation = [\n      {\n        name: 'First Name',\n        color: 'primary',\n        alignment: 'center'\n      },\n      {\n        name: 'Last Name',\n        color: '',\n        alignment: 'center'\n      },\n      {\n        name: 'Address',\n        color: '',\n        alignment: 'center'\n      }\n  ];\n  data = [\n    ['Severin', 'Buchser', 'Gumisweg 7'],\n    ['Rafael', 'Buchser', 'Gumisweg 7'],\n    ['Christoph', 'Buchser', 'Gumisweg 7'],\n    ['Beatrice', 'Buchser', 'Gumisweg 7'],\n    ['Beatrice', 'Buchser', 'Gumisweg 7'],\n  ];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ThemeColorInputDirective.html":{"url":"directives/ThemeColorInputDirective.html","title":"directive - ThemeColorInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ThemeColorInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/style-input/theme-color-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/base/style-input/theme-color-input.directive.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/theme-color-input.directive.ts:13\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/style-input/theme-color-input.directive.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/theme-color-input.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { ClassNameInputDirective } from './class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ThemeColorInputDirective extends ClassNameInputDirective {\n\n  public theme: string;\n\n  @Input()\n  public color: string | null = 'primary';\n\n  constructor(\n    private themeService: ThemeService\n  ) {\n    super();\n    this.theme = themeService.get();\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.theme && this.color ?\n      this.rootClass + '--' + this.theme + '-' + this.color : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ThemeInputDirective.html":{"url":"directives/ThemeInputDirective.html","title":"directive - ThemeInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ThemeInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/style-input/theme-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/base/style-input/theme-input.directive.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/style-input/theme-input.directive.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/theme-input.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { ClassNameInputDirective } from './class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ThemeInputDirective  extends ClassNameInputDirective {\n\n  public theme: string;\n\n  constructor(\n    private themeService: ThemeService\n  ) {\n    super();\n    this.theme = themeService.get();\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.theme ? this.rootClass + '--' + this.theme : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/theme/theme.service.ts\n        \n\n            \n                Description\n            \n            \n                A service which provides global access to the current theme.\nThe service allows a component to get and set the theme. There are two\nthemes:\n\nlight\nnight\n\nThe default theme is the night theme. The theme is stored in form of a\nstring, which is then included into classes of the different components or\nelements.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                commit\n                            \n                            \n                                    Public\n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            commit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    commit(theme: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/theme/theme.service.ts:29\n                \n            \n\n\n            \n                \n                    Sets the theme to the service.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    theme\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/theme/theme.service.ts:36\n                \n            \n\n\n            \n                \n                    Gets the current theme.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The current theme\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'night'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/theme/theme.service.ts:22\n                            \n                        \n\n                \n                    \n                        The current theme. The default theme is night.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n  * A service which provides global access to the current theme.\n  *\n  * The service allows a component to get and set the theme. There are two\n  * themes:\n  * - `light`\n  * - `night`\n  *\n  * The default theme is the `night` theme. The theme is stored in form of a\n  * string, which is then included into classes of the different components or\n  * elements.\n  */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  /**\n   * The current theme. The default theme is `night`.\n   */\n  private _theme: string = 'night';\n\n  /**\n   * Sets the theme to the service.\n   *\n   * @param{string} The theme to commit\n   */\n  public commit(theme: string): void { this._theme = theme }\n\n  /**\n   *  Gets the current theme.\n   *\n   * @returns{string} The current theme\n   */\n  public get(): string { return this._theme }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleSwitchComponent.html":{"url":"components/ToggleSwitchComponent.html","title":"component - ToggleSwitchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleSwitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/toggle-switch/toggle-switch.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ControlValueAccessorSizeThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: ToggleSwitchComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-toggle-switch\n            \n\n\n\n\n            \n                templateUrl\n                ./toggle-switch.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/toggle-switch/toggle-switch.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/toggle-switch/toggle-switch.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-toggle-switch'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/toggle-switch/toggle-switch.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlValueAccessorSizeThemeColorInputDirective } from '../../base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-toggle-switch',\n  templateUrl: './toggle-switch.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: ToggleSwitchComponent,\n    multi: true\n  }]\n})\nexport class ToggleSwitchComponent extends ControlValueAccessorSizeThemeColorInputDirective {\n\n  public rootClass = 'sb-el-toggle-switch';\n\n  public toggle(): void {\n    this.value = !this.value;\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.value ? 'is-on' : 'is-off');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToggleSwitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/components/alert-box/alert-box.component.ts\n            \n            component\n            AlertBoxComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/lib/components/alert/alert.component.ts\n            \n            component\n            AlertComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor-style-input/control-value-accessor-class-name-input.directive.ts\n            \n            directive\n            ControlValueAccessorClassNameInputDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor-style-input/control-value-accessor-color-input.directive.ts\n            \n            directive\n            ControlValueAccessorColorInputDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-color-input.directive.ts\n            \n            directive\n            ControlValueAccessorSizeColorInputDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-input.directive.ts\n            \n            directive\n            ControlValueAccessorSizeInputDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive.ts\n            \n            directive\n            ControlValueAccessorSizeThemeColorInputDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor-style-input/control-value-accessor-theme-color-input.directive.ts\n            \n            directive\n            ControlValueAccessorThemeColorInputDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts\n            \n            directive\n            ControlValueAccessorBaseDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor/event-manager.directive.ts\n            \n            directive\n            EventManagerDirective\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor/state-manager.directive.ts\n            \n            directive\n            StateManagerDirective\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/lib/components/base/style-input/class-name-input.directive.ts\n            \n            directive\n            ClassNameInputDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/components/base/style-input/color-input.directive.ts\n            \n            directive\n            ColorInputDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/components/base/style-input/size-color-input.directive.ts\n            \n            directive\n            SizeColorInputDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/components/base/style-input/size-input.directive.ts\n            \n            directive\n            SizeInputDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/components/base/style-input/size-theme-color-input.directive.ts\n            \n            directive\n            SizeThemeColorInputDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/components/base/style-input/size-theme-input.directive.ts\n            \n            directive\n            SizeThemeInputDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/components/base/style-input/theme-color-input.directive.ts\n            \n            directive\n            ThemeColorInputDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/components/base/style-input/theme-input.directive.ts\n            \n            directive\n            ThemeInputDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/components/card/card.component.ts\n            \n            component\n            CardComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/components/container/container.component.ts\n            \n            component\n            ContainerComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/components/form/button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/lib/components/form/checkbox/checkbox.component.ts\n            \n            component\n            CheckboxComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/components/form/file-input/file-input.component.ts\n            \n            component\n            FileInputComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/lib/components/form/group/base/selected-options.ts\n            \n            interface\n            SelectedOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/components/form/group/base/selection-options.directive.ts\n            \n            directive\n            SelectionOptionsDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/components/form/group/checkbox/checkbox-group.component.ts\n            \n            component\n            CheckboxGroupComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/components/form/group/form-group.component.ts\n            \n            component\n            FormGroupComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/components/form/group/radio-button/radio-button-group.component.ts\n            \n            component\n            RadioButtonGroupComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/components/form/icon-button/icon-button.component.ts\n            \n            component\n            IconButtonComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/components/form/input/input.component.ts\n            \n            component\n            InputComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/lib/components/form/radio-button/radio-button.component.ts\n            \n            component\n            RadioButtonComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/components/form/select-button/select-button.component.ts\n            \n            component\n            SelectButtonComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/lib/components/form/slider/slider.component.ts\n            \n            component\n            SliderComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/lib/components/form/toggle-switch/toggle-switch.component.ts\n            \n            component\n            ToggleSwitchComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/components/icon/icon.component.ts\n            \n            component\n            IconComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/components/table/table.component.ts\n            \n            component\n            TableComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/models/alert/alert-service-subscriber.ts\n            \n            interface\n            AlertServiceSubscriber\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/models/alert/alert.ts\n            \n            interface\n            Alert\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/models/queue/queue.ts\n            \n            class\n            Queue\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/models/table/column-information.interface.ts\n            \n            interface\n            ColumnInformationInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/models/table/table.abstract.ts\n            \n            class\n            TableAbstract\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/models/table/table.model.ts\n            \n            class\n            TableModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/services/alert/alert.service.ts\n            \n            injectable\n            AlertService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/lib/services/theme/theme.service.ts\n            \n            injectable\n            ThemeService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.1.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^12.0.1\n        \n            @angular/core : ^12.0.1\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSbElement\nThis library was generated with Angular CLI version 12.0.1. It is a component library constructed around the SCSS library Sb-Theming and supports Angular Schematics.\nInstallation\nAngular Schematics\nFor the automatic and way simpler installation, you can use angular schematics\nng add sb-elementAnd that's it, angular will take care of the rest and install the necessary packages and update your workspace.\nManual\nFor the manual Installation follow these steps:\n\nInstall packages:\nnpm install --save-dev sb-element\nnpm install --save-dev sb-theming\nInclude the theming files into your Angular CLI project. For this, follow the installation documentation here.\n\nYou are good to go!\n\n\nDocumentation\nDocumentation is not yet available for this project.  If you would like to look into the package yourself, checkout the SbElement GitHub Page. There is a TestApp application (located in the src directory), which is implementing the library.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        BaseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SbElementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BaseModule\n\n\n\ncluster_BaseModule_declarations\n\n\n\ncluster_BaseModule_exports\n\n\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_SbElementModule\n\n\n\ncluster_SbElementModule_declarations\n\n\n\ncluster_SbElementModule_exports\n\n\n\n\nClassNameInputDirective\n\nClassNameInputDirective\n\n\n\nBaseModule\n\nBaseModule\n\nBaseModule -->\n\nClassNameInputDirective->BaseModule\n\n\n\n\n\nColorInputDirective\n\nColorInputDirective\n\nBaseModule -->\n\nColorInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorBaseDirective\n\nControlValueAccessorBaseDirective\n\nBaseModule -->\n\nControlValueAccessorBaseDirective->BaseModule\n\n\n\n\n\nControlValueAccessorClassNameInputDirective\n\nControlValueAccessorClassNameInputDirective\n\nBaseModule -->\n\nControlValueAccessorClassNameInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorColorInputDirective\n\nControlValueAccessorColorInputDirective\n\nBaseModule -->\n\nControlValueAccessorColorInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorSizeColorInputDirective\n\nControlValueAccessorSizeColorInputDirective\n\nBaseModule -->\n\nControlValueAccessorSizeColorInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorSizeInputDirective\n\nControlValueAccessorSizeInputDirective\n\nBaseModule -->\n\nControlValueAccessorSizeInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorSizeThemeColorInputDirective\n\nControlValueAccessorSizeThemeColorInputDirective\n\nBaseModule -->\n\nControlValueAccessorSizeThemeColorInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorThemeColorInputDirective\n\nControlValueAccessorThemeColorInputDirective\n\nBaseModule -->\n\nControlValueAccessorThemeColorInputDirective->BaseModule\n\n\n\n\n\nEventManagerDirective\n\nEventManagerDirective\n\nBaseModule -->\n\nEventManagerDirective->BaseModule\n\n\n\n\n\nSizeColorInputDirective\n\nSizeColorInputDirective\n\nBaseModule -->\n\nSizeColorInputDirective->BaseModule\n\n\n\n\n\nSizeInputDirective\n\nSizeInputDirective\n\nBaseModule -->\n\nSizeInputDirective->BaseModule\n\n\n\n\n\nSizeThemeColorInputDirective\n\nSizeThemeColorInputDirective\n\nBaseModule -->\n\nSizeThemeColorInputDirective->BaseModule\n\n\n\n\n\nSizeThemeInputDirective\n\nSizeThemeInputDirective\n\nBaseModule -->\n\nSizeThemeInputDirective->BaseModule\n\n\n\n\n\nStateManagerDirective\n\nStateManagerDirective\n\nBaseModule -->\n\nStateManagerDirective->BaseModule\n\n\n\n\n\nThemeColorInputDirective\n\nThemeColorInputDirective\n\nBaseModule -->\n\nThemeColorInputDirective->BaseModule\n\n\n\n\n\nThemeInputDirective\n\nThemeInputDirective\n\nBaseModule -->\n\nThemeInputDirective->BaseModule\n\n\n\n\n\nClassNameInputDirective \n\nClassNameInputDirective \n\nClassNameInputDirective  -->\n\nBaseModule->ClassNameInputDirective \n\n\n\n\n\nColorInputDirective \n\nColorInputDirective \n\nColorInputDirective  -->\n\nBaseModule->ColorInputDirective \n\n\n\n\n\nControlValueAccessorBaseDirective \n\nControlValueAccessorBaseDirective \n\nControlValueAccessorBaseDirective  -->\n\nBaseModule->ControlValueAccessorBaseDirective \n\n\n\n\n\nControlValueAccessorClassNameInputDirective \n\nControlValueAccessorClassNameInputDirective \n\nControlValueAccessorClassNameInputDirective  -->\n\nBaseModule->ControlValueAccessorClassNameInputDirective \n\n\n\n\n\nControlValueAccessorColorInputDirective \n\nControlValueAccessorColorInputDirective \n\nControlValueAccessorColorInputDirective  -->\n\nBaseModule->ControlValueAccessorColorInputDirective \n\n\n\n\n\nControlValueAccessorSizeColorInputDirective \n\nControlValueAccessorSizeColorInputDirective \n\nControlValueAccessorSizeColorInputDirective  -->\n\nBaseModule->ControlValueAccessorSizeColorInputDirective \n\n\n\n\n\nControlValueAccessorSizeInputDirective \n\nControlValueAccessorSizeInputDirective \n\nControlValueAccessorSizeInputDirective  -->\n\nBaseModule->ControlValueAccessorSizeInputDirective \n\n\n\n\n\nControlValueAccessorSizeThemeColorInputDirective \n\nControlValueAccessorSizeThemeColorInputDirective \n\nControlValueAccessorSizeThemeColorInputDirective  -->\n\nBaseModule->ControlValueAccessorSizeThemeColorInputDirective \n\n\n\n\n\nControlValueAccessorThemeColorInputDirective \n\nControlValueAccessorThemeColorInputDirective \n\nControlValueAccessorThemeColorInputDirective  -->\n\nBaseModule->ControlValueAccessorThemeColorInputDirective \n\n\n\n\n\nSizeColorInputDirective \n\nSizeColorInputDirective \n\nSizeColorInputDirective  -->\n\nBaseModule->SizeColorInputDirective \n\n\n\n\n\nSizeInputDirective \n\nSizeInputDirective \n\nSizeInputDirective  -->\n\nBaseModule->SizeInputDirective \n\n\n\n\n\nSizeThemeColorInputDirective \n\nSizeThemeColorInputDirective \n\nSizeThemeColorInputDirective  -->\n\nBaseModule->SizeThemeColorInputDirective \n\n\n\n\n\nSizeThemeInputDirective \n\nSizeThemeInputDirective \n\nSizeThemeInputDirective  -->\n\nBaseModule->SizeThemeInputDirective \n\n\n\n\n\nThemeColorInputDirective \n\nThemeColorInputDirective \n\nThemeColorInputDirective  -->\n\nBaseModule->ThemeColorInputDirective \n\n\n\n\n\nThemeInputDirective \n\nThemeInputDirective \n\nThemeInputDirective  -->\n\nBaseModule->ThemeInputDirective \n\n\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nBaseModule->FormModule\n\n\n\n\n\nSbElementModule\n\nSbElementModule\n\nSbElementModule -->\n\nBaseModule->SbElementModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nFormModule -->\n\nButtonComponent->FormModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nFormModule -->\n\nCheckboxComponent->FormModule\n\n\n\n\n\nCheckboxGroupComponent\n\nCheckboxGroupComponent\n\nFormModule -->\n\nCheckboxGroupComponent->FormModule\n\n\n\n\n\nFileInputComponent\n\nFileInputComponent\n\nFormModule -->\n\nFileInputComponent->FormModule\n\n\n\n\n\nFormGroupComponent\n\nFormGroupComponent\n\nFormModule -->\n\nFormGroupComponent->FormModule\n\n\n\n\n\nIconButtonComponent\n\nIconButtonComponent\n\nFormModule -->\n\nIconButtonComponent->FormModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nFormModule -->\n\nIconComponent->FormModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nFormModule -->\n\nInputComponent->FormModule\n\n\n\n\n\nRadioButtonComponent\n\nRadioButtonComponent\n\nFormModule -->\n\nRadioButtonComponent->FormModule\n\n\n\n\n\nRadioButtonGroupComponent\n\nRadioButtonGroupComponent\n\nFormModule -->\n\nRadioButtonGroupComponent->FormModule\n\n\n\n\n\nSelectButtonComponent\n\nSelectButtonComponent\n\nFormModule -->\n\nSelectButtonComponent->FormModule\n\n\n\n\n\nSelectionOptionsDirective\n\nSelectionOptionsDirective\n\nFormModule -->\n\nSelectionOptionsDirective->FormModule\n\n\n\n\n\nSliderComponent\n\nSliderComponent\n\nFormModule -->\n\nSliderComponent->FormModule\n\n\n\n\n\nToggleSwitchComponent\n\nToggleSwitchComponent\n\nFormModule -->\n\nToggleSwitchComponent->FormModule\n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nFormModule->ButtonComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nFormModule->CheckboxComponent \n\n\n\n\n\nCheckboxGroupComponent \n\nCheckboxGroupComponent \n\nCheckboxGroupComponent  -->\n\nFormModule->CheckboxGroupComponent \n\n\n\n\n\nFileInputComponent \n\nFileInputComponent \n\nFileInputComponent  -->\n\nFormModule->FileInputComponent \n\n\n\n\n\nFormGroupComponent \n\nFormGroupComponent \n\nFormGroupComponent  -->\n\nFormModule->FormGroupComponent \n\n\n\n\n\nIconButtonComponent \n\nIconButtonComponent \n\nIconButtonComponent  -->\n\nFormModule->IconButtonComponent \n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nFormModule->IconComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nFormModule->InputComponent \n\n\n\n\n\nRadioButtonComponent \n\nRadioButtonComponent \n\nRadioButtonComponent  -->\n\nFormModule->RadioButtonComponent \n\n\n\n\n\nRadioButtonGroupComponent \n\nRadioButtonGroupComponent \n\nRadioButtonGroupComponent  -->\n\nFormModule->RadioButtonGroupComponent \n\n\n\n\n\nSelectButtonComponent \n\nSelectButtonComponent \n\nSelectButtonComponent  -->\n\nFormModule->SelectButtonComponent \n\n\n\n\n\nSliderComponent \n\nSliderComponent \n\nSliderComponent  -->\n\nFormModule->SliderComponent \n\n\n\n\n\nToggleSwitchComponent \n\nToggleSwitchComponent \n\nToggleSwitchComponent  -->\n\nFormModule->ToggleSwitchComponent \n\n\n\nSbElementModule -->\n\nFormModule->SbElementModule\n\n\n\n\n\nAlertBoxComponent\n\nAlertBoxComponent\n\nSbElementModule -->\n\nAlertBoxComponent->SbElementModule\n\n\n\n\n\nAlertComponent\n\nAlertComponent\n\nSbElementModule -->\n\nAlertComponent->SbElementModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nSbElementModule -->\n\nCardComponent->SbElementModule\n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nSbElementModule -->\n\nContainerComponent->SbElementModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nSbElementModule -->\n\nTableComponent->SbElementModule\n\n\n\n\n\nAlertBoxComponent \n\nAlertBoxComponent \n\nAlertBoxComponent  -->\n\nSbElementModule->AlertBoxComponent \n\n\n\n\n\nAlertComponent \n\nAlertComponent \n\nAlertComponent  -->\n\nSbElementModule->AlertComponent \n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nSbElementModule->CardComponent \n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nSbElementModule->ContainerComponent \n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nSbElementModule->FormModule \n\n\n\n\n\nTableComponent \n\nTableComponent \n\nTableComponent  -->\n\nSbElementModule->TableComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    18 Components\n                \n            \n        \n        \n            \n                \n                    \n                    18 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

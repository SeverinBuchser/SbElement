var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Alert.html",[0,1.472,1,0.941]],["body/interfaces/Alert.html",[0,2.711,1,1.928,2,3.023,3,0.211,4,0.211,5,0.185,6,4.595,7,3.023,8,5.327,9,4.595,10,3.023,11,4.114,12,4.985,13,4.595,14,3.228,15,5.327,16,0.266,17,0.738,18,1.432,19,5.297,20,2.442,21,0.784,22,0.383,23,0.017,24,0.211,25,0.012,26,0.014,27,0.012]],["title/components/AlertBoxComponent.html",[28,0.383,29,0.983]],["body/components/AlertBoxComponent.html",[1,1.626,3,0.116,4,0.116,5,0.149,16,0.146,17,0.494,18,0.558,21,0.438,22,0.369,23,0.017,24,0.116,25,0.006,26,0.009,27,0.006,28,0.52,29,1.473,30,1.175,31,0.91,32,0.91,33,0.91,34,5.988,35,5.361,36,2.526,37,0.523,38,1.41,39,0.396,40,1.059,41,2.258,42,2.36,43,5.651,44,1.341,45,4.314,46,0.678,47,6.516,48,1.572,49,4.052,50,4.052,51,1.741,52,0.494,53,1.18,54,0.861,55,5.122,56,4.419,57,4.419,58,1.402,59,2.928,60,2.215,61,0.528,62,4.314,63,0.558,64,0.342,65,1.096,66,2.653,67,0.661,68,0.504,69,2.491,70,2.928,71,2.025,72,2.928,73,2.928,74,2.928,75,0.297,76,0.679,77,2.928,78,2.928,79,2.928,80,0.367,81,1.662,82,1.077,83,0.279,84,1.143,85,1.397,86,1.143,87,0.798,88,0.533,89,0.116,90,2.928,91,1.775,92,1.775,93,1.563,94,2.928,95,1.775,96,1.775,97,0.646,98,0.669,99,2.928,100,1.906,101,1.906,102,2.928,103,2.928,104,2.262,105,0.335,106,2.928,107,2.928,108,2.928,109,2.928,110,2.928,111,2.928,112,0.763,113,1.341,114,1.228,115,0.073,116,1.756,117,0.91,118,0.91,119,0.763,120,0.91,121,0.763,122,1.756,123,0.763,124,0.91,125,0.763,126,0.91,127,0.763,128,0.91,129,1.592,130,0.763,131,0.91,132,0.763,133,1.341,134,0.763,135,0.833,136,0.763,137,0.91,138,0.763,139,0.871,140,0.763,141,0.91,142,0.763,143,0.763,144,1.283,145,0.763,146,0.833,147,0.763,148,0.871,149,0.763,150,0.91,151,0.763,152,0.91,153,0.763,154,0.871,155,0.91,156,0.355,157,0.533,158,2.302,159,0.731,160,0.699,161,0.584,162,0.731,163,0.731,164,0.731,165,0.699,166,0.731,167,0.699,168,0.731,169,0.731,170,0.731,171,0.731,172,0.699,173,0.731,174,0.699,175,0.91]],["title/components/AlertComponent.html",[28,0.383,119,0.983]],["body/components/AlertComponent.html",[1,1.818,3,0.097,4,0.097,5,0.131,10,3.341,14,2.784,16,0.122,17,0.431,18,0.466,19,3.928,21,0.466,22,0.378,23,0.017,24,0.097,25,0.005,26,0.008,27,0.005,28,0.466,29,0.638,30,1.026,31,0.76,32,0.76,33,0.76,37,0.456,38,1.287,39,0.331,40,1.045,41,2.209,42,2.309,44,1.171,46,0.69,48,1.867,51,1.562,52,0.431,53,1.078,54,0.752,56,3.964,57,3.964,58,1.224,60,2.084,61,0.56,63,0.984,64,0.371,65,0.939,66,2.192,67,0.642,68,0.489,69,1.711,71,1.732,75,0.642,76,0.593,80,0.421,82,0.984,83,0.233,84,0.955,85,1.167,86,0.955,87,0.666,88,0.445,89,0.097,93,1.306,97,0.564,98,0.559,105,0.759,112,0.638,113,1.171,114,1.072,115,0.061,116,1.604,117,0.76,118,0.76,119,1.345,120,0.76,121,0.638,122,1.604,123,0.638,124,0.76,125,0.638,126,0.76,127,0.638,128,0.76,129,1.428,130,0.638,131,0.76,132,0.638,133,1.171,134,0.638,135,0.696,136,0.638,137,0.76,138,0.638,139,0.728,140,0.638,141,0.76,142,0.638,143,0.638,144,1.12,145,0.638,146,0.696,147,0.638,148,0.728,149,0.638,150,0.76,151,0.638,152,0.76,153,0.638,154,0.728,155,0.76,156,0.296,157,0.445,158,2.236,159,0.61,160,0.584,161,0.488,162,0.61,163,0.61,164,0.61,165,0.584,166,0.61,167,0.584,168,0.61,169,0.61,170,0.61,171,0.61,172,0.584,173,0.61,174,0.584,175,0.76,176,2.111,177,2.452,178,3.768,179,4.594,180,4.594,181,4.594,182,3.548,183,5.191,184,5.16,185,5.16,186,5.16,187,3.768,188,3.768,189,5.16,190,4.594,191,1.621,192,2.111,193,3.768,194,2.447,195,2.447,196,3.686,197,3.768,198,2.447,199,3.25,200,2.447,201,4.564,202,2.447,203,2.447,204,2.447,205,2.447,206,3.768,207,2.447,208,3.768,209,2.447,210,3.768,211,2.447,212,1.811,213,2.447,214,3.768,215,2.447,216,3.768,217,2.447,218,2.447,219,2.447,220,2.447,221,3.25,222,1.593,223,1.89,224,2.111,225,2.447,226,2.447,227,2.447,228,2.447,229,2.447,230,2.447,231,4.594,232,1.306,233,2.447,234,1.108,235,2.447,236,3.768,237,4.452,238,3.768,239,2.447,240,2.447,241,2.447,242,0.832,243,2.447,244,2.447,245,2.111,246,2.447,247,2.447,248,2.447,249,2.447]],["title/injectables/AlertService.html",[10,2.14,250,2.285]],["body/injectables/AlertService.html",[0,1.098,1,1.966,3,0.166,4,0.067,5,0.059,7,3.262,9,2.427,10,1.596,11,3.863,12,4.575,13,5.931,14,3.358,16,0.085,17,0.322,18,1.32,19,5.099,20,2.456,21,0.751,22,0.335,23,0.017,24,0.067,25,0.004,26,0.006,27,0.004,28,0.63,46,0.66,48,1.628,52,0.678,61,0.48,63,1.184,64,0.335,65,1.078,66,1.048,67,0.583,68,0.444,69,1.56,71,0.528,75,0.583,76,0.788,80,0.3,83,0.162,89,0.067,105,0.194,182,4.967,183,3.525,201,3.255,221,2.427,222,4.247,223,4.693,242,2.013,250,1.704,251,1.311,252,1.465,253,3.234,254,2.427,255,2.813,256,2.813,257,5.924,258,6.21,259,4.187,260,4.187,261,4.187,262,2.813,263,4.187,264,2.813,265,2.951,266,2.813,267,2.427,268,2.427,269,2.813,270,2.813,271,4.658,272,2.813,273,2.813,274,2.813,275,2.172,276,4.315,277,6.816,278,2.813,279,2.813,280,2.813,281,2.813,282,2.813,283,4.377,284,2.427,285,4.187,286,2.427,287,1.831,288,4.46,289,2.427,290,5.459,291,2.813,292,2.813,293,2.813,294,2.813,295,5.002,296,3.612,297,2.427,298,3.863,299,2.813,300,2.427,301,2.427,302,3.106,303,4.187,304,5.747,305,2.339,306,4.64,307,4.187,308,4.64,309,5.296,310,2.813,311,1.698,312,5.357,313,6.21,314,2.813,315,3.612,316,3.316,317,1.913,318,2.813,319,1.698,320,2.813,321,1.698,322,2.813,323,1.698,324,2.813,325,1.698,326,2.813,327,2.813,328,2.813,329,2.813,330,1.698,331,2.427,332,2.813,333,1.698,334,2.813,335,1.698,336,1.698,337,2.813,338,4.187,339,4.187,340,4.187,341,4.187,342,2.427,343,1.802,344,5.541,345,2.813,346,2.427,347,2.813,348,2.813,349,2.813,350,1.982,351,2.813,352,2.813,353,1.698,354,2.813,355,1.698,356,2.813,357,1.698,358,1.698,359,1.698,360,4.882,361,2.427,362,5.541,363,4.64,364,1.197,365,1.465,366,1.698,367,1.465,368,1.311,369,2.813,370,1.698,371,1.698,372,1.698,373,5.459,374,4.64,375,1.698,376,2.813,377,3.601,378,1.698,379,1.698,380,4.187,381,1.698,382,1.698,383,1.465,384,1.465,385,1.698,386,1.698]],["title/interfaces/AlertServiceSubscriber.html",[0,1.472,14,2.285]],["body/interfaces/AlertServiceSubscriber.html",[0,2.746,1,1.972,2,2.552,3,0.178,4,0.178,5,0.156,7,3.294,10,4.294,12,4.483,14,3.518,16,0.224,22,0.248,23,0.017,24,0.178,25,0.01,26,0.013,27,0.01,52,0.664,61,0.348,63,0.857,64,0.272,65,0.818,75,0.456,80,0.322,105,0.664,182,4.483,199,5.008,201,4.422,222,3.778,223,5.973,245,5.008,271,5.076,276,5.008,290,5.008,296,5.008,315,5.008,342,5.008,360,5.234,361,5.008,383,3.879,384,3.879,387,5.008,388,3.879,389,5.805,390,5.008,391,6.793,392,5.805,393,5.805,394,5.805,395,6.793,396,5.805,397,5.805,398,4.496,399,5.805,400,5.805,401,5.805,402,5.805]],["title/modules/BaseModule.html",[403,2.14,404,2.285]],["body/modules/BaseModule.html",[3,0.12,4,0.12,5,0.105,18,1.254,20,1.693,23,0.017,24,0.12,25,0.007,26,0.01,27,0.007,38,1.787,64,0.267,68,0.572,80,0.538,83,0.287,86,2.238,87,1.561,88,1.327,89,0.175,112,0.786,157,1.304,159,1.787,160,1.71,161,1.43,162,1.787,163,1.787,164,1.787,165,1.71,166,1.787,167,1.52,169,1.787,170,1.787,171,1.787,172,1.52,173,1.787,174,1.71,287,1.964,403,1.712,404,4.806,405,1.828,406,1.828,407,3.672,408,2.126,409,1.236,410,3.672,411,2.603,412,2.603,413,2.603,414,3.107,415,2.126,416,3.017,417,3.405,418,3.804,419,2.33,420,2.479,421,2.33,422,2.672,423,3.903,424,2.126,425,2.603,426,2.126,427,2.669,428,2.372,429,2.33,430,3.405,431,2.33,432,2.33]],["title/components/ButtonComponent.html",[28,0.383,121,0.983]],["body/components/ButtonComponent.html",[1,0.39,3,0.062,4,0.062,5,0.091,7,2.894,16,0.078,17,0.3,18,0.298,21,0.403,22,0.376,23,0.017,24,0.062,25,0.003,26,0.006,27,0.003,28,0.734,29,0.407,30,0.715,31,0.486,32,0.486,33,0.486,37,0.318,38,1.335,39,0.211,40,1,41,2.056,42,2.149,44,0.816,46,0.547,48,1.509,49,4.412,50,4.266,51,1.153,52,0.3,53,0.925,54,1.068,58,0.853,60,1.819,61,0.512,63,0.914,64,0.337,65,1.046,66,2.712,67,0.487,68,0.522,69,1.993,71,2.037,75,0.565,76,0.534,80,0.243,81,3.354,82,1.198,83,0.149,84,0.61,85,0.745,86,0.61,87,0.426,88,0.284,89,0.274,91,0.947,92,0.947,93,0.834,95,2.056,96,0.947,97,0.942,98,0.357,100,1.017,101,1.017,105,0.3,112,0.407,113,2.012,114,1.842,115,0.039,116,1.235,117,0.486,118,0.486,119,0.407,120,0.486,121,1.25,122,1.235,123,0.407,124,0.486,125,0.407,126,0.486,127,0.407,128,0.486,129,1.054,130,0.407,131,0.486,132,0.407,133,0.816,134,0.407,135,1.261,136,0.407,137,0.486,138,0.407,139,0.465,140,0.407,141,0.486,142,0.407,143,0.407,144,0.78,145,0.407,146,2.033,147,0.407,148,0.465,149,0.407,150,0.486,151,0.407,152,0.486,153,0.407,154,0.465,155,0.486,156,0.189,157,0.284,158,2.037,159,0.39,160,0.373,161,0.312,162,0.39,163,0.39,164,0.39,165,0.373,166,0.39,167,0.373,168,0.39,169,0.39,170,0.39,171,0.39,172,0.373,173,0.39,174,0.373,175,0.486,191,1.129,242,2.136,250,1.59,253,3.069,265,3.381,267,4.96,271,1.849,283,4.562,289,2.264,312,2.264,317,1.427,331,2.264,343,2.994,350,1.101,360,1.101,368,2.027,420,0.892,433,1.348,434,2.624,435,4.797,436,3.381,437,4.797,438,3.429,439,2.624,440,2.624,441,6.3,442,3.974,443,5.351,444,2.624,445,2.624,446,2.624,447,2.027,448,2.624,449,1.562,450,2.624,451,2.624,452,3.429,453,3.974,454,5.75,455,3.429,456,4.797,457,4.139,458,2.624,459,1.849,460,2.62,461,2.264,462,4.718,463,5.351,464,5.099,465,5.351,466,1.562,467,2.624,468,5.422,469,2.624,470,2.624,471,2.624,472,6.003,473,2.624,474,6.383,475,2.624,476,2.624,477,1.562,478,2.624,479,1.562,480,3.974,481,2.624,482,2.624,483,2.624,484,4.139,485,2.624,486,1.562,487,2.264,488,2.624,489,3.705,490,2.624,491,2.624,492,1.562,493,4.797,494,1.562,495,2.624,496,1.562,497,1.562,498,1.562,499,1.562,500,1.562,501,1.207,502,1.562,503,1.207,504,1.562,505,2.624,506,3.974,507,1.562,508,2.927,509,2.624,510,2.624,511,2.264,512,2.624,513,2.624,514,1.562,515,2.624,516,1.562,517,3.392,518,1.207,519,2.027,520,3.392,521,1.562,522,1.348,523,1.562,524,1.562,525,1.562,526,1.562,527,1.207,528,1.562,529,1.562,530,1.562]],["title/components/CardComponent.html",[28,0.383,123,0.983]],["body/components/CardComponent.html",[1,0.85,3,0.135,4,0.135,5,0.167,16,0.17,17,0.55,21,0.488,22,0.334,23,0.017,24,0.135,25,0.007,26,0.01,27,0.007,28,0.566,29,0.888,30,1.31,31,1.059,32,1.059,33,1.059,37,0.583,38,0.85,39,0.46,40,1.069,41,2.295,42,2.398,44,1.495,46,0.632,48,1.655,51,1.896,52,0.55,53,1.266,58,1.563,60,2.318,61,0.494,63,0.649,64,0.367,65,1.103,66,2.258,67,0.566,68,0.431,69,2.258,71,1.495,75,0.346,76,0.758,80,0.399,81,1.933,83,0.324,84,1.33,85,1.625,86,1.33,87,0.928,88,0.62,89,0.135,93,1.819,97,0.721,98,0.778,105,0.39,112,0.888,113,1.495,114,1.369,115,0.085,116,1.884,117,1.059,118,1.059,119,0.888,120,1.059,121,0.888,122,1.884,123,1.58,124,1.059,125,0.888,126,1.059,127,0.888,128,1.059,129,1.734,130,0.888,131,1.059,132,0.888,133,1.495,134,0.888,135,0.969,136,0.888,137,1.059,138,0.888,139,1.013,140,0.888,141,1.059,142,0.888,143,0.888,144,1.431,145,0.888,146,0.969,147,0.888,148,1.013,149,0.888,150,1.059,151,0.888,152,1.059,153,0.888,154,1.013,155,1.059,156,0.413,157,0.62,158,2.351,159,0.85,160,0.813,161,0.68,162,0.85,163,0.85,164,0.85,165,0.813,166,0.85,167,0.813,168,0.85,169,0.85,170,0.85,171,1.512,172,0.813,173,0.85,174,0.813,175,1.059,452,5.884,531,2.939,532,6.061,533,4.811,534,6.965,535,3.406,536,4.811,537,3.406,538,3.406,539,3.406,540,3.406,541,3.406,542,3.406,543,3.406,544,3.406,545,3.406]],["title/components/CheckboxComponent.html",[28,0.383,125,0.983]],["body/components/CheckboxComponent.html",[1,0.834,3,0.132,4,0.132,5,0.164,16,0.167,17,0.543,18,0.637,20,1.086,21,0.644,22,0.304,23,0.017,24,0.132,25,0.007,26,0.01,27,0.007,28,0.56,29,0.871,30,1.293,31,1.038,32,1.038,33,1.038,37,0.575,38,0.834,39,0.451,40,1.067,41,2.29,42,2.394,44,1.475,46,0.689,51,1.876,52,0.543,53,1.255,54,0.947,61,0.491,64,0.334,67,0.56,68,0.491,71,1.475,75,0.482,76,0.747,80,0.395,82,1.052,83,0.318,87,0.91,88,0.608,89,0.132,97,0.711,98,0.763,105,0.382,112,0.871,113,1.475,114,1.35,115,0.083,116,1.868,117,1.038,118,1.038,119,0.871,120,1.038,121,0.871,122,1.868,123,0.871,124,1.038,125,1.719,126,1.038,127,0.871,128,1.973,129,1.715,130,0.871,131,1.038,132,0.871,133,1.475,134,0.871,135,0.951,136,0.871,137,1.038,138,0.871,139,0.994,140,0.871,141,1.038,142,0.871,143,0.871,144,1.411,145,0.871,146,0.951,147,0.871,148,0.994,149,0.871,150,1.038,151,0.871,152,1.038,153,0.871,154,0.994,155,1.038,156,0.405,157,0.608,158,2.345,159,0.834,160,0.798,161,0.667,162,0.834,163,0.834,164,0.834,165,1.434,166,0.834,167,0.798,168,0.834,169,0.834,170,0.834,171,0.834,172,0.798,173,0.834,174,0.798,175,1.038,317,1.411,409,1.944,420,1.136,427,1.768,428,1.245,546,2.883,547,2.392,548,2.782,549,2.392,550,2.392,551,4.746,552,4.235,553,5.238,554,3.89,555,3.341,556,3.345,557,3.341,558,3.341,559,3.341,560,3.341,561,1.438,562,2.025,563,2.876,564,3.665,565,2.883,566,2.355,567,2.883,568,2.883,569,3.341]],["title/components/CheckboxGroupComponent.html",[28,0.383,127,0.983]],["body/components/CheckboxGroupComponent.html",[1,0.834,3,0.132,4,0.132,5,0.164,16,0.167,17,0.543,21,0.688,22,0.331,23,0.017,24,0.132,25,0.007,26,0.01,27,0.007,28,0.56,29,0.871,30,1.293,31,1.038,32,1.038,33,1.038,37,0.575,38,0.834,39,0.451,40,1.067,41,2.29,42,2.394,44,1.475,46,0.628,51,1.876,52,0.543,54,0.947,61,0.51,64,0.334,67,0.61,68,0.464,71,1.475,75,0.482,80,0.43,82,1.145,83,0.318,89,0.132,112,0.871,113,1.475,114,1.35,115,0.083,116,1.868,117,1.038,118,1.038,119,0.871,120,1.038,121,0.871,122,1.868,123,0.871,124,1.038,125,0.871,126,1.038,127,1.719,128,2.108,129,1.715,130,0.871,131,1.038,132,0.871,133,1.475,134,0.871,135,0.951,136,0.871,137,1.038,138,0.871,139,0.994,140,0.871,141,1.038,142,0.871,143,0.871,144,1.411,145,0.871,146,0.951,147,0.871,148,0.994,149,0.871,150,1.038,151,0.871,152,1.038,153,0.871,154,0.994,155,1.038,156,0.405,157,0.608,158,2.345,159,0.834,160,0.798,161,0.667,162,0.834,163,0.834,164,0.834,165,0.798,166,0.834,167,0.798,168,1.499,169,0.834,170,0.834,171,0.834,172,0.798,173,0.834,174,0.798,175,1.038,212,1.542,317,1.641,409,1.944,436,2.355,547,2.392,548,2.782,549,2.392,550,2.392,552,4.235,554,3.89,556,3.345,561,1.438,563,2.876,570,5.851,571,2.355,572,4.641,573,3.665,574,3.345,575,4.235,576,4.263,577,4.263,578,3.345,579,3.341,580,3.341,581,3.341,582,3.341,583,3.341,584,3.341,585,3.089,586,3.341,587,2.883,588,2.355,589,4.746]],["title/directives/ClassNameInputDirective.html",[115,0.094,157,0.686]],["body/directives/ClassNameInputDirective.html",[3,0.183,4,0.183,5,0.16,16,0.23,17,0.675,21,0.66,22,0.325,23,0.017,24,0.183,25,0.01,26,0.013,27,0.01,39,0.623,40,0.927,46,0.691,48,1.624,51,2.212,52,0.675,53,1.433,54,1.178,61,0.548,63,0.88,64,0.446,65,0.84,67,0.599,68,0.456,75,0.599,76,1.176,80,0.33,82,1.125,83,0.439,89,0.183,97,0.884,105,0.675,115,0.147,156,0.559,157,1.074,191,2.54,242,2.212,317,1.372,343,1.986,426,5.111,590,3.655,591,1.719,592,5.615,593,6.256,594,3.842,595,4.615,596,2.202,597,4.615,598,3.981,599,3.981,600,3.981,601,5.092,602,3.981,603,3.981,604,3.981,605,3.564,606,3.981,607,3.981]],["title/directives/ColorInputDirective.html",[115,0.094,159,0.941]],["body/directives/ColorInputDirective.html",[3,0.203,4,0.203,5,0.178,16,0.256,18,1.302,21,0.64,22,0.283,23,0.017,24,0.203,25,0.011,26,0.014,27,0.011,37,0.622,39,0.693,40,0.963,46,0.679,52,0.722,53,1.488,54,1.259,61,0.488,64,0.31,67,0.521,68,0.397,75,0.521,76,0.994,80,0.452,82,1.203,83,0.489,88,0.934,89,0.25,97,0.945,98,1.172,105,0.587,115,0.157,156,0.622,157,1.148,159,1.574,212,2.05,234,2.323,305,3.18,421,5.276,590,3.443,591,1.911,594,3.34,596,2.448,608,3.616,609,1.825]],["title/classes/ColumnInformation.html",[89,0.149,610,2.14]],["body/classes/ColumnInformation.html",[3,0.231,4,0.147,5,0.128,16,0.185,17,0.584,18,1.113,21,0.776,22,0.376,23,0.017,24,0.202,25,0.008,26,0.011,27,0.008,37,0.618,46,0.718,48,1.7,52,0.584,61,0.55,63,1.113,64,0.412,65,1.062,67,0.592,68,0.54,75,0.638,80,0.265,89,0.202,97,0.556,104,3.943,105,0.755,177,2.414,191,2.197,234,1.679,242,1.984,343,2.512,610,4.222,611,4.436,612,2.864,613,4.804,614,4.115,615,6.025,616,4.545,617,5.037,618,5.105,619,5.037,620,5.838,621,3.709,622,3.709,623,3.709,624,3.709,625,3.709,626,4.146,627,6.228,628,3.709,629,5.88,630,4.404,631,4.436,632,5.88,633,3.709,634,3.709,635,3.709,636,4.115,637,3.709,638,3.709,639,2.726,640,2.614,641,2.614,642,3.2,643,3.2,644,3.2,645,3.2,646,3.2,647,3.2,648,3.2,649,3.2,650,3.2,651,3.2,652,3.2,653,3.2,654,3.2,655,3.2,656,3.2,657,3.2,658,3.2,659,3.2,660,3.2]],["title/classes/ColumnInformationDefaults.html",[89,0.149,613,2.658]],["body/classes/ColumnInformationDefaults.html",[3,0.249,4,0.17,5,0.149,16,0.214,17,0.645,18,1.199,21,0.762,22,0.347,23,0.018,24,0.223,25,0.009,26,0.012,27,0.009,37,0.52,46,0.725,48,1.406,61,0.486,64,0.38,67,0.638,68,0.56,80,0.307,89,0.223,97,0.644,104,4.352,105,0.793,177,3.668,234,1.945,242,2.137,343,1.848,610,4.174,611,4.345,612,3.318,613,4.432,614,4.432,615,5.759,616,4.093,617,3.706,619,3.706,626,3.789,627,5.98,629,5.759,630,3.706,631,3.668,632,5.759,636,3.972,639,3.358,640,3.028,641,3.028,642,3.706,643,3.706,644,3.706,645,3.706,646,3.706,647,3.706,648,3.706,649,3.706,650,3.706,651,3.706,652,3.706,653,3.706,654,3.706,655,3.706,656,3.706,657,3.706,658,3.706,659,3.706,660,3.706,661,4.296,662,4.296,663,4.296]],["title/interfaces/ColumnInformationInterface.html",[0,1.472,639,2.013]],["body/interfaces/ColumnInformationInterface.html",[0,2.573,2,3.13,3,0.219,4,0.219,5,0.191,16,0.275,17,0.754,18,1.423,21,0.799,22,0.389,23,0.017,24,0.261,25,0.012,26,0.014,27,0.012,37,0.798,64,0.452,611,3.59,614,5.261,626,4.001,639,3.519,664,4.26]],["title/interfaces/ColumnInformationOptionsInterface.html",[0,1.472,626,2.14]],["body/interfaces/ColumnInformationOptionsInterface.html",[0,2.561,2,3.106,3,0.217,4,0.217,5,0.19,16,0.273,17,0.751,18,1.42,21,0.798,22,0.387,23,0.017,24,0.26,25,0.012,26,0.014,27,0.012,37,0.663,64,0.451,65,1.376,611,3.562,614,5.25,626,3.987,639,2.922,664,4.227]],["title/components/ContainerComponent.html",[28,0.383,130,0.983]],["body/components/ContainerComponent.html",[1,0.991,3,0.157,4,0.157,5,0.185,16,0.198,17,0.612,21,0.403,22,0.219,23,0.017,24,0.157,25,0.009,26,0.012,27,0.009,28,0.614,29,1.035,30,1.457,31,1.235,32,1.235,33,1.235,37,0.648,38,0.991,39,0.537,40,1.078,41,2.327,42,2.433,44,1.663,46,0.576,51,2.056,61,0.307,64,0.366,67,0.403,68,0.307,80,0.383,83,0.378,85,1.895,86,1.551,87,1.082,88,0.723,89,0.157,112,1.035,113,1.663,114,1.522,115,0.099,116,2.011,117,1.235,118,1.235,119,1.035,120,1.235,121,1.035,122,2.011,123,1.035,124,1.235,125,1.035,126,1.235,127,1.035,128,1.235,129,1.88,130,1.687,131,1.235,132,1.035,133,1.663,134,1.035,135,1.13,136,1.035,137,1.235,138,1.035,139,1.181,140,1.035,141,1.235,142,1.035,143,1.035,144,1.591,145,1.035,146,1.13,147,1.035,148,1.181,149,1.035,150,1.235,151,1.035,152,1.235,153,1.035,154,1.181,155,1.235,156,0.481,157,0.723,158,2.395,159,0.991,160,0.948,161,0.793,162,0.991,163,0.991,164,0.991,165,0.948,166,0.991,167,0.948,168,0.991,169,0.991,170,0.991,171,1.614,172,0.948,173,0.991,174,0.948,175,1.235,665,3.427,666,6.471,667,5.349,668,3.972]],["title/directives/ControlValueAccessorBaseDirective.html",[115,0.094,160,0.9]],["body/directives/ControlValueAccessorBaseDirective.html",[3,0.154,4,0.154,5,0.134,16,0.193,17,0.602,22,0.353,23,0.017,24,0.154,25,0.008,26,0.011,27,0.008,37,0.47,39,0.524,40,0.866,46,0.658,48,1.723,52,0.602,61,0.546,63,1.221,64,0.388,65,1.166,66,2.573,68,0.608,69,2.226,71,1.857,75,0.68,80,0.428,83,0.369,89,0.154,105,0.444,115,0.131,156,0.47,160,1.257,167,1.257,177,3.426,191,2.265,212,1.26,317,2.138,343,1.669,424,5.067,430,2.996,527,2.996,561,1.669,574,3.621,575,4.516,631,4.91,669,3.43,670,3.346,671,5.975,672,5.975,673,5.264,674,5.264,675,5.264,676,5.264,677,6.508,678,5.528,679,6.408,680,3.879,681,3.879,682,5.264,683,3.879,684,5.264,685,3.879,686,3.879,687,3.879,688,3.879,689,3.879,690,3.879,691,3.879,692,3.879,693,3.879,694,5.975,695,5.975,696,3.879,697,3.879]],["title/directives/ControlValueAccessorClassNameInputDirective.html",[115,0.094,161,0.753]],["body/directives/ControlValueAccessorClassNameInputDirective.html",[3,0.165,4,0.165,5,0.144,16,0.207,17,0.631,21,0.628,22,0.304,23,0.017,24,0.165,25,0.009,26,0.012,27,0.009,37,0.503,39,0.561,40,0.89,46,0.671,48,1.543,51,2.103,52,0.631,53,1.376,54,1.1,61,0.53,63,0.792,64,0.435,65,0.756,67,0.559,68,0.597,75,0.559,76,1.15,80,0.395,82,1.051,83,0.396,89,0.285,97,0.826,105,0.631,115,0.138,156,0.503,160,1.316,161,1.1,191,2.372,242,2.103,317,1.236,343,1.788,420,2.395,423,2.358,424,2.929,425,3.585,427,2.822,428,2.625,462,2.929,591,1.548,592,5.337,593,6.08,598,3.585,599,3.585,600,3.585,601,4.756,602,3.585,603,3.585,604,3.585,605,3.209,606,3.585,607,3.585,669,3.363,698,2.943,699,2.929,700,2.929,701,4.155,702,4.155,703,4.155,704,3.585,705,4.155,706,4.155,707,3.585,708,4.155,709,4.155,710,3.585]],["title/directives/ControlValueAccessorColorInputDirective.html",[115,0.094,162,0.941]],["body/directives/ControlValueAccessorColorInputDirective.html",[3,0.196,4,0.196,5,0.171,16,0.246,18,1.407,21,0.625,22,0.272,23,0.017,24,0.196,25,0.011,26,0.013,27,0.011,37,0.599,39,0.667,40,0.95,46,0.67,52,0.705,53,1.469,54,1.23,61,0.476,64,0.299,67,0.501,68,0.585,75,0.501,76,0.971,80,0.441,82,1.175,83,0.47,88,0.899,89,0.244,97,0.923,98,1.128,105,0.565,115,0.154,156,0.599,161,1.23,162,1.537,212,2.003,234,2.237,305,3.106,420,2.283,423,2.804,427,2.788,428,2.502,591,1.84,594,3.216,596,2.357,608,3.482,609,1.757,669,3.205]],["title/directives/ControlValueAccessorSizeColorInputDirective.html",[115,0.094,163,0.941]],["body/directives/ControlValueAccessorSizeColorInputDirective.html",[3,0.182,4,0.182,5,0.159,16,0.229,18,1.404,20,2.393,21,0.695,22,0.324,23,0.017,24,0.182,25,0.01,26,0.013,27,0.01,37,0.556,39,0.62,40,0.925,46,0.674,52,0.673,53,1.43,54,1.174,61,0.502,64,0.278,67,0.597,68,0.591,75,0.466,76,0.927,80,0.421,82,1.238,83,0.437,88,0.835,89,0.233,97,0.882,98,1.049,105,0.525,115,0.147,156,0.556,161,1.174,163,1.468,212,2.225,232,2.452,234,2.079,305,2.966,316,3.142,420,2.327,423,2.606,427,2.806,428,2.551,591,1.71,596,2.191,608,3.236,609,2.093,669,3.267,698,2.452,711,3.962,712,2.606]],["title/directives/ControlValueAccessorSizeInputDirective.html",[115,0.094,164,0.941]],["body/directives/ControlValueAccessorSizeInputDirective.html",[3,0.196,4,0.196,5,0.171,16,0.246,20,2.398,21,0.625,22,0.272,23,0.017,24,0.196,25,0.011,26,0.013,27,0.011,37,0.599,39,0.667,40,0.95,46,0.67,52,0.705,53,1.469,54,1.23,61,0.476,64,0.299,67,0.501,68,0.585,75,0.501,76,0.971,80,0.441,82,1.175,83,0.47,88,0.899,89,0.244,97,0.923,98,1.128,105,0.565,115,0.154,156,0.599,161,1.23,164,1.537,212,2.003,232,2.638,316,3.29,420,2.283,423,2.804,427,2.788,428,2.502,591,1.84,594,3.216,596,2.357,609,1.757,669,3.205,712,2.804]],["title/directives/ControlValueAccessorSizeThemeColorInputDirective.html",[115,0.094,165,0.9]],["body/directives/ControlValueAccessorSizeThemeColorInputDirective.html",[3,0.162,4,0.162,5,0.142,16,0.204,17,0.625,18,1.405,20,2.395,21,0.712,22,0.361,23,0.017,24,0.162,25,0.009,26,0.012,27,0.009,37,0.497,39,0.554,40,0.885,46,0.693,48,1.023,52,0.625,53,1.369,54,1.091,58,1.776,60,2.386,61,0.528,63,0.782,64,0.331,65,0.746,67,0.554,68,0.593,75,0.416,76,0.861,80,0.44,82,1.171,83,0.39,84,1.601,87,2.008,88,0.746,89,0.216,97,0.819,98,0.936,105,0.469,115,0.136,156,0.497,161,1.091,165,1.304,212,2.13,232,2.189,234,2.474,305,2.754,316,2.917,420,2.386,423,2.327,427,2.833,428,2.615,591,1.527,609,1.944,669,3.35,698,2.189,700,2.89,712,2.327,713,2.485,714,4.714,715,3.538,716,2.189,717,3.311,718,2.485,719,2.485]],["title/directives/ControlValueAccessorThemeColorInputDirective.html",[115,0.094,166,0.941]],["body/directives/ControlValueAccessorThemeColorInputDirective.html",[3,0.174,4,0.174,5,0.152,16,0.219,17,0.655,18,1.409,21,0.683,22,0.351,23,0.017,24,0.174,25,0.01,26,0.012,27,0.01,37,0.533,39,0.594,40,0.91,46,0.694,48,1.097,52,0.655,53,1.407,54,1.142,58,1.859,60,2.433,61,0.521,63,0.838,64,0.346,65,0.8,67,0.446,68,0.59,75,0.446,76,0.901,80,0.455,82,1.091,83,0.419,84,1.717,87,2.013,88,0.8,89,0.227,97,0.857,98,1.004,105,0.503,115,0.143,156,0.533,161,1.142,166,1.427,212,1.859,234,2.59,305,2.884,420,2.374,423,2.495,427,2.828,428,2.601,591,1.638,596,2.098,609,1.564,669,3.332,698,3.055,699,3.099,713,2.665,716,2.348,717,3.467,718,2.665,719,2.665]],["title/classes/Csv.html",[89,0.149,720,2.658]],["body/classes/Csv.html",[3,0.115,4,0.115,5,0.225,16,0.332,17,0.489,21,0.741,22,0.399,23,0.018,24,0.169,25,0.006,26,0.009,27,0.006,46,0.704,48,1.854,52,0.489,58,1.39,61,0.56,63,1.297,64,0.412,65,1.238,67,0.516,68,0.393,75,0.676,76,1.157,89,0.115,97,0.434,105,0.763,183,3.586,196,3.862,201,2.784,237,2.498,242,1.729,317,1.982,364,4.226,616,4.979,720,4.423,721,2.236,722,4.63,723,6.658,724,5.087,725,5.619,726,5.087,727,5.087,728,5.087,729,4.277,730,5.087,731,4.277,732,5.173,733,5.619,734,4.277,735,2.895,736,4.277,737,2.895,738,6.805,739,4.277,740,5.619,741,2.895,742,2.895,743,2.895,744,2.895,745,4.848,746,2.895,747,2.895,748,2.895,749,4.848,750,3.69,751,2.895,752,2.895,753,2.895,754,4.277,755,2.895,756,2.895,757,2.895,758,4.277,759,4.848,760,4.277,761,2.895,762,4.277,763,2.895,764,4.277,765,2.895,766,2.236,767,4.277,768,2.895,769,2.895,770,2.498,771,2.498,772,2.498,773,4.277,774,4.277,775,2.895,776,2.895,777,2.895,778,2.895,779,2.895,780,2.895,781,2.895,782,2.895,783,2.895,784,2.895,785,2.895,786,2.895,787,2.895,788,2.895,789,2.895,790,2.895,791,2.895,792,2.895,793,2.895,794,2.895,795,2.895,796,4.277,797,4.277,798,2.895,799,2.895,800,2.895,801,4.277,802,4.277,803,2.895,804,2.895,805,2.895,806,2.895,807,2.895,808,2.895]],["title/directives/EventManagerDirective.html",[115,0.094,167,0.9]],["body/directives/EventManagerDirective.html",[3,0.15,4,0.15,5,0.131,16,0.189,17,0.593,22,0.394,23,0.017,24,0.15,25,0.008,26,0.011,27,0.008,37,0.459,39,0.512,40,0.857,46,0.724,52,0.593,61,0.567,63,1.125,64,0.357,65,1.074,67,0.526,68,0.587,75,0.674,80,0.371,83,0.361,89,0.15,115,0.129,156,0.459,167,1.237,172,1.237,242,2.007,317,2.22,390,3.269,430,2.927,431,5.72,472,3.269,574,4.395,631,4.131,669,3.534,677,5.475,678,4.47,710,5.093,749,5.475,750,4.47,809,2.927,810,5.904,811,5.904,812,6.346,813,6.346,814,5.181,815,5.181,816,5.181,817,5.904,818,5.904,819,7.336,820,3.269,821,3.269,822,3.789,823,3.789,824,5.181,825,3.789,826,3.789,827,5.181,828,3.789,829,5.181,830,3.789,831,3.269,832,3.789,833,6.346,834,5.181,835,3.789,836,3.789,837,5.181,838,3.789,839,3.789,840,3.789,841,3.789,842,3.789,843,3.789,844,3.789]],["title/components/FileInputComponent.html",[28,0.383,132,0.983]],["body/components/FileInputComponent.html",[1,0.654,3,0.104,4,0.104,5,0.252,10,3.433,16,0.131,17,0.455,18,0.5,19,4.052,20,0.852,21,0.638,22,0.372,23,0.017,24,0.104,25,0.006,26,0.009,27,0.006,28,0.487,29,0.684,30,1.082,31,0.815,32,0.815,33,0.815,37,0.481,38,0.654,39,0.354,40,1.05,41,2.229,42,2.33,44,1.235,46,0.701,48,1.568,49,3.922,50,3.922,51,1.63,52,0.455,53,1.002,54,0.793,58,1.291,60,2.136,61,0.531,63,0.914,64,0.366,65,1.101,66,2.253,67,0.638,68,0.512,69,1.993,71,1.663,75,0.487,76,0.413,80,0.412,81,1.489,82,1.263,83,0.25,84,1.024,87,0.714,88,0.477,89,0.104,91,1.59,92,1.59,93,1.401,95,1.59,96,1.59,97,0.595,98,0.599,100,1.708,101,1.708,105,0.3,112,0.684,113,1.235,114,1.131,115,0.065,116,1.663,117,0.815,118,0.815,119,0.684,120,0.815,121,0.684,122,1.663,123,0.684,124,0.815,125,0.684,126,0.815,127,0.684,128,0.815,129,1.491,130,0.684,131,0.815,132,1.577,133,1.235,134,0.684,135,0.747,136,0.684,137,0.815,138,0.684,139,0.78,140,0.684,141,0.815,142,0.684,143,0.684,144,1.182,145,0.684,146,0.747,147,0.684,148,0.78,149,0.684,150,0.815,151,0.684,152,0.815,153,0.684,154,0.78,155,0.815,156,0.318,157,0.477,158,2.263,159,0.654,160,0.626,161,0.524,162,0.654,163,0.654,164,0.654,165,1.277,166,0.654,167,0.626,168,0.654,169,0.654,170,0.654,171,0.654,172,0.626,173,0.654,174,0.626,175,0.815,192,2.263,196,2.255,212,1.739,224,2.263,317,0.78,364,2.801,409,1.628,420,0.892,427,1.48,428,0.977,547,2.003,548,2.418,549,2.003,550,2.003,561,1.129,562,1.59,616,3.122,845,6.003,846,5.374,847,2.263,848,3.428,849,4.797,850,3.974,851,5.351,852,4.96,853,3.974,854,2.623,855,2.623,856,3.974,857,2.623,858,2.623,859,3.974,860,4.797,861,2.623,862,3.428,863,3.974,864,2.623,865,4.797,866,2.623,867,2.623,868,2.623,869,2.623,870,2.623,871,2.623,872,2.623,873,3.974,874,2.623,875,2.623,876,2.623,877,2.623,878,1.708,879,2.623,880,2.623]],["title/components/FormGroupComponent.html",[28,0.383,134,0.983]],["body/components/FormGroupComponent.html",[1,0.868,3,0.138,4,0.138,5,0.169,16,0.173,17,0.559,18,0.663,21,0.654,22,0.311,23,0.017,24,0.138,25,0.008,26,0.011,27,0.008,28,0.572,29,0.907,30,1.33,31,1.081,32,1.081,33,1.081,37,0.591,38,1.526,39,0.47,40,1.07,41,2.299,42,2.403,44,1.517,46,0.667,51,1.917,52,0.559,53,1.277,54,0.974,61,0.498,64,0.341,66,1.296,67,0.572,68,0.436,75,0.353,76,0.769,80,0.349,82,1.075,83,0.331,85,1.66,86,1.358,87,0.947,88,0.633,89,0.138,97,0.732,98,0.794,105,0.559,112,0.907,113,1.517,114,1.389,115,0.087,116,1.901,117,1.081,118,1.081,119,0.907,120,1.081,121,0.907,122,1.901,123,0.907,124,1.081,125,0.907,126,1.081,127,0.907,128,1.081,129,1.753,130,0.907,131,1.081,132,0.907,133,1.517,134,1.595,135,1.952,136,0.907,137,1.081,138,0.907,139,1.034,140,0.907,141,1.081,142,0.907,143,0.907,144,1.452,145,0.907,146,0.99,147,0.907,148,1.034,149,0.907,150,1.081,151,0.907,152,1.081,153,0.907,154,1.034,155,1.081,156,0.421,157,0.633,158,2.357,159,0.868,160,0.83,161,0.694,162,0.868,163,0.868,164,0.868,165,0.83,166,0.868,167,0.83,168,0.868,169,0.868,170,0.868,171,0.868,172,0.83,173,0.868,174,0.83,175,1.081,191,2.101,212,1.587,571,2.451,572,4.724,573,3.771,576,4.357,577,4.976,578,3.441,881,5.763,882,5.642,883,3.001,884,3.478,885,3.478,886,3.478,887,3.478,888,3.478,889,3.478,890,3.478,891,3.478]],["title/modules/FormModule.html",[403,2.14,892,2.454]],["body/modules/FormModule.html",[3,0.134,4,0.134,5,0.166,23,0.017,24,0.134,25,0.007,26,0.01,27,0.007,80,0.543,83,0.323,89,0.134,112,0.885,121,1.91,125,1.91,127,1.91,132,1.91,134,1.91,138,1.91,139,1.009,140,1.91,142,1.91,143,1.91,144,1.009,145,1.91,146,0.966,147,1.91,148,1.009,149,1.91,153,1.91,154,1.009,168,1.653,287,2.209,403,1.926,404,4.016,405,2.057,406,2.057,407,3.923,408,2.392,409,1.39,410,3.923,414,3.382,415,2.392,417,3.706,418,4.14,419,2.621,432,3.706,561,1.46,588,2.392,846,2.621,892,5.174,893,2.928,894,2.928,895,3.394,896,2.928,897,3.394,898,3.394,899,2.621,900,5.567,901,2.621,902,3.394,903,3.394,904,3.382,905,3.394,906,5.567,907,3.394,908,2.928,909,2.621,910,3.394,911,4.14,912,3.394,913,3.394,914,3.394,915,3.394,916,3.394]],["title/components/GridComponent.html",[28,0.383,136,0.983]],["body/components/GridComponent.html",[1,0.882,3,0.14,4,0.14,5,0.171,16,0.176,17,0.565,21,0.658,22,0.314,23,0.017,24,0.14,25,0.008,26,0.011,27,0.008,28,0.577,29,0.922,30,1.345,31,1.099,32,1.099,33,1.099,37,0.598,38,0.882,39,0.478,40,1.071,41,2.303,42,2.407,44,1.535,46,0.669,51,1.934,52,0.565,53,1.287,54,0.986,61,0.476,64,0.373,67,0.577,68,0.44,75,0.359,76,0.778,80,0.354,82,1.085,83,0.337,85,1.687,88,0.643,89,0.14,97,0.74,98,0.807,105,0.405,112,0.922,113,1.535,114,1.405,115,0.088,116,1.915,117,1.099,118,1.099,119,0.922,120,1.099,121,0.922,122,1.915,123,0.922,124,1.099,125,0.922,126,1.099,127,0.922,128,1.099,129,1.769,130,0.922,131,1.099,132,0.922,133,1.535,134,0.922,135,1.006,136,1.606,137,1.099,138,0.922,139,1.051,140,0.922,141,1.099,142,0.922,143,0.922,144,1.469,145,0.922,146,1.006,147,0.922,148,1.051,149,0.922,150,1.099,151,0.922,152,1.099,153,0.922,154,1.051,155,1.099,156,0.428,157,1.121,158,2.362,159,0.882,160,0.844,161,0.706,162,0.882,163,0.882,164,0.882,165,0.844,166,0.882,167,0.844,168,0.882,169,0.882,170,0.882,171,0.882,172,0.844,173,0.882,174,0.844,175,1.099,212,2.182,426,2.492,917,3.05,918,6.161,919,4.938,920,6.161,921,6.161,922,4.938,923,3.535,924,3.535,925,3.535,926,3.535,927,3.535,928,3.535,929,3.535,930,3.535]],["title/components/IconButtonComponent.html",[28,0.383,138,0.983]],["body/components/IconButtonComponent.html",[1,0.79,3,0.125,4,0.125,5,0.158,16,0.158,17,0.523,18,0.604,22,0.368,23,0.017,24,0.125,25,0.007,26,0.01,27,0.007,28,0.544,29,0.826,30,1.244,31,0.984,32,0.984,33,0.984,37,0.553,38,1.463,39,0.428,40,1.064,41,2.264,42,2.366,44,1.42,46,0.663,48,1.336,49,3.925,50,4.046,54,0.912,58,1.484,60,2.269,61,0.528,63,0.871,64,0.376,65,1.178,66,2.718,67,0.595,68,0.453,69,2.545,71,1.665,75,0.321,80,0.383,81,1.797,82,0.871,83,0.302,84,1.236,85,1.511,86,1.236,87,0.863,88,0.576,89,0.125,91,1.919,92,1.919,93,1.691,95,1.919,96,1.919,105,0.362,112,0.826,113,1.42,114,1.3,115,0.079,116,1.823,117,0.984,118,0.984,119,0.826,120,0.984,121,0.826,122,1.823,123,0.826,124,0.984,125,0.826,126,0.984,127,0.826,128,0.984,129,1.665,130,0.826,131,0.984,132,0.826,133,1.42,134,0.826,135,0.901,136,0.826,137,0.984,138,1.529,139,1.849,140,0.826,141,0.984,142,0.826,143,0.826,144,1.358,145,0.826,146,1.524,147,0.826,148,0.942,149,0.826,150,0.984,151,0.826,152,0.984,153,0.826,154,0.942,155,0.984,156,0.384,157,0.576,158,2.328,159,0.79,160,0.756,161,0.632,162,0.79,163,0.79,164,0.79,165,0.756,166,0.79,167,0.756,168,0.79,169,0.79,170,0.79,171,0.79,172,0.756,173,0.79,174,0.756,175,0.984,191,1.965,317,0.942,343,1.363,441,5.76,459,3.219,460,4.137,462,4.382,489,3.528,501,2.446,503,2.446,508,2.732,518,2.446,519,3.528,522,2.732,899,5.377,931,6.006,932,2.232,933,2.446,934,3.167,935,3.528,936,3.167,937,3.167,938,3.167,939,3.167,940,3.167]],["title/components/IconComponent.html",[28,0.383,140,0.983]],["body/components/IconComponent.html",[1,1.007,3,0.16,4,0.16,5,0.187,18,0.769,23,0.017,24,0.16,25,0.009,26,0.012,27,0.009,28,0.619,29,1.052,30,1.472,31,1.254,32,1.254,33,1.254,37,0.655,38,1.007,39,0.545,40,1.078,41,2.326,42,2.431,44,1.68,58,1.981,61,0.312,64,0.369,80,0.387,83,0.384,85,1.925,86,1.575,88,0.734,89,0.16,112,1.052,113,1.68,114,1.538,115,0.101,116,2.024,117,1.254,118,1.254,119,1.052,120,1.254,121,1.052,122,2.024,123,1.052,124,1.254,125,1.052,126,1.254,127,1.052,128,1.254,129,1.895,130,1.052,131,1.254,132,1.052,133,1.68,134,1.052,135,1.148,136,1.052,137,1.254,138,1.052,139,1.937,140,1.698,141,1.254,142,1.052,143,1.052,144,1.608,145,1.052,146,1.148,147,1.052,148,1.2,149,1.052,150,1.254,151,1.052,152,1.254,153,1.052,154,1.2,155,1.254,156,0.489,157,0.734,158,2.4,159,1.007,160,0.963,161,0.805,162,1.007,163,1.007,164,1.007,165,0.963,166,1.007,167,0.963,168,1.007,169,1.625,170,1.007,171,1.007,172,0.963,173,1.007,174,0.963,175,1.254,609,1.435,716,2.155,941,3.481,942,5.406,943,4.035]],["title/components/InputComponent.html",[28,0.383,142,0.983]],["body/components/InputComponent.html",[1,0.724,3,0.115,4,0.115,5,0.148,16,0.145,17,0.49,18,0.553,20,0.943,21,0.609,22,0.382,23,0.017,24,0.115,25,0.006,26,0.009,27,0.006,28,0.517,29,0.756,30,1.167,31,0.902,32,0.902,33,0.902,37,0.519,38,0.724,39,0.392,40,1.058,41,2.256,42,2.358,44,1.332,46,0.717,49,3.937,50,4.041,51,1.731,52,0.49,53,1.175,54,0.855,58,1.392,60,2.208,61,0.535,63,0.553,64,0.34,65,1.023,66,2.339,67,0.637,68,0.515,69,2.339,71,1.748,75,0.517,76,1.05,80,0.403,81,1.646,82,1.271,83,0.276,84,1.133,87,0.79,88,0.528,89,0.115,91,1.758,92,1.758,93,1.549,95,1.758,96,1.758,97,0.941,98,0.663,100,1.888,101,1.888,105,0.583,112,0.756,113,1.332,114,1.219,115,0.072,116,1.748,117,0.902,118,0.902,119,0.756,120,0.902,121,0.756,122,1.748,123,0.756,124,0.902,125,0.756,126,0.902,127,0.756,128,0.902,129,1.583,130,0.756,131,0.902,132,0.756,133,1.332,134,0.756,135,0.826,136,0.756,137,0.902,138,0.756,139,0.863,140,0.756,141,0.902,142,1.637,143,0.756,144,1.274,145,0.756,146,0.826,147,0.756,148,0.863,149,0.756,150,0.902,151,0.756,152,0.902,153,0.756,154,0.863,155,0.902,156,0.351,157,0.528,158,2.298,159,0.724,160,0.693,161,0.579,162,0.724,163,0.724,164,0.724,165,1.343,166,0.724,167,0.693,168,0.724,169,0.724,170,0.724,171,0.724,172,0.693,173,0.724,174,0.693,175,0.902,242,1.456,409,1.755,420,0.986,427,1.596,428,1.081,457,3.696,547,2.159,548,2.567,549,2.159,550,2.159,561,1.248,562,1.758,566,2.045,605,3.309,848,3.696,852,5.177,933,2.241,944,2.503,945,5.625,946,5.625,947,5.094,948,4.284,949,2.901,950,2.901,951,2.901,952,2.901,953,2.901,954,2.901,955,2.901,956,2.901,957,2.901,958,2.901,959,2.503,960,2.901]],["title/classes/Queue.html",[89,0.149,288,2.658]],["body/classes/Queue.html",[3,0.139,4,0.139,5,0.122,7,2.788,16,0.175,17,0.562,22,0.271,23,0.017,24,0.139,25,0.008,26,0.011,27,0.008,46,0.679,48,1.414,52,0.562,61,0.5,63,0.669,64,0.212,65,0.638,66,1.83,67,0.356,68,0.438,69,1.83,71,1.527,75,0.698,76,1.201,89,0.225,97,0.526,105,0.766,114,2.151,191,2.114,196,2.788,242,1.67,271,4.847,275,3.794,283,4.328,286,4.238,288,5.597,297,4.89,298,5.774,317,1.461,346,5.298,350,3.462,447,3.794,455,3.027,578,3.462,631,4.568,878,2.284,961,3.027,962,3.509,963,3.509,964,3.509,965,3.509,966,4.89,967,3.509,968,7.131,969,3.509,970,6.464,971,3.509,972,5.668,973,5.668,974,3.509,975,4.912,976,6.141,977,3.509,978,4.912,979,4.912,980,3.509,981,4.912,982,6.699,983,4.912,984,4.912,985,4.912,986,6.464,987,4.912,988,3.509,989,4.912,990,4.912,991,3.509,992,4.912,993,3.509,994,3.509,995,6.464,996,3.509,997,3.509,998,3.509,999,3.509,1000,3.509,1001,3.509,1002,4.912,1003,3.509]],["title/components/RadioButtonComponent.html",[28,0.383,143,0.983]],["body/components/RadioButtonComponent.html",[1,0.83,3,0.132,4,0.132,5,0.164,16,0.166,18,0.634,20,1.081,21,0.608,22,0.261,23,0.017,24,0.132,25,0.007,26,0.01,27,0.007,28,0.559,29,0.867,30,1.288,31,1.034,32,1.034,33,1.034,37,0.573,38,0.83,39,0.449,40,1.067,41,2.283,42,2.386,44,1.47,46,0.659,52,0.541,53,1.252,54,0.944,58,1.789,61,0.49,64,0.333,67,0.48,68,0.463,71,1.711,75,0.48,76,0.745,80,0.394,82,1.049,83,0.317,88,0.605,89,0.132,97,0.709,98,0.759,105,0.38,112,0.867,113,1.47,114,1.346,115,0.083,116,1.864,117,1.034,118,1.034,119,0.867,120,1.034,121,0.867,122,1.864,123,0.867,124,1.034,125,0.867,126,1.034,127,0.867,128,1.034,129,1.711,130,0.867,131,1.034,132,0.867,133,1.47,134,0.867,135,0.946,136,0.867,137,1.034,138,0.867,139,0.989,140,0.867,141,1.034,142,0.867,143,1.716,144,2.014,145,0.867,146,1.706,147,0.867,148,0.989,149,0.867,150,1.034,151,0.867,152,1.034,153,0.867,154,0.989,155,1.034,156,0.403,157,0.605,158,2.343,159,0.83,160,0.794,161,0.664,162,0.83,163,1.496,164,0.83,165,0.794,166,0.83,167,0.794,168,0.83,169,0.83,170,0.83,171,0.83,172,0.794,173,0.83,174,0.794,175,1.034,317,1.406,409,1.937,420,1.13,427,1.762,428,1.239,459,3.333,547,2.384,548,2.774,549,2.384,550,2.384,552,4.226,553,5.231,554,3.88,556,3.333,561,1.431,562,2.015,563,2.015,564,3.653,565,2.869,566,2.344,567,2.869,568,2.869,609,1.183,716,1.775,904,4.64,932,2.344,935,2.568,1004,5.68,1005,4.08,1006,3.325,1007,3.325]],["title/components/RadioButtonGroupComponent.html",[28,0.383,145,0.983]],["body/components/RadioButtonGroupComponent.html",[1,0.789,3,0.125,4,0.125,5,0.158,16,0.158,17,0.522,21,0.734,22,0.343,23,0.017,24,0.125,25,0.007,26,0.01,27,0.007,28,0.543,29,0.825,30,1.243,31,0.983,32,0.983,33,0.983,37,0.553,38,0.789,39,0.427,40,1.064,41,2.277,42,2.38,44,1.418,46,0.663,51,1.82,52,0.522,54,0.911,61,0.5,63,0.603,64,0.355,65,0.576,67,0.595,68,0.453,69,1.7,71,1.664,75,0.463,80,0.383,82,1.117,83,0.301,89,0.125,112,0.825,113,1.418,114,1.299,115,0.079,116,1.822,117,0.983,118,0.983,119,0.825,120,0.983,121,0.825,122,1.822,123,0.825,124,0.983,125,0.825,126,0.983,127,0.825,128,0.983,129,1.664,130,0.825,131,0.983,132,0.825,133,1.418,134,0.825,135,0.9,136,0.825,137,0.983,138,0.825,139,0.941,140,0.825,141,0.983,142,0.825,143,0.825,144,2.031,145,1.688,146,2.093,147,0.825,148,0.941,149,0.825,150,0.983,151,0.825,152,0.983,153,0.825,154,0.941,155,0.983,156,0.383,157,0.576,158,2.327,159,0.789,160,0.755,161,0.631,162,0.789,163,0.789,164,0.789,165,0.755,166,0.789,167,0.755,168,1.462,169,0.789,170,0.789,171,0.789,172,0.755,173,0.789,174,0.755,175,0.983,212,1.483,317,1.592,409,1.869,547,2.3,548,2.698,549,2.3,550,2.3,552,3.217,554,3.773,556,3.217,561,1.361,563,1.917,571,2.23,572,4.526,573,3.525,574,3.244,575,4.131,576,4.135,577,4.135,578,3.217,587,2.729,588,2.23,883,2.729,904,4.704,1008,5.758,1009,3.163,1010,3.163,1011,4.564,1012,3.163,1013,3.937,1014,3.163,1015,3.163,1016,3.937,1017,3.937,1018,4.135,1019,2.729]],["title/modules/SbElementModule.html",[403,2.14,1020,2.658]],["body/modules/SbElementModule.html",[3,0.159,4,0.159,5,0.139,23,0.017,24,0.159,25,0.009,26,0.012,27,0.009,29,1.964,30,1.094,35,3.103,80,0.539,83,0.383,88,0.731,89,0.159,112,1.047,119,1.964,123,1.964,130,1.964,136,1.964,151,1.964,156,0.487,174,1.702,287,2.615,403,2.28,404,4.23,405,3.267,406,2.435,407,4.288,408,2.832,409,1.646,410,4.288,414,3.799,415,2.832,417,4.163,422,2.435,432,4.163,561,1.729,892,4.905,911,4.651,1020,5.564,1021,3.466,1022,4.018,1023,3.466,1024,3.466,1025,4.018,1026,4.018,1027,5.391,1028,4.018,1029,3.466,1030,4.018,1031,4.018,1032,4.018,1033,4.018,1034,4.018,1035,4.018,1036,4.018,1037,4.018,1038,4.018,1039,4.018]],["title/components/SelectButtonComponent.html",[28,0.383,147,0.983]],["body/components/SelectButtonComponent.html",[1,0.7,3,0.111,4,0.111,5,0.145,16,0.14,17,0.478,21,0.601,22,0.326,23,0.017,24,0.111,25,0.006,26,0.009,27,0.006,28,0.507,29,0.732,30,1.139,31,0.873,32,0.873,33,0.873,37,0.507,38,0.7,39,0.379,40,1.056,41,2.24,42,2.349,44,1.3,46,0.714,49,3.895,50,4.003,52,0.478,53,1.156,58,1.359,60,2.185,61,0.522,63,0.797,64,0.358,65,1.077,66,2.312,67,0.507,68,0.458,69,2.461,71,1.84,75,0.601,76,0.932,80,0.396,81,1.594,83,0.267,84,1.096,89,0.111,91,1.702,92,1.702,93,1.499,95,1.702,96,1.702,97,0.829,98,0.641,100,1.828,101,1.828,105,0.478,112,0.732,113,1.3,114,1.19,115,0.07,116,1.721,117,0.873,118,0.873,119,0.732,120,0.873,121,0.732,122,1.721,123,0.732,124,0.873,125,0.732,126,0.873,127,0.732,128,0.873,129,1.553,130,0.732,131,0.873,132,0.732,133,1.3,134,0.732,135,0.799,136,0.732,137,0.873,138,0.732,139,0.835,140,0.732,141,0.873,142,0.732,143,0.732,144,1.243,145,0.732,146,1.575,147,1.618,148,2.007,149,0.732,150,0.873,151,0.732,152,0.873,153,0.732,154,1.76,155,0.873,156,0.34,157,0.511,158,2.287,159,0.7,160,0.67,161,0.56,162,0.7,163,0.7,164,0.7,165,0.67,166,0.7,167,0.67,168,1.381,169,0.7,170,0.7,171,0.7,172,0.67,173,0.7,174,0.67,175,0.873,242,0.954,317,1.76,409,1.713,459,2.947,547,2.108,548,2.518,549,2.108,550,2.108,561,1.208,563,1.702,574,3.028,575,3.902,588,1.979,609,0.999,908,2.422,909,5.307,932,1.979,933,2.169,935,2.169,1005,3.608,1013,3.608,1016,3.608,1017,4.776,1018,3.859,1019,2.422,1040,5.928,1041,4.996,1042,5.536,1043,2.808,1044,2.808,1045,4.182,1046,2.808,1047,2.808,1048,2.808,1049,2.808,1050,4.182,1051,2.808,1052,2.808,1053,2.808,1054,2.808,1055,2.808,1056,2.808,1057,2.808]],["title/interfaces/SelectedOptions.html",[0,1.472,585,2.454]],["body/interfaces/SelectedOptions.html",[0,2.313,2,3.363,3,0.235,4,0.235,5,0.205,21,0.698,23,0.016,24,0.235,25,0.013,26,0.015,27,0.013,61,0.458,66,2.561,585,4.475,1058,5.931,1059,5.111,1060,5.925,1061,6.875,1062,5.925]],["title/directives/SelectionOptionsDirective.html",[115,0.094,168,0.941]],["body/directives/SelectionOptionsDirective.html",[3,0.189,4,0.189,5,0.165,16,0.238,17,0.689,18,0.908,20,1.548,21,0.483,22,0.332,23,0.017,24,0.189,25,0.01,26,0.013,27,0.01,37,0.577,39,0.644,40,0.938,46,0.629,54,1.202,61,0.553,63,0.908,64,0.288,65,0.867,67,0.611,68,0.537,69,1.775,75,0.483,76,1.152,80,0.473,82,1.148,83,0.454,87,1.298,88,0.867,89,0.189,105,0.545,115,0.15,156,0.577,165,1.438,168,1.503,191,2.592,242,2.047,317,1.417,343,2.05,420,1.619,427,2.244,428,1.775,436,5.295,574,4.003,585,4.759,1018,3.679,1063,6.308,1064,4.11,1065,6.605,1066,6.023,1067,4.764,1068,4.764,1069,4.764,1070,4.764,1071,4.764,1072,4.764,1073,4.764,1074,4.764,1075,6.023,1076,4.764]],["title/directives/SizeColorInputDirective.html",[115,0.094,169,0.941]],["body/directives/SizeColorInputDirective.html",[3,0.19,4,0.19,5,0.166,16,0.24,18,1.418,20,2.155,21,0.706,22,0.334,23,0.017,24,0.19,25,0.01,26,0.013,27,0.01,37,0.582,39,0.649,40,0.941,46,0.683,52,0.693,53,1.454,54,1.209,61,0.513,64,0.291,67,0.614,68,0.468,75,0.488,76,0.954,80,0.433,82,1.264,83,0.458,86,2.718,88,0.874,89,0.24,97,0.907,98,1.097,105,0.55,115,0.151,156,0.582,157,1.102,169,1.511,212,2.262,232,2.565,234,2.175,305,3.052,316,3.233,590,3.509,591,1.79,596,2.293,608,3.387,609,2.154,698,2.565,711,4.145,712,2.727]],["title/directives/SizeInputDirective.html",[115,0.094,170,0.941]],["body/directives/SizeInputDirective.html",[3,0.203,4,0.203,5,0.178,16,0.256,20,2.22,21,0.64,22,0.283,23,0.017,24,0.203,25,0.011,26,0.014,27,0.011,37,0.622,39,0.693,40,0.963,46,0.679,52,0.722,53,1.488,54,1.259,61,0.488,64,0.31,67,0.521,68,0.397,75,0.521,76,0.994,80,0.452,82,1.203,83,0.489,86,2.667,88,0.934,89,0.25,97,0.945,98,1.172,105,0.587,115,0.157,156,0.622,157,1.148,170,1.574,212,2.05,232,2.74,316,3.368,590,3.443,591,1.911,594,3.34,596,2.448,609,1.825,712,2.912]],["title/directives/SizeThemeColorInputDirective.html",[38,0.941,115,0.094]],["body/directives/SizeThemeColorInputDirective.html",[3,0.172,4,0.172,5,0.151,16,0.217,17,0.65,18,1.421,20,2.056,21,0.724,22,0.37,23,0.018,24,0.172,25,0.009,26,0.012,27,0.009,37,0.527,38,1.417,39,0.588,40,0.906,46,0.702,48,1.085,52,0.65,53,1.401,54,1.134,58,1.846,60,2.426,61,0.538,63,0.829,64,0.344,65,0.791,67,0.576,68,0.439,75,0.441,76,0.895,80,0.453,82,1.206,83,0.414,84,1.698,86,2.787,87,2.031,88,0.791,89,0.225,97,0.851,98,0.993,105,0.498,115,0.142,156,0.527,157,1.034,212,2.18,232,2.322,234,2.572,305,2.863,316,3.033,590,3.598,591,1.62,609,2.021,698,2.322,700,3.065,712,2.468,713,2.636,714,4.901,715,3.752,716,2.322,717,3.443,718,2.636,719,2.636]],["title/directives/SizeThemeInputDirective.html",[115,0.094,171,0.941]],["body/directives/SizeThemeInputDirective.html",[3,0.183,4,0.183,5,0.16,16,0.23,17,0.675,20,2.115,21,0.696,22,0.359,23,0.017,24,0.183,25,0.01,26,0.013,27,0.01,37,0.559,39,0.623,40,0.927,46,0.702,48,1.151,52,0.675,53,1.433,54,1.178,58,1.918,60,2.465,61,0.53,63,0.88,64,0.357,65,0.84,67,0.468,68,0.357,75,0.468,76,0.93,80,0.466,82,1.125,83,0.439,84,1.802,86,2.768,87,2.033,88,0.84,89,0.234,97,0.884,98,1.054,105,0.528,115,0.147,156,0.559,157,1.074,171,1.473,212,1.918,232,2.464,316,3.151,590,3.573,591,1.719,609,2.099,698,3.151,699,3.252,700,3.252,712,2.619,713,2.796,716,2.464,717,3.577,718,2.796,719,2.796]],["title/components/SliderComponent.html",[28,0.383,149,0.983]],["body/components/SliderComponent.html",[1,0.67,3,0.106,4,0.106,5,0.14,16,0.134,17,0.463,18,0.512,20,0.872,21,0.619,22,0.38,23,0.017,24,0.106,25,0.006,26,0.009,27,0.006,28,0.493,29,0.7,30,1.101,31,0.834,32,0.834,33,0.834,37,0.49,38,0.67,39,0.363,40,1.052,41,2.235,42,2.336,44,1.256,46,0.673,48,1.522,51,1.653,52,0.463,53,1.13,54,0.807,61,0.561,63,0.771,64,0.351,65,0.736,66,1.812,67,0.677,68,0.557,69,1.506,71,1.256,75,0.493,76,0.997,80,0.348,82,1.242,83,0.256,87,0.731,88,0.488,89,0.106,97,0.606,98,0.613,105,0.556,112,0.7,113,1.256,114,1.15,115,0.067,116,1.682,117,0.834,118,0.834,119,0.7,120,0.834,121,0.7,122,1.682,123,0.7,124,0.834,125,0.7,126,0.834,127,0.7,128,0.834,129,1.512,130,0.7,131,0.834,132,0.7,133,1.256,134,0.7,135,0.764,136,0.7,137,0.834,138,0.7,139,0.798,140,0.7,141,0.834,142,0.7,143,0.7,144,1.202,145,0.7,146,0.764,147,0.7,148,0.798,149,1.591,150,0.834,151,0.7,152,0.834,153,0.7,154,0.798,155,0.834,156,0.325,157,0.488,158,2.271,159,0.67,160,0.641,161,0.536,162,0.67,163,0.67,164,0.67,165,1.292,166,0.67,167,0.641,168,0.67,169,0.67,170,0.67,171,0.67,172,0.641,173,0.67,174,0.641,175,0.834,191,1.739,196,4.088,242,1.653,301,5.623,317,1.202,343,1.739,364,3.428,409,1.656,420,0.912,427,1.506,428,1,547,2.038,548,2.451,549,2.038,550,2.038,553,4.891,561,1.155,562,1.626,564,2.073,878,3.779,1077,2.315,1078,5.413,1079,4.043,1080,4.863,1081,4.863,1082,4.043,1083,4.196,1084,4.863,1085,4.863,1086,6.332,1087,5.806,1088,5.806,1089,2.684,1090,4.043,1091,2.684,1092,2.684,1093,2.684,1094,4.043,1095,4.043,1096,2.684,1097,2.684,1098,2.684,1099,2.684,1100,2.684,1101,2.684,1102,2.684,1103,2.684,1104,2.684,1105,2.684,1106,2.684,1107,2.684,1108,2.684,1109,4.043,1110,2.684,1111,4.863,1112,2.684,1113,2.684,1114,2.684,1115,4.043,1116,2.684,1117,2.684,1118,2.684,1119,2.684,1120,2.684,1121,2.684,1122,2.684]],["title/directives/StateManagerDirective.html",[115,0.094,172,0.9]],["body/directives/StateManagerDirective.html",[3,0.125,4,0.125,5,0.109,16,0.157,17,0.521,22,0.41,23,0.017,24,0.125,25,0.007,26,0.01,27,0.007,39,0.426,40,0.791,46,0.688,48,1.803,52,0.521,54,0.909,61,0.586,63,1.301,64,0.413,65,1.242,66,2.933,67,0.594,68,0.595,69,2.41,71,1.416,75,0.693,80,0.226,82,1.183,83,0.301,89,0.125,105,0.67,115,0.114,156,0.382,172,1.088,191,1.961,317,2.149,343,2.519,429,5.877,460,4.129,461,3.931,462,4.7,489,3.519,501,2.438,503,2.438,518,2.438,519,3.519,527,2.438,669,3.631,704,5.754,707,5.754,809,2.438,820,2.723,821,2.723,831,3.931,959,2.723,1123,5.347,1124,5.347,1125,5.347,1126,4.556,1127,4.556,1128,4.556,1129,6.669,1130,4.556,1131,4.556,1132,4.556,1133,4.556,1134,3.156,1135,4.556,1136,3.156,1137,4.556,1138,3.156,1139,4.556,1140,3.156,1141,3.156,1142,3.156,1143,3.156,1144,3.156,1145,3.156,1146,3.156,1147,4.556,1148,3.156,1149,3.156,1150,4.556,1151,3.156,1152,3.156,1153,3.156,1154,3.156,1155,4.556,1156,3.156,1157,4.556,1158,3.156,1159,4.556,1160,3.156,1161,4.556,1162,3.156,1163,3.156]],["title/classes/Table.html",[89,0.149,1164,2.454]],["body/classes/Table.html",[3,0.243,4,0.108,5,0.189,7,2.326,11,3.166,16,0.245,17,0.469,21,0.277,22,0.361,23,0.018,24,0.108,25,0.006,26,0.009,27,0.006,46,0.638,48,1.533,52,0.469,58,1.775,61,0.507,63,1.171,64,0.372,65,1.118,67,0.416,68,0.317,75,0.594,76,1.236,80,0.391,89,0.108,97,0.41,105,0.703,135,1.166,177,2.668,183,3.466,196,3.1,201,2.668,242,2.413,265,3.85,284,3.536,298,3.166,360,3.466,420,1.393,436,3.85,447,3.166,610,4.225,616,4.704,626,1.551,636,4.491,639,2.625,640,4.619,641,1.927,720,1.927,722,5.888,732,4.713,745,2.358,759,4.713,766,4.219,878,2.668,1083,5.049,1164,4.886,1165,2.358,1166,4.099,1167,4.099,1168,4.099,1169,5.782,1170,4.099,1171,5.889,1172,6.144,1173,4.099,1174,4.099,1175,4.099,1176,4.746,1177,3.201,1178,4.099,1179,4.917,1180,4.917,1181,4.917,1182,4.099,1183,2.734,1184,2.734,1185,4.099,1186,4.099,1187,4.099,1188,4.099,1189,4.099,1190,2.734,1191,2.734,1192,3.536,1193,4.099,1194,2.734,1195,2.734,1196,6.553,1197,2.734,1198,4.099,1199,2.734,1200,4.917,1201,2.734,1202,2.734,1203,2.734,1204,4.099,1205,2.734,1206,2.734,1207,2.734,1208,2.734,1209,2.734,1210,4.099,1211,2.734,1212,2.734,1213,2.734,1214,2.734,1215,4.099,1216,5.463,1217,4.099,1218,4.099,1219,2.734,1220,2.734,1221,2.734,1222,2.734,1223,2.734,1224,2.734,1225,2.734,1226,2.734,1227,2.734,1228,2.734,1229,2.734,1230,4.099,1231,4.099,1232,2.734,1233,2.734,1234,2.734]],["title/components/TableComponent.html",[28,0.383,151,0.983]],["body/components/TableComponent.html",[1,0.812,3,0.129,4,0.129,5,0.161,16,0.162,17,0.533,18,0.888,21,0.663,22,0.346,23,0.017,24,0.129,25,0.007,26,0.01,27,0.007,28,0.552,29,0.849,30,1.269,31,1.012,32,1.012,33,1.012,37,0.564,38,0.812,39,0.44,40,1.066,41,2.284,42,2.388,44,1.448,46,0.703,51,1.849,52,0.533,53,1.24,54,0.93,61,0.505,63,0.621,64,0.359,65,0.592,67,0.552,68,0.421,75,0.473,76,0.99,80,0.389,82,1.037,83,0.31,85,1.553,88,0.592,89,0.129,97,0.89,98,0.744,105,0.533,112,0.849,113,1.448,114,1.326,115,0.081,116,1.846,117,1.012,118,1.012,119,0.849,120,1.012,121,0.849,122,1.846,123,0.849,124,1.012,125,0.849,126,1.012,127,0.849,128,1.012,129,1.691,130,0.849,131,1.012,132,0.849,133,1.448,134,0.849,135,0.926,136,0.849,137,1.012,138,0.849,139,0.968,140,0.849,141,1.012,142,0.849,143,0.849,144,1.385,145,0.849,146,0.926,147,0.849,148,0.968,149,0.849,150,1.012,151,1.548,152,1.012,153,0.849,154,0.968,155,1.012,156,0.394,157,0.592,158,2.337,159,0.812,160,0.777,161,0.65,162,0.812,163,0.812,164,0.812,165,0.777,166,0.812,167,0.777,168,0.812,169,0.812,170,0.812,171,0.812,172,0.777,173,1.482,174,0.777,175,1.012,196,3.088,242,1.107,422,1.973,609,1.657,610,1.848,1164,4.381,1177,3.541,1235,2.809,1236,4.659,1237,5.44,1238,4.659,1239,6.537,1240,3.256,1241,3.256,1242,3.256,1243,4.659,1244,3.256,1245,3.256,1246,3.256,1247,4.659,1248,3.256,1249,3.256,1250,5.44,1251,5.938,1252,3.256,1253,3.256,1254,4.659,1255,3.256,1256,3.256,1257,4.659,1258,4.659]],["title/interfaces/TableInterface.html",[0,1.472,1177,2.454]],["body/interfaces/TableInterface.html",[0,2.072,2,3.012,3,0.21,4,0.21,5,0.184,16,0.265,17,0.737,22,0.355,23,0.017,24,0.21,25,0.012,26,0.014,27,0.012,76,1.208,80,0.38,610,4.091,636,4.539,639,2.833,640,4.886,641,3.74,722,6.05,766,5.568,1164,4.191,1169,5.556,1171,6.478,1176,4.973,1177,4.191,1192,5.556,1259,4.578]],["title/directives/ThemeColorInputDirective.html",[115,0.094,173,0.941]],["body/directives/ThemeColorInputDirective.html",[3,0.184,4,0.184,5,0.161,16,0.231,17,0.678,18,1.424,21,0.697,22,0.36,23,0.017,24,0.184,25,0.01,26,0.013,27,0.01,37,0.562,39,0.627,40,0.928,46,0.703,48,1.157,52,0.678,53,1.435,54,1.182,58,1.924,60,2.468,61,0.531,63,0.884,64,0.358,65,0.844,67,0.471,68,0.358,75,0.471,76,0.933,80,0.467,82,1.129,83,0.442,84,1.811,87,1.777,88,0.844,89,0.235,97,0.887,98,1.059,105,0.531,115,0.148,156,0.562,157,1.077,173,1.477,212,1.924,234,2.681,305,2.985,422,4.303,590,3.579,591,1.727,596,2.213,609,1.65,698,3.161,699,3.269,713,2.81,716,2.476,717,3.588,718,2.81,719,2.81]],["title/directives/ThemeInputDirective.html",[115,0.094,174,0.9]],["body/directives/ThemeInputDirective.html",[3,0.196,4,0.196,5,0.171,16,0.247,17,0.706,21,0.626,22,0.34,23,0.017,24,0.196,25,0.011,26,0.013,27,0.011,37,0.6,39,0.669,40,0.951,46,0.703,48,1.235,52,0.706,53,1.47,58,2.005,60,2.509,61,0.52,63,0.943,64,0.373,65,0.901,75,0.502,76,0.972,80,0.481,83,0.471,84,1.932,87,1.831,88,0.901,89,0.244,97,0.924,98,1.13,105,0.566,115,0.154,156,0.6,157,1.123,174,1.473,422,4.264,590,3.547,591,1.844,596,2.944,609,1.76,713,2.999,716,2.643,717,3.739,718,2.999,719,2.999,1260,4.949]],["title/injectables/ThemeService.html",[60,1.282,250,2.285]],["body/injectables/ThemeService.html",[3,0.171,4,0.171,5,0.149,7,3.205,16,0.215,17,0.646,21,0.755,22,0.311,23,0.017,24,0.171,25,0.009,26,0.012,27,0.009,28,0.573,30,1.538,46,0.678,48,1.571,52,0.646,60,1.919,61,0.487,63,0.821,64,0.261,65,0.784,67,0.704,68,0.333,75,0.573,80,0.308,83,0.41,87,2.152,89,0.171,97,0.846,105,0.493,135,1.607,222,4.634,250,3.422,251,3.328,253,4.361,254,4.871,265,3.98,283,3.98,317,1.679,343,2.43,350,5.187,367,3.717,368,3.328,373,3.717,438,4.871,468,4.871,484,4.871,487,4.871,966,4.871,1176,4.361,1261,3.717,1262,5.646,1263,5.646,1264,5.646,1265,7.36,1266,6.298,1267,6.684,1268,5.646,1269,4.309,1270,4.309,1271,4.309,1272,5.646,1273,4.309]],["title/components/ToggleSwitchComponent.html",[28,0.383,153,0.983]],["body/components/ToggleSwitchComponent.html",[1,0.881,3,0.14,4,0.14,5,0.171,16,0.176,17,0.565,18,0.673,20,1.147,21,0.358,22,0.195,23,0.017,24,0.14,25,0.008,26,0.011,27,0.008,28,0.577,29,0.92,30,1.344,31,1.097,32,1.097,33,1.097,37,0.598,38,0.881,39,0.477,40,1.071,41,2.303,42,2.407,44,1.534,46,0.68,51,1.933,52,0.565,53,1.286,61,0.44,64,0.344,67,0.358,68,0.44,71,1.534,75,0.501,76,0.777,80,0.407,82,0.673,83,0.336,87,0.962,88,0.642,89,0.14,97,0.739,98,0.806,105,0.404,112,0.92,113,1.534,114,1.404,115,0.088,116,1.914,117,1.097,118,1.097,119,0.92,120,1.097,121,0.92,122,1.914,123,0.92,124,1.097,125,0.92,126,1.097,127,0.92,128,1.097,129,1.768,130,0.92,131,1.097,132,0.92,133,1.534,134,0.92,135,1.005,136,0.92,137,1.097,138,0.92,139,1.05,140,0.92,141,1.097,142,0.92,143,0.92,144,1.467,145,0.92,146,1.005,147,0.92,148,1.05,149,0.92,150,1.097,151,0.92,152,1.097,153,1.75,154,2.174,155,2.014,156,0.428,157,0.642,158,2.362,159,0.881,160,0.843,161,0.705,162,0.881,163,0.881,164,0.881,165,1.47,166,0.881,167,0.843,168,0.881,169,0.881,170,0.881,171,0.881,172,0.843,173,0.881,174,0.843,175,1.097,317,1.467,409,2.021,420,1.2,427,1.838,428,1.315,547,2.487,548,2.867,549,2.487,550,2.487,561,1.519,562,2.14,563,2.99,566,2.489,901,4.756,1274,5.312,1275,3.046,1276,4.934,1277,3.531,1278,3.531,1279,3.531]],["title/coverage.html",[1280,4.455]],["body/coverage.html",[0,2.53,1,0.792,5,0.11,6,2.739,10,1.802,14,1.924,18,1.273,20,1.743,22,0.175,23,0.017,25,0.007,26,0.01,27,0.007,28,0.767,29,0.827,34,2.739,35,2.452,36,2.739,38,0.792,60,1.079,64,0.277,68,0.576,86,2.292,87,1.599,89,0.257,115,0.188,119,0.827,121,0.827,123,0.827,125,0.827,127,0.827,130,0.827,132,0.827,134,0.827,136,0.827,138,0.827,140,0.827,142,0.827,143,0.827,145,0.827,146,0.903,147,0.827,149,0.827,151,0.827,153,0.827,157,0.578,159,0.792,160,0.758,161,0.633,162,0.792,163,0.792,164,0.792,165,0.758,166,0.792,167,0.758,168,0.792,169,0.792,170,0.792,171,0.792,172,0.758,173,0.792,174,0.758,176,2.739,222,2.066,242,1.079,250,2.772,252,2.739,288,2.237,387,2.739,388,2.739,420,2.203,421,2.452,422,2.772,424,2.237,426,2.237,427,2.695,428,2.414,429,2.452,431,2.452,433,2.739,531,2.739,546,2.739,570,2.739,571,3.78,585,2.066,590,3.446,591,2.741,610,1.802,611,3.821,612,3.533,613,2.237,626,1.802,639,1.695,664,3.533,665,2.739,669,3.323,670,2.739,720,2.237,721,2.452,809,3.533,845,2.739,846,2.452,847,2.739,878,5.14,881,2.739,899,2.452,901,2.452,904,3.224,909,2.452,917,2.739,931,2.739,932,3.78,941,2.739,944,2.739,961,2.739,1004,2.739,1008,2.739,1040,2.739,1058,2.739,1059,2.739,1063,2.739,1064,2.739,1077,2.739,1164,2.978,1165,2.739,1177,2.066,1235,2.739,1259,2.739,1261,2.739,1274,2.739,1275,2.739,1280,2.739,1281,2.739,1282,3.174,1283,3.174,1284,4.575,1285,3.174,1286,6.68,1287,5.87,1288,6.838,1289,6.482,1290,4.575,1291,4.575,1292,4.575,1293,6.482,1294,3.174,1295,3.174,1296,5.364,1297,5.87,1298,3.174,1299,4.575,1300,2.739,1301,3.174,1302,3.174,1303,3.174,1304,3.174,1305,3.174,1306,3.174,1307,3.174,1308,3.174,1309,3.947,1310,4.575,1311,2.739,1312,2.739,1313,3.174]],["title/dependencies.html",[406,2.751,1314,2.709]],["body/dependencies.html",[23,0.017,25,0.013,26,0.015,27,0.013,83,0.576,406,4.218,419,4.675,1315,6.053,1316,6.053,1317,6.053,1318,6.005]],["title/miscellaneous/enumerations.html",[1319,2.213,1320,3.917]],["body/miscellaneous/enumerations.html",[16,0.297,23,0.017,25,0.013,26,0.015,27,0.013,68,0.563,721,4.605,723,5.953,770,5.144,771,5.144,772,5.144,1319,4.202,1320,5.144,1321,5.963]],["title/index.html",[16,0.157,1322,3.14,1323,3.14]],["body/index.html",[23,0.014,25,0.011,26,0.014,27,0.011,28,0.524,41,2.125,114,1.471,268,4.46,275,3.992,300,4.46,511,4.46,862,4.46,1281,5.913,1314,4.46,1318,4.46,1324,6.337,1325,7.145,1326,5.169,1327,7.461,1328,6.337,1329,5.169,1330,5.169,1331,5.169,1332,5.169,1333,6.854,1334,5.169,1335,6.854,1336,7.145,1337,5.169,1338,5.169,1339,5.169,1340,5.169,1341,5.169,1342,5.169,1343,5.169,1344,5.169,1345,7.145,1346,5.169,1347,6.337,1348,5.169,1349,5.169,1350,6.337,1351,6.337,1352,5.169,1353,6.337,1354,6.337,1355,6.337,1356,5.169,1357,6.337,1358,5.169,1359,5.169,1360,5.169,1361,5.169,1362,5.169,1363,5.169,1364,5.169,1365,5.169,1366,5.169,1367,5.169,1368,5.169,1369,5.169,1370,5.169,1371,5.169]],["title/modules.html",[405,3.129]],["body/modules.html",[23,0.015,25,0.013,26,0.015,27,0.013,404,3.637,405,3.637,892,3.906,1020,4.229,1029,6.299,1372,7.301,1373,7.301,1374,7.301]],["title/overview.html",[1375,4.455]],["body/overview.html",[2,1.694,23,0.017,25,0.006,26,0.01,27,0.006,29,1.709,30,0.813,38,1.635,97,0.447,112,0.778,119,1.709,121,1.709,123,1.709,125,1.709,127,1.709,130,1.709,132,1.709,134,1.709,136,1.709,138,1.709,140,1.709,142,1.709,143,1.709,145,1.709,147,1.709,149,1.709,151,1.709,153,1.709,156,0.362,157,1.193,159,1.635,160,1.565,161,1.308,162,1.635,163,1.635,164,1.635,165,1.565,166,1.635,167,1.236,168,1.292,169,1.635,170,1.635,171,1.635,172,1.236,173,1.635,174,1.637,251,2.305,287,1.943,302,2.575,365,2.575,403,1.694,404,4.804,405,1.809,406,1.809,407,2.104,408,2.104,409,1.223,410,2.104,411,2.575,412,2.575,413,2.575,414,3.083,415,2.104,892,5.15,893,2.575,894,2.575,896,2.575,1020,5.408,1021,2.575,1023,2.575,1024,2.575,1300,2.575,1375,2.575,1376,2.985,1377,2.985,1378,2.985]],["title/miscellaneous/variables.html",[1319,2.213,1379,3.917]],["body/miscellaneous/variables.html",[16,0.297,22,0.38,23,0.016,25,0.013,26,0.015,27,0.013,67,0.604,68,0.46,71,1.849,1309,5.133,1311,5.946,1312,5.946,1319,4.193,1379,5.133,1380,6.892,1381,5.95,1382,5.95,1383,5.95]],["title/routes.html",[1384,4.455]],["body/routes.html",[23,0.015,25,0.013,26,0.015,27,0.013,1384,5.349]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["0",{"_index":878,"title":{},"body":{"components/FileInputComponent.html":{},"classes/Queue.html":{},"components/SliderComponent.html":{},"classes/Table.html":{},"coverage.html":{}}}],["0/1",{"_index":1296,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1284,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1290,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1295,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1291,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1285,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1292,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1287,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1288,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1286,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1289,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1297,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1303,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":364,"title":{},"body":{"injectables/AlertService.html":{},"classes/Csv.html":{},"components/FileInputComponent.html":{},"components/SliderComponent.html":{}}}],["1/15",{"_index":1301,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1090,"title":{},"body":{"components/SliderComponent.html":{}}}],["100",{"_index":1293,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":216,"title":{},"body":{"components/AlertComponent.html":{}}}],["12.0.1",{"_index":1318,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["13/13",{"_index":1308,"title":{},"body":{"coverage.html":{}}}],["14/14",{"_index":1294,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":1377,"title":{},"body":{"overview.html":{}}}],["19",{"_index":1376,"title":{},"body":{"overview.html":{}}}],["2",{"_index":365,"title":{},"body":{"injectables/AlertService.html":{},"overview.html":{}}}],["2.1.0",{"_index":1316,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1298,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1305,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":197,"title":{},"body":{"components/AlertComponent.html":{}}}],["2x2",{"_index":922,"title":{},"body":{"components/GridComponent.html":{}}}],["3",{"_index":302,"title":{},"body":{"injectables/AlertService.html":{},"overview.html":{}}}],["300",{"_index":214,"title":{},"body":{"components/AlertComponent.html":{}}}],["4",{"_index":366,"title":{},"body":{"injectables/AlertService.html":{}}}],["4/4",{"_index":1299,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":1307,"title":{},"body":{"coverage.html":{}}}],["44",{"_index":1306,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1378,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":1302,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1300,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["66",{"_index":1304,"title":{},"body":{"coverage.html":{}}}],["__data",{"_index":1247,"title":{},"body":{"components/TableComponent.html":{}}}],["__input",{"_index":957,"title":{},"body":{"components/InputComponent.html":{}}}],["__placeholder",{"_index":958,"title":{},"body":{"components/InputComponent.html":{}}}],["_disabled",{"_index":460,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{},"directives/StateManagerDirective.html":{}}}],["_extraclasses",{"_index":592,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["_focused",{"_index":1123,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["_options",{"_index":1065,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["_pristine",{"_index":1124,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["_step",{"_index":1080,"title":{},"body":{"components/SliderComponent.html":{}}}],["_theme",{"_index":1266,"title":{},"body":{"injectables/ThemeService.html":{}}}],["_touched",{"_index":1125,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["access",{"_index":487,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/ThemeService.html":{}}}],["accessed",{"_index":1173,"title":{},"body":{"classes/Table.html":{}}}],["accessor",{"_index":427,"title":{},"body":{"modules/BaseModule.html":{},"components/CheckboxComponent.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["accessor.base.directive",{"_index":425,"title":{},"body":{"modules/BaseModule.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["accessor.base.directive.ts",{"_index":670,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{},"coverage.html":{}}}],["accessor.base.directive.ts:10",{"_index":686,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["accessor.base.directive.ts:13",{"_index":690,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["accessor.base.directive.ts:14",{"_index":688,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["accessor.base.directive.ts:15",{"_index":683,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["accessor.base.directive.ts:16",{"_index":685,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["accessor.base.directive.ts:20",{"_index":680,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["accessor.base.directive.ts:28",{"_index":681,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["accessor/control",{"_index":424,"title":{},"body":{"modules/BaseModule.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"coverage.html":{}}}],["accessor/event",{"_index":431,"title":{},"body":{"modules/BaseModule.html":{},"directives/EventManagerDirective.html":{},"coverage.html":{}}}],["accessor/state",{"_index":429,"title":{},"body":{"modules/BaseModule.html":{},"directives/StateManagerDirective.html":{},"coverage.html":{}}}],["accessors",{"_index":191,"title":{},"body":{"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"directives/ClassNameInputDirective.html":{},"classes/ColumnInformation.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"classes/Queue.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{}}}],["according",{"_index":470,"title":{},"body":{"components/ButtonComponent.html":{}}}],["active",{"_index":248,"title":{},"body":{"components/AlertComponent.html":{}}}],["acts",{"_index":434,"title":{},"body":{"components/ButtonComponent.html":{}}}],["actual",{"_index":978,"title":{},"body":{"classes/Queue.html":{}}}],["actual_component",{"_index":175,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["add",{"_index":275,"title":{},"body":{"injectables/AlertService.html":{},"classes/Queue.html":{},"index.html":{}}}],["added",{"_index":493,"title":{},"body":{"components/ButtonComponent.html":{}}}],["adding",{"_index":483,"title":{},"body":{"components/ButtonComponent.html":{}}}],["adds",{"_index":331,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{}}}],["again",{"_index":303,"title":{},"body":{"injectables/AlertService.html":{}}}],["alert",{"_index":1,"title":{"interfaces/Alert.html":{}},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["alert'},{'name",{"_index":120,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["alert(alert",{"_index":199,"title":{},"body":{"components/AlertComponent.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["alert(message",{"_index":310,"title":{},"body":{"injectables/AlertService.html":{}}}],["alert.color",{"_index":235,"title":{},"body":{"components/AlertComponent.html":{}}}],["alert.component.html",{"_index":178,"title":{},"body":{"components/AlertComponent.html":{}}}],["alert.size",{"_index":233,"title":{},"body":{"components/AlertComponent.html":{}}}],["alert]{@link",{"_index":361,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["alertboxcomponent",{"_index":29,"title":{"components/AlertBoxComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alertcomponent",{"_index":119,"title":{"components/AlertComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alertobject",{"_index":179,"title":{},"body":{"components/AlertComponent.html":{}}}],["alertqueue",{"_index":277,"title":{},"body":{"injectables/AlertService.html":{}}}],["alertqueue]{@link",{"_index":362,"title":{},"body":{"injectables/AlertService.html":{}}}],["alerts",{"_index":12,"title":{},"body":{"interfaces/Alert.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["alerts]{@link",{"_index":369,"title":{},"body":{"injectables/AlertService.html":{}}}],["alertservice",{"_index":10,"title":{"injectables/AlertService.html":{}},"body":{"interfaces/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/FileInputComponent.html":{},"coverage.html":{}}}],["alertservicesubscriber",{"_index":14,"title":{"interfaces/AlertServiceSubscriber.html":{}},"body":{"interfaces/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"coverage.html":{}}}],["alignment",{"_index":614,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{}}}],["allows",{"_index":1262,"title":{},"body":{"injectables/ThemeService.html":{}}}],["angular",{"_index":1327,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":419,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"dependencies.html":{}}}],["angular/core",{"_index":83,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":561,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"components/FileInputComponent.html":{},"modules/FormModule.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["angular/platform",{"_index":1028,"title":{},"body":{"modules/SbElementModule.html":{}}}],["anything",{"_index":397,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["appears",{"_index":184,"title":{},"body":{"components/AlertComponent.html":{}}}],["appeartime",{"_index":180,"title":{},"body":{"components/AlertComponent.html":{}}}],["appends",{"_index":990,"title":{},"body":{"classes/Queue.html":{}}}],["application",{"_index":1367,"title":{},"body":{"index.html":{}}}],["around",{"_index":1331,"title":{},"body":{"index.html":{}}}],["array",{"_index":76,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{}}}],["array,index",{"_index":747,"title":{},"body":{"classes/Csv.html":{}}}],["array.isarray(entry[1",{"_index":1226,"title":{},"body":{"classes/Table.html":{}}}],["array.isarray(extraclasses",{"_index":600,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["array.isarray(snap",{"_index":1114,"title":{},"body":{"components/SliderComponent.html":{}}}],["async",{"_index":183,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"classes/Csv.html":{},"classes/Table.html":{}}}],["attribute",{"_index":81,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["attribute('flipped",{"_index":90,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["attribute('hover",{"_index":540,"title":{},"body":{"components/CardComponent.html":{}}}],["attribute('pill",{"_index":91,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["attribute('plain",{"_index":92,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["attribute('round",{"_index":522,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{}}}],["attribute('shadow",{"_index":541,"title":{},"body":{"components/CardComponent.html":{}}}],["attributes",{"_index":437,"title":{},"body":{"components/ButtonComponent.html":{}}}],["automatic",{"_index":1337,"title":{},"body":{"index.html":{}}}],["available",{"_index":1360,"title":{},"body":{"index.html":{}}}],["await",{"_index":237,"title":{},"body":{"components/AlertComponent.html":{},"classes/Csv.html":{}}}],["base/base.module",{"_index":912,"title":{},"body":{"modules/FormModule.html":{}}}],["base/control",{"_index":562,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["base/selected",{"_index":586,"title":{},"body":{"components/CheckboxGroupComponent.html":{}}}],["base/selection",{"_index":587,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["base/style",{"_index":85,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ContainerComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/TableComponent.html":{}}}],["based",{"_index":481,"title":{},"body":{"components/ButtonComponent.html":{}}}],["basemodule",{"_index":404,"title":{"modules/BaseModule.html":{}},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"modules.html":{},"overview.html":{}}}],["basic",{"_index":455,"title":{},"body":{"components/ButtonComponent.html":{},"classes/Queue.html":{}}}],["blur",{"_index":817,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["boolean",{"_index":66,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{}}}],["bootstrap",{"_index":408,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"overview.html":{}}}],["border",{"_index":1252,"title":{},"body":{"components/TableComponent.html":{}}}],["box",{"_index":43,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box'},{'name",{"_index":118,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["box.component",{"_index":1034,"title":{},"body":{"modules/SbElementModule.html":{}}}],["box.component.html",{"_index":45,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box.component.ts",{"_index":36,"title":{},"body":{"components/AlertBoxComponent.html":{},"coverage.html":{}}}],["box.component.ts:11",{"_index":79,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box.component.ts:14",{"_index":72,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box.component.ts:17",{"_index":73,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box.component.ts:20",{"_index":70,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box.component.ts:22",{"_index":77,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box.component.ts:23",{"_index":78,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box.component.ts:24",{"_index":62,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box.component.ts:38",{"_index":74,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box/alert",{"_index":35,"title":{},"body":{"components/AlertBoxComponent.html":{},"modules/SbElementModule.html":{},"coverage.html":{}}}],["browse",{"_index":1374,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1029,"title":{},"body":{"modules/SbElementModule.html":{},"modules.html":{}}}],["browsermodule",{"_index":1027,"title":{},"body":{"modules/SbElementModule.html":{}}}],["btn",{"_index":495,"title":{},"body":{"components/ButtonComponent.html":{}}}],["busy",{"_index":338,"title":{},"body":{"injectables/AlertService.html":{}}}],["button",{"_index":146,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["button'},{'name",{"_index":122,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["button.component",{"_index":900,"title":{},"body":{"modules/FormModule.html":{}}}],["button.component.html",{"_index":459,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{}}}],["button.component.ts",{"_index":932,"title":{},"body":{"components/IconButtonComponent.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:11",{"_index":938,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:12",{"_index":937,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:13",{"_index":939,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:14",{"_index":936,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:17",{"_index":935,"title":{},"body":{"components/IconButtonComponent.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{}}}],["button.component.ts:18",{"_index":1049,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["button.component.ts:19",{"_index":1005,"title":{},"body":{"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{}}}],["button.component.ts:20",{"_index":940,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:22",{"_index":934,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:26",{"_index":1006,"title":{},"body":{"components/RadioButtonComponent.html":{}}}],["button.component.ts:30",{"_index":1007,"title":{},"body":{"components/RadioButtonComponent.html":{}}}],["button.component.ts:32",{"_index":1047,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["button.component.ts:36",{"_index":1046,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["button.component.ts:44",{"_index":1048,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["button.component.ts:52",{"_index":1043,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["button.component.ts:58",{"_index":1044,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["button/button.component",{"_index":898,"title":{},"body":{"modules/FormModule.html":{}}}],["button/icon",{"_index":899,"title":{},"body":{"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"coverage.html":{}}}],["button/radio",{"_index":904,"title":{},"body":{"modules/FormModule.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"coverage.html":{}}}],["button/select",{"_index":909,"title":{},"body":{"modules/FormModule.html":{},"components/SelectButtonComponent.html":{},"coverage.html":{}}}],["button__button",{"_index":1053,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["buttoncomponent",{"_index":121,"title":{"components/ButtonComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bytes",{"_index":870,"title":{},"body":{"components/FileInputComponent.html":{}}}],["call",{"_index":258,"title":{},"body":{"injectables/AlertService.html":{}}}],["called",{"_index":315,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["calles",{"_index":400,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["calling",{"_index":347,"title":{},"body":{"injectables/AlertService.html":{}}}],["calls",{"_index":394,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["card",{"_index":532,"title":{},"body":{"components/CardComponent.html":{}}}],["card'},{'name",{"_index":124,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["card.component.html",{"_index":533,"title":{},"body":{"components/CardComponent.html":{}}}],["cardcomponent",{"_index":123,"title":{"components/CardComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["care",{"_index":1343,"title":{},"body":{"index.html":{}}}],["center",{"_index":104,"title":{},"body":{"components/AlertBoxComponent.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["change",{"_index":818,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["changing",{"_index":440,"title":{},"body":{"components/ButtonComponent.html":{}}}],["check",{"_index":552,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["check(newoption",{"_index":1011,"title":{},"body":{"components/RadioButtonGroupComponent.html":{}}}],["checkbox",{"_index":128,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["checkbox'},{'name",{"_index":126,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["checkbox.component.html",{"_index":551,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox/checkbox.component",{"_index":903,"title":{},"body":{"modules/FormModule.html":{}}}],["checkboxcomponent",{"_index":125,"title":{"components/CheckboxComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["checkboxgroupcomponent",{"_index":127,"title":{"components/CheckboxGroupComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["checked",{"_index":567,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadioButtonComponent.html":{}}}],["checkfilesize",{"_index":850,"title":{},"body":{"components/FileInputComponent.html":{}}}],["checkfilesize(file",{"_index":856,"title":{},"body":{"components/FileInputComponent.html":{}}}],["checkout",{"_index":1363,"title":{},"body":{"index.html":{}}}],["checks",{"_index":297,"title":{},"body":{"injectables/AlertService.html":{},"classes/Queue.html":{}}}],["choose",{"_index":863,"title":{},"body":{"components/FileInputComponent.html":{}}}],["class",{"_index":89,"title":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"classes/Csv.html":{},"classes/Queue.html":{},"classes/Table.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["classes",{"_index":97,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"overview.html":{}}}],["classes.push(!this.showarrow",{"_index":102,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["classes.push('is",{"_index":1251,"title":{},"body":{"components/TableComponent.html":{}}}],["classes.push('sb",{"_index":1052,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["classes.push(classname",{"_index":607,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["classes.push(this.color",{"_index":608,"title":{},"body":{"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{}}}],["classes.push(this.dim",{"_index":927,"title":{},"body":{"components/GridComponent.html":{}}}],["classes.push(this.disabled",{"_index":702,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["classes.push(this.flipped",{"_index":99,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["classes.push(this.focused",{"_index":709,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["classes.push(this.gap",{"_index":929,"title":{},"body":{"components/GridComponent.html":{}}}],["classes.push(this.groupalign",{"_index":890,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["classes.push(this.hover",{"_index":544,"title":{},"body":{"components/CardComponent.html":{}}}],["classes.push(this.label",{"_index":564,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadioButtonComponent.html":{},"components/SliderComponent.html":{}}}],["classes.push(this.pill",{"_index":100,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["classes.push(this.plain",{"_index":101,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["classes.push(this.pristine",{"_index":703,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["classes.push(this.rootclass",{"_index":605,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"components/InputComponent.html":{}}}],["classes.push(this.round",{"_index":530,"title":{},"body":{"components/ButtonComponent.html":{}}}],["classes.push(this.shadow",{"_index":545,"title":{},"body":{"components/CardComponent.html":{}}}],["classes.push(this.show",{"_index":247,"title":{},"body":{"components/AlertComponent.html":{}}}],["classes.push(this.showoptions",{"_index":1054,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["classes.push(this.showvalue",{"_index":1122,"title":{},"body":{"components/SliderComponent.html":{}}}],["classes.push(this.size",{"_index":712,"title":{},"body":{"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{}}}],["classes.push(this.subrootclass",{"_index":1254,"title":{},"body":{"components/TableComponent.html":{}}}],["classes.push(this.theme",{"_index":719,"title":{},"body":{"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["classes.push(this.touched",{"_index":706,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["classes.push(this.value",{"_index":566,"title":{},"body":{"components/CheckboxComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["classname",{"_index":604,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["classnameinputdirective",{"_index":157,"title":{"directives/ClassNameInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cli",{"_index":1328,"title":{},"body":{"index.html":{}}}],["clickable",{"_index":491,"title":{},"body":{"components/ButtonComponent.html":{}}}],["clone",{"_index":615,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["clone.alignment",{"_index":645,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["clone.color",{"_index":644,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["clone.name",{"_index":642,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["closed",{"_index":1056,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["cluster_basemodule",{"_index":411,"title":{},"body":{"modules/BaseModule.html":{},"overview.html":{}}}],["cluster_basemodule_declarations",{"_index":413,"title":{},"body":{"modules/BaseModule.html":{},"overview.html":{}}}],["cluster_basemodule_exports",{"_index":412,"title":{},"body":{"modules/BaseModule.html":{},"overview.html":{}}}],["cluster_formmodule",{"_index":893,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_declarations",{"_index":896,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_exports",{"_index":894,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_imports",{"_index":895,"title":{},"body":{"modules/FormModule.html":{}}}],["cluster_sbelementmodule",{"_index":1021,"title":{},"body":{"modules/SbElementModule.html":{},"overview.html":{}}}],["cluster_sbelementmodule_declarations",{"_index":1023,"title":{},"body":{"modules/SbElementModule.html":{},"overview.html":{}}}],["cluster_sbelementmodule_exports",{"_index":1024,"title":{},"body":{"modules/SbElementModule.html":{},"overview.html":{}}}],["cluster_sbelementmodule_imports",{"_index":1022,"title":{},"body":{"modules/SbElementModule.html":{}}}],["collected",{"_index":292,"title":{},"body":{"injectables/AlertService.html":{}}}],["collector",{"_index":294,"title":{},"body":{"injectables/AlertService.html":{}}}],["colon",{"_index":771,"title":{},"body":{"classes/Csv.html":{},"miscellaneous/enumerations.html":{}}}],["color",{"_index":18,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["colorinputdirective",{"_index":159,"title":{"directives/ColorInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["colors",{"_index":267,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{}}}],["column",{"_index":640,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"classes/Table.html":{},"interfaces/TableInterface.html":{}}}],["column.length",{"_index":1231,"title":{},"body":{"classes/Table.html":{}}}],["column.name",{"_index":1257,"title":{},"body":{"components/TableComponent.html":{}}}],["column[i",{"_index":1233,"title":{},"body":{"classes/Table.html":{}}}],["columndata",{"_index":775,"title":{},"body":{"classes/Csv.html":{}}}],["columnentry",{"_index":1258,"title":{},"body":{"components/TableComponent.html":{}}}],["columnindex",{"_index":1245,"title":{},"body":{"components/TableComponent.html":{}}}],["columninformation",{"_index":610,"title":{"classes/ColumnInformation.html":{}},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"coverage.html":{}}}],["columninformation.alignment",{"_index":1256,"title":{},"body":{"components/TableComponent.html":{}}}],["columninformation.color",{"_index":1255,"title":{},"body":{"components/TableComponent.html":{}}}],["columninformation.defaults.set(info",{"_index":1222,"title":{},"body":{"classes/Table.html":{}}}],["columninformation.defaults.set({name",{"_index":1215,"title":{},"body":{"classes/Table.html":{}}}],["columninformation.map",{"_index":1221,"title":{},"body":{"classes/Table.html":{}}}],["columninformation.merge(info",{"_index":1217,"title":{},"body":{"classes/Table.html":{}}}],["columninformation.push(info",{"_index":1218,"title":{},"body":{"classes/Table.html":{}}}],["columninformation]{@link",{"_index":1209,"title":{},"body":{"classes/Table.html":{}}}],["columninformationdefaults",{"_index":613,"title":{"classes/ColumnInformationDefaults.html":{}},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"coverage.html":{}}}],["columninformationdefaults:4",{"_index":623,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["columninformationdefaults:5",{"_index":622,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["columninformationdefaults:6",{"_index":621,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["columninformationinterface",{"_index":639,"title":{"interfaces/ColumnInformationInterface.html":{}},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"classes/Table.html":{},"interfaces/TableInterface.html":{},"coverage.html":{}}}],["columninformationoptions",{"_index":1196,"title":{},"body":{"classes/Table.html":{}}}],["columninformationoptions[index",{"_index":1216,"title":{},"body":{"classes/Table.html":{}}}],["columninformationoptionsinterface",{"_index":626,"title":{"interfaces/ColumnInformationOptionsInterface.html":{}},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"classes/Table.html":{},"coverage.html":{}}}],["columnname",{"_index":745,"title":{},"body":{"classes/Csv.html":{},"classes/Table.html":{}}}],["columns",{"_index":1169,"title":{},"body":{"classes/Table.html":{},"interfaces/TableInterface.html":{}}}],["columns.foreach(column",{"_index":1230,"title":{},"body":{"classes/Table.html":{}}}],["columns.push(entry[1",{"_index":1227,"title":{},"body":{"classes/Table.html":{}}}],["columnstorows",{"_index":1178,"title":{},"body":{"classes/Table.html":{}}}],["columnstorows(columns",{"_index":1193,"title":{},"body":{"classes/Table.html":{}}}],["combine",{"_index":446,"title":{},"body":{"components/ButtonComponent.html":{}}}],["comma",{"_index":770,"title":{},"body":{"classes/Csv.html":{},"miscellaneous/enumerations.html":{}}}],["commit",{"_index":1267,"title":{},"body":{"injectables/ThemeService.html":{}}}],["commit(theme",{"_index":1268,"title":{},"body":{"injectables/ThemeService.html":{}}}],["commonmodule",{"_index":418,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{}}}],["component",{"_index":28,"title":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":117,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["components",{"_index":30,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"overview.html":{}}}],["components/alert",{"_index":1033,"title":{},"body":{"modules/SbElementModule.html":{}}}],["components/alert/alert.component",{"_index":1036,"title":{},"body":{"modules/SbElementModule.html":{}}}],["components/base/base.module",{"_index":1030,"title":{},"body":{"modules/SbElementModule.html":{}}}],["components/base/control",{"_index":1073,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["components/base/style",{"_index":1039,"title":{},"body":{"modules/SbElementModule.html":{}}}],["components/card/card.component",{"_index":1037,"title":{},"body":{"modules/SbElementModule.html":{}}}],["components/container/container.component",{"_index":1032,"title":{},"body":{"modules/SbElementModule.html":{}}}],["components/form/form.module",{"_index":1031,"title":{},"body":{"modules/SbElementModule.html":{}}}],["components/grid/grid.component",{"_index":1038,"title":{},"body":{"modules/SbElementModule.html":{}}}],["components/table/table.component",{"_index":1035,"title":{},"body":{"modules/SbElementModule.html":{}}}],["consists",{"_index":1168,"title":{},"body":{"classes/Table.html":{}}}],["constructed",{"_index":1330,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":58,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"classes/Table.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["constructor(alertservice",{"_index":192,"title":{},"body":{"components/AlertComponent.html":{},"components/FileInputComponent.html":{}}}],["constructor(data",{"_index":1183,"title":{},"body":{"classes/Table.html":{}}}],["constructor(flipped",{"_index":59,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["constructor(header",{"_index":735,"title":{},"body":{"classes/Csv.html":{}}}],["constructor(hover",{"_index":535,"title":{},"body":{"components/CardComponent.html":{}}}],["constructor(pill",{"_index":933,"title":{},"body":{"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["constructor(round",{"_index":466,"title":{},"body":{"components/ButtonComponent.html":{}}}],["constructor(themeservice",{"_index":713,"title":{},"body":{"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["container",{"_index":666,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container'},{'name",{"_index":131,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["container.component.html",{"_index":667,"title":{},"body":{"components/ContainerComponent.html":{}}}],["containercomponent",{"_index":130,"title":{"components/ContainerComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contains",{"_index":1192,"title":{},"body":{"classes/Table.html":{},"interfaces/TableInterface.html":{}}}],["content",{"_index":782,"title":{},"body":{"classes/Csv.html":{}}}],["context",{"_index":1311,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":423,"title":{},"body":{"modules/BaseModule.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{}}}],["controlvalueaccessor",{"_index":671,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["controlvalueaccessorbasedirective",{"_index":160,"title":{"directives/ControlValueAccessorBaseDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["controlvalueaccessorclassnameinputdirective",{"_index":161,"title":{"directives/ControlValueAccessorClassNameInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["controlvalueaccessorcolorinputdirective",{"_index":162,"title":{"directives/ControlValueAccessorColorInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["controlvalueaccessorsizecolorinputdirective",{"_index":163,"title":{"directives/ControlValueAccessorSizeColorInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["controlvalueaccessorsizeinputdirective",{"_index":164,"title":{"directives/ControlValueAccessorSizeInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["controlvalueaccessorsizethemecolorinputdirective",{"_index":165,"title":{"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["controlvalueaccessorthemecolorinputdirective",{"_index":166,"title":{"directives/ControlValueAccessorThemeColorInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coverage",{"_index":1280,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":11,"title":{},"body":{"interfaces/Alert.html":{},"injectables/AlertService.html":{},"classes/Table.html":{}}}],["created",{"_index":276,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["creates",{"_index":312,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{}}}],["csv",{"_index":720,"title":{"classes/Csv.html":{}},"body":{"classes/Csv.html":{},"classes/Table.html":{},"coverage.html":{}}}],["csv.foreachcolumnname((columnname",{"_index":1214,"title":{},"body":{"classes/Table.html":{}}}],["csv.parsefile(csvfile).then(csv",{"_index":1213,"title":{},"body":{"classes/Table.html":{}}}],["csv/csv",{"_index":1206,"title":{},"body":{"classes/Table.html":{}}}],["csvfile",{"_index":1198,"title":{},"body":{"classes/Table.html":{}}}],["current",{"_index":350,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"classes/Queue.html":{},"injectables/ThemeService.html":{}}}],["customicon",{"_index":55,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["customize",{"_index":273,"title":{},"body":{"injectables/AlertService.html":{}}}],["d",{"_index":316,"title":{},"body":{"injectables/AlertService.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{}}}],["data",{"_index":722,"title":{},"body":{"classes/Csv.html":{},"classes/Table.html":{},"interfaces/TableInterface.html":{}}}],["data]{@link",{"_index":1208,"title":{},"body":{"classes/Table.html":{}}}],["datastructure",{"_index":1166,"title":{},"body":{"classes/Table.html":{}}}],["decimalplaces",{"_index":1081,"title":{},"body":{"components/SliderComponent.html":{}}}],["declarations",{"_index":407,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"overview.html":{}}}],["default",{"_index":67,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultmessage",{"_index":849,"title":{},"body":{"components/FileInputComponent.html":{}}}],["defaults",{"_index":619,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["defaultvalue",{"_index":632,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["defined",{"_index":61,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["defines",{"_index":478,"title":{},"body":{"components/ButtonComponent.html":{}}}],["delimiter",{"_index":723,"title":{},"body":{"classes/Csv.html":{},"miscellaneous/enumerations.html":{}}}],["dependencies",{"_index":406,"title":{"dependencies.html":{}},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dequeue",{"_index":970,"title":{},"body":{"classes/Queue.html":{}}}],["dequeues",{"_index":981,"title":{},"body":{"classes/Queue.html":{}}}],["dequeuing",{"_index":964,"title":{},"body":{"classes/Queue.html":{}}}],["describes",{"_index":8,"title":{},"body":{"interfaces/Alert.html":{}}}],["description",{"_index":7,"title":{},"body":{"interfaces/Alert.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"classes/Queue.html":{},"classes/Table.html":{},"injectables/ThemeService.html":{}}}],["dev",{"_index":1355,"title":{},"body":{"index.html":{}}}],["different",{"_index":265,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"classes/Table.html":{},"injectables/ThemeService.html":{}}}],["dim",{"_index":920,"title":{},"body":{"components/GridComponent.html":{}}}],["directive",{"_index":115,"title":{"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/StateManagerDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["directives",{"_index":156,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{},"overview.html":{}}}],["directory",{"_index":1370,"title":{},"body":{"index.html":{}}}],["dirty",{"_index":705,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["disabled",{"_index":462,"title":{},"body":{"components/ButtonComponent.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"components/IconButtonComponent.html":{},"directives/StateManagerDirective.html":{}}}],["disabled(isdisabled",{"_index":518,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{},"directives/StateManagerDirective.html":{}}}],["disabled]{@link",{"_index":517,"title":{},"body":{"components/ButtonComponent.html":{}}}],["display",{"_index":255,"title":{},"body":{"injectables/AlertService.html":{}}}],["documentation",{"_index":1281,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":32,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["each",{"_index":1171,"title":{},"body":{"classes/Table.html":{},"interfaces/TableInterface.html":{}}}],["el",{"_index":42,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["element",{"_index":114,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"index.html":{}}}],["element.module.ts",{"_index":1026,"title":{},"body":{"modules/SbElementModule.html":{}}}],["elementand",{"_index":1341,"title":{},"body":{"index.html":{}}}],["elements",{"_index":966,"title":{},"body":{"classes/Queue.html":{},"injectables/ThemeService.html":{}}}],["emitblur",{"_index":812,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["emitchange",{"_index":678,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{},"directives/EventManagerDirective.html":{}}}],["emitchange(value",{"_index":824,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["emitfocus",{"_index":813,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["empty",{"_index":298,"title":{},"body":{"injectables/AlertService.html":{},"classes/Queue.html":{},"classes/Table.html":{}}}],["end_delimiter",{"_index":724,"title":{},"body":{"classes/Csv.html":{}}}],["enqueue",{"_index":975,"title":{},"body":{"classes/Queue.html":{}}}],["enqueue(value",{"_index":987,"title":{},"body":{"classes/Queue.html":{}}}],["enqueues",{"_index":989,"title":{},"body":{"classes/Queue.html":{}}}],["enqueuing",{"_index":965,"title":{},"body":{"classes/Queue.html":{}}}],["entries",{"_index":1223,"title":{},"body":{"classes/Table.html":{}}}],["entries.foreach((entry",{"_index":1225,"title":{},"body":{"classes/Table.html":{}}}],["entry[0",{"_index":1228,"title":{},"body":{"classes/Table.html":{}}}],["enum",{"_index":769,"title":{},"body":{"classes/Csv.html":{}}}],["enumerations",{"_index":1320,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":972,"title":{},"body":{"classes/Queue.html":{}}}],["error('cannot",{"_index":510,"title":{},"body":{"components/ButtonComponent.html":{}}}],["event",{"_index":691,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["eventemitter",{"_index":819,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["eventmanagerdirective",{"_index":167,"title":{"directives/EventManagerDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["events",{"_index":834,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["everything",{"_index":274,"title":{},"body":{"injectables/AlertService.html":{}}}],["example",{"_index":454,"title":{},"body":{"components/ButtonComponent.html":{}}}],["export",{"_index":24,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["exports",{"_index":410,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"overview.html":{}}}],["extends",{"_index":37,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{}}}],["extraclasses",{"_index":593,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["extraclasses(extraclasses",{"_index":599,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["extraclasses.split",{"_index":602,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["false",{"_index":69,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{}}}],["field",{"_index":1175,"title":{},"body":{"classes/Table.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["file.name",{"_index":874,"title":{},"body":{"components/FileInputComponent.html":{}}}],["file.size",{"_index":879,"title":{},"body":{"components/FileInputComponent.html":{}}}],["file.text",{"_index":783,"title":{},"body":{"classes/Csv.html":{}}}],["file.type",{"_index":779,"title":{},"body":{"classes/Csv.html":{}}}],["fileinputcomponent",{"_index":132,"title":{"components/FileInputComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fileinputcomponent.defaultmessage",{"_index":865,"title":{},"body":{"components/FileInputComponent.html":{}}}],["filelist",{"_index":860,"title":{},"body":{"components/FileInputComponent.html":{}}}],["files",{"_index":862,"title":{},"body":{"components/FileInputComponent.html":{},"index.html":{}}}],["files.item(0",{"_index":871,"title":{},"body":{"components/FileInputComponent.html":{}}}],["filter(classname",{"_index":603,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["finished",{"_index":295,"title":{},"body":{"injectables/AlertService.html":{}}}],["finishing",{"_index":402,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["first",{"_index":982,"title":{},"body":{"classes/Queue.html":{}}}],["firstelement",{"_index":796,"title":{},"body":{"classes/Csv.html":{}}}],["firstelement.length",{"_index":800,"title":{},"body":{"classes/Csv.html":{}}}],["firstelement.slice(1",{"_index":799,"title":{},"body":{"classes/Csv.html":{}}}],["flag",{"_index":344,"title":{},"body":{"injectables/AlertService.html":{}}}],["flipped",{"_index":47,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["fn",{"_index":749,"title":{},"body":{"classes/Csv.html":{},"directives/EventManagerDirective.html":{}}}],["fn(columnname",{"_index":774,"title":{},"body":{"classes/Csv.html":{}}}],["focus",{"_index":710,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/EventManagerDirective.html":{}}}],["focused",{"_index":1129,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["focused(isfocused",{"_index":1160,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["follow",{"_index":1351,"title":{},"body":{"index.html":{}}}],["foreachcolumn",{"_index":727,"title":{},"body":{"classes/Csv.html":{}}}],["foreachcolumn(fn",{"_index":744,"title":{},"body":{"classes/Csv.html":{}}}],["foreachcolumnname",{"_index":728,"title":{},"body":{"classes/Csv.html":{}}}],["foreachcolumnname(fn",{"_index":751,"title":{},"body":{"classes/Csv.html":{}}}],["form",{"_index":135,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["formgroup",{"_index":488,"title":{},"body":{"components/ButtonComponent.html":{}}}],["formgroupcomponent",{"_index":134,"title":{"components/FormGroupComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formmodule",{"_index":892,"title":{"modules/FormModule.html":{}},"body":{"modules/FormModule.html":{},"modules/SbElementModule.html":{},"modules.html":{},"overview.html":{}}}],["formsmodule",{"_index":911,"title":{},"body":{"modules/FormModule.html":{},"modules/SbElementModule.html":{}}}],["free",{"_index":396,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["fromcsv",{"_index":1179,"title":{},"body":{"classes/Table.html":{}}}],["fromcsv(csvfile",{"_index":1195,"title":{},"body":{"classes/Table.html":{}}}],["fromjson",{"_index":1180,"title":{},"body":{"classes/Table.html":{}}}],["fromjson(table",{"_index":1199,"title":{},"body":{"classes/Table.html":{}}}],["fromrows",{"_index":1181,"title":{},"body":{"classes/Table.html":{}}}],["fromrows(rows",{"_index":1202,"title":{},"body":{"classes/Table.html":{}}}],["function",{"_index":750,"title":{},"body":{"classes/Csv.html":{},"directives/EventManagerDirective.html":{}}}],["gap",{"_index":921,"title":{},"body":{"components/GridComponent.html":{}}}],["garbage",{"_index":293,"title":{},"body":{"injectables/AlertService.html":{}}}],["generated",{"_index":1326,"title":{},"body":{"index.html":{}}}],["getbuttonclasses",{"_index":1042,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["getclasses",{"_index":53,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{}}}],["getclasses]{@link",{"_index":528,"title":{},"body":{"components/ButtonComponent.html":{}}}],["getcolumnclasses",{"_index":1238,"title":{},"body":{"components/TableComponent.html":{}}}],["getcolumnclasses(columnindex",{"_index":1243,"title":{},"body":{"components/TableComponent.html":{}}}],["getcolumndata",{"_index":729,"title":{},"body":{"classes/Csv.html":{}}}],["getcolumndata(index",{"_index":754,"title":{},"body":{"classes/Csv.html":{}}}],["getdefaults",{"_index":637,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["getdisabled",{"_index":501,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{},"directives/StateManagerDirective.html":{}}}],["getfocused",{"_index":1152,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["gethasgrouptitle",{"_index":887,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["getinputclasses",{"_index":945,"title":{},"body":{"components/InputComponent.html":{}}}],["getlength",{"_index":993,"title":{},"body":{"classes/Queue.html":{}}}],["getmaxcolumnlength",{"_index":1182,"title":{},"body":{"classes/Table.html":{}}}],["getmaxcolumnlength(columns",{"_index":1204,"title":{},"body":{"classes/Table.html":{}}}],["getmessage",{"_index":219,"title":{},"body":{"components/AlertComponent.html":{}}}],["getnumberpipingvalue",{"_index":1106,"title":{},"body":{"components/SliderComponent.html":{}}}],["getoptions",{"_index":1069,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["getplaceholderclasses",{"_index":946,"title":{},"body":{"components/InputComponent.html":{}}}],["getpristine",{"_index":1148,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["gets",{"_index":283,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"classes/Queue.html":{},"injectables/ThemeService.html":{}}}],["getstep",{"_index":1102,"title":{},"body":{"components/SliderComponent.html":{}}}],["getting",{"_index":1322,"title":{"index.html":{}},"body":{}}],["gettouched",{"_index":1144,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["getvalue",{"_index":687,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["github",{"_index":1364,"title":{},"body":{"index.html":{}}}],["given",{"_index":395,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["global",{"_index":254,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ThemeService.html":{}}}],["go",{"_index":300,"title":{},"body":{"injectables/AlertService.html":{},"index.html":{}}}],["good",{"_index":1359,"title":{},"body":{"index.html":{}}}],["grid",{"_index":918,"title":{},"body":{"components/GridComponent.html":{}}}],["grid'},{'name",{"_index":137,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["grid.component.html",{"_index":919,"title":{},"body":{"components/GridComponent.html":{}}}],["gridcomponent",{"_index":136,"title":{"components/GridComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["group",{"_index":572,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"components/FormGroupComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["group'},{'name",{"_index":129,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["group.component",{"_index":906,"title":{},"body":{"modules/FormModule.html":{}}}],["group.component.html",{"_index":573,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"components/FormGroupComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["group.component.ts",{"_index":571,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"components/FormGroupComponent.html":{},"components/RadioButtonGroupComponent.html":{},"coverage.html":{}}}],["group.component.ts:10",{"_index":886,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["group.component.ts:13",{"_index":884,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["group.component.ts:14",{"_index":888,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["group.component.ts:16",{"_index":1015,"title":{},"body":{"components/RadioButtonGroupComponent.html":{}}}],["group.component.ts:17",{"_index":584,"title":{},"body":{"components/CheckboxGroupComponent.html":{}}}],["group.component.ts:19",{"_index":883,"title":{},"body":{"components/FormGroupComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["group.component.ts:20",{"_index":580,"title":{},"body":{"components/CheckboxGroupComponent.html":{}}}],["group.component.ts:21",{"_index":885,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["group.component.ts:22",{"_index":1009,"title":{},"body":{"components/RadioButtonGroupComponent.html":{}}}],["group.component.ts:23",{"_index":579,"title":{},"body":{"components/CheckboxGroupComponent.html":{}}}],["group.component.ts:25",{"_index":1010,"title":{},"body":{"components/RadioButtonGroupComponent.html":{}}}],["group.component.ts:26",{"_index":581,"title":{},"body":{"components/CheckboxGroupComponent.html":{}}}],["group.component.ts:27",{"_index":1012,"title":{},"body":{"components/RadioButtonGroupComponent.html":{}}}],["group.component.ts:28",{"_index":582,"title":{},"body":{"components/CheckboxGroupComponent.html":{}}}],["group.component.ts:32",{"_index":583,"title":{},"body":{"components/CheckboxGroupComponent.html":{}}}],["group.component.ts:34",{"_index":1014,"title":{},"body":{"components/RadioButtonGroupComponent.html":{}}}],["group/base/selection",{"_index":908,"title":{},"body":{"modules/FormModule.html":{},"components/SelectButtonComponent.html":{}}}],["group/checkbox/checkbox",{"_index":907,"title":{},"body":{"modules/FormModule.html":{}}}],["group/form",{"_index":914,"title":{},"body":{"modules/FormModule.html":{}}}],["group/radio",{"_index":905,"title":{},"body":{"modules/FormModule.html":{}}}],["groupalign",{"_index":576,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"components/FormGroupComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["grouptitle",{"_index":577,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"components/FormGroupComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["handles",{"_index":963,"title":{},"body":{"classes/Queue.html":{}}}],["hasgrouptitle",{"_index":882,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["header",{"_index":725,"title":{},"body":{"classes/Csv.html":{}}}],["here",{"_index":1358,"title":{},"body":{"index.html":{}}}],["hides",{"_index":185,"title":{},"body":{"components/AlertComponent.html":{}}}],["hidetime",{"_index":181,"title":{},"body":{"components/AlertComponent.html":{}}}],["holding",{"_index":1167,"title":{},"body":{"classes/Table.html":{}}}],["holds",{"_index":979,"title":{},"body":{"classes/Queue.html":{}}}],["hover",{"_index":452,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{}}}],["html",{"_index":113,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["icon",{"_index":139,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["icon'},{'name",{"_index":141,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["icon.component.html",{"_index":942,"title":{},"body":{"components/IconComponent.html":{}}}],["icon/icon.component",{"_index":913,"title":{},"body":{"modules/FormModule.html":{}}}],["iconbuttoncomponent",{"_index":138,"title":{"components/IconButtonComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["iconcomponent",{"_index":140,"title":{"components/IconComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["identifier",{"_index":1282,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":262,"title":{},"body":{"injectables/AlertService.html":{}}}],["implemented",{"_index":389,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["implementing",{"_index":1371,"title":{},"body":{"index.html":{}}}],["implements",{"_index":177,"title":{},"body":{"components/AlertComponent.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"classes/Table.html":{}}}],["import",{"_index":80,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["imports",{"_index":432,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{}}}],["inactive",{"_index":249,"title":{},"body":{"components/AlertComponent.html":{}}}],["include",{"_index":1356,"title":{},"body":{"index.html":{}}}],["included",{"_index":484,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/ThemeService.html":{}}}],["incoming",{"_index":264,"title":{},"body":{"injectables/AlertService.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":1060,"title":{},"body":{"interfaces/SelectedOptions.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["info.alignment",{"_index":657,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["info.color",{"_index":653,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["info.name",{"_index":649,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["inform",{"_index":263,"title":{},"body":{"injectables/AlertService.html":{}}}],["inform(message",{"_index":318,"title":{},"body":{"injectables/AlertService.html":{}}}],["information",{"_index":636,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"classes/Table.html":{},"interfaces/TableInterface.html":{}}}],["information.interface",{"_index":641,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"classes/Table.html":{},"interfaces/TableInterface.html":{}}}],["information.interface.ts",{"_index":664,"title":{},"body":{"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"coverage.html":{}}}],["information.ts",{"_index":612,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"coverage.html":{}}}],["information.ts:12",{"_index":638,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["information.ts:16",{"_index":624,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["information.ts:24",{"_index":635,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["information.ts:31",{"_index":628,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["information.ts:4",{"_index":663,"title":{},"body":{"classes/ColumnInformationDefaults.html":{}}}],["information.ts:47",{"_index":633,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["information.ts:5",{"_index":662,"title":{},"body":{"classes/ColumnInformationDefaults.html":{}}}],["information.ts:6",{"_index":661,"title":{},"body":{"classes/ColumnInformationDefaults.html":{}}}],["informs",{"_index":279,"title":{},"body":{"injectables/AlertService.html":{}}}],["inherited",{"_index":620,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["inidcate",{"_index":356,"title":{},"body":{"injectables/AlertService.html":{}}}],["initiated",{"_index":1186,"title":{},"body":{"classes/Table.html":{}}}],["initiates",{"_index":1185,"title":{},"body":{"classes/Table.html":{}}}],["initiation",{"_index":1189,"title":{},"body":{"classes/Table.html":{}}}],["injectable",{"_index":250,"title":{"injectables/AlertService.html":{},"injectables/ThemeService.html":{}},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["injectables",{"_index":251,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ThemeService.html":{},"overview.html":{}}}],["innerchange",{"_index":679,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["innervalue",{"_index":672,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["input",{"_index":82,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"components/ToggleSwitchComponent.html":{}}}],["input'},{'name",{"_index":133,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["input(files",{"_index":859,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component",{"_index":916,"title":{},"body":{"modules/FormModule.html":{}}}],["input.component.html",{"_index":848,"title":{},"body":{"components/FileInputComponent.html":{},"components/InputComponent.html":{}}}],["input.component.ts",{"_index":847,"title":{},"body":{"components/FileInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:18",{"_index":868,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:21",{"_index":855,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:25",{"_index":854,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:27",{"_index":867,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:28",{"_index":866,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:30",{"_index":864,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:31",{"_index":853,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:44",{"_index":861,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:57",{"_index":857,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:67",{"_index":858,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.directive",{"_index":88,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"modules/SbElementModule.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{}}}],["input.directive.ts",{"_index":591,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"coverage.html":{}}}],["input.directive.ts:10",{"_index":596,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["input.directive.ts:11",{"_index":700,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{}}}],["input.directive.ts:12",{"_index":594,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/SizeInputDirective.html":{}}}],["input.directive.ts:13",{"_index":698,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{}}}],["input.directive.ts:15",{"_index":711,"title":{},"body":{"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{}}}],["input.directive.ts:16",{"_index":714,"title":{},"body":{"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{}}}],["input.directive.ts:19",{"_index":1260,"title":{},"body":{"directives/ThemeInputDirective.html":{}}}],["input.directive.ts:21",{"_index":595,"title":{},"body":{"directives/ClassNameInputDirective.html":{}}}],["input.directive.ts:22",{"_index":699,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{}}}],["input.directive.ts:25",{"_index":715,"title":{},"body":{"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{}}}],["input.directive.ts:8",{"_index":597,"title":{},"body":{"directives/ClassNameInputDirective.html":{}}}],["input.directive.ts:9",{"_index":701,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["input/class",{"_index":426,"title":{},"body":{"modules/BaseModule.html":{},"directives/ClassNameInputDirective.html":{},"components/GridComponent.html":{},"coverage.html":{}}}],["input/color",{"_index":421,"title":{},"body":{"modules/BaseModule.html":{},"directives/ColorInputDirective.html":{},"coverage.html":{}}}],["input/control",{"_index":428,"title":{},"body":{"modules/BaseModule.html":{},"components/CheckboxComponent.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["input/file",{"_index":846,"title":{},"body":{"components/FileInputComponent.html":{},"modules/FormModule.html":{},"coverage.html":{}}}],["input/input.component",{"_index":915,"title":{},"body":{"modules/FormModule.html":{}}}],["input/size",{"_index":86,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ContainerComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"coverage.html":{}}}],["input/theme",{"_index":422,"title":{},"body":{"modules/BaseModule.html":{},"modules/SbElementModule.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"coverage.html":{}}}],["inputcomponent",{"_index":142,"title":{"components/InputComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inputs",{"_index":54,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{}}}],["inside",{"_index":282,"title":{},"body":{"injectables/AlertService.html":{}}}],["install",{"_index":1345,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1336,"title":{},"body":{"index.html":{}}}],["instead",{"_index":973,"title":{},"body":{"classes/Queue.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Alert.html":{},"interfaces/AlertServiceSubscriber.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"interfaces/SelectedOptions.html":{},"interfaces/TableInterface.html":{}},"body":{"interfaces/Alert.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"interfaces/SelectedOptions.html":{},"interfaces/TableInterface.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Alert.html":{},"interfaces/AlertServiceSubscriber.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"interfaces/SelectedOptions.html":{},"interfaces/TableInterface.html":{},"overview.html":{}}}],["invert",{"_index":450,"title":{},"body":{"components/ButtonComponent.html":{}}}],["isbusy",{"_index":304,"title":{},"body":{"injectables/AlertService.html":{}}}],["isbusy]{@link",{"_index":377,"title":{},"body":{"injectables/AlertService.html":{}}}],["isdisabled",{"_index":489,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{},"directives/StateManagerDirective.html":{}}}],["isempty",{"_index":976,"title":{},"body":{"classes/Queue.html":{}}}],["isfocused",{"_index":1155,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["ispill",{"_index":463,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ispill(ispill",{"_index":514,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ispill]=\"{boolean",{"_index":444,"title":{},"body":{"components/ButtonComponent.html":{}}}],["isplain",{"_index":464,"title":{},"body":{"components/ButtonComponent.html":{}}}],["isplain(isplain",{"_index":516,"title":{},"body":{"components/ButtonComponent.html":{}}}],["isplain/plain",{"_index":449,"title":{},"body":{"components/ButtonComponent.html":{}}}],["isplain`/`plain",{"_index":504,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ispristine",{"_index":1150,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["isround",{"_index":465,"title":{},"body":{"components/ButtonComponent.html":{}}}],["isround(isround",{"_index":507,"title":{},"body":{"components/ButtonComponent.html":{}}}],["isround]=\"{boolean",{"_index":445,"title":{},"body":{"components/ButtonComponent.html":{}}}],["istouched",{"_index":1147,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["itself",{"_index":391,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["key",{"_index":1061,"title":{},"body":{"interfaces/SelectedOptions.html":{}}}],["label",{"_index":553,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadioButtonComponent.html":{},"components/SliderComponent.html":{}}}],["labelposition",{"_index":554,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["lastelement",{"_index":801,"title":{},"body":{"classes/Csv.html":{}}}],["lastelement.length",{"_index":805,"title":{},"body":{"classes/Csv.html":{}}}],["lastelement.substring(0",{"_index":804,"title":{},"body":{"classes/Csv.html":{}}}],["left",{"_index":578,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"components/FormGroupComponent.html":{},"classes/Queue.html":{},"components/RadioButtonGroupComponent.html":{}}}],["legend",{"_index":112,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"overview.html":{}}}],["length",{"_index":968,"title":{},"body":{"classes/Queue.html":{}}}],["lets",{"_index":272,"title":{},"body":{"injectables/AlertService.html":{}}}],["library",{"_index":1325,"title":{},"body":{"index.html":{}}}],["lifecycle",{"_index":281,"title":{},"body":{"injectables/AlertService.html":{}}}],["light",{"_index":1264,"title":{},"body":{"injectables/ThemeService.html":{}}}],["limit",{"_index":851,"title":{},"body":{"components/FileInputComponent.html":{}}}],["link",{"_index":360,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"classes/Table.html":{}}}],["literal",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["located",{"_index":1368,"title":{},"body":{"index.html":{}}}],["longer",{"_index":490,"title":{},"body":{"components/ButtonComponent.html":{}}}],["look",{"_index":1361,"title":{},"body":{"index.html":{}}}],["management",{"_index":969,"title":{},"body":{"classes/Queue.html":{}}}],["manager.directive",{"_index":430,"title":{},"body":{"modules/BaseModule.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/EventManagerDirective.html":{}}}],["manager.directive.ts",{"_index":809,"title":{},"body":{"directives/EventManagerDirective.html":{},"directives/StateManagerDirective.html":{},"coverage.html":{}}}],["manager.directive.ts:10",{"_index":831,"title":{},"body":{"directives/EventManagerDirective.html":{},"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:11",{"_index":1145,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:13",{"_index":821,"title":{},"body":{"directives/EventManagerDirective.html":{},"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:15",{"_index":1132,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:16",{"_index":820,"title":{},"body":{"directives/EventManagerDirective.html":{},"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:18",{"_index":1141,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:19",{"_index":822,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["manager.directive.ts:20",{"_index":1130,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:21",{"_index":1151,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:22",{"_index":823,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["manager.directive.ts:23",{"_index":1142,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:25",{"_index":1131,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:26",{"_index":1153,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:28",{"_index":1134,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:29",{"_index":826,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["manager.directive.ts:32",{"_index":1140,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:34",{"_index":825,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["manager.directive.ts:36",{"_index":1138,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:40",{"_index":1136,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:41",{"_index":828,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["manager.directive.ts:42",{"_index":830,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["manager.directive.ts:8",{"_index":1143,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:9",{"_index":832,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["manual",{"_index":1350,"title":{},"body":{"index.html":{}}}],["matching",{"_index":26,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["math.floor(step",{"_index":1110,"title":{},"body":{"components/SliderComponent.html":{}}}],["math.round((this.max",{"_index":1117,"title":{},"body":{"components/SliderComponent.html":{}}}],["max",{"_index":1083,"title":{},"body":{"components/SliderComponent.html":{},"classes/Table.html":{}}}],["meaning",{"_index":340,"title":{},"body":{"injectables/AlertService.html":{}}}],["means",{"_index":451,"title":{},"body":{"components/ButtonComponent.html":{}}}],["mega",{"_index":869,"title":{},"body":{"components/FileInputComponent.html":{}}}],["members",{"_index":758,"title":{},"body":{"classes/Csv.html":{}}}],["merge",{"_index":617,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["merge(overwrite",{"_index":625,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["mergevalues",{"_index":618,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["mergevalues(overwrite",{"_index":630,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["message",{"_index":19,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/FileInputComponent.html":{}}}],["metadata",{"_index":39,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{}}}],["method",{"_index":271,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"classes/Queue.html":{}}}],["methods",{"_index":52,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["min",{"_index":1084,"title":{},"body":{"components/SliderComponent.html":{}}}],["minimal",{"_index":458,"title":{},"body":{"components/ButtonComponent.html":{}}}],["miscellaneous",{"_index":1319,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1188,"title":{},"body":{"classes/Table.html":{}}}],["models/alert/alert",{"_index":221,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{}}}],["models/queue/queue",{"_index":358,"title":{},"body":{"injectables/AlertService.html":{}}}],["models/table/table.interface",{"_index":1249,"title":{},"body":{"components/TableComponent.html":{}}}],["module",{"_index":403,"title":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{}},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"overview.html":{}}}],["modules",{"_index":405,"title":{"modules.html":{}},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"modules.html":{},"overview.html":{}}}],["multi",{"_index":550,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["name",{"_index":64,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["necessary",{"_index":1346,"title":{},"body":{"index.html":{}}}],["need",{"_index":354,"title":{},"body":{"injectables/AlertService.html":{}}}],["needed",{"_index":480,"title":{},"body":{"components/ButtonComponent.html":{}}}],["needs",{"_index":261,"title":{},"body":{"injectables/AlertService.html":{}}}],["new",{"_index":242,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"directives/ClassNameInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["newoption",{"_index":1013,"title":{},"body":{"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{}}}],["next",{"_index":346,"title":{},"body":{"injectables/AlertService.html":{},"classes/Queue.html":{}}}],["ng",{"_index":1340,"title":{},"body":{"index.html":{}}}],["ng_value_accessor",{"_index":548,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["ngmodule",{"_index":417,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{}}}],["night",{"_index":1265,"title":{},"body":{"injectables/ThemeService.html":{}}}],["normal",{"_index":435,"title":{},"body":{"components/ButtonComponent.html":{}}}],["nothing",{"_index":352,"title":{},"body":{"injectables/AlertService.html":{}}}],["notifies",{"_index":326,"title":{},"body":{"injectables/AlertService.html":{}}}],["now",{"_index":453,"title":{},"body":{"components/ButtonComponent.html":{}}}],["npm",{"_index":1353,"title":{},"body":{"index.html":{}}}],["null",{"_index":212,"title":{},"body":{"components/AlertComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/RadioButtonGroupComponent.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{}}}],["number",{"_index":196,"title":{},"body":{"components/AlertComponent.html":{},"classes/Csv.html":{},"components/FileInputComponent.html":{},"classes/Queue.html":{},"components/SliderComponent.html":{},"classes/Table.html":{},"components/TableComponent.html":{}}}],["numberpipingvalue",{"_index":1088,"title":{},"body":{"components/SliderComponent.html":{}}}],["object",{"_index":1200,"title":{},"body":{"classes/Table.html":{}}}],["object.assign",{"_index":647,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["object.assign(clone",{"_index":648,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["object.entries(table",{"_index":1224,"title":{},"body":{"classes/Table.html":{}}}],["once",{"_index":348,"title":{},"body":{"injectables/AlertService.html":{}}}],["onchangecallback",{"_index":810,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["one",{"_index":447,"title":{},"body":{"components/ButtonComponent.html":{},"classes/Queue.html":{},"classes/Table.html":{}}}],["ontouchedcallback",{"_index":811,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["open",{"_index":1055,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["operations",{"_index":962,"title":{},"body":{"classes/Queue.html":{}}}],["option",{"_index":1017,"title":{},"body":{"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{}}}],["optional",{"_index":65,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"directives/ClassNameInputDirective.html":{},"classes/ColumnInformation.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{}}}],["options",{"_index":436,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/SelectionOptionsDirective.html":{},"classes/Table.html":{}}}],["options(options",{"_index":1074,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["options.directive",{"_index":588,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"modules/FormModule.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{}}}],["options.directive.ts",{"_index":1064,"title":{},"body":{"directives/SelectionOptionsDirective.html":{},"coverage.html":{}}}],["options.directive.ts:10",{"_index":1068,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["options.directive.ts:11",{"_index":1067,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["options.directive.ts:14",{"_index":1066,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["options.directive.ts:18",{"_index":1070,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["options.ts",{"_index":1059,"title":{},"body":{"interfaces/SelectedOptions.html":{},"coverage.html":{}}}],["options.ts:1",{"_index":1062,"title":{},"body":{"interfaces/SelectedOptions.html":{}}}],["order",{"_index":392,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["otherwise",{"_index":992,"title":{},"body":{"classes/Queue.html":{}}}],["out",{"_index":287,"title":{},"body":{"injectables/AlertService.html":{},"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"overview.html":{}}}],["output",{"_index":833,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["outputs",{"_index":816,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["overview",{"_index":1375,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":629,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["overwrites",{"_index":482,"title":{},"body":{"components/ButtonComponent.html":{}}}],["package",{"_index":1314,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["packages",{"_index":1347,"title":{},"body":{"index.html":{}}}],["page",{"_index":1365,"title":{},"body":{"index.html":{}}}],["param",{"_index":506,"title":{},"body":{"components/ButtonComponent.html":{}}}],["parameter",{"_index":260,"title":{},"body":{"injectables/AlertService.html":{}}}],["parameters",{"_index":63,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"directives/ClassNameInputDirective.html":{},"classes/ColumnInformation.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{}}}],["param{alert",{"_index":383,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["param{alertservicesubscriber",{"_index":371,"title":{},"body":{"injectables/AlertService.html":{}}}],["param{any",{"_index":520,"title":{},"body":{"components/ButtonComponent.html":{}}}],["param{array",{"_index":1210,"title":{},"body":{"classes/Table.html":{}}}],["param{boolean",{"_index":526,"title":{},"body":{"components/ButtonComponent.html":{}}}],["param{string",{"_index":373,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ThemeService.html":{}}}],["param{t",{"_index":996,"title":{},"body":{"classes/Queue.html":{}}}],["param{themeservice",{"_index":521,"title":{},"body":{"components/ButtonComponent.html":{}}}],["parsefile",{"_index":730,"title":{},"body":{"classes/Csv.html":{}}}],["parsefile(file",{"_index":756,"title":{},"body":{"classes/Csv.html":{}}}],["parsestring",{"_index":731,"title":{},"body":{"classes/Csv.html":{}}}],["parsestring(string",{"_index":760,"title":{},"body":{"classes/Csv.html":{}}}],["passed",{"_index":442,"title":{},"body":{"components/ButtonComponent.html":{}}}],["passes",{"_index":269,"title":{},"body":{"injectables/AlertService.html":{}}}],["peer",{"_index":1317,"title":{},"body":{"dependencies.html":{}}}],["persistent",{"_index":627,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["persistent.alignment",{"_index":659,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["persistent.color",{"_index":655,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["persistent.name",{"_index":651,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["pill",{"_index":49,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["pill]{@link",{"_index":513,"title":{},"body":{"components/ButtonComponent.html":{}}}],["placed",{"_index":285,"title":{},"body":{"injectables/AlertService.html":{}}}],["placeholder",{"_index":852,"title":{},"body":{"components/FileInputComponent.html":{},"components/InputComponent.html":{}}}],["plain",{"_index":50,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["plain]{@link",{"_index":515,"title":{},"body":{"components/ButtonComponent.html":{}}}],["possible",{"_index":439,"title":{},"body":{"components/ButtonComponent.html":{}}}],["predefinded",{"_index":270,"title":{},"body":{"injectables/AlertService.html":{}}}],["predefined",{"_index":266,"title":{},"body":{"injectables/AlertService.html":{}}}],["primary",{"_index":305,"title":{},"body":{"injectables/AlertService.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/ThemeColorInputDirective.html":{}}}],["primary(message",{"_index":320,"title":{},"body":{"injectables/AlertService.html":{}}}],["pristine",{"_index":704,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/StateManagerDirective.html":{}}}],["pristine(ispristine",{"_index":1158,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["private",{"_index":48,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"directives/ClassNameInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"classes/Queue.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{}}}],["process",{"_index":342,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["produce",{"_index":971,"title":{},"body":{"classes/Queue.html":{}}}],["progress",{"_index":351,"title":{},"body":{"injectables/AlertService.html":{}}}],["project",{"_index":1357,"title":{},"body":{"index.html":{}}}],["promise",{"_index":201,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"classes/Csv.html":{},"classes/Table.html":{}}}],["promise(resolve",{"_index":243,"title":{},"body":{"components/AlertComponent.html":{}}}],["promise.all(this.subscribers.map(subscriber",{"_index":385,"title":{},"body":{"injectables/AlertService.html":{}}}],["promise.reject(\"file",{"_index":781,"title":{},"body":{"classes/Csv.html":{}}}],["promise.resolve",{"_index":236,"title":{},"body":{"components/AlertComponent.html":{}}}],["promise.resolve(this.show",{"_index":238,"title":{},"body":{"components/AlertComponent.html":{}}}],["properties",{"_index":17,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["property",{"_index":474,"title":{},"body":{"components/ButtonComponent.html":{}}}],["protected",{"_index":574,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/EventManagerDirective.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{}}}],["provide",{"_index":547,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["providedin",{"_index":367,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ThemeService.html":{}}}],["providers",{"_index":409,"title":{},"body":{"modules/BaseModule.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/FileInputComponent.html":{},"modules/FormModule.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{},"overview.html":{}}}],["provides",{"_index":253,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"injectables/ThemeService.html":{}}}],["public",{"_index":46,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["queue",{"_index":288,"title":{"classes/Queue.html":{}},"body":{"injectables/AlertService.html":{},"classes/Queue.html":{},"coverage.html":{}}}],["queue]{@link",{"_index":995,"title":{},"body":{"classes/Queue.html":{}}}],["radio",{"_index":144,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["radiobuttoncomponent",{"_index":143,"title":{"components/RadioButtonComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["radiobuttongroupcomponent",{"_index":145,"title":{"components/RadioButtonGroupComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ready",{"_index":280,"title":{},"body":{"injectables/AlertService.html":{}}}],["receive",{"_index":393,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["regexp",{"_index":738,"title":{},"body":{"classes/Csv.html":{}}}],["register",{"_index":390,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{},"directives/EventManagerDirective.html":{}}}],["registered",{"_index":399,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["registeronchange",{"_index":814,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["registeronchange(fn",{"_index":827,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["registerontouched",{"_index":815,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["registerontouched(fn",{"_index":829,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["remove",{"_index":345,"title":{},"body":{"injectables/AlertService.html":{}}}],["removed",{"_index":291,"title":{},"body":{"injectables/AlertService.html":{}}}],["removes",{"_index":286,"title":{},"body":{"injectables/AlertService.html":{},"classes/Queue.html":{}}}],["require",{"_index":1312,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":415,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"overview.html":{}}}],["resetalert",{"_index":186,"title":{},"body":{"components/AlertComponent.html":{}}}],["resolve",{"_index":245,"title":{},"body":{"components/AlertComponent.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["resolved",{"_index":328,"title":{},"body":{"injectables/AlertService.html":{}}}],["rest",{"_index":1344,"title":{},"body":{"index.html":{}}}],["result",{"_index":25,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["results",{"_index":27,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["return",{"_index":105,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["returns",{"_index":75,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["returns{boolean",{"_index":1003,"title":{},"body":{"classes/Queue.html":{}}}],["returns{number",{"_index":1001,"title":{},"body":{"classes/Queue.html":{}}}],["returns{promise",{"_index":384,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["returns{string",{"_index":1273,"title":{},"body":{"injectables/ThemeService.html":{}}}],["returns{t",{"_index":998,"title":{},"body":{"classes/Queue.html":{}}}],["right",{"_index":556,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["root",{"_index":368,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"injectables/ThemeService.html":{}}}],["rootclass",{"_index":51,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["round",{"_index":441,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{}}}],["round]{@link",{"_index":505,"title":{},"body":{"components/ButtonComponent.html":{}}}],["routes",{"_index":1384,"title":{"routes.html":{}},"body":{"routes.html":{}}}],["row",{"_index":766,"title":{},"body":{"classes/Csv.html":{},"classes/Table.html":{},"interfaces/TableInterface.html":{}}}],["row.push(column[i",{"_index":1232,"title":{},"body":{"classes/Table.html":{}}}],["row.split(this.usedelimiter(delimiter",{"_index":795,"title":{},"body":{"classes/Csv.html":{}}}],["row[index",{"_index":778,"title":{},"body":{"classes/Csv.html":{}}}],["rows",{"_index":732,"title":{},"body":{"classes/Csv.html":{},"classes/Table.html":{}}}],["rows(string",{"_index":762,"title":{},"body":{"classes/Csv.html":{}}}],["rows.foreach(row",{"_index":787,"title":{},"body":{"classes/Csv.html":{}}}],["rows.length",{"_index":794,"title":{},"body":{"classes/Csv.html":{}}}],["rows.push(row",{"_index":1234,"title":{},"body":{"classes/Table.html":{}}}],["rows.splice(rows.length",{"_index":793,"title":{},"body":{"classes/Csv.html":{}}}],["rows[rows.length",{"_index":792,"title":{},"body":{"classes/Csv.html":{}}}],["s",{"_index":740,"title":{},"body":{"classes/Csv.html":{}}}],["s*)(?:,|;|$)(?:\\s",{"_index":739,"title":{},"body":{"classes/Csv.html":{}}}],["save",{"_index":1354,"title":{},"body":{"index.html":{}}}],["sb",{"_index":41,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"index.html":{}}}],["sbelement",{"_index":1324,"title":{},"body":{"index.html":{}}}],["sbelementmodule",{"_index":1020,"title":{"modules/SbElementModule.html":{}},"body":{"modules/SbElementModule.html":{},"modules.html":{},"overview.html":{}}}],["schematics",{"_index":1335,"title":{},"body":{"index.html":{}}}],["scss",{"_index":1332,"title":{},"body":{"index.html":{}}}],["secondary",{"_index":306,"title":{},"body":{"injectables/AlertService.html":{}}}],["secondary(message",{"_index":322,"title":{},"body":{"injectables/AlertService.html":{}}}],["select",{"_index":148,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["select(newoption",{"_index":1045,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["selectbuttoncomponent",{"_index":147,"title":{"components/SelectButtonComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selected",{"_index":1072,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["selectedoptions",{"_index":585,"title":{"interfaces/SelectedOptions.html":{}},"body":{"components/CheckboxGroupComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"coverage.html":{}}}],["selectionoptionsdirective",{"_index":168,"title":{"directives/SelectionOptionsDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selector",{"_index":40,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{}}}],["selector]'},{'name",{"_index":158,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["semicolon",{"_index":772,"title":{},"body":{"classes/Csv.html":{},"miscellaneous/enumerations.html":{}}}],["separation",{"_index":1239,"title":{},"body":{"components/TableComponent.html":{}}}],["service",{"_index":222,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["services/alert/alert.service",{"_index":224,"title":{},"body":{"components/AlertComponent.html":{},"components/FileInputComponent.html":{}}}],["services/theme/theme.service",{"_index":84,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["set",{"_index":343,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"directives/ClassNameInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"components/IconButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"injectables/ThemeService.html":{}}}],["set(information",{"_index":634,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["setalert",{"_index":187,"title":{},"body":{"components/AlertComponent.html":{}}}],["setalert(alert",{"_index":206,"title":{},"body":{"components/AlertComponent.html":{}}}],["setdisabled(isdisabled",{"_index":503,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{},"directives/StateManagerDirective.html":{}}}],["setdisabledstate",{"_index":461,"title":{},"body":{"components/ButtonComponent.html":{},"directives/StateManagerDirective.html":{}}}],["setdisabledstate(disabled",{"_index":1133,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["setdisabledstate(isdisabled",{"_index":485,"title":{},"body":{"components/ButtonComponent.html":{}}}],["setextraclasses(extraclasses",{"_index":598,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["setfocused(isfocused",{"_index":1154,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["setfocusedstate",{"_index":1126,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["setfocusedstate(focused",{"_index":1135,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["setinnervalue",{"_index":673,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["setinnervalue(value",{"_index":676,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["setispill(ispill",{"_index":499,"title":{},"body":{"components/ButtonComponent.html":{}}}],["setisplain(isplain",{"_index":500,"title":{},"body":{"components/ButtonComponent.html":{}}}],["setisround(isround",{"_index":498,"title":{},"body":{"components/ButtonComponent.html":{}}}],["setoptions(options",{"_index":1071,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["setpristine(ispristine",{"_index":1149,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["setpristinestate",{"_index":1127,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["setpristinestate(pristine",{"_index":1137,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["sets",{"_index":468,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/ThemeService.html":{}}}],["setsnap(snap",{"_index":1105,"title":{},"body":{"components/SliderComponent.html":{}}}],["setstep(step",{"_index":1104,"title":{},"body":{"components/SliderComponent.html":{}}}],["settimeout",{"_index":244,"title":{},"body":{"components/AlertComponent.html":{}}}],["settouched(istouched",{"_index":1146,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["settouchedstate",{"_index":1128,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["settouchedstate(touched",{"_index":1139,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["setvalue(value",{"_index":689,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["shadow",{"_index":534,"title":{},"body":{"components/CardComponent.html":{}}}],["shifts",{"_index":984,"title":{},"body":{"classes/Queue.html":{}}}],["show",{"_index":182,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["showalert",{"_index":307,"title":{},"body":{"injectables/AlertService.html":{}}}],["showalert(alert",{"_index":324,"title":{},"body":{"injectables/AlertService.html":{}}}],["showalert]{@link",{"_index":378,"title":{},"body":{"injectables/AlertService.html":{}}}],["showarrow",{"_index":56,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{}}}],["showicon",{"_index":57,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{}}}],["showing",{"_index":296,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["shown",{"_index":257,"title":{},"body":{"injectables/AlertService.html":{}}}],["showoptions",{"_index":1041,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["shows",{"_index":313,"title":{},"body":{"injectables/AlertService.html":{}}}],["showvalue",{"_index":1085,"title":{},"body":{"components/SliderComponent.html":{}}}],["simpler",{"_index":1339,"title":{},"body":{"index.html":{}}}],["simultaneously",{"_index":512,"title":{},"body":{"components/ButtonComponent.html":{}}}],["size",{"_index":20,"title":{},"body":{"interfaces/Alert.html":{},"injectables/AlertService.html":{},"modules/BaseModule.html":{},"components/CheckboxComponent.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["sizecolorinputdirective",{"_index":169,"title":{"directives/SizeColorInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeColorInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sizeinputdirective",{"_index":170,"title":{"directives/SizeInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sizethemecolorinputdirective",{"_index":38,"title":{"directives/SizeThemeColorInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeThemeColorInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sizethemecolorinputdirective#getclasses",{"_index":529,"title":{},"body":{"components/ButtonComponent.html":{}}}],["sizethemeinputdirective",{"_index":171,"title":{"directives/SizeThemeInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["slider",{"_index":1078,"title":{},"body":{"components/SliderComponent.html":{}}}],["slider'},{'name",{"_index":150,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["slider.component.html",{"_index":1079,"title":{},"body":{"components/SliderComponent.html":{}}}],["slider/slider.component",{"_index":910,"title":{},"body":{"modules/FormModule.html":{}}}],["slidercomponent",{"_index":149,"title":{"components/SliderComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["snap",{"_index":1086,"title":{},"body":{"components/SliderComponent.html":{}}}],["snap(snap",{"_index":1113,"title":{},"body":{"components/SliderComponent.html":{}}}],["snappoints",{"_index":1082,"title":{},"body":{"components/SliderComponent.html":{}}}],["snapstep",{"_index":1116,"title":{},"body":{"components/SliderComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["spec\\.ts",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specified",{"_index":314,"title":{},"body":{"injectables/AlertService.html":{}}}],["spellcheck",{"_index":947,"title":{},"body":{"components/InputComponent.html":{}}}],["split",{"_index":733,"title":{},"body":{"classes/Csv.html":{}}}],["split(row",{"_index":764,"title":{},"body":{"classes/Csv.html":{}}}],["split[0",{"_index":797,"title":{},"body":{"classes/Csv.html":{}}}],["split[split.length",{"_index":802,"title":{},"body":{"classes/Csv.html":{}}}],["splitrows",{"_index":786,"title":{},"body":{"classes/Csv.html":{}}}],["splitrows.push(this.split(row",{"_index":788,"title":{},"body":{"classes/Csv.html":{}}}],["splitrows.slice(1",{"_index":790,"title":{},"body":{"classes/Csv.html":{}}}],["splitrows[0",{"_index":789,"title":{},"body":{"classes/Csv.html":{}}}],["src",{"_index":1369,"title":{},"body":{"index.html":{}}}],["src/.../csv.ts",{"_index":1321,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/components/alert",{"_index":34,"title":{},"body":{"components/AlertBoxComponent.html":{},"coverage.html":{}}}],["src/lib/components/alert/alert.component.ts",{"_index":176,"title":{},"body":{"components/AlertComponent.html":{},"coverage.html":{}}}],["src/lib/components/alert/alert.component.ts:14",{"_index":217,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:17",{"_index":194,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:20",{"_index":195,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:22",{"_index":213,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:23",{"_index":218,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:24",{"_index":215,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:26",{"_index":198,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:27",{"_index":193,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:37",{"_index":200,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:45",{"_index":207,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:52",{"_index":202,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:57",{"_index":211,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:61",{"_index":204,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:66",{"_index":209,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:72",{"_index":205,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:77",{"_index":220,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:82",{"_index":203,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/base/base.module.ts",{"_index":416,"title":{},"body":{"modules/BaseModule.html":{}}}],["src/lib/components/base/control",{"_index":669,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"directives/StateManagerDirective.html":{},"coverage.html":{}}}],["src/lib/components/base/style",{"_index":590,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"coverage.html":{}}}],["src/lib/components/card/card.component.ts",{"_index":531,"title":{},"body":{"components/CardComponent.html":{},"coverage.html":{}}}],["src/lib/components/card/card.component.ts:11",{"_index":539,"title":{},"body":{"components/CardComponent.html":{}}}],["src/lib/components/card/card.component.ts:13",{"_index":538,"title":{},"body":{"components/CardComponent.html":{}}}],["src/lib/components/card/card.component.ts:14",{"_index":536,"title":{},"body":{"components/CardComponent.html":{}}}],["src/lib/components/card/card.component.ts:26",{"_index":537,"title":{},"body":{"components/CardComponent.html":{}}}],["src/lib/components/container/container.component.ts",{"_index":665,"title":{},"body":{"components/ContainerComponent.html":{},"coverage.html":{}}}],["src/lib/components/container/container.component.ts:10",{"_index":668,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/lib/components/form/button/button.component.ts",{"_index":433,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/button/button.component.ts:106",{"_index":502,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:112",{"_index":477,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:120",{"_index":497,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:128",{"_index":492,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:136",{"_index":494,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:144",{"_index":467,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:174",{"_index":486,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:195",{"_index":479,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:57",{"_index":496,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:65",{"_index":476,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:77",{"_index":473,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:89",{"_index":475,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:99",{"_index":471,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/checkbox/checkbox.component.ts",{"_index":546,"title":{},"body":{"components/CheckboxComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/checkbox/checkbox.component.ts:16",{"_index":560,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/lib/components/form/checkbox/checkbox.component.ts:19",{"_index":555,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/lib/components/form/checkbox/checkbox.component.ts:21",{"_index":557,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/lib/components/form/checkbox/checkbox.component.ts:23",{"_index":558,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/lib/components/form/checkbox/checkbox.component.ts:27",{"_index":559,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/lib/components/form/file",{"_index":845,"title":{},"body":{"components/FileInputComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/form.module.ts",{"_index":897,"title":{},"body":{"modules/FormModule.html":{}}}],["src/lib/components/form/group/base/selected",{"_index":1058,"title":{},"body":{"interfaces/SelectedOptions.html":{},"coverage.html":{}}}],["src/lib/components/form/group/base/selection",{"_index":1063,"title":{},"body":{"directives/SelectionOptionsDirective.html":{},"coverage.html":{}}}],["src/lib/components/form/group/checkbox/checkbox",{"_index":570,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/group/form",{"_index":881,"title":{},"body":{"components/FormGroupComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/group/radio",{"_index":1008,"title":{},"body":{"components/RadioButtonGroupComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/icon",{"_index":931,"title":{},"body":{"components/IconButtonComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/input/input.component.ts",{"_index":944,"title":{},"body":{"components/InputComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/input/input.component.ts:17",{"_index":956,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/input/input.component.ts:20",{"_index":949,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/input/input.component.ts:23",{"_index":951,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/input/input.component.ts:26",{"_index":950,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/input/input.component.ts:28",{"_index":955,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/input/input.component.ts:29",{"_index":948,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/input/input.component.ts:42",{"_index":953,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/input/input.component.ts:48",{"_index":954,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/input/input.component.ts:56",{"_index":952,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/radio",{"_index":1004,"title":{},"body":{"components/RadioButtonComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/select",{"_index":1040,"title":{},"body":{"components/SelectButtonComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/slider/slider.component.ts",{"_index":1077,"title":{},"body":{"components/SliderComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/slider/slider.component.ts:16",{"_index":1100,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:19",{"_index":1089,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:22",{"_index":1092,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:25",{"_index":1091,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:27",{"_index":1098,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:29",{"_index":1095,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:34",{"_index":1103,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:35",{"_index":1099,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:38",{"_index":1094,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:50",{"_index":1101,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:52",{"_index":1107,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:57",{"_index":1093,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:60",{"_index":1096,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:62",{"_index":1097,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/toggle",{"_index":1274,"title":{},"body":{"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["src/lib/components/grid/grid.component.ts",{"_index":917,"title":{},"body":{"components/GridComponent.html":{},"coverage.html":{}}}],["src/lib/components/grid/grid.component.ts:10",{"_index":926,"title":{},"body":{"components/GridComponent.html":{}}}],["src/lib/components/grid/grid.component.ts:13",{"_index":924,"title":{},"body":{"components/GridComponent.html":{}}}],["src/lib/components/grid/grid.component.ts:16",{"_index":923,"title":{},"body":{"components/GridComponent.html":{}}}],["src/lib/components/grid/grid.component.ts:18",{"_index":925,"title":{},"body":{"components/GridComponent.html":{}}}],["src/lib/components/icon/icon.component.ts",{"_index":941,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{}}}],["src/lib/components/icon/icon.component.ts:8",{"_index":943,"title":{},"body":{"components/IconComponent.html":{}}}],["src/lib/components/table/table.component.ts",{"_index":1235,"title":{},"body":{"components/TableComponent.html":{},"coverage.html":{}}}],["src/lib/components/table/table.component.ts:11",{"_index":1246,"title":{},"body":{"components/TableComponent.html":{}}}],["src/lib/components/table/table.component.ts:12",{"_index":1248,"title":{},"body":{"components/TableComponent.html":{}}}],["src/lib/components/table/table.component.ts:15",{"_index":1240,"title":{},"body":{"components/TableComponent.html":{}}}],["src/lib/components/table/table.component.ts:18",{"_index":1241,"title":{},"body":{"components/TableComponent.html":{}}}],["src/lib/components/table/table.component.ts:20",{"_index":1242,"title":{},"body":{"components/TableComponent.html":{}}}],["src/lib/components/table/table.component.ts:31",{"_index":1244,"title":{},"body":{"components/TableComponent.html":{}}}],["src/lib/models/alert/alert",{"_index":387,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{},"coverage.html":{}}}],["src/lib/models/alert/alert.ts",{"_index":6,"title":{},"body":{"interfaces/Alert.html":{},"coverage.html":{}}}],["src/lib/models/csv/csv.ts",{"_index":721,"title":{},"body":{"classes/Csv.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/lib/models/csv/csv.ts:10",{"_index":741,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:11",{"_index":736,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:14",{"_index":742,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:15",{"_index":737,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:18",{"_index":753,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:26",{"_index":748,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:34",{"_index":755,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:42",{"_index":757,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:53",{"_index":761,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:63",{"_index":763,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:69",{"_index":765,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:84",{"_index":768,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:9",{"_index":743,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/queue/queue.ts",{"_index":961,"title":{},"body":{"classes/Queue.html":{},"coverage.html":{}}}],["src/lib/models/queue/queue.ts:13",{"_index":977,"title":{},"body":{"classes/Queue.html":{}}}],["src/lib/models/queue/queue.ts:22",{"_index":988,"title":{},"body":{"classes/Queue.html":{}}}],["src/lib/models/queue/queue.ts:39",{"_index":980,"title":{},"body":{"classes/Queue.html":{}}}],["src/lib/models/queue/queue.ts:52",{"_index":994,"title":{},"body":{"classes/Queue.html":{}}}],["src/lib/models/queue/queue.ts:63",{"_index":991,"title":{},"body":{"classes/Queue.html":{}}}],["src/lib/models/table/column",{"_index":611,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"coverage.html":{}}}],["src/lib/models/table/table.interface.ts",{"_index":1259,"title":{},"body":{"interfaces/TableInterface.html":{},"coverage.html":{}}}],["src/lib/models/table/table.ts",{"_index":1165,"title":{},"body":{"classes/Table.html":{},"coverage.html":{}}}],["src/lib/models/table/table.ts:105",{"_index":1205,"title":{},"body":{"classes/Table.html":{}}}],["src/lib/models/table/table.ts:111",{"_index":1194,"title":{},"body":{"classes/Table.html":{}}}],["src/lib/models/table/table.ts:18",{"_index":1190,"title":{},"body":{"classes/Table.html":{}}}],["src/lib/models/table/table.ts:25",{"_index":1191,"title":{},"body":{"classes/Table.html":{}}}],["src/lib/models/table/table.ts:32",{"_index":1184,"title":{},"body":{"classes/Table.html":{}}}],["src/lib/models/table/table.ts:54",{"_index":1197,"title":{},"body":{"classes/Table.html":{}}}],["src/lib/models/table/table.ts:74",{"_index":1203,"title":{},"body":{"classes/Table.html":{}}}],["src/lib/models/table/table.ts:83",{"_index":1201,"title":{},"body":{"classes/Table.html":{}}}],["src/lib/sb",{"_index":1025,"title":{},"body":{"modules/SbElementModule.html":{}}}],["src/lib/services/alert/alert.service.ts",{"_index":252,"title":{},"body":{"injectables/AlertService.html":{},"coverage.html":{}}}],["src/lib/services/alert/alert.service.ts:100",{"_index":319,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:110",{"_index":321,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:120",{"_index":323,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:136",{"_index":311,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:160",{"_index":336,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:183",{"_index":325,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:51",{"_index":357,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:57",{"_index":353,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:63",{"_index":355,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:70",{"_index":330,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:80",{"_index":335,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:90",{"_index":333,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/theme/theme.service.ts",{"_index":1261,"title":{},"body":{"injectables/ThemeService.html":{},"coverage.html":{}}}],["src/lib/services/theme/theme.service.ts:22",{"_index":1271,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/lib/services/theme/theme.service.ts:29",{"_index":1269,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/lib/services/theme/theme.service.ts:36",{"_index":1270,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/test.ts",{"_index":1309,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start_delimiter",{"_index":726,"title":{},"body":{"classes/Csv.html":{}}}],["started",{"_index":1323,"title":{"index.html":{}},"body":{}}],["state",{"_index":472,"title":{},"body":{"components/ButtonComponent.html":{},"directives/EventManagerDirective.html":{}}}],["statemanagerdirective",{"_index":172,"title":{"directives/StateManagerDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["statements",{"_index":1283,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":469,"title":{},"body":{"components/ButtonComponent.html":{}}}],["static",{"_index":616,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"classes/Csv.html":{},"components/FileInputComponent.html":{},"classes/Table.html":{}}}],["step",{"_index":301,"title":{},"body":{"injectables/AlertService.html":{},"components/SliderComponent.html":{}}}],["step(step",{"_index":1108,"title":{},"body":{"components/SliderComponent.html":{}}}],["step.tostring().split(\".\")[1].length",{"_index":1112,"title":{},"body":{"components/SliderComponent.html":{}}}],["steps",{"_index":1352,"title":{},"body":{"index.html":{}}}],["still",{"_index":341,"title":{},"body":{"injectables/AlertService.html":{}}}],["stored",{"_index":1176,"title":{},"body":{"classes/Table.html":{},"interfaces/TableInterface.html":{},"injectables/ThemeService.html":{}}}],["string",{"_index":21,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["string,columndata",{"_index":746,"title":{},"body":{"classes/Csv.html":{}}}],["string,index",{"_index":752,"title":{},"body":{"classes/Csv.html":{}}}],["string.split('\\n",{"_index":791,"title":{},"body":{"classes/Csv.html":{}}}],["style",{"_index":420,"title":{},"body":{"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"classes/Table.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["styling",{"_index":1172,"title":{},"body":{"classes/Table.html":{}}}],["subrootclass",{"_index":1237,"title":{},"body":{"components/TableComponent.html":{}}}],["subscibers",{"_index":327,"title":{},"body":{"injectables/AlertService.html":{}}}],["subscribe",{"_index":259,"title":{},"body":{"injectables/AlertService.html":{}}}],["subscribe(subscriber",{"_index":329,"title":{},"body":{"injectables/AlertService.html":{}}}],["subscribe]{@link",{"_index":359,"title":{},"body":{"injectables/AlertService.html":{}}}],["subscriber",{"_index":223,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["subscriber.alert(alert",{"_index":386,"title":{},"body":{"injectables/AlertService.html":{}}}],["subscriber.ts",{"_index":388,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{},"coverage.html":{}}}],["subscriber.ts:21",{"_index":398,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["subscribers",{"_index":290,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["subscribers]{@link",{"_index":370,"title":{},"body":{"injectables/AlertService.html":{}}}],["success",{"_index":308,"title":{},"body":{"injectables/AlertService.html":{}}}],["success(message",{"_index":332,"title":{},"body":{"injectables/AlertService.html":{}}}],["sum",{"_index":1119,"title":{},"body":{"components/SliderComponent.html":{}}}],["super",{"_index":716,"title":{},"body":{"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/IconComponent.html":{},"components/RadioButtonComponent.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["super(themeservice",{"_index":93,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["super.getclasses",{"_index":98,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{}}}],["support",{"_index":1372,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":1334,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1373,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":155,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["switch.component",{"_index":902,"title":{},"body":{"modules/FormModule.html":{}}}],["switch.component.html",{"_index":1276,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["switch.component.ts",{"_index":1275,"title":{},"body":{"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["switch.component.ts:16",{"_index":1279,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["switch.component.ts:18",{"_index":1278,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["switch.component.ts:22",{"_index":1277,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["switch/toggle",{"_index":901,"title":{},"body":{"modules/FormModule.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["syntax",{"_index":443,"title":{},"body":{"components/ButtonComponent.html":{}}}],["t",{"_index":986,"title":{},"body":{"classes/Queue.html":{}}}],["table",{"_index":1164,"title":{"classes/Table.html":{}},"body":{"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":152,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["table(csv.data",{"_index":1219,"title":{},"body":{"classes/Table.html":{}}}],["table(rows",{"_index":1220,"title":{},"body":{"classes/Table.html":{}}}],["table(this.columnstorows(columns",{"_index":1229,"title":{},"body":{"classes/Table.html":{}}}],["table.component.html",{"_index":1236,"title":{},"body":{"components/TableComponent.html":{}}}],["table.interface",{"_index":1207,"title":{},"body":{"classes/Table.html":{}}}],["tablecomponent",{"_index":151,"title":{"components/TableComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tableinterface",{"_index":1177,"title":{"interfaces/TableInterface.html":{}},"body":{"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1313,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":268,"title":{},"body":{"injectables/AlertService.html":{},"index.html":{}}}],["tells",{"_index":289,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{}}}],["template",{"_index":31,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["templateurl",{"_index":44,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["terminates",{"_index":299,"title":{},"body":{"injectables/AlertService.html":{}}}],["test(firstelement",{"_index":798,"title":{},"body":{"classes/Csv.html":{}}}],["test(lastelement",{"_index":803,"title":{},"body":{"classes/Csv.html":{}}}],["testapp",{"_index":1366,"title":{},"body":{"index.html":{}}}],["text",{"_index":457,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputComponent.html":{}}}],["text/csv",{"_index":780,"title":{},"body":{"classes/Csv.html":{}}}],["tha",{"_index":1174,"title":{},"body":{"classes/Table.html":{}}}],["that's",{"_index":1342,"title":{},"body":{"index.html":{}}}],["theme",{"_index":87,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["themecolorinputdirective",{"_index":173,"title":{"directives/ThemeColorInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["themeinputdirective",{"_index":174,"title":{"directives/ThemeInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["themes",{"_index":1263,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themeservice",{"_index":60,"title":{"injectables/ThemeService.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["themeservice.get",{"_index":718,"title":{},"body":{"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["theming",{"_index":1333,"title":{},"body":{"index.html":{}}}],["therefore",{"_index":983,"title":{},"body":{"classes/Queue.html":{}}}],["this._disabled",{"_index":519,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{},"directives/StateManagerDirective.html":{}}}],["this._extraclasses",{"_index":601,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["this._extraclasses.foreach(classname",{"_index":606,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["this._focused",{"_index":1161,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["this._options",{"_index":1075,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["this._options.foreach((option",{"_index":1076,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["this._pristine",{"_index":1159,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["this._step",{"_index":1109,"title":{},"body":{"components/SliderComponent.html":{}}}],["this._theme",{"_index":1272,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this._touched",{"_index":1157,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["this.alert(message",{"_index":374,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.alertobject",{"_index":231,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.alertobject.message",{"_index":246,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.alertqueue.dequeue",{"_index":381,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.alertqueue.enqueue",{"_index":375,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.alertqueue.isempty",{"_index":379,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.alertservice.subscribe(this",{"_index":225,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.alignment",{"_index":646,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["this.appears",{"_index":227,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.blur.emit",{"_index":838,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.change.emit(value",{"_index":843,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.checkfilesize(file",{"_index":872,"title":{},"body":{"components/FileInputComponent.html":{}}}],["this.color",{"_index":234,"title":{},"body":{"components/AlertComponent.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/ThemeColorInputDirective.html":{}}}],["this.columninformation",{"_index":1212,"title":{},"body":{"classes/Table.html":{}}}],["this.data",{"_index":1211,"title":{},"body":{"classes/Table.html":{}}}],["this.data.map(row",{"_index":777,"title":{},"body":{"classes/Csv.html":{}}}],["this.decimalplaces",{"_index":1111,"title":{},"body":{"components/SliderComponent.html":{}}}],["this.defaults.alignment",{"_index":660,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["this.defaults.color",{"_index":656,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["this.defaults.name",{"_index":652,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["this.delimiter",{"_index":808,"title":{},"body":{"classes/Csv.html":{}}}],["this.dim",{"_index":928,"title":{},"body":{"components/GridComponent.html":{}}}],["this.disabled",{"_index":527,"title":{},"body":{"components/ButtonComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/StateManagerDirective.html":{}}}],["this.emitchange(value",{"_index":697,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["this.end_delimiter.source",{"_index":807,"title":{},"body":{"classes/Csv.html":{}}}],["this.flipped",{"_index":94,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["this.focus.emit",{"_index":840,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.focused",{"_index":959,"title":{},"body":{"components/InputComponent.html":{},"directives/StateManagerDirective.html":{}}}],["this.gap",{"_index":930,"title":{},"body":{"components/GridComponent.html":{}}}],["this.getcolumndata(index",{"_index":776,"title":{},"body":{"classes/Csv.html":{}}}],["this.groupalign",{"_index":891,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["this.grouptitle",{"_index":889,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["this.header.foreach((columnname",{"_index":773,"title":{},"body":{"classes/Csv.html":{}}}],["this.hides",{"_index":229,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.hover",{"_index":542,"title":{},"body":{"components/CardComponent.html":{}}}],["this.innervalue",{"_index":695,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["this.isbusy",{"_index":380,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.isempty",{"_index":999,"title":{},"body":{"classes/Queue.html":{}}}],["this.ispill",{"_index":524,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.isplain",{"_index":525,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.isround",{"_index":523,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.labelposition",{"_index":565,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadioButtonComponent.html":{}}}],["this.limit",{"_index":877,"title":{},"body":{"components/FileInputComponent.html":{}}}],["this.mergevalues(overwrite.alignment",{"_index":658,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["this.mergevalues(overwrite.color",{"_index":654,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["this.mergevalues(overwrite.name",{"_index":650,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["this.message",{"_index":873,"title":{},"body":{"components/FileInputComponent.html":{}}}],["this.min",{"_index":1120,"title":{},"body":{"components/SliderComponent.html":{}}}],["this.min)/5/this.step)*this.step",{"_index":1118,"title":{},"body":{"components/SliderComponent.html":{}}}],["this.name",{"_index":643,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["this.onchangecallback",{"_index":844,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.onchangecallback(value",{"_index":842,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.ontouchedcallback",{"_index":837,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.options.foreach((option",{"_index":1016,"title":{},"body":{"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{}}}],["this.parsestring(content",{"_index":784,"title":{},"body":{"classes/Csv.html":{}}}],["this.pill",{"_index":95,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["this.plain",{"_index":96,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["this.pristine",{"_index":1163,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["this.queue.length",{"_index":1002,"title":{},"body":{"classes/Queue.html":{}}}],["this.queue.push(value",{"_index":997,"title":{},"body":{"classes/Queue.html":{}}}],["this.queue.shift",{"_index":1000,"title":{},"body":{"classes/Queue.html":{}}}],["this.resetalert",{"_index":230,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.rootclass",{"_index":609,"title":{},"body":{"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/IconComponent.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["this.round",{"_index":508,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{}}}],["this.rows(string",{"_index":785,"title":{},"body":{"classes/Csv.html":{}}}],["this.selectedoptions",{"_index":589,"title":{},"body":{"components/CheckboxGroupComponent.html":{}}}],["this.selectedoptions[option",{"_index":1018,"title":{},"body":{"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{}}}],["this.separation",{"_index":1250,"title":{},"body":{"components/TableComponent.html":{}}}],["this.setalert(alert",{"_index":226,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.setfocusedstate(false",{"_index":835,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.setfocusedstate(true",{"_index":839,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.setinnervalue(value",{"_index":694,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["this.setpristinestate(false",{"_index":841,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.settouchedstate(true",{"_index":836,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.shadow",{"_index":543,"title":{},"body":{"components/CardComponent.html":{}}}],["this.showalert(alert).then",{"_index":382,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.showicon",{"_index":103,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["this.showoptions",{"_index":1050,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["this.size",{"_index":232,"title":{},"body":{"components/AlertComponent.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{}}}],["this.snappoints",{"_index":1115,"title":{},"body":{"components/SliderComponent.html":{}}}],["this.start_delimiter.source",{"_index":806,"title":{},"body":{"classes/Csv.html":{}}}],["this.subscribers.push(subscriber",{"_index":372,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.table.columninformation[columnindex",{"_index":1253,"title":{},"body":{"components/TableComponent.html":{}}}],["this.theme",{"_index":717,"title":{},"body":{"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["this.toggle",{"_index":1051,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["this.touched",{"_index":1162,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["this.updatevalues",{"_index":696,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["this.value",{"_index":563,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["this.wait(this.appeartime",{"_index":239,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.wait(this.hidetime",{"_index":241,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.wait(this.waittime",{"_index":240,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.waits",{"_index":228,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.work",{"_index":376,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.writevalueinnerchange(file",{"_index":875,"title":{},"body":{"components/FileInputComponent.html":{}}}],["this.writevalueinnerchange(newoption",{"_index":1019,"title":{},"body":{"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{}}}],["this.writevalueinnerchange(undefined",{"_index":876,"title":{},"body":{"components/FileInputComponent.html":{}}}],["throw",{"_index":509,"title":{},"body":{"components/ButtonComponent.html":{}}}],["throwing",{"_index":985,"title":{},"body":{"classes/Queue.html":{}}}],["time",{"_index":210,"title":{},"body":{"components/AlertComponent.html":{}}}],["times",{"_index":278,"title":{},"body":{"injectables/AlertService.html":{}}}],["toggle",{"_index":154,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["toggleswitchcomponent",{"_index":153,"title":{"components/ToggleSwitchComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["top",{"_index":960,"title":{},"body":{"components/InputComponent.html":{}}}],["touched",{"_index":707,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/StateManagerDirective.html":{}}}],["touched(istouched",{"_index":1156,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["tree",{"_index":33,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["true",{"_index":71,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/ToggleSwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1315,"title":{},"body":{"dependencies.html":{}}}],["ture",{"_index":448,"title":{},"body":{"components/ButtonComponent.html":{}}}],["two",{"_index":438,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/ThemeService.html":{}}}],["type",{"_index":22,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":1170,"title":{},"body":{"classes/Table.html":{}}}],["unchecked",{"_index":568,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadioButtonComponent.html":{}}}],["undefinded",{"_index":974,"title":{},"body":{"classes/Queue.html":{}}}],["undefined",{"_index":631,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/EventManagerDirective.html":{},"classes/Queue.html":{}}}],["unset",{"_index":349,"title":{},"body":{"injectables/AlertService.html":{}}}],["untouched",{"_index":708,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["update",{"_index":1348,"title":{},"body":{"index.html":{}}}],["updatevalues",{"_index":575,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{}}}],["upon",{"_index":401,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["usage",{"_index":456,"title":{},"body":{"components/ButtonComponent.html":{}}}],["use",{"_index":511,"title":{},"body":{"components/ButtonComponent.html":{},"index.html":{}}}],["use/show",{"_index":15,"title":{},"body":{"interfaces/Alert.html":{}}}],["used",{"_index":9,"title":{},"body":{"interfaces/Alert.html":{},"injectables/AlertService.html":{}}}],["usedelimiter",{"_index":734,"title":{},"body":{"classes/Csv.html":{}}}],["usedelimiter(delimiter",{"_index":767,"title":{},"body":{"classes/Csv.html":{}}}],["useexisting",{"_index":549,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["value",{"_index":68,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value(value",{"_index":693,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["valuesuffix",{"_index":1087,"title":{},"body":{"components/SliderComponent.html":{}}}],["valuetype",{"_index":677,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{},"directives/EventManagerDirective.html":{}}}],["var",{"_index":116,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["variable",{"_index":1310,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1379,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1329,"title":{},"body":{"index.html":{}}}],["via",{"_index":284,"title":{},"body":{"injectables/AlertService.html":{},"classes/Table.html":{}}}],["void",{"_index":317,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["wait",{"_index":188,"title":{},"body":{"components/AlertComponent.html":{}}}],["wait(time",{"_index":208,"title":{},"body":{"components/AlertComponent.html":{}}}],["waits",{"_index":189,"title":{},"body":{"components/AlertComponent.html":{}}}],["waittime",{"_index":190,"title":{},"body":{"components/AlertComponent.html":{}}}],["warn",{"_index":309,"title":{},"body":{"injectables/AlertService.html":{}}}],["warn(message",{"_index":334,"title":{},"body":{"injectables/AlertService.html":{}}}],["way",{"_index":1338,"title":{},"body":{"index.html":{}}}],["well",{"_index":967,"title":{},"body":{"classes/Queue.html":{}}}],["while(sum",{"_index":1121,"title":{},"body":{"components/SliderComponent.html":{}}}],["whishes",{"_index":256,"title":{},"body":{"injectables/AlertService.html":{}}}],["without",{"_index":1187,"title":{},"body":{"classes/Table.html":{}}}],["work",{"_index":13,"title":{},"body":{"interfaces/Alert.html":{},"injectables/AlertService.html":{}}}],["work]{@link",{"_index":363,"title":{},"body":{"injectables/AlertService.html":{}}}],["working",{"_index":339,"title":{},"body":{"injectables/AlertService.html":{}}}],["works",{"_index":337,"title":{},"body":{"injectables/AlertService.html":{}}}],["workspace",{"_index":1349,"title":{},"body":{"index.html":{}}}],["writevalue",{"_index":674,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["writevalue(value",{"_index":682,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["writevalueinnerchange",{"_index":675,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["writevalueinnerchange(value",{"_index":684,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["writing",{"_index":692,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["xe001",{"_index":107,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["xe2c6",{"_index":880,"title":{},"body":{"components/FileInputComponent.html":{}}}],["xe5cf",{"_index":1057,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["xe876",{"_index":569,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["xe87e",{"_index":111,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["xe88f",{"_index":109,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["xe92d",{"_index":108,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["xe994",{"_index":110,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["xf1df",{"_index":106,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["yes",{"_index":759,"title":{},"body":{"classes/Csv.html":{},"classes/Table.html":{}}}],["yourself",{"_index":1362,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":414,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Alert.html":{"url":"interfaces/Alert.html","title":"interface - Alert","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Alert\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/alert/alert.ts\n        \n\n            \n                Description\n            \n            \n                This interface describes an alert.\nThe interface is used by the AlertService to create alerts and work\nwith the AlertServiceSubscriber which use/show the alerts.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        color\n                                \n                                \n                                        message\n                                \n                                \n                                        size\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The color of the alert.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The message of the alert.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The size of the alert.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Alert {\n  /**\n   * The message of the alert.\n   */\n  message: string;\n\n  /**\n   * The size of the alert.\n   */\n  size: string;\n\n  /**\n   * The color of the alert.\n   */\n  color: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlertBoxComponent.html":{"url":"components/AlertBoxComponent.html","title":"component - AlertBoxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlertBoxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/alert-box/alert-box.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SizeThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-alert-box\n            \n\n\n\n\n            \n                templateUrl\n                ./alert-box.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                flipped\n                            \n                            \n                                    Private\n                                pill\n                            \n                            \n                                    Private\n                                plain\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                customIcon\n                            \n                            \n                                showArrow\n                            \n                            \n                                showIcon\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(flipped: any, pill: any, plain: any, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/alert-box/alert-box.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        flipped\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pill\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plain\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        customIcon\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/alert-box/alert-box.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showArrow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/alert-box/alert-box.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showIcon\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/alert-box/alert-box.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert-box/alert-box.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            flipped\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert-box/alert-box.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pill\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert-box/alert-box.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            plain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert-box/alert-box.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-alert-box'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert-box/alert-box.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Attribute, Component, Input, Optional } from '@angular/core';\nimport { ThemeService } from '../../services/theme/theme.service';\nimport { SizeThemeColorInputDirective } from '../base/style-input/size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-alert-box',\n  templateUrl: './alert-box.component.html'\n})\nexport class AlertBoxComponent extends SizeThemeColorInputDirective {\n\n  public rootClass: string = 'sb-el-alert-box';\n\n  @Input()\n  public showArrow: boolean = true;\n\n  @Input()\n  public showIcon: boolean = true;\n\n  @Input()\n  public customIcon: boolean = false;\n\n  public flipped: boolean = false;\n  private pill: boolean = false;\n  private plain: boolean = false;\n\n  constructor(\n    @Optional() @Attribute('flipped') flipped: any,\n    @Optional() @Attribute('pill') pill: any,\n    @Optional() @Attribute('plain') plain: any,\n    themeService: ThemeService\n  ) {\n    super(themeService);\n    if (flipped == '') this.flipped = true;\n    if (pill == '') this.pill = true;\n    if (plain == '') this.plain = true;\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.flipped ? 'is-flipped' : '');\n    classes.push(this.pill ? 'is-pill' : '');\n    classes.push(this.plain ? 'is-plain' : '');\n    classes.push(!this.showArrow && !this.showIcon ? 'is-center' : '');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n      &#xf1df;\n    \n    \n  \n  \n    \n    \n      &#xe001;\n      &#xe92d;\n      &#xe88f;\n      &#xe994;\n      &#xe87e;\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'AlertBoxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlertComponent.html":{"url":"components/AlertComponent.html","title":"component - AlertComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlertComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/alert/alert.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SizeThemeColorInputDirective\n    \n\n    \n        Implements\n    \n    \n                    AlertServiceSubscriber\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-alert\n            \n\n\n\n\n            \n                templateUrl\n                ./alert.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alertObject\n                            \n                            \n                                    Private\n                                appearTime\n                            \n                            \n                                    Private\n                                hideTime\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                alert\n                            \n                            \n                                    Private\n                                    Async\n                                appears\n                            \n                            \n                                    Public\n                                getClasses\n                            \n                            \n                                    Private\n                                    Async\n                                hides\n                            \n                            \n                                    Private\n                                    Async\n                                resetAlert\n                            \n                            \n                                    Private\n                                    Async\n                                setAlert\n                            \n                            \n                                    Private\n                                    Async\n                                wait\n                            \n                            \n                                    Private\n                                    Async\n                                waits\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                showArrow\n                            \n                            \n                                showIcon\n                            \n                            \n                                waitTime\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    message\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertService: AlertService, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/alert/alert.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        showArrow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/alert/alert.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showIcon\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/alert/alert.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        waitTime\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2000\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/alert/alert.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            alert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    alert(alert: Alert)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert/alert.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alert\n                                    \n                                                Alert\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            appears\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    appears()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert/alert.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert/alert.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            hides\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hides()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert/alert.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            resetAlert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetAlert()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert/alert.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            setAlert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setAlert(alert: Alert)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert/alert.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alert\n                                    \n                                                Alert\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            wait\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    wait(time: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert/alert.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            waits\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    waits()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert/alert.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alertObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Alert | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert/alert.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            appearTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 300\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert/alert.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hideTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1000\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert/alert.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-alert'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert/alert.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert/alert.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n\n                \n                    \n                        getmessage()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/alert/alert.component.ts:77\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Alert } from '../../models/alert/alert';\nimport { AlertServiceSubscriber } from '../../models/alert/alert-service-subscriber';\nimport { AlertService } from '../../services/alert/alert.service';\nimport { ThemeService } from '../../services/theme/theme.service';\nimport { SizeThemeColorInputDirective } from '../base/style-input/size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-alert',\n  templateUrl: './alert.component.html'\n})\nexport class AlertComponent extends SizeThemeColorInputDirective implements AlertServiceSubscriber {\n\n  public rootClass: string = 'sb-el-alert';\n\n  @Input()\n  public showArrow: boolean = true;\n\n  @Input()\n  public showIcon: boolean = true;\n\n  public alertObject: Alert | null = null;\n  public show: boolean = false;\n  private appearTime: number = 300;\n  @Input()\n  public waitTime: number = 2000;\n  private hideTime: number = 1000;\n\n  constructor(\n    private alertService: AlertService,\n    themeService: ThemeService\n  ) {\n    super(themeService);\n    this.alertService.subscribe(this);\n  }\n\n  public async alert(alert: Alert): Promise {\n    return this.setAlert(alert)\n    .then(() => this.appears())\n    .then(() => this.waits())\n    .then(() => this.hides())\n    .then(() => this.resetAlert())\n  }\n\n  private async setAlert(alert: Alert): Promise {\n    this.alertObject = alert;\n    this.size = alert.size;\n    this.color = alert.color;\n    return Promise.resolve();\n  }\n\n  private async appears(): Promise {\n    await Promise.resolve(this.show = true);\n    return await this.wait(this.appearTime);\n  }\n\n  private async waits(): Promise {\n    return this.wait(this.waitTime);\n  }\n\n  private async hides(): Promise {\n    await Promise.resolve(this.show = false);\n    return await this.wait(this.hideTime);\n  }\n\n  private async wait(time: number): Promise {\n    return new Promise(resolve => {\n      setTimeout(() => resolve(), time);\n    });\n  }\n\n  private async resetAlert(): Promise {\n    this.alertObject = null;\n    return Promise.resolve();\n  }\n\n  get message(): string {\n    if (this.alertObject) return this.alertObject.message;\n    else return '';\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.show ? 'is-active' : 'is-inactive');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      {{ message }}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ message }}      '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'AlertComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AlertService.html":{"url":"injectables/AlertService.html","title":"injectable - AlertService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AlertService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/alert/alert.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides a global service to display alerts.\nThe alert service can be used by any component which either whishes to show\nor to create an alert to be shown.\nIf a component wants to show alerts, the\ncomponent has to call subscribe with the component as the\nparameter. The component also needs to implement the\nAlertServiceSubscriber interface so the service can inform the\nsubscriber about the incoming alerts.\nIf a component wants to create an alert, the service provides different\nmethods which have predefined colors. The different methods take a message\nwhich is a string and an optional size parameter, which is also a\nstring. The methods then passes the alert to the\nAlertServiceSubscriber with a predefinded color. There is also a\nmethod, which lets you customize everything: alert. All these\nmethods then add the created alert to the alertQueue,\nand then call work. This method times the alerts and then\ninforms the subscriber when a alert needs to be shown (when an alert is\nready to be shown).\nThe lifecycle of an Alert inside the service:\n\nThe Alert gets created via a create call (like\nalert).\nThe Alert gets placed into the alertQueue.\nThe work method then removes an Alert out of the\nqueue and tells the subscribers to show the removed Alert. The\nAlert gets collected by the garbage collector after the Alert\nhas been shown.\nIf all subscribers have finished showing the Alert, the work\nmethod checks if the alertQueue is empty or not. If the\nqueue is empty, the work method terminates. If not, go to step\n3 again.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alertQueue\n                            \n                            \n                                    Private\n                                isBusy\n                            \n                            \n                                    Private\n                                subscribers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alert\n                            \n                            \n                                    Public\n                                inform\n                            \n                            \n                                    Public\n                                primary\n                            \n                            \n                                    Public\n                                secondary\n                            \n                            \n                                    Private\n                                    Async\n                                showAlert\n                            \n                            \n                                    Public\n                                subscribe\n                            \n                            \n                                    Public\n                                success\n                            \n                            \n                                    Public\n                                warn\n                            \n                            \n                                    Private\n                                    Async\n                                work\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            alert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    alert(message: string, size: string, color: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:136\n                \n            \n\n\n            \n                \n                    Creates and shows an Alert.\nThe message, size and color of the Alert can be specified as\nparameters. The Alert gets created with these parameters and\nplaced into the alertQueue. After that, the\nwork method gets called.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The message of the alert\n\n                                    \n                                \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'd'\n                                    \n\n                                    \n                                        The size of the alert\n\n                                    \n                                \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'warn'\n                                    \n\n                                    \n                                        The color of the alert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            inform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    inform(message: string, size: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:100\n                \n            \n\n\n            \n                \n                    Creates and shows an Alert with color info.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The message of the alert\n\n                                    \n                                \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'd'\n                                    \n\n                                    \n                                        The size of the alert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            primary\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    primary(message: string, size: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:110\n                \n            \n\n\n            \n                \n                    Creates and shows an Alert with color primary.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The message of the alert\n\n                                    \n                                \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'd'\n                                    \n\n                                    \n                                        The size of the alert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            secondary\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    secondary(message: string, size: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:120\n                \n            \n\n\n            \n                \n                    Creates and shows an Alert with color secondary.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The message of the alert\n\n                                    \n                                \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'd'\n                                    \n\n                                    \n                                        The size of the alert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            showAlert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showAlert(alert: Alert)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:183\n                \n            \n\n\n            \n                \n                    Notifies all subscibers to show an Alert.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    alert\n                                    \n                                                Alert\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Alert to show\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise, which is resolved when all subscribers\nhave finished showing the alert\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            subscribe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribe(subscriber: AlertServiceSubscriber)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:70\n                \n            \n\n\n            \n                \n                    Adds a new subscriber into subscribers.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    subscriber\n                                    \n                                                AlertServiceSubscriber\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new subscriber\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            success\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    success(message: string, size: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:90\n                \n            \n\n\n            \n                \n                    Creates and shows an Alert with color success.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The message of the alert\n\n                                    \n                                \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'd'\n                                    \n\n                                    \n                                        The size of the alert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    warn(message: string, size: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:80\n                \n            \n\n\n            \n                \n                    Creates and shows an Alert with color warn.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The message of the alert\n\n                                    \n                                \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'd'\n                                    \n\n                                    \n                                        The size of the alert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            work\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    work()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:160\n                \n            \n\n\n            \n                \n                    Works on the alertQueue.\nIf the service is not busy working on the alertQueue\nand the alertQueue is not empty, meaning that there\nare still Alerts to process, the method will set the\nisBusy flag, remove the next Alert from the queue\nand show the Alert by calling showAlert.\nOnce the show call has finished, the isBusy flag is unset\nand the work method gets called again.\nIf a current work call is still in progress, meaning the\nisBusy flag is set, a new work call will do nothing.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            alertQueue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Queue\n\n                        \n                    \n                    \n                        \n                            Default value : new Queue()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/alert/alert.service.ts:57\n                            \n                        \n\n                \n                    \n                        The queue of all Alerts which need to be shown.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isBusy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/alert/alert.service.ts:63\n                            \n                        \n\n                \n                    \n                        Flag to inidcate if the service is busy working on the\nalertQueue or not.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscribers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/alert/alert.service.ts:51\n                            \n                        \n\n                \n                    \n                        An array of all subscribers.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Alert } from '../../models/alert/alert';\nimport { AlertServiceSubscriber } from '../../models/alert/alert-service-subscriber';\nimport { Queue } from '../../models/queue/queue';\n\n/**\n * Provides a global service to display alerts.\n *\n * The alert service can be used by any component which either whishes to show\n * or to create an alert to be shown.\n *\n * If a component wants to show alerts, the\n * component has to call [subscribe]{@link #subscribe} with the component as the\n * parameter. The component also needs to implement the\n * {@link AlertServiceSubscriber} interface so the service can inform the\n * subscriber about the incoming alerts.\n *\n * If a component wants to create an alert, the service provides different\n * methods which have predefined colors. The different methods take a `message`\n * which is a `string` and an optional `size` parameter, which is also a\n * `string`. The methods then passes the alert to the\n * {@link AlertServiceSubscriber} with a predefinded color. There is also a\n * method, which lets you customize everything: [alert]{@link #alert}. All these\n * methods then add the created alert to the [alertQueue]{@link #alertQueue},\n * and then call [work]{@link #work}. This method times the alerts and then\n * informs the subscriber when a alert needs to be shown (when an alert is\n * ready to be shown).\n *\n * The lifecycle of an {@link Alert} inside the service:\n * 1. The {@link Alert} gets created via a create call (like\n * [alert]{@link #alert}).\n * 2. The {@link Alert} gets placed into the [alertQueue]{@link #alertQueue}.\n * 3. The [work]{@link #work} method then removes an {@link Alert} out of the\n * queue and tells the subscribers to show the removed {@link Alert}. The\n * {@link Alert} gets collected by the garbage collector after the {@link Alert}\n * has been shown.\n * 4. If all subscribers have finished showing the {@link Alert}, the work\n * method checks if the [alertQueue]{@link #alertQueue} is empty or not. If the\n * queue is empty, the [work]{@link #work} method terminates. If not, go to step\n * 3 again.\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  /**\n   * An array of all subscribers.\n   */\n  private subscribers: Array\n    = new Array();\n\n  /**\n   * The queue of all [Alerts]{@link Alert} which need to be shown.\n   */\n  private alertQueue: Queue = new Queue();\n\n  /**\n   * Flag to inidcate if the service is busy working on the\n   * [alertQueue]{@link #alertQueue} or not.\n   */\n  private isBusy: boolean = false;\n\n  /**\n   * Adds a new subscriber into [subscribers]{@link #subscribers}.\n   *\n   * @param{AlertServiceSubscriber} subscriber The new subscriber\n   */\n  public subscribe(subscriber: AlertServiceSubscriber): void {\n    this.subscribers.push(subscriber);\n  }\n\n  /**\n   * Creates and shows an {@link Alert} with color `warn`.\n   *\n   * @param{string} message The message of the alert\n   * @param{string} size The size of the alert\n   */\n  public warn(message: string, size = 'd'): void {\n    this.alert(message, size, 'warn');\n  }\n\n  /**\n   * Creates and shows an {@link Alert} with color `success`.\n   *\n   * @param{string} message The message of the alert\n   * @param{string} size The size of the alert\n   */\n  public success(message: string, size = 'd'): void {\n    this.alert(message, size, 'success');\n  }\n\n  /**\n   * Creates and shows an {@link Alert} with color `info`.\n   *\n   * @param{string} message The message of the alert\n   * @param{string} size The size of the alert\n   */\n  public inform(message: string, size = 'd'): void {\n    this.alert(message, size, 'info');\n  }\n\n  /**\n   * Creates and shows an {@link Alert} with color `primary`.\n   *\n   * @param{string} message The message of the alert\n   * @param{string} size The size of the alert\n   */\n  public primary(message: string, size = 'd'): void {\n    this.alert(message, size, 'primary');\n  }\n\n  /**\n   * Creates and shows an {@link Alert} with color `secondary`.\n   *\n   * @param{string} message The message of the alert\n   * @param{string} size The size of the alert\n   */\n  public secondary(message: string, size = 'd'): void {\n    this.alert(message, size, 'secondary');\n  }\n\n  /**\n   * Creates and shows an {@link Alert}.\n   *\n   * The `message`, `size` and `color` of the {@link Alert} can be specified as\n   * parameters. The {@link Alert} gets created with these parameters and\n   * placed into the [alertQueue]{@link #alertQueue}. After that, the\n   * [work]{@link #work} method gets called.\n   *\n   * @param{string} message The message of the alert\n   * @param{string} size The size of the alert\n   * @param{string} color The color of the alert\n   */\n  public alert(message: string, size = 'd', color = 'warn'): void {\n    this.alertQueue.enqueue({\n      message,\n      size,\n      color\n    });\n    this.work();\n  }\n\n  /**\n   * Works on the [alertQueue]{@link #alertQueue}.\n   *\n   * If the service is not busy working on the [alertQueue]{@link #alertQueue}\n   * and the [alertQueue]{@link #alertQueue} is not empty, meaning that there\n   * are still [Alerts]{@link Alert} to process, the method will set the\n   * [isBusy]{@link #isBusy} flag, remove the next {@link Alert} from the queue\n   * and show the {@link Alert} by calling [showAlert]{@link #showAlert}.\n   *\n   * Once the show call has finished, the [isBusy]{@link #isBusy} flag is unset\n   * and the [work]{@link #work} method gets called again.\n   *\n   * If a current work call is still in progress, meaning the\n   * [isBusy]{@link #isBusy} flag is set, a new work call will do nothing.\n   */\n  private async work(): Promise {\n    if (!this.alertQueue.isEmpty() && !this.isBusy) {\n      this.isBusy = true;\n      let alert = this.alertQueue.dequeue();\n      if (alert) {\n        this.showAlert(alert).then(() => {\n          this.isBusy = false;\n          this.work();\n        });\n      } else {\n        this.isBusy = false;\n      }\n    }\n  }\n\n\n  /**\n   * Notifies all subscibers to show an {@link Alert}.\n   *\n   * @param{Alert} alert The `Alert` to show\n   * @returns{Promise} A promise, which is resolved when all subscribers\n   * have finished showing the `alert`\n   */\n  private async showAlert(alert: Alert): Promise {\n    return Promise.all(this.subscribers.map(subscriber =>\n      subscriber.alert(alert)\n    ));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AlertServiceSubscriber.html":{"url":"interfaces/AlertServiceSubscriber.html","title":"interface - AlertServiceSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AlertServiceSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/alert/alert-service-subscriber.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a subscriber of the AlertService. The Interface has to\nbe implemented by a subscriber. The subscriber then has to register itself to\nthe AlertService in order to receive alerts. The AlertService\nthen calls the alert method of the subscriber with the given\nAlert. The subscriber is then free to do anything with the given\nAlert.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    alert\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alert\n                        \n                        \n                    \n                \n            \n            \n                \nalert(alert: Alert)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/alert/alert-service-subscriber.ts:21\n                \n            \n\n\n            \n                \n                    This method is called, when the subscriber has registered itself by the\nAlertService. When an Alert is created, the\nAlertService calles the subscribers alert method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    alert\n                                    \n                                                Alert\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The alert to show.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The subscriber has to return a Promise\nwhich will resolve upon finishing the process of showing the alert.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Alert } from './alert';\n\n/**\n * Interface for a subscriber of the {@link AlertService}. The Interface has to\n * be implemented by a subscriber. The subscriber then has to register itself to\n * the {@link AlertService} in order to receive alerts. The {@link AlertService}\n * then calls the [alert]{@link #alert} method of the subscriber with the given\n * {@link Alert}. The subscriber is then free to do anything with the given\n * {@link Alert}.\n */\nexport interface AlertServiceSubscriber {\n  /**\n   * This method is called, when the subscriber has registered itself by the\n   * {@link AlertService}. When an {@link Alert} is created, the\n   * {@link AlertService} calles the subscribers [alert]{@link #alert} method.\n   *\n   * @param{Alert} alert The alert to show.\n   * @returns{Promise} The subscriber has to return a `Promise`\n   * which will resolve upon finishing the process of showing the alert.\n   */\n  alert(alert: Alert): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BaseModule.html":{"url":"modules/BaseModule.html","title":"module - BaseModule","body":"\n                   \n\n\n\n\n    Modules\n    BaseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BaseModule\n\n\n\ncluster_BaseModule_exports\n\n\n\ncluster_BaseModule_declarations\n\n\n\n\nClassNameInputDirective\n\nClassNameInputDirective\n\n\n\nBaseModule\n\nBaseModule\n\nBaseModule -->\n\nClassNameInputDirective->BaseModule\n\n\n\n\n\nColorInputDirective\n\nColorInputDirective\n\nBaseModule -->\n\nColorInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorBaseDirective\n\nControlValueAccessorBaseDirective\n\nBaseModule -->\n\nControlValueAccessorBaseDirective->BaseModule\n\n\n\n\n\nControlValueAccessorClassNameInputDirective\n\nControlValueAccessorClassNameInputDirective\n\nBaseModule -->\n\nControlValueAccessorClassNameInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorColorInputDirective\n\nControlValueAccessorColorInputDirective\n\nBaseModule -->\n\nControlValueAccessorColorInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorSizeColorInputDirective\n\nControlValueAccessorSizeColorInputDirective\n\nBaseModule -->\n\nControlValueAccessorSizeColorInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorSizeInputDirective\n\nControlValueAccessorSizeInputDirective\n\nBaseModule -->\n\nControlValueAccessorSizeInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorSizeThemeColorInputDirective\n\nControlValueAccessorSizeThemeColorInputDirective\n\nBaseModule -->\n\nControlValueAccessorSizeThemeColorInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorThemeColorInputDirective\n\nControlValueAccessorThemeColorInputDirective\n\nBaseModule -->\n\nControlValueAccessorThemeColorInputDirective->BaseModule\n\n\n\n\n\nEventManagerDirective\n\nEventManagerDirective\n\nBaseModule -->\n\nEventManagerDirective->BaseModule\n\n\n\n\n\nSizeColorInputDirective\n\nSizeColorInputDirective\n\nBaseModule -->\n\nSizeColorInputDirective->BaseModule\n\n\n\n\n\nSizeInputDirective\n\nSizeInputDirective\n\nBaseModule -->\n\nSizeInputDirective->BaseModule\n\n\n\n\n\nSizeThemeColorInputDirective\n\nSizeThemeColorInputDirective\n\nBaseModule -->\n\nSizeThemeColorInputDirective->BaseModule\n\n\n\n\n\nSizeThemeInputDirective\n\nSizeThemeInputDirective\n\nBaseModule -->\n\nSizeThemeInputDirective->BaseModule\n\n\n\n\n\nStateManagerDirective\n\nStateManagerDirective\n\nBaseModule -->\n\nStateManagerDirective->BaseModule\n\n\n\n\n\nThemeColorInputDirective\n\nThemeColorInputDirective\n\nBaseModule -->\n\nThemeColorInputDirective->BaseModule\n\n\n\n\n\nThemeInputDirective\n\nThemeInputDirective\n\nBaseModule -->\n\nThemeInputDirective->BaseModule\n\n\n\n\n\nClassNameInputDirective \n\nClassNameInputDirective \n\nClassNameInputDirective  -->\n\nBaseModule->ClassNameInputDirective \n\n\n\n\n\nColorInputDirective \n\nColorInputDirective \n\nColorInputDirective  -->\n\nBaseModule->ColorInputDirective \n\n\n\n\n\nControlValueAccessorBaseDirective \n\nControlValueAccessorBaseDirective \n\nControlValueAccessorBaseDirective  -->\n\nBaseModule->ControlValueAccessorBaseDirective \n\n\n\n\n\nControlValueAccessorClassNameInputDirective \n\nControlValueAccessorClassNameInputDirective \n\nControlValueAccessorClassNameInputDirective  -->\n\nBaseModule->ControlValueAccessorClassNameInputDirective \n\n\n\n\n\nControlValueAccessorColorInputDirective \n\nControlValueAccessorColorInputDirective \n\nControlValueAccessorColorInputDirective  -->\n\nBaseModule->ControlValueAccessorColorInputDirective \n\n\n\n\n\nControlValueAccessorSizeColorInputDirective \n\nControlValueAccessorSizeColorInputDirective \n\nControlValueAccessorSizeColorInputDirective  -->\n\nBaseModule->ControlValueAccessorSizeColorInputDirective \n\n\n\n\n\nControlValueAccessorSizeInputDirective \n\nControlValueAccessorSizeInputDirective \n\nControlValueAccessorSizeInputDirective  -->\n\nBaseModule->ControlValueAccessorSizeInputDirective \n\n\n\n\n\nControlValueAccessorSizeThemeColorInputDirective \n\nControlValueAccessorSizeThemeColorInputDirective \n\nControlValueAccessorSizeThemeColorInputDirective  -->\n\nBaseModule->ControlValueAccessorSizeThemeColorInputDirective \n\n\n\n\n\nControlValueAccessorThemeColorInputDirective \n\nControlValueAccessorThemeColorInputDirective \n\nControlValueAccessorThemeColorInputDirective  -->\n\nBaseModule->ControlValueAccessorThemeColorInputDirective \n\n\n\n\n\nSizeColorInputDirective \n\nSizeColorInputDirective \n\nSizeColorInputDirective  -->\n\nBaseModule->SizeColorInputDirective \n\n\n\n\n\nSizeInputDirective \n\nSizeInputDirective \n\nSizeInputDirective  -->\n\nBaseModule->SizeInputDirective \n\n\n\n\n\nSizeThemeColorInputDirective \n\nSizeThemeColorInputDirective \n\nSizeThemeColorInputDirective  -->\n\nBaseModule->SizeThemeColorInputDirective \n\n\n\n\n\nSizeThemeInputDirective \n\nSizeThemeInputDirective \n\nSizeThemeInputDirective  -->\n\nBaseModule->SizeThemeInputDirective \n\n\n\n\n\nThemeColorInputDirective \n\nThemeColorInputDirective \n\nThemeColorInputDirective  -->\n\nBaseModule->ThemeColorInputDirective \n\n\n\n\n\nThemeInputDirective \n\nThemeInputDirective \n\nThemeInputDirective  -->\n\nBaseModule->ThemeInputDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/components/base/base.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ClassNameInputDirective\n                        \n                        \n                            ColorInputDirective\n                        \n                        \n                            ControlValueAccessorBaseDirective\n                        \n                        \n                            ControlValueAccessorClassNameInputDirective\n                        \n                        \n                            ControlValueAccessorColorInputDirective\n                        \n                        \n                            ControlValueAccessorSizeColorInputDirective\n                        \n                        \n                            ControlValueAccessorSizeInputDirective\n                        \n                        \n                            ControlValueAccessorSizeThemeColorInputDirective\n                        \n                        \n                            ControlValueAccessorThemeColorInputDirective\n                        \n                        \n                            EventManagerDirective\n                        \n                        \n                            SizeColorInputDirective\n                        \n                        \n                            SizeInputDirective\n                        \n                        \n                            SizeThemeColorInputDirective\n                        \n                        \n                            SizeThemeInputDirective\n                        \n                        \n                            StateManagerDirective\n                        \n                        \n                            ThemeColorInputDirective\n                        \n                        \n                            ThemeInputDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ClassNameInputDirective\n                        \n                        \n                            ColorInputDirective\n                        \n                        \n                            ControlValueAccessorBaseDirective\n                        \n                        \n                            ControlValueAccessorClassNameInputDirective\n                        \n                        \n                            ControlValueAccessorColorInputDirective\n                        \n                        \n                            ControlValueAccessorSizeColorInputDirective\n                        \n                        \n                            ControlValueAccessorSizeInputDirective\n                        \n                        \n                            ControlValueAccessorSizeThemeColorInputDirective\n                        \n                        \n                            ControlValueAccessorThemeColorInputDirective\n                        \n                        \n                            SizeColorInputDirective\n                        \n                        \n                            SizeInputDirective\n                        \n                        \n                            SizeThemeColorInputDirective\n                        \n                        \n                            SizeThemeInputDirective\n                        \n                        \n                            ThemeColorInputDirective\n                        \n                        \n                            ThemeInputDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ColorInputDirective } from './style-input/color-input.directive';\nimport { ThemeColorInputDirective } from './style-input/theme-color-input.directive';\nimport { SizeInputDirective } from './style-input/size-input.directive';\nimport { SizeColorInputDirective } from './style-input/size-color-input.directive';\nimport { SizeThemeColorInputDirective } from './style-input/size-theme-color-input.directive';\nimport { ControlValueAccessorBaseDirective } from './control-value-accessor/control-value-accessor.base.directive';\nimport { ClassNameInputDirective } from './style-input/class-name-input.directive';\nimport { ThemeInputDirective } from './style-input/theme-input.directive';\nimport { ControlValueAccessorClassNameInputDirective } from './control-value-accessor-style-input/control-value-accessor-class-name-input.directive';\nimport { ControlValueAccessorThemeColorInputDirective } from './control-value-accessor-style-input/control-value-accessor-theme-color-input.directive';\nimport { ControlValueAccessorColorInputDirective } from './control-value-accessor-style-input/control-value-accessor-color-input.directive';\nimport { ControlValueAccessorSizeInputDirective } from './control-value-accessor-style-input/control-value-accessor-size-input.directive';\nimport { ControlValueAccessorSizeColorInputDirective } from './control-value-accessor-style-input/control-value-accessor-size-color-input.directive';\nimport { ControlValueAccessorSizeThemeColorInputDirective } from './control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive';\nimport { SizeThemeInputDirective } from './style-input/size-theme-input.directive';\nimport { StateManagerDirective } from './control-value-accessor/state-manager.directive';\nimport { EventManagerDirective } from './control-value-accessor/event-manager.directive';\n\n\n\n@NgModule({\n  declarations: [\n    ControlValueAccessorBaseDirective,\n\n    ColorInputDirective,\n    ThemeColorInputDirective,\n    SizeInputDirective,\n    SizeColorInputDirective,\n    SizeThemeColorInputDirective,\n    ThemeInputDirective,\n    SizeThemeInputDirective,\n    ClassNameInputDirective,\n\n    ControlValueAccessorColorInputDirective,\n    ControlValueAccessorThemeColorInputDirective,\n    ControlValueAccessorSizeInputDirective,\n    ControlValueAccessorSizeColorInputDirective,\n    ControlValueAccessorSizeThemeColorInputDirective,\n    ControlValueAccessorClassNameInputDirective,\n    StateManagerDirective,\n    EventManagerDirective,\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ControlValueAccessorBaseDirective,\n\n    ColorInputDirective,\n    ThemeColorInputDirective,\n    SizeInputDirective,\n    SizeColorInputDirective,\n    SizeThemeColorInputDirective,\n    ThemeInputDirective,\n    SizeThemeInputDirective,\n    ClassNameInputDirective,\n\n    ControlValueAccessorColorInputDirective,\n    ControlValueAccessorThemeColorInputDirective,\n    ControlValueAccessorSizeInputDirective,\n    ControlValueAccessorSizeColorInputDirective,\n    ControlValueAccessorSizeThemeColorInputDirective,\n    ControlValueAccessorClassNameInputDirective,\n  ]\n})\nexport class BaseModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/button/button.component.ts\n\n\n    \n        Description\n    \n    \n        The button component acts like a normal html button, but provides different\nstyle options in the form of inputs or attributes.\nThere are two possible form changing options: round and pill. These can\nbe passed on either with attributes or with inputs. The input syntax is\ndifferent than the attribute syntax:\n\nround or pill for attribute syntax and\n[isPill]=\"{boolean}\" or [isRound]=\"{boolean}\" for the input syntax.\n\nYou cannot combine the two. Only one of these can be set to ture.\nThe other input / attribute is isPlain/plain. This tells the component\nto invert its colors, which means, that the hover colors are now 'normal'\ncolors and the 'normal' colors are now the hover colors.\n\n    \n\n    \n        Extends\n    \n    \n            SizeThemeColorInputDirective\n    \n\n\n    \n        Example\n    \n    \n                \n                    // Basic usage example where pill is set:\n\n  Button Text\n\n                \n                \n                    // Basic usage example where round is set:\n\n  Button Text\n\n                \n                \n                    // This is a minimal usage example:\n\n  Button Text\n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-button\n            \n\n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _disabled\n                            \n                            \n                                    Private\n                                pill\n                            \n                            \n                                    Private\n                                plain\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                            \n                                    Private\n                                round\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                isPill\n                            \n                            \n                                isPlain\n                            \n                            \n                                isRound\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isRound\n                                \n                                \n                                    isPill\n                                \n                                \n                                    isPlain\n                                \n                                \n                                    disabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(round: any, pill: any, plain: any, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/form/button/button.component.ts:144\n                            \n                        \n\n                \n                    \n                            Creates a new ButtonComponent.\nSets the different class states according to the attribute inputs.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        round\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Any value can be set and the is-round class will be set\n\n                                                        \n                                                \n                                                \n                                                        pill\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Any value can be set and the is-pill class will be set\n\n                                                        \n                                                \n                                                \n                                                        plain\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Any value can be set and the is-plain class will be set\n\n                                                        \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injectable for the\nSizeThemeColorInputDirective\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:99\n                            \n                        \n                \n                    \n                        Sets the disabled state of the component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isPill\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:77\n                            \n                        \n                \n                    \n                        Sets the pill property of the component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isPlain\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:89\n                            \n                        \n                \n                    \n                        Sets the plain property of the component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isRound\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:65\n                            \n                        \n                \n                    \n                        Sets the round property of the component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'button'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:112\n                            \n                        \n                \n                    \n                        Defines the type of the button element.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/button/button.component.ts:195\n                \n            \n\n\n            \n                \n                    Adds the needed classes based on the options of the component passed either\nby input or by attributes.\nOverwrites the getClasses\nmethod of the SizeThemeColorInputDirective by adding the is-pill,\nis-round and is-plain classes if needed.\nThe is-pill class gets included, if the pill property\nis true.\nThe is-round class gets included, if the round property\nis true.\nThe is-plain class gets included, if the plain property\nis true.\n\n\n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        The classes for the HTML button element\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/button/button.component.ts:174\n                \n            \n\n\n            \n                \n                    Provides access for a FormGroup to set the disabled state.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new disabled state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:144\n                            \n                        \n\n                \n                    \n                        Round state of the component.\nIf true, the HTML button element gets disabled and is no longer\nclickable.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pill\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:128\n                            \n                        \n\n                \n                    \n                        Pill state of the component.\nIf true, the is-pill class gets added to the classes of the HTML\nbutton element.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            plain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:136\n                            \n                        \n\n                \n                    \n                        Plain state of the component.\nIf true, the is-plain class gets added to the classes of the HTML\nbutton element.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-btn'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:57\n                            \n                        \n\n                \n                    \n                        The root class of the HTML button element.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            round\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:120\n                            \n                        \n\n                \n                    \n                        Round state of the component.\nIf true, the is-round class gets added to the classes of the HTML\nbutton element.\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isRound\n                    \n                \n\n\n                \n                    \n                        setisRound(isRound: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/button/button.component.ts:65\n                                \n                            \n                    \n                        \n                                Sets the round property of the component.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            isRound\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    The new value of the round state\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isPill\n                    \n                \n\n\n                \n                    \n                        setisPill(isPill: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/button/button.component.ts:77\n                                \n                            \n                    \n                        \n                                Sets the pill property of the component.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            isPill\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    The new value of pill\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isPlain\n                    \n                \n\n\n                \n                    \n                        setisPlain(isPlain: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/button/button.component.ts:89\n                                \n                            \n                    \n                        \n                                Sets the plain property of the component.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            isPlain\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    The new value of the plain state\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n\n                \n                    \n                        getdisabled()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/button/button.component.ts:106\n                                \n                            \n                    \n                        \n                                Gets the disabled state of the component.\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setdisabled(isDisabled: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/button/button.component.ts:99\n                                \n                            \n                    \n                        \n                                Sets the disabled state of the component.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            isDisabled\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    The new value of the disabled state\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Attribute, Component, Input, Optional } from '@angular/core';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { SizeThemeColorInputDirective } from '../../base/style-input/size-theme-color-input.directive';\n\n/**\n * The button component acts like a normal html button, but provides different\n * style options in the form of inputs or attributes.\n *\n * There are two possible form changing options: `round` and `pill`. These can\n * be passed on either with attributes or with inputs. The input syntax is\n * different than the attribute syntax:\n *\n * - `round` or `pill` for attribute syntax and\n * - `[isPill]=\"{boolean}\"` or `[isRound]=\"{boolean}\"` for the input syntax.\n *\n * You cannot combine the two. Only one of these can be set to `ture`.\n *\n * The other input / attribute is `isPlain`/`plain`. This tells the component\n * to invert its colors, which means, that the hover colors are now 'normal'\n * colors and the 'normal' colors are now the hover colors.\n *\n * @example\n * // Basic usage example where pill is set:\n * \n *              Button Text\n * \n *\n * @example\n * // Basic usage example where round is set:\n * \n *               Button Text\n * \n *\n * @example\n * // This is a minimal usage example:\n * \n *                Button Text\n * \n *\n */\n@Component({\n  selector: 'sb-el-button',\n  templateUrl: './button.component.html'\n})\nexport class ButtonComponent extends SizeThemeColorInputDirective {\n\n  /**\n   * The root class of the HTML button element.\n   */\n  public rootClass: string = 'sb-el-btn';\n\n  /**\n   *  Sets the [round]{@link #round} property of the component.\n   *\n   * @param {boolean} isRound The new value of the `round` state\n   */\n  @Input()\n  set isRound(isRound: boolean) {\n    if (!this.pill) this.round = isRound;\n    else if (isRound && this.pill) throw new Error('Cannot use pill and round'\n      + ' attribute simultaneously!');\n  }\n\n  /**\n   *  Sets the [pill]{@link #pill} property of the component.\n   *\n   * @param {boolean} isPill The new value of `pill`\n   */\n  @Input()\n  set isPill(isPill: boolean) {\n    if (!this.round) this.pill = isPill;\n    else if (isPill && this.round) throw new Error('Cannot use pill and round'\n      + ' attribute simultaneously!');\n  }\n\n  /**\n   *  Sets the [plain]{@link #plain} property of the component.\n   *\n   * @param {boolean} isPlain The new value of the `plain` state\n   */\n  @Input()\n  set isPlain(isPlain: boolean) {\n    this.plain = isPlain;\n  }\n\n  /**\n   *  Sets the [disabled]{@link disabled} state of the component.\n   *\n   * @param {boolean} isDisabled The new value of the `disabled` state\n   */\n  @Input()\n  set disabled(isDisabled: boolean) { this._disabled = isDisabled; }\n  /**\n   * Gets the [disabled]{@link disabled} state of the component.\n   *\n   * @returns {boolean} The current [disabled]{@link disabled} state of the\n   * component\n   */\n  get disabled(): boolean { return this._disabled; }\n\n  /**\n   * Defines the type of the button element.\n   */\n  @Input()\n  public type: string = 'button';\n\n  /**\n   * Round state of the component.\n   *\n   * If `true`, the `is-round` class gets added to the classes of the HTML\n   * button element.\n   */\n  private round: boolean = false;\n\n  /**\n   * Pill state of the component.\n   *\n   * If `true`, the `is-pill` class gets added to the classes of the HTML\n   * button element.\n   */\n  private pill: boolean = false;\n\n  /**\n   * Plain state of the component.\n   *\n   * If `true`, the `is-plain` class gets added to the classes of the HTML\n   * button element.\n   */\n  private plain: boolean = false;\n\n  /**\n   * Round state of the component.\n   *\n   * If `true`, the HTML button element gets disabled and is no longer\n   * clickable.\n   */\n  private _disabled: boolean = false;\n\n  /**\n   * Creates a new ButtonComponent.\n   *\n   * Sets the different class states according to the attribute inputs.\n   *\n   * @param{any} round Any value can be set and the `is-round` class will be set\n   * @param{any} pill Any value can be set and the `is-pill` class will be set\n   * @param{any} plain Any value can be set and the `is-plain` class will be set\n   * @param{ThemeService} themeService Injectable for the\n   * `SizeThemeColorInputDirective`\n   */\n  constructor(\n    @Optional() @Attribute('round') round: any,\n    @Optional() @Attribute('pill') pill: any,\n    @Optional() @Attribute('plain') plain: any,\n    themeService: ThemeService\n  ) {\n    super(themeService);\n    if (round === '') this.isRound = true;\n    if (pill === '') this.isPill = true;\n    if (plain === '') this.isPlain = true;\n  }\n\n  /**\n   *  Provides access for a `FormGroup` to set the disabled state.\n   *\n   * @param{boolean} isDisabled The new disabled state\n   */\n  public setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Adds the needed classes based on the options of the component passed either\n   * by input or by attributes.\n   *\n   * Overwrites the [getClasses]{@link SizeThemeColorInputDirective#getClasses}\n   * method of the {@link SizeThemeColorInputDirective} by adding the `is-pill`,\n   * `is-round` and `is-plain` classes if needed.\n   *\n   * The `is-pill` class gets included, if the [pill]{@link #pill} property\n   * is `true`.\n   * The `is-round` class gets included, if the [round]{@link #round} property\n   * is `true`.\n   * The `is-plain` class gets included, if the [plain]{@link #plain} property\n   * is `true`.\n   *\n   * @returns {Array} The classes for the HTML button element\n   */\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.round ? 'is-round' : '');\n    classes.push(this.pill ? 'is-pill' : '');\n    classes.push(this.plain ? 'is-plain' : '');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/card/card.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SizeThemeInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-card\n            \n\n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hover\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                            \n                                    Private\n                                shadow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(hover: any, shadow: any, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/card/card.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        hover\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        shadow\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/card/card.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hover\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/card/card.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-card'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/card/card.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            shadow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/card/card.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Attribute, Component, Optional } from '@angular/core';\nimport { ThemeService } from '../../services/theme/theme.service';\nimport { SizeThemeInputDirective } from '../base/style-input/size-theme-input.directive';\n\n@Component({\n  selector: 'sb-el-card',\n  templateUrl: './card.component.html'\n})\nexport class CardComponent extends SizeThemeInputDirective {\n\n  public rootClass: string = 'sb-el-card';\n\n  private hover: boolean = false;\n  private shadow: boolean = false;\n\n  constructor(\n    @Optional() @Attribute('hover') hover: any,\n    @Optional() @Attribute('shadow') shadow: any,\n    themeService: ThemeService\n  ) {\n    super(themeService);\n    if (hover === '') this.hover = true;\n    if (shadow === '') this.shadow = true;\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.hover ? 'is-hover' : '');\n    classes.push(this.shadow ? 'is-shadow' : '');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n  \n    \n  \n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/checkbox/checkbox.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ControlValueAccessorSizeThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: CheckboxComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-checkbox\n            \n\n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                check\n                            \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                labelPosition\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/checkbox/checkbox.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelPosition\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'right'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/checkbox/checkbox.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            check\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    check()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/checkbox/checkbox.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/checkbox/checkbox.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-checkbox'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/checkbox/checkbox.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlValueAccessorSizeThemeColorInputDirective } from '../../base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-checkbox',\n  templateUrl: './checkbox.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: CheckboxComponent,\n    multi: true\n  }]\n})\nexport class CheckboxComponent extends ControlValueAccessorSizeThemeColorInputDirective {\n\n  public rootClass = 'sb-el-checkbox';\n\n  @Input()\n  public label: string = '';\n  @Input()\n  public labelPosition: string = 'right';\n\n  public check(): void {\n    this.value = !this.value;\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.label ? 'is-label' : '');\n    classes.push(this.label ? 'label-is-' + this.labelPosition : '');\n    classes.push(this.value ? 'is-checked' : 'is-unchecked');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  {{ label }}\n  \n    \n      \n        &#xe876;\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}                                '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxGroupComponent.html":{"url":"components/CheckboxGroupComponent.html","title":"component - CheckboxGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CheckboxGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/group/checkbox/checkbox-group.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SelectionOptionsDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: CheckboxGroupComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-checkbox-group\n            \n\n\n\n\n            \n                templateUrl\n                ./checkbox-group.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                    Protected\n                                updateValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                groupAlign\n                            \n                            \n                                groupTitle\n                            \n                            \n                                labelPosition\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        groupAlign\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'left'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/checkbox/checkbox-group.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        groupTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/checkbox/checkbox-group.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelPosition\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'right'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/checkbox/checkbox-group.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/group/checkbox/checkbox-group.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValues()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/group/checkbox/checkbox-group.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-checkbox-group'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/group/checkbox/checkbox-group.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { SelectedOptions } from '../base/selected-options';\nimport { SelectionOptionsDirective } from '../base/selection-options.directive';\n\n@Component({\n  selector: 'sb-el-checkbox-group',\n  templateUrl: './checkbox-group.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: CheckboxGroupComponent,\n    multi: true\n  }]\n})\nexport class CheckboxGroupComponent extends SelectionOptionsDirective {\n\n  public rootClass = 'sb-el-checkbox-group';\n\n  @Input()\n  public groupTitle: string = '';\n\n  @Input()\n  public groupAlign: string | null = 'left';\n\n  @Input()\n  public labelPosition: string = 'right';\n\n  check() {\n    this.value = this.selectedOptions;\n  }\n\n  protected updateValues(): void {\n    this.selectedOptions = this.value as SelectedOptions;\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n      \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ClassNameInputDirective.html":{"url":"directives/ClassNameInputDirective.html","title":"directive - ClassNameInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ClassNameInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/style-input/class-name-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _extraClasses\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                extraClasses\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    extraClasses\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        extraClasses\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/class-name-input.directive.ts:12\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/style-input/class-name-input.directive.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _extraClasses\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/class-name-input.directive.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/class-name-input.directive.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        extraClasses\n                    \n                \n\n\n                \n                    \n                        setextraClasses(extraClasses)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/style-input/class-name-input.directive.ts:12\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            extraClasses\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ClassNameInputDirective {\n\n  public rootClass: string = '';\n\n  private _extraClasses: Array = new Array();\n  @Input()\n  set extraClasses(extraClasses: string | Array) {\n    if (Array.isArray(extraClasses)) this._extraClasses = extraClasses;\n    else {\n      this._extraClasses = extraClasses.split(' ').filter(className => {\n        return className !== '';\n      });\n    }\n  }\n\n  public getClasses(): Array {\n    let classes = new Array();\n    classes.push(this.rootClass);\n    this._extraClasses.forEach(className => classes.push(className))\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ColorInputDirective.html":{"url":"directives/ColorInputDirective.html","title":"directive - ColorInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ColorInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/style-input/color-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/color-input.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/style-input/color-input.directive.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ClassNameInputDirective } from './class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ColorInputDirective extends ClassNameInputDirective {\n\n  @Input()\n  public color: string | null = 'primary';\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.color ? this.rootClass + '--' + this.color : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ColumnInformation.html":{"url":"classes/ColumnInformation.html","title":"class - ColumnInformation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ColumnInformation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/table/column-information.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ColumnInformationDefaults\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alignment\n                            \n                            \n                                    Public\n                                color\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clone\n                            \n                            \n                                    Static\n                                merge\n                            \n                            \n                                    Private\n                                    Static\n                                mergeValues\n                            \n                            \n                                    Public\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    defaults\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alignment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'center'\n                        \n                    \n                            \n                                \n                                    Inherited from         ColumnInformationDefaults\n\n                                \n                            \n                        \n                            \n                                    Defined in         ColumnInformationDefaults:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from         ColumnInformationDefaults\n\n                                \n                            \n                        \n                            \n                                    Defined in         ColumnInformationDefaults:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from         ColumnInformationDefaults\n\n                                \n                            \n                        \n                            \n                                    Defined in         ColumnInformationDefaults:4\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/table/column-information.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ColumnInformation\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            merge\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    merge(overwrite: ColumnInformationOptionsInterface, persistent: ColumnInformationOptionsInterface)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/table/column-information.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    overwrite\n                                    \n                                                ColumnInformationOptionsInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    persistent\n                                    \n                                                ColumnInformationOptionsInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ColumnInformation\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            mergeValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mergeValues(overwrite: string | undefined, persistent: string | undefined, defaultValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/table/column-information.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    overwrite\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    persistent\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    defaultValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            set\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    set(information: ColumnInformationOptionsInterface)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/table/column-information.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    information\n                                    \n                                                ColumnInformationOptionsInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ColumnInformation\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        defaults\n                    \n                \n\n                \n                    \n                        getdefaults()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/models/table/column-information.ts:12\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ColumnInformationInterface, ColumnInformationOptionsInterface } from \"./column-information.interface\";\n\nexport class ColumnInformationDefaults implements ColumnInformationInterface {\n  public name: string = '';\n  public color: string = '';\n  public alignment: string = 'center';\n}\n\n\nexport class ColumnInformation extends ColumnInformationDefaults {\n\n  public static get defaults(): ColumnInformation {\n    return new ColumnInformation();\n  }\n\n  private clone(): ColumnInformation {\n    let clone = new ColumnInformation();\n    clone.name = this.name;\n    clone.color = this.color;\n    clone.alignment = this.alignment;\n    return clone;\n  }\n\n  public set(\n    information: ColumnInformationOptionsInterface\n  ): ColumnInformation {\n    let clone = Object.assign({}, this);\n    return Object.assign(clone, information);\n  }\n\n  public static merge(\n    overwrite: ColumnInformationOptionsInterface,\n    persistent: ColumnInformationOptionsInterface\n  ): ColumnInformation {\n    let info = new ColumnInformation();\n\n    info.name = this.mergeValues(overwrite.name, persistent.name,\n      this.defaults.name);\n    info.color = this.mergeValues(overwrite.color, persistent.color,\n      this.defaults.color);\n    info.alignment = this.mergeValues(overwrite.alignment, persistent.alignment,\n      this.defaults.alignment);\n\n    return info;\n  }\n\n  private static mergeValues(overwrite: string | undefined, persistent: string | undefined, defaultValue: string): string {\n    let value = defaultValue;\n    if (overwrite && defaultValue !== overwrite) value = overwrite;\n    if (persistent && defaultValue !== persistent) value = persistent;\n    return value;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ColumnInformationDefaults.html":{"url":"classes/ColumnInformationDefaults.html","title":"class - ColumnInformationDefaults","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ColumnInformationDefaults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/table/column-information.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            ColumnInformationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alignment\n                            \n                            \n                                    Public\n                                color\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alignment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'center'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/table/column-information.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/table/column-information.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/table/column-information.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ColumnInformationInterface, ColumnInformationOptionsInterface } from \"./column-information.interface\";\n\nexport class ColumnInformationDefaults implements ColumnInformationInterface {\n  public name: string = '';\n  public color: string = '';\n  public alignment: string = 'center';\n}\n\n\nexport class ColumnInformation extends ColumnInformationDefaults {\n\n  public static get defaults(): ColumnInformation {\n    return new ColumnInformation();\n  }\n\n  private clone(): ColumnInformation {\n    let clone = new ColumnInformation();\n    clone.name = this.name;\n    clone.color = this.color;\n    clone.alignment = this.alignment;\n    return clone;\n  }\n\n  public set(\n    information: ColumnInformationOptionsInterface\n  ): ColumnInformation {\n    let clone = Object.assign({}, this);\n    return Object.assign(clone, information);\n  }\n\n  public static merge(\n    overwrite: ColumnInformationOptionsInterface,\n    persistent: ColumnInformationOptionsInterface\n  ): ColumnInformation {\n    let info = new ColumnInformation();\n\n    info.name = this.mergeValues(overwrite.name, persistent.name,\n      this.defaults.name);\n    info.color = this.mergeValues(overwrite.color, persistent.color,\n      this.defaults.color);\n    info.alignment = this.mergeValues(overwrite.alignment, persistent.alignment,\n      this.defaults.alignment);\n\n    return info;\n  }\n\n  private static mergeValues(overwrite: string | undefined, persistent: string | undefined, defaultValue: string): string {\n    let value = defaultValue;\n    if (overwrite && defaultValue !== overwrite) value = overwrite;\n    if (persistent && defaultValue !== persistent) value = persistent;\n    return value;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColumnInformationInterface.html":{"url":"interfaces/ColumnInformationInterface.html","title":"interface - ColumnInformationInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ColumnInformationInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/table/column-information.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ColumnInformationOptionsInterface\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        alignment\n                                \n                                \n                                        color\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alignment\n                                    \n                                \n                                \n                                    \n                                        alignment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ColumnInformationOptionsInterface {\n  name?: string;\n  color?: string;\n  alignment?: string;\n}\n\nexport interface ColumnInformationInterface\n  extends ColumnInformationOptionsInterface {\n  name: string;\n  color: string;\n  alignment: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColumnInformationOptionsInterface.html":{"url":"interfaces/ColumnInformationOptionsInterface.html","title":"interface - ColumnInformationOptionsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ColumnInformationOptionsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/table/column-information.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        alignment\n                                \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                            Optional\n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alignment\n                                    \n                                \n                                \n                                    \n                                        alignment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ColumnInformationOptionsInterface {\n  name?: string;\n  color?: string;\n  alignment?: string;\n}\n\nexport interface ColumnInformationInterface\n  extends ColumnInformationOptionsInterface {\n  name: string;\n  color: string;\n  alignment: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent.html":{"url":"components/ContainerComponent.html","title":"component - ContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/container/container.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SizeThemeInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-container\n            \n\n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-container'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/container/container.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { SizeThemeInputDirective } from '../base/style-input/size-theme-input.directive';\n\n@Component({\n  selector: 'sb-el-container',\n  templateUrl: './container.component.html'\n})\nexport class ContainerComponent extends SizeThemeInputDirective {\n\n  public rootClass = 'sb-el-container';\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorBaseDirective.html":{"url":"directives/ControlValueAccessorBaseDirective.html","title":"directive - ControlValueAccessorBaseDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorBaseDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                innerValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                setInnerValue\n                            \n                            \n                                    Protected\n                                updateValues\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                            \n                                    Public\n                                writeValueInnerChange\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setInnerValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setInnerValue(value: ValueType | undefined, emitChange: boolean, innerChange: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            ValueType | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    emitChange\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    innerChange\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValues()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: ValueType | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            ValueType | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            writeValueInnerChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValueInnerChange(value: ValueType | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            ValueType | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            innerValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ValueType | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts:14\n                                \n                            \n\n                \n                    \n                        setvalue(value)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts:13\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { EventManagerDirective } from './event-manager.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ControlValueAccessorBaseDirective extends EventManagerDirective implements ControlValueAccessor {\n\n  private innerValue: ValueType | undefined;\n\n  // writing value\n  set value(value: ValueType | undefined) { this.setInnerValue(value, true, false) }\n  get value(): ValueType | undefined { return this.innerValue }\n  public writeValue(value: ValueType | undefined): void { this.setInnerValue(value, false, false) }\n  public writeValueInnerChange(value: ValueType | undefined) {\n    this.setInnerValue(value, true, true);\n  }\n\n  private setInnerValue(value: ValueType | undefined, emitChange: boolean, innerChange: boolean): void {\n    if (value !== this.innerValue && value !== null && !this.disabled) {\n      this.innerValue = value;\n      if (!innerChange) this.updateValues();\n      if (emitChange) this.emitChange(value);\n    }\n  }\n\n  protected updateValues(): void {};\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorClassNameInputDirective.html":{"url":"directives/ControlValueAccessorClassNameInputDirective.html","title":"directive - ControlValueAccessorClassNameInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorClassNameInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor-style-input/control-value-accessor-class-name-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _extraClasses\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                extraClasses\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    extraClasses\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        extraClasses\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-class-name-input.directive.ts:13\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-class-name-input.directive.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _extraClasses\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-class-name-input.directive.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-class-name-input.directive.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        extraClasses\n                    \n                \n\n\n                \n                    \n                        setextraClasses(extraClasses)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-class-name-input.directive.ts:13\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            extraClasses\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ControlValueAccessorBaseDirective } from '../control-value-accessor/control-value-accessor.base.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ControlValueAccessorClassNameInputDirective extends ControlValueAccessorBaseDirective {\n\n  public rootClass: string = '';\n\n  private _extraClasses: Array = new Array();\n  @Input()\n  set extraClasses(extraClasses: string | Array) {\n    if (Array.isArray(extraClasses)) this._extraClasses = extraClasses;\n    else {\n      this._extraClasses = extraClasses.split(' ').filter(className => {\n        return className !== '';\n      });\n    }\n  }\n\n  public getClasses(): Array {\n    let classes = new Array();\n    classes.push(this.rootClass);\n    this._extraClasses.forEach(className => classes.push(className))\n    classes.push(this.disabled ? 'disabled' : '');\n    classes.push(this.pristine ? 'pristine' : 'dirty');\n    classes.push(this.touched ? 'touched' : 'untouched');\n    classes.push(this.focused ? 'focus' : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorColorInputDirective.html":{"url":"directives/ControlValueAccessorColorInputDirective.html","title":"directive - ControlValueAccessorColorInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorColorInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor-style-input/control-value-accessor-color-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-color-input.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-color-input.directive.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ControlValueAccessorClassNameInputDirective } from './control-value-accessor-class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ControlValueAccessorColorInputDirective extends ControlValueAccessorClassNameInputDirective {\n\n  @Input()\n  public color: string | null = 'primary';\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.color ? this.rootClass + '--' + this.color : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorSizeColorInputDirective.html":{"url":"directives/ControlValueAccessorSizeColorInputDirective.html","title":"directive - ControlValueAccessorSizeColorInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorSizeColorInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-color-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-color-input.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'd'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-color-input.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-color-input.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ControlValueAccessorClassNameInputDirective } from './control-value-accessor-class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ControlValueAccessorSizeColorInputDirective extends ControlValueAccessorClassNameInputDirective {\n\n  @Input()\n  public size: string | null = 'd';\n\n  @Input()\n  public color: string | null = 'primary';\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.size ? this.rootClass + '--' + this.size : '');\n    classes.push(this.color ? this.rootClass + '--' + this.color : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorSizeInputDirective.html":{"url":"directives/ControlValueAccessorSizeInputDirective.html","title":"directive - ControlValueAccessorSizeInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorSizeInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'd'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-input.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-input.directive.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ControlValueAccessorClassNameInputDirective } from './control-value-accessor-class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ControlValueAccessorSizeInputDirective extends ControlValueAccessorClassNameInputDirective {\n\n  @Input()\n  public size: string | null = 'd';\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.size ? this.rootClass + '--' + this.size : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{"url":"directives/ControlValueAccessorSizeThemeColorInputDirective.html","title":"directive - ControlValueAccessorSizeThemeColorInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorSizeThemeColorInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'd'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive.ts:11\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { ControlValueAccessorClassNameInputDirective } from './control-value-accessor-class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ControlValueAccessorSizeThemeColorInputDirective extends ControlValueAccessorClassNameInputDirective {\n\n  @Input()\n  public size: string | null = 'd';\n\n  public theme: string;\n\n  @Input()\n  public color: string | null = 'primary';\n\n  constructor(\n    private themeService: ThemeService\n  ) {\n    super();\n    this.theme = themeService.get();\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.size ? this.rootClass + '--' + this.size : '');\n    classes.push(this.theme && this.color ?\n      this.rootClass + '--' + this.theme + '-' + this.color : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorThemeColorInputDirective.html":{"url":"directives/ControlValueAccessorThemeColorInputDirective.html","title":"directive - ControlValueAccessorThemeColorInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorThemeColorInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor-style-input/control-value-accessor-theme-color-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-theme-color-input.directive.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-theme-color-input.directive.ts:13\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-theme-color-input.directive.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-theme-color-input.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { ControlValueAccessorClassNameInputDirective } from './control-value-accessor-class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ControlValueAccessorThemeColorInputDirective extends ControlValueAccessorClassNameInputDirective {\n\n  public theme: string;\n\n  @Input()\n  public color: string | null = 'primary';\n\n  constructor(\n    private themeService: ThemeService\n  ) {\n    super();\n    this.theme = themeService.get();\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.theme && this.color ?\n      this.rootClass + '--' + this.theme + '-' + this.color : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Csv.html":{"url":"classes/Csv.html","title":"class - Csv","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Csv\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/csv/csv.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Private\n                                    Static\n                                DELIMITER\n                            \n                            \n                                    Private\n                                    Static\n                                END_DELIMITER\n                            \n                            \n                                    Public\n                                header\n                            \n                            \n                                    Private\n                                    Static\n                                START_DELIMITER\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forEachColumn\n                            \n                            \n                                    Public\n                                forEachColumnName\n                            \n                            \n                                    Public\n                                getColumnData\n                            \n                            \n                                    Static\n                                    Async\n                                parseFile\n                            \n                            \n                                    Static\n                                parseString\n                            \n                            \n                                    Private\n                                    Static\n                                rows\n                            \n                            \n                                    Private\n                                    Static\n                                split\n                            \n                            \n                                    Private\n                                    Static\n                                useDelimiter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(header: Array, data: Array>)\n                    \n                \n                        \n                            \n                                Defined in src/lib/models/csv/csv.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        header\n                                                  \n                                                        \n                                                                    Array\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    Array>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/csv/csv.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            DELIMITER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RegExp\n\n                        \n                    \n                    \n                        \n                            Default value : /(?:'|\"|)(?:\\s*)(?:,|;|$)(?:\\s*)(?:'|\"|)/\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/csv/csv.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            END_DELIMITER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RegExp\n\n                        \n                    \n                    \n                        \n                            Default value : /(?:\\s*)(?:'|\"|)/\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/csv/csv.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            header\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/csv/csv.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            START_DELIMITER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RegExp\n\n                        \n                    \n                    \n                        \n                            Default value : /(?:'|\"|)(?:\\s*)/\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/csv/csv.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            forEachColumn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forEachColumn(fn: (columnName: string,columnData: Array,index: number) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/csv/csv.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            forEachColumnName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forEachColumnName(fn: (columnName: string,index: number) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/csv/csv.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getColumnData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getColumnData(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/csv/csv.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            parseFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parseFile(file: File, delimiter?: Delimiter)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/csv/csv.ts:42\n                \n            \n\n\n            \n                \n                    Static Members\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    delimiter\n                                    \n                                                Delimiter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            parseString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parseString(string: string, delimiter?: Delimiter)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/csv/csv.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    delimiter\n                                    \n                                                Delimiter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Csv\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            rows\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    rows(string: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/csv/csv.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            split\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    split(row: string, delimiter?: Delimiter)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/csv/csv.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    delimiter\n                                    \n                                                Delimiter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            useDelimiter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    useDelimiter(delimiter?: Delimiter)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/csv/csv.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    delimiter\n                                    \n                                                Delimiter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     RegExp\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export enum Delimiter {\n  COMMA = ',',\n  COLON = ':',\n  SEMICOLON = ';'\n}\n\nexport class Csv {\n\n  private static START_DELIMITER: RegExp = /(?:'|\"|)(?:\\s*)/;\n  private static END_DELIMITER: RegExp = /(?:\\s*)(?:'|\"|)/;\n  private static DELIMITER: RegExp = /(?:'|\"|)(?:\\s*)(?:,|;|$)(?:\\s*)(?:'|\"|)/;\n\n  constructor(\n    public header: Array,\n    public data: Array>\n  ) {}\n\n  public forEachColumnName(\n    fn: (columnName: string, index: number) => void\n  ): void {\n    this.header.forEach((columnName: string, index: number) => {\n      fn(columnName, index);\n    });\n  }\n\n  public forEachColumn(\n    fn: (columnName: string, columnData: Array, index: number) => void\n  ): void {\n    this.header.forEach((columnName: string, index: number) => {\n      fn(columnName, this.getColumnData(index), index);\n    });\n  }\n\n  public getColumnData(index: number): Array {\n    return this.data.map(row => row[index]);\n  }\n\n  /**\n   * Static Members\n   */\n\n  public static async parseFile(\n    file: File,\n    delimiter?: Delimiter\n  ): Promise {\n    if (file.type != 'text/csv') {\n      return Promise.reject(\"File is not a CSV file!\");\n    }\n    let content = await file.text();\n    return this.parseString(content, delimiter);\n  }\n\n  public static parseString(string: string, delimiter?: Delimiter): Csv {\n    let rows = this.rows(string);\n    let splitRows = new Array>();\n    rows.forEach(row => splitRows.push(this.split(row, delimiter)));\n    return new Csv(\n      splitRows[0],\n      splitRows.slice(1)\n    )\n  }\n\n  private static rows(string: string): Array {\n    let rows = string.split('\\n');\n    if (rows[rows.length - 1] === \"\") rows.splice(rows.length - 1, rows.length);\n    return rows;\n  }\n\n  private static split(row: string, delimiter?: Delimiter): Array {\n    let split = row.split(this.useDelimiter(delimiter));\n\n    let firstElement = split[0];\n    if (firstElement && /^('|\").*$/.test(firstElement)) {\n      split[0] = firstElement.slice(1, firstElement.length);\n    }\n\n    let lastElement = split[split.length-1];\n    if (lastElement && /^.*('|\")$/.test(lastElement)) {\n      split[split.length-1] = lastElement.substring(0, lastElement.length - 1);\n    }\n    return split;\n  }\n\n  private static useDelimiter(delimiter?: Delimiter): RegExp {\n    if (delimiter) {\n      return new RegExp(\n        this.START_DELIMITER.source +\n        '(?:' + delimiter + ')' +\n        this.END_DELIMITER.source\n      );\n    } else return this.DELIMITER;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EventManagerDirective.html":{"url":"directives/EventManagerDirective.html","title":"directive - EventManagerDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  EventManagerDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor/event-manager.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                onChangeCallback\n                            \n                            \n                                    Protected\n                                onTouchedCallBack\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                emitBlur\n                            \n                            \n                                    Protected\n                                emitChange\n                            \n                            \n                                    Public\n                                emitFocus\n                            \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                change\n                            \n                            \n                                focus\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        focus\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:19\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            emitBlur\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitBlur()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            emitChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitChange(value: ValueType | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            ValueType | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            emitFocus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitFocus()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onChangeCallback\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onTouchedCallBack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, EventEmitter, Output } from '@angular/core';\nimport { StateManagerDirective } from './state-manager.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class EventManagerDirective extends StateManagerDirective {\n\n  protected onTouchedCallBack: () => void = () => {};\n  protected onChangeCallback: (value: ValueType | undefined) => void = () => {};\n\n  @Output()\n  public change: EventEmitter = new EventEmitter();\n\n  @Output()\n  public blur: EventEmitter = new EventEmitter();\n\n  @Output()\n  public focus: EventEmitter = new EventEmitter();\n\n  // events\n  public emitBlur(): void {\n    this.setFocusedState(false);\n    this.setTouchedState(true);\n    this.onTouchedCallBack();\n    this.blur.emit();\n  }\n\n  public emitFocus(): void {\n    this.setFocusedState(true);\n    this.focus.emit();\n  }\n\n  protected emitChange(value: ValueType | undefined): void {\n    this.setPristineState(false);\n    this.onChangeCallback(value);\n    this.change.emit(value);\n  }\n\n  // register events\n  public registerOnChange(fn: any): void { this.onChangeCallback = fn }\n  public registerOnTouched(fn: any): void { this.onTouchedCallBack = fn }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileInputComponent.html":{"url":"components/FileInputComponent.html","title":"component - FileInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FileInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/file-input/file-input.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ControlValueAccessorSizeThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: FileInputComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-file-input\n            \n\n\n\n\n            \n                templateUrl\n                ./file-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                defaultMessage\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                pill\n                            \n                            \n                                    Public\n                                plain\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkFileSize\n                            \n                            \n                                    Public\n                                getClasses\n                            \n                            \n                                    Public\n                                input\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                limit\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertService: AlertService, pill: any, plain: any, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/form/file-input/file-input.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pill\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plain\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        limit\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : -1\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/file-input/file-input.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/file-input/file-input.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            checkFileSize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkFileSize(file: File)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/file-input/file-input.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/file-input/file-input.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            input\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    input(files: FileList | null)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/file-input/file-input.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                            FileList | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            defaultMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Choose a file'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/file-input/file-input.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : FileInputComponent.defaultMessage\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/file-input/file-input.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pill\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/file-input/file-input.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            plain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/file-input/file-input.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-file-input'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/file-input/file-input.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Attribute, Component, Input, Optional } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AlertService } from '../../../services/alert/alert.service';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { ControlValueAccessorSizeThemeColorInputDirective } from '../../base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-file-input',\n  templateUrl: './file-input.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: FileInputComponent,\n    multi: true\n  }]\n})\nexport class FileInputComponent extends ControlValueAccessorSizeThemeColorInputDirective {\n\n  public rootClass = 'sb-el-file-input';\n\n  @Input()\n  public placeholder: string = '';\n\n  // the limit is in mega bytes\n  @Input()\n  public limit: number = -1;\n\n  public plain: boolean = false;\n  public pill: boolean = false;\n\n  private static defaultMessage: string = 'Choose a file';\n  public message: string = FileInputComponent.defaultMessage;\n\n  constructor(\n    private alertService: AlertService,\n    @Optional() @Attribute('pill') pill: any,\n    @Optional() @Attribute('plain') plain: any,\n    themeService: ThemeService\n  ) {\n    super(themeService);\n    if (pill === '') this.pill = true;\n    if (plain === '') this.plain = true;\n  }\n\n  public input(files: FileList | null) {\n    if (files) {\n      let file: File | null = files.item(0);\n      if (file && this.checkFileSize(file)) {\n        this.message = file.name;\n        this.writeValueInnerChange(file);\n      } else {\n        this.message = FileInputComponent.defaultMessage;\n        this.writeValueInnerChange(undefined);\n      }\n    }\n  }\n\n  private checkFileSize(file: File): boolean {\n    if (this.limit >= 0) {\n      if (file.size  {\n    let classes = super.getClasses();\n    classes.push(this.pill ? 'is-pill' : '');\n    classes.push(this.plain ? 'is-plain' : '');\n    return classes;\n  }\n}\n\n    \n\n    \n          \n  \n    {{ placeholder }}\n  \n  \n  \n    \n      {{ message }}\n      \n        &#xe2c6;\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ placeholder }}                {{ message }}                          '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'FileInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormGroupComponent.html":{"url":"components/FormGroupComponent.html","title":"component - FormGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/group/form-group.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SizeThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-form-group\n            \n\n\n\n\n            \n                templateUrl\n                ./form-group.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                groupAlign\n                            \n                            \n                                groupTitle\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasGroupTitle\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        groupAlign\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'left'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/form-group.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        groupTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/form-group.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/group/form-group.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-form-group'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/group/form-group.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasGroupTitle\n                    \n                \n\n                \n                    \n                        gethasGroupTitle()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/group/form-group.component.ts:14\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { SizeThemeColorInputDirective } from '../../base/style-input/size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-form-group',\n  templateUrl: './form-group.component.html'\n})\nexport class FormGroupComponent extends SizeThemeColorInputDirective {\n\n  public rootClass = 'sb-el-form-group';\n\n  @Input()\n  public groupTitle: string = '';\n  get hasGroupTitle(): boolean {\n    return this.groupTitle !== '';\n  }\n\n  @Input()\n  public groupAlign: string | null = 'left';\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.groupAlign ? 'is-' + this.groupAlign : '');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  {{groupTitle}}\n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{groupTitle}}        '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormModule.html":{"url":"modules/FormModule.html","title":"module - FormModule","body":"\n                   \n\n\n\n\n    Modules\n    FormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormModule\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_FormModule_imports\n\n\n\ncluster_FormModule_declarations\n\n\n\n\nButtonComponent\n\nButtonComponent\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nButtonComponent->FormModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nFormModule -->\n\nCheckboxComponent->FormModule\n\n\n\n\n\nCheckboxGroupComponent\n\nCheckboxGroupComponent\n\nFormModule -->\n\nCheckboxGroupComponent->FormModule\n\n\n\n\n\nFileInputComponent\n\nFileInputComponent\n\nFormModule -->\n\nFileInputComponent->FormModule\n\n\n\n\n\nFormGroupComponent\n\nFormGroupComponent\n\nFormModule -->\n\nFormGroupComponent->FormModule\n\n\n\n\n\nIconButtonComponent\n\nIconButtonComponent\n\nFormModule -->\n\nIconButtonComponent->FormModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nFormModule -->\n\nIconComponent->FormModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nFormModule -->\n\nInputComponent->FormModule\n\n\n\n\n\nRadioButtonComponent\n\nRadioButtonComponent\n\nFormModule -->\n\nRadioButtonComponent->FormModule\n\n\n\n\n\nRadioButtonGroupComponent\n\nRadioButtonGroupComponent\n\nFormModule -->\n\nRadioButtonGroupComponent->FormModule\n\n\n\n\n\nSelectButtonComponent\n\nSelectButtonComponent\n\nFormModule -->\n\nSelectButtonComponent->FormModule\n\n\n\n\n\nSelectionOptionsDirective\n\nSelectionOptionsDirective\n\nFormModule -->\n\nSelectionOptionsDirective->FormModule\n\n\n\n\n\nSliderComponent\n\nSliderComponent\n\nFormModule -->\n\nSliderComponent->FormModule\n\n\n\n\n\nToggleSwitchComponent\n\nToggleSwitchComponent\n\nFormModule -->\n\nToggleSwitchComponent->FormModule\n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nFormModule->ButtonComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nFormModule->CheckboxComponent \n\n\n\n\n\nCheckboxGroupComponent \n\nCheckboxGroupComponent \n\nCheckboxGroupComponent  -->\n\nFormModule->CheckboxGroupComponent \n\n\n\n\n\nFileInputComponent \n\nFileInputComponent \n\nFileInputComponent  -->\n\nFormModule->FileInputComponent \n\n\n\n\n\nFormGroupComponent \n\nFormGroupComponent \n\nFormGroupComponent  -->\n\nFormModule->FormGroupComponent \n\n\n\n\n\nIconButtonComponent \n\nIconButtonComponent \n\nIconButtonComponent  -->\n\nFormModule->IconButtonComponent \n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nFormModule->IconComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nFormModule->InputComponent \n\n\n\n\n\nRadioButtonComponent \n\nRadioButtonComponent \n\nRadioButtonComponent  -->\n\nFormModule->RadioButtonComponent \n\n\n\n\n\nRadioButtonGroupComponent \n\nRadioButtonGroupComponent \n\nRadioButtonGroupComponent  -->\n\nFormModule->RadioButtonGroupComponent \n\n\n\n\n\nSelectButtonComponent \n\nSelectButtonComponent \n\nSelectButtonComponent  -->\n\nFormModule->SelectButtonComponent \n\n\n\n\n\nSliderComponent \n\nSliderComponent \n\nSliderComponent  -->\n\nFormModule->SliderComponent \n\n\n\n\n\nToggleSwitchComponent \n\nToggleSwitchComponent \n\nToggleSwitchComponent  -->\n\nFormModule->ToggleSwitchComponent \n\n\n\n\n\nBaseModule\n\nBaseModule\n\nFormModule -->\n\nBaseModule->FormModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/components/form/form.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ButtonComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            CheckboxGroupComponent\n                        \n                        \n                            FileInputComponent\n                        \n                        \n                            FormGroupComponent\n                        \n                        \n                            IconButtonComponent\n                        \n                        \n                            IconComponent\n                        \n                        \n                            InputComponent\n                        \n                        \n                            RadioButtonComponent\n                        \n                        \n                            RadioButtonGroupComponent\n                        \n                        \n                            SelectButtonComponent\n                        \n                        \n                            SelectionOptionsDirective\n                        \n                        \n                            SliderComponent\n                        \n                        \n                            ToggleSwitchComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ButtonComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            CheckboxGroupComponent\n                        \n                        \n                            FileInputComponent\n                        \n                        \n                            FormGroupComponent\n                        \n                        \n                            IconButtonComponent\n                        \n                        \n                            IconComponent\n                        \n                        \n                            InputComponent\n                        \n                        \n                            RadioButtonComponent\n                        \n                        \n                            RadioButtonGroupComponent\n                        \n                        \n                            SelectButtonComponent\n                        \n                        \n                            SliderComponent\n                        \n                        \n                            ToggleSwitchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button/button.component';\nimport { IconButtonComponent } from './icon-button/icon-button.component';\nimport { ToggleSwitchComponent } from './toggle-switch/toggle-switch.component';\nimport { CheckboxComponent } from './checkbox/checkbox.component';\nimport { RadioButtonComponent } from './radio-button/radio-button.component';\nimport { RadioButtonGroupComponent } from './group/radio-button/radio-button-group.component';\nimport { CheckboxGroupComponent } from './group/checkbox/checkbox-group.component';\nimport { SelectionOptionsDirective } from './group/base/selection-options.directive';\nimport { SelectButtonComponent } from './select-button/select-button.component';\nimport { SliderComponent } from './slider/slider.component';\nimport { FormsModule } from '@angular/forms';\nimport { BaseModule } from '../base/base.module';\nimport { IconComponent } from '../icon/icon.component';\nimport { FormGroupComponent } from './group/form-group.component';\nimport { InputComponent } from './input/input.component';\nimport { FileInputComponent } from './file-input/file-input.component';\n\n@NgModule({\n  declarations: [\n    ButtonComponent,\n    IconButtonComponent,\n    ToggleSwitchComponent,\n    CheckboxComponent,\n    RadioButtonComponent,\n    RadioButtonGroupComponent,\n    CheckboxGroupComponent,\n    SelectionOptionsDirective,\n    SelectButtonComponent,\n    SliderComponent,\n    IconComponent,\n    FormGroupComponent,\n    InputComponent,\n    FileInputComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    BaseModule\n  ],\n  exports: [\n    ButtonComponent,\n    IconButtonComponent,\n    ToggleSwitchComponent,\n    CheckboxComponent,\n    RadioButtonComponent,\n    RadioButtonGroupComponent,\n    CheckboxGroupComponent,\n    SelectButtonComponent,\n    SliderComponent,\n    IconComponent,\n    FormGroupComponent,\n    InputComponent,\n    FileInputComponent\n  ]\n})\nexport class FormModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridComponent.html":{"url":"components/GridComponent.html","title":"component - GridComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GridComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/grid/grid.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ClassNameInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-grid\n            \n\n\n\n\n            \n                templateUrl\n                ./grid.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dim\n                            \n                            \n                                gap\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dim\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : '2x2'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gap\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/grid/grid.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-grid'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/grid.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ClassNameInputDirective } from \"../base/style-input/class-name-input.directive\";\n\n@Component({\n  selector: 'sb-el-grid',\n  templateUrl: './grid.component.html'\n})\nexport class GridComponent extends ClassNameInputDirective {\n\n  public rootClass = 'sb-el-grid';\n\n  @Input()\n  public gap: string | null = null\n\n  @Input()\n  public dim: string | null = '2x2';\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.dim ? 'dim' + '--' + this.dim : '');\n    classes.push(this.gap ? 'gap' + '--' + this.gap : '');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconButtonComponent.html":{"url":"components/IconButtonComponent.html","title":"component - IconButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IconButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/icon-button/icon-button.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SizeThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-icon-button\n            \n\n\n\n\n            \n                templateUrl\n                ./icon-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _disabled\n                            \n                            \n                                    Public\n                                pill\n                            \n                            \n                                    Public\n                                plain\n                            \n                            \n                                    Public\n                                round\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    disabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pill: any, round: any, plain: any, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/form/icon-button/icon-button.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pill\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        round\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plain\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/icon-button/icon-button.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/icon-button/icon-button.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pill\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/icon-button/icon-button.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            plain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/icon-button/icon-button.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            round\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/icon-button/icon-button.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n\n                \n                    \n                        getdisabled()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/icon-button/icon-button.component.ts:20\n                                \n                            \n\n                \n                    \n                        setdisabled(isDisabled: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/icon-button/icon-button.component.ts:17\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            isDisabled\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Attribute, Component, Input, Optional } from '@angular/core';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { SizeThemeColorInputDirective } from '../../base/style-input/size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-icon-button',\n  templateUrl: './icon-button.component.html'\n})\nexport class IconButtonComponent extends SizeThemeColorInputDirective {\n\n  public plain: boolean = false;\n  public pill: boolean = false;\n  public round: boolean = false;\n  private _disabled: boolean = false;\n\n  @Input()\n  set disabled(isDisabled: boolean) {\n    this._disabled = isDisabled;\n  }\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  constructor(\n    @Optional() @Attribute('pill') pill: any,\n    @Optional() @Attribute('round') round: any,\n    @Optional() @Attribute('plain') plain: any,\n    themeService: ThemeService\n  ) {\n    super(themeService);\n    if (pill === '') this.pill = true;\n    if (round === '') this.round = true;\n    if (plain === '') this.plain = true;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/icon/icon.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SizeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-icon\n            \n\n\n\n\n            \n                templateUrl\n                ./icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/icon/icon.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { SizeColorInputDirective } from '../base/style-input/size-color-input.directive';\n\n@Component({\n  selector: 'sb-el-icon',\n  templateUrl: './icon.component.html'\n})\nexport class IconComponent extends SizeColorInputDirective {\n\n  constructor() {\n    super();\n    this.rootClass = 'sb-el-icon';\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputComponent.html":{"url":"components/InputComponent.html","title":"component - InputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/input/input.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ControlValueAccessorSizeThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: InputComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-input\n            \n\n\n\n\n            \n                templateUrl\n                ./input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pill\n                            \n                            \n                                    Public\n                                plain\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                            \n                                    Public\n                                getInputClasses\n                            \n                            \n                                    Public\n                                getPlaceholderClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholder\n                            \n                            \n                                spellcheck\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pill: any, plain: any, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/form/input/input.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pill\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plain\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/input/input.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        spellcheck\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/input/input.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/input/input.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/input/input.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInputClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInputClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/input/input.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPlaceholderClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPlaceholderClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/input/input.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pill\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/input/input.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            plain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/input/input.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-input'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/input/input.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Attribute, Component, Input, Optional } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { ControlValueAccessorSizeThemeColorInputDirective } from '../../base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-input',\n  templateUrl: './input.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: InputComponent,\n    multi: true\n  }]\n})\nexport class InputComponent extends ControlValueAccessorSizeThemeColorInputDirective {\n\n  public rootClass = 'sb-el-input';\n\n  @Input()\n  public placeholder: string = '';\n\n  @Input()\n  public type: string = 'text';\n\n  @Input()\n  public spellcheck: boolean = false;\n\n  public plain: boolean = false;\n  public pill: boolean = false;\n\n\n  constructor(\n    @Optional() @Attribute('pill') pill: any,\n    @Optional() @Attribute('plain') plain: any,\n    themeService: ThemeService\n  ) {\n    super(themeService);\n    if (pill === '') this.pill = true;\n    if (plain === '') this.plain = true;\n  }\n\n  public getInputClasses(): Array {\n    let classes = new Array();\n    classes.push(this.rootClass + '__input')\n    return classes;\n  }\n\n  public getPlaceholderClasses(): Array {\n    let classes = new Array();\n    classes.push(this.rootClass + '__placeholder')\n    classes.push(this.value || this.focused ? 'is-top' : '')\n    return classes;\n  }\n\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.pill ? 'is-pill' : '');\n    classes.push(this.plain ? 'is-plain': '');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n  \n    {{ placeholder }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ placeholder }}  '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Queue.html":{"url":"classes/Queue.html","title":"class - Queue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Queue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/queue/queue.ts\n        \n\n            \n                Description\n            \n            \n                A queue class with basic queue operations.\nThe queue class handles dequeuing and enqueuing of elements, as well as\nlength management. The dequeue method checks for an empty\nqueue, but does not produce an error if the queue is empty. Instead it\nreturns undefinded.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                queue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dequeue\n                            \n                            \n                                    Public\n                                enqueue\n                            \n                            \n                                    Public\n                                isEmpty\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            queue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/queue/queue.ts:13\n                            \n                        \n\n                \n                    \n                        The actual queue, which holds the elements.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            dequeue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dequeue()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/queue/queue.ts:39\n                \n            \n\n\n            \n                \n                    Removes (dequeues) the next element in the Queue.\nThe next element is the first element of the queue Array.\nThe method therefore gets the first element of this Array and shifts the\nArray by one to the left.\nIf the Queue is empty (the queue Array is empty), the\nmethod will return undefined instead of throwing an error.\n\n\n                    \n                    \n                    \n                        Returns :     T | undefined\n\n                    \n                    \n                        The first element in the queue or undefined if the\nQueue is empty\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enqueue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enqueue(value: T)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/queue/queue.ts:22\n                \n            \n\n\n            \n                \n                    Enqueues an element into the Queue.\nIt appends an element to the queue Array.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The element to add to the Queue\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isEmpty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEmpty()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/queue/queue.ts:63\n                \n            \n\n\n            \n                \n                    Checks if the Queue is empty or not.\nThe Queue if the queue Array is empty.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the queue is empty or false otherwise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/models/queue/queue.ts:52\n                                \n                            \n                    \n                        \n                                Gets the current length of the Queue.\nThe method returns the length of the queue Array.\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        export class Queue {\n  /**\n   * The actual queue, which holds the elements.\n   */\n  private queue: Array = new Array();\n\n  /**\n   * Enqueues an element into the `Queue`.\n   *\n   * It appends an element to the [queue]{@link #queue} `Array`.\n   *\n   *  @param{T} value The element to add to the `Queue`\n   */\n  public enqueue(value: T): void {\n    this.queue.push(value);\n  }\n\n  /**\n   * Removes (dequeues) the next element in the `Queue`.\n   *\n   * The next element is the first element of the [queue]{@link #queue} `Array`.\n   * The method therefore gets the first element of this `Array` and shifts the\n   * `Array` by one to the left.\n   *\n   * If the `Queue` is empty (the [queue]{@link #queue} `Array` is empty), the\n   * method will return `undefined` instead of throwing an error.\n   *\n   * @returns{T | undefined} The first element in the queue or `undefined` if the\n   * `Queue` is empty\n   */\n  public dequeue(): T | undefined {\n    if (!this.isEmpty()) {\n      return this.queue.shift();\n    } else return undefined;\n  }\n\n  /**\n   * Gets the current length of the `Queue`.\n   *\n   * The method returns the length of the [queue]{@link #queue} `Array`.\n   *\n   * @returns{number} The length of the `Queue`\n   */\n  get length(): number {\n    return this.queue.length;\n  }\n\n  /**\n   * Checks if the `Queue` is empty or not.\n   *\n   * The `Queue` if the [queue]{@link #queue} `Array` is empty.\n   *\n   * @returns{boolean} `true` if the queue is empty or `false` otherwise\n   */\n  public isEmpty(): boolean {\n    return this.queue.length == 0;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RadioButtonComponent.html":{"url":"components/RadioButtonComponent.html","title":"component - RadioButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RadioButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/radio-button/radio-button.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ControlValueAccessorSizeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: RadioButtonComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-radio-button\n            \n\n\n\n\n            \n                templateUrl\n                ./radio-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                check\n                            \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                labelPosition\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/form/radio-button/radio-button.component.ts:19\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/radio-button/radio-button.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelPosition\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'right'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/radio-button/radio-button.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            check\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    check()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/radio-button/radio-button.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/radio-button/radio-button.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlValueAccessorSizeColorInputDirective } from '../../base/control-value-accessor-style-input/control-value-accessor-size-color-input.directive';\n\n@Component({\n  selector: 'sb-el-radio-button',\n  templateUrl: './radio-button.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: RadioButtonComponent,\n    multi: true\n  }]\n})\nexport class RadioButtonComponent extends ControlValueAccessorSizeColorInputDirective {\n\n  @Input()\n  public label: string = '';\n  @Input()\n  public labelPosition: string = 'right';\n\n  constructor() {\n    super();\n    this.rootClass = 'sb-el-radio-button';\n  }\n\n  public check(): void {\n    this.value = true;\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.value ? 'is-checked' : 'is-unchecked');\n    classes.push(this.label ? 'is-label' : '');\n    classes.push(this.label ? 'label-is-' + this.labelPosition : '');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  {{ label }}\n  \n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}            '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'RadioButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RadioButtonGroupComponent.html":{"url":"components/RadioButtonGroupComponent.html","title":"component - RadioButtonGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RadioButtonGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/group/radio-button/radio-button-group.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SelectionOptionsDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: RadioButtonGroupComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-radio-button-group\n            \n\n\n\n\n            \n                templateUrl\n                ./radio-button-group.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                check\n                            \n                            \n                                    Protected\n                                updateValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                groupAlign\n                            \n                            \n                                groupTitle\n                            \n                            \n                                labelPosition\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        groupAlign\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'left'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/radio-button/radio-button-group.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        groupTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/radio-button/radio-button-group.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelPosition\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'right'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/radio-button/radio-button-group.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            check\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    check(newOption: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/group/radio-button/radio-button-group.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newOption\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValues()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/group/radio-button/radio-button-group.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-radio-button-group'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/group/radio-button/radio-button-group.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { SelectionOptionsDirective } from '../base/selection-options.directive';\n\n@Component({\n  selector: 'sb-el-radio-button-group',\n  templateUrl: './radio-button-group.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: RadioButtonGroupComponent,\n    multi: true\n  }]\n})\nexport class RadioButtonGroupComponent extends SelectionOptionsDirective {\n\n  public rootClass = 'sb-el-radio-button-group';\n\n  @Input()\n  public groupTitle: string = '';\n\n  @Input()\n  public groupAlign: string | null = 'left';\n\n  @Input()\n  public labelPosition: string = 'right';\n\n  public check(newOption: string) {\n    this.options.forEach((option: string) => {\n      if (option !== newOption) this.selectedOptions[option] = false;\n    })\n    this.writeValueInnerChange(newOption);\n  }\n\n  protected updateValues(): void {\n    this.options.forEach((option: string) => {\n      if (option === this.value) {\n        this.selectedOptions[option] = true;\n      } else this.selectedOptions[option] = false;\n    })\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'RadioButtonGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SbElementModule.html":{"url":"modules/SbElementModule.html","title":"module - SbElementModule","body":"\n                   \n\n\n\n\n    Modules\n    SbElementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SbElementModule\n\n\n\ncluster_SbElementModule_imports\n\n\n\ncluster_SbElementModule_declarations\n\n\n\ncluster_SbElementModule_exports\n\n\n\n\nAlertBoxComponent\n\nAlertBoxComponent\n\n\n\nSbElementModule\n\nSbElementModule\n\nSbElementModule -->\n\nAlertBoxComponent->SbElementModule\n\n\n\n\n\nAlertComponent\n\nAlertComponent\n\nSbElementModule -->\n\nAlertComponent->SbElementModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nSbElementModule -->\n\nCardComponent->SbElementModule\n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nSbElementModule -->\n\nContainerComponent->SbElementModule\n\n\n\n\n\nGridComponent\n\nGridComponent\n\nSbElementModule -->\n\nGridComponent->SbElementModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nSbElementModule -->\n\nTableComponent->SbElementModule\n\n\n\n\n\nAlertBoxComponent \n\nAlertBoxComponent \n\nAlertBoxComponent  -->\n\nSbElementModule->AlertBoxComponent \n\n\n\n\n\nAlertComponent \n\nAlertComponent \n\nAlertComponent  -->\n\nSbElementModule->AlertComponent \n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nSbElementModule->CardComponent \n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nSbElementModule->ContainerComponent \n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nSbElementModule->FormModule \n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nSbElementModule->GridComponent \n\n\n\n\n\nTableComponent \n\nTableComponent \n\nTableComponent  -->\n\nSbElementModule->TableComponent \n\n\n\n\n\nThemeInputDirective \n\nThemeInputDirective \n\nThemeInputDirective  -->\n\nSbElementModule->ThemeInputDirective \n\n\n\n\n\nBaseModule\n\nBaseModule\n\nSbElementModule -->\n\nBaseModule->SbElementModule\n\n\n\n\n\nFormModule\n\nFormModule\n\nSbElementModule -->\n\nFormModule->SbElementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/sb-element.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AlertBoxComponent\n                        \n                        \n                            AlertComponent\n                        \n                        \n                            CardComponent\n                        \n                        \n                            ContainerComponent\n                        \n                        \n                            GridComponent\n                        \n                        \n                            TableComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BaseModule\n                        \n                        \n                            FormModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AlertBoxComponent\n                        \n                        \n                            AlertComponent\n                        \n                        \n                            CardComponent\n                        \n                        \n                            ContainerComponent\n                        \n                        \n                            FormModule\n                        \n                        \n                            GridComponent\n                        \n                        \n                            TableComponent\n                        \n                        \n                            ThemeInputDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BaseModule } from './components/base/base.module';\nimport { FormModule } from './components/form/form.module';\n\n/**\n * Components\n */\nimport { ContainerComponent } from './components/container/container.component';\nimport { AlertBoxComponent } from './components/alert-box/alert-box.component';\nimport { TableComponent } from './components/table/table.component';\nimport { AlertComponent } from './components/alert/alert.component';\nimport { CardComponent } from './components/card/card.component';\nimport { GridComponent } from './components/grid/grid.component';\nimport { ThemeInputDirective } from \"./components/base/style-input/theme-input.directive\";\n\n\n@NgModule({\n  declarations: [\n    ContainerComponent,\n    AlertBoxComponent,\n    TableComponent,\n    AlertComponent,\n    CardComponent,\n    GridComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    FormModule,\n    BaseModule,\n  ],\n  exports: [\n    ContainerComponent,\n    AlertBoxComponent,\n    TableComponent,\n    AlertComponent,\n    CardComponent,\n    GridComponent,\n    // modules\n    FormModule,\n    // directives\n    ThemeInputDirective\n  ]\n})\nexport class SbElementModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectButtonComponent.html":{"url":"components/SelectButtonComponent.html","title":"component - SelectButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/select-button/select-button.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SelectionOptionsDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: SelectButtonComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-select-button\n            \n\n\n\n\n            \n                templateUrl\n                ./select-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pill\n                            \n                            \n                                    Public\n                                plain\n                            \n                            \n                                    Public\n                                showOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getButtonClasses\n                            \n                            \n                                    Public\n                                getClasses\n                            \n                            \n                                    Public\n                                select\n                            \n                            \n                                    Public\n                                toggle\n                            \n                            \n                                    Protected\n                                updateValues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pill: any, plain: any, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/form/select-button/select-button.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pill\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plain\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getButtonClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getButtonClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/select-button/select-button.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/select-button/select-button.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            select\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    select(newOption: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/select-button/select-button.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newOption\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/select-button/select-button.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValues()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/select-button/select-button.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pill\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/select-button/select-button.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            plain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/select-button/select-button.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/select-button/select-button.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Attribute, Component, Optional } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { SelectionOptionsDirective } from '../group/base/selection-options.directive';\n\n@Component({\n  selector: 'sb-el-select-button',\n  templateUrl: './select-button.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: SelectButtonComponent,\n    multi: true\n  }]\n})\nexport class SelectButtonComponent extends SelectionOptionsDirective {\n\n  public plain: boolean = false;\n  public pill: boolean = false;\n  public showOptions: boolean = false;\n\n  constructor(\n    @Optional() @Attribute('pill') pill: any,\n    @Optional() @Attribute('plain') plain: any,\n    themeService: ThemeService\n  ) {\n    super(themeService);\n    if (pill === '') this.pill = true;\n    if (plain === '') this.plain = true;\n    this.rootClass = 'sb-el-select-button';\n  }\n\n  public toggle(): void {\n    this.showOptions = !this.showOptions;\n  }\n\n  public select(newOption: string) {\n    this.toggle();\n    this.options.forEach((option: string) => {\n      if (option !== newOption) this.selectedOptions[option] = false;\n    })\n    this.writeValueInnerChange(newOption);\n  }\n\n  protected updateValues(): void {\n    this.options.forEach((option: string) => {\n      if (option === this.value) {\n        this.selectedOptions[option] = true;\n      } else this.selectedOptions[option] = false;\n    })\n  }\n\n  public getButtonClasses(): Array {\n    let classes = new Array();\n    classes.push('sb-el-select-button__button');\n    return classes;\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.pill ? 'is-pill' : '');\n    classes.push(this.plain ? 'is-plain': '');\n    classes.push(this.showOptions ? 'is-open' : 'is-closed');\n    return classes;\n  }\n}\n\n    \n\n    \n        \n  \n    {{ value }}\n    \n    &#xe5cf;\n  \n  \n    \n      \n          {{ option }}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ value }}                                {{ option }}            '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'SelectButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectedOptions.html":{"url":"interfaces/SelectedOptions.html","title":"interface - SelectedOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SelectedOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/form/group/base/selected-options.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        boolean\n\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/form/group/base/selected-options.ts:1\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface SelectedOptions {\n  [key: string]: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SelectionOptionsDirective.html":{"url":"directives/SelectionOptionsDirective.html","title":"directive - SelectionOptionsDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SelectionOptionsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/form/group/base/selection-options.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _options\n                            \n                            \n                                    Public\n                                selectedOptions\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/base/selection-options.directive.ts:14\n                            \n                        \n            \n        \n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/group/base/selection-options.directive.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SelectedOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/group/base/selection-options.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/group/base/selection-options.directive.ts:18\n                                \n                            \n\n                \n                    \n                        setoptions(options)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/group/base/selection-options.directive.ts:14\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            options\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { SelectedOptions } from './selected-options';\nimport { ControlValueAccessorSizeThemeColorInputDirective } from '../../../../components/base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class SelectionOptionsDirective extends ControlValueAccessorSizeThemeColorInputDirective {\n\n  public selectedOptions: SelectedOptions = {};\n  protected _options: Array = new Array();\n\n  @Input()\n  set options(options: Array) {\n    this._options = options;\n    this._options.forEach((option: string) => this.selectedOptions[option] = false);\n  }\n  get options(): Array {return this._options}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SizeColorInputDirective.html":{"url":"directives/SizeColorInputDirective.html","title":"directive - SizeColorInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SizeColorInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/style-input/size-color-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/size-color-input.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'd'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/size-color-input.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/style-input/size-color-input.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ClassNameInputDirective } from './class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class SizeColorInputDirective extends ClassNameInputDirective {\n\n    @Input()\n    public size: string | null = 'd';\n\n    @Input()\n    public color: string | null = 'primary';\n\n    public getClasses(): Array {\n      let classes = super.getClasses();\n      classes.push(this.size ? this.rootClass + '--' + this.size : '');\n      classes.push(this.color ? this.rootClass + '--' + this.color : '');\n      return classes;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SizeInputDirective.html":{"url":"directives/SizeInputDirective.html","title":"directive - SizeInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SizeInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/style-input/size-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'd'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/size-input.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/style-input/size-input.directive.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ClassNameInputDirective } from './class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class SizeInputDirective extends ClassNameInputDirective {\n\n  @Input()\n  public size: string | null = 'd';\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.size ? this.rootClass + '--' + this.size : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SizeThemeColorInputDirective.html":{"url":"directives/SizeThemeColorInputDirective.html","title":"directive - SizeThemeColorInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SizeThemeColorInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/style-input/size-theme-color-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/base/style-input/size-theme-color-input.directive.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/size-theme-color-input.directive.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'd'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/size-theme-color-input.directive.ts:11\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/style-input/size-theme-color-input.directive.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/size-theme-color-input.directive.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { ClassNameInputDirective } from './class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class SizeThemeColorInputDirective extends ClassNameInputDirective {\n\n  @Input()\n  public size: string | null = 'd';\n\n  public theme: string;\n\n  @Input()\n  public color: string | null = 'primary';\n\n  constructor(\n    private themeService: ThemeService\n  ) {\n    super();\n    this.theme = themeService.get();\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.size ? this.rootClass + '--' + this.size : '');\n    classes.push(this.theme && this.color ?\n      this.rootClass + '--' + this.theme + '-' + this.color : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SizeThemeInputDirective.html":{"url":"directives/SizeThemeInputDirective.html","title":"directive - SizeThemeInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SizeThemeInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/style-input/size-theme-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/base/style-input/size-theme-input.directive.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'd'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/size-theme-input.directive.ts:11\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/style-input/size-theme-input.directive.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/size-theme-input.directive.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { ClassNameInputDirective } from './class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class SizeThemeInputDirective extends ClassNameInputDirective {\n\n  @Input()\n  public size: string | null = 'd';\n\n  public theme: string;\n\n  constructor(\n    private themeService: ThemeService\n  ) {\n    super();\n    this.theme = themeService.get();\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.size ? this.rootClass + '--' + this.size : '');\n    classes.push(this.theme ? this.rootClass + '--' + this.theme : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SliderComponent.html":{"url":"components/SliderComponent.html","title":"component - SliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/slider/slider.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ControlValueAccessorSizeThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: SliderComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-slider\n            \n\n\n\n\n            \n                templateUrl\n                ./slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _step\n                            \n                            \n                                    Private\n                                decimalPlaces\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                            \n                                    Public\n                                snapPoints\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                max\n                            \n                            \n                                min\n                            \n                            \n                                showValue\n                            \n                            \n                                snap\n                            \n                            \n                                step\n                            \n                            \n                                valueSuffix\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    step\n                                \n                                \n                                    snap\n                                \n                                \n                                    numberPipingValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showValue\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        snap\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        step\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueSuffix\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:60\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/slider/slider.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _step\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            decimalPlaces\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-slider'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snapPoints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:50\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        step\n                    \n                \n\n                \n                    \n                        getstep()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/slider/slider.component.ts:34\n                                \n                            \n\n                \n                    \n                        setstep(step: number)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/slider/slider.component.ts:29\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            step\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        snap\n                    \n                \n\n\n                \n                    \n                        setsnap(snap)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/slider/slider.component.ts:38\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            snap\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        numberPipingValue\n                    \n                \n\n                \n                    \n                        getnumberPipingValue()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/slider/slider.component.ts:52\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlValueAccessorSizeThemeColorInputDirective } from '../../base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-slider',\n  templateUrl: './slider.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: SliderComponent,\n    multi: true\n  }]\n})\nexport class SliderComponent extends ControlValueAccessorSizeThemeColorInputDirective {\n\n  public rootClass = 'sb-el-slider';\n\n  @Input()\n  public label: string = '';\n\n  @Input()\n  public min: number = 0;\n\n  @Input()\n  public max: number = 10;\n\n  private _step: number = 1;\n  @Input()\n  set step(step: number) {\n    this._step = step;\n    if (Math.floor(step) !== step)\n        this.decimalPlaces = step.toString().split(\".\")[1].length || 0;\n  }\n  get step(): number { return this._step }\n  private decimalPlaces: number = 0;\n\n  @Input()\n  set snap(snap: Array | boolean) {\n    if (Array.isArray(snap)) this.snapPoints = snap;\n    else if (snap) {\n      this.snapPoints = new Array();\n      let snapStep = Math.round((this.max-this.min)/5/this.step)*this.step;\n      let sum = this.min;\n      while(sum  = new Array();\n\n  get numberPipingValue(): string {\n    return '1.' + this.decimalPlaces + '-' + this.decimalPlaces;\n  }\n\n  @Input()\n  public showValue: boolean = false;\n\n  @Input()\n  public valueSuffix: string = '';\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.label ? 'is-label' : 'is-not-label');\n    classes.push(this.showValue ? 'is-value' : 'is-not-value');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  {{ label }}\n  \n  \n    {{ value | number: numberPipingValue }} {{ valueSuffix }}\n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}        {{ value | number: numberPipingValue }} {{ valueSuffix }}          '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'SliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/StateManagerDirective.html":{"url":"directives/StateManagerDirective.html","title":"directive - StateManagerDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  StateManagerDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor/state-manager.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _disabled\n                            \n                            \n                                    Private\n                                _focused\n                            \n                            \n                                    Private\n                                _pristine\n                            \n                            \n                                    Private\n                                _touched\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                setFocusedState\n                            \n                            \n                                    Public\n                                setPristineState\n                            \n                            \n                                    Public\n                                setTouchedState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                focused\n                            \n                            \n                                pristine\n                            \n                            \n                                touched\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    touched\n                                \n                                \n                                    pristine\n                                \n                                \n                                    disabled\n                                \n                                \n                                    focused\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        focused\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pristine\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        touched\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDisabledState(disabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    disabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setFocusedState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setFocusedState(focused: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    focused\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPristineState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPristineState(pristine: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pristine\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setTouchedState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTouchedState(touched: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    touched\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _focused\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _pristine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _touched\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        touched\n                    \n                \n\n                \n                    \n                        gettouched()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:11\n                                \n                            \n\n                \n                    \n                        settouched(isTouched: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:10\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            isTouched\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        pristine\n                    \n                \n\n                \n                    \n                        getpristine()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:16\n                                \n                            \n\n                \n                    \n                        setpristine(isPristine: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:15\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            isPristine\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n\n                \n                    \n                        getdisabled()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:21\n                                \n                            \n\n                \n                    \n                        setdisabled(isDisabled: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            isDisabled\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        focused\n                    \n                \n\n                \n                    \n                        getfocused()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:26\n                                \n                            \n\n                \n                    \n                        setfocused(isFocused: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:25\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            isFocused\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class StateManagerDirective {\n\n  private _touched: boolean = false;\n  @Input()\n  set touched(isTouched: boolean) { this._touched = isTouched }\n  get touched(): boolean {return this._touched}\n\n  private _pristine: boolean = true;\n  @Input()\n  set pristine(isPristine: boolean) { this._pristine = isPristine }\n  get pristine(): boolean {return this._pristine}\n\n  private _disabled: boolean = false;\n  @Input()\n  set disabled(isDisabled: boolean) { this._disabled = isDisabled }\n  get disabled(): boolean { return this._disabled }\n\n  private _focused: boolean = false;\n  @Input()\n  set focused(isFocused: boolean) { this._focused = isFocused }\n  get focused(): boolean { return this._focused }\n\n  public setDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\n\n  public setTouchedState(touched: boolean): void {\n    this.touched = touched;\n  }\n\n  public setPristineState(pristine: boolean): void {\n    this.pristine = pristine;\n  }\n\n  public setFocusedState(focused: boolean): void {\n    this.focused = focused\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Table.html":{"url":"classes/Table.html","title":"class - Table","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Table\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/table/table.ts\n        \n\n            \n                Description\n            \n            \n                Datastructure, holding information about a table. The table consists of\ncolumns of different data types. Each column has different styling options\nin the form of ColumnInformationInterface. The data can be accessed\nvia tha data field. The styling options are stored in the\ncolumnInformation array.\n\n            \n\n\n            \n                Implements\n            \n            \n                            TableInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                columnInformation\n                            \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                columnsToRows\n                            \n                            \n                                    Static\n                                    Async\n                                fromCSV\n                            \n                            \n                                    Static\n                                fromJSON\n                            \n                            \n                                    Static\n                                fromRows\n                            \n                            \n                                    Private\n                                    Static\n                                getMaxColumnLength\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data?: Array>, columnInformation?: Array)\n                    \n                \n                        \n                            \n                                Defined in src/lib/models/table/table.ts:32\n                            \n                        \n\n                \n                    \n                            Initiates a new Table. The table can be initiated with or without\n data and style. If one or the other is missing, the initiation will create\n an empty Table.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    Array>\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                The data of the Table stored as an\nArray of columns\n\n                                                        \n                                                \n                                                \n                                                        columnInformation\n                                                  \n                                                        \n                                                                        Array\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                The styling information\nfor each column\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            columnInformation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/table/table.ts:18\n                            \n                        \n\n                \n                    \n                        Information about the columns.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array>\n\n                        \n                    \n                    \n                        \n                            Default value : new Array>()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/table/table.ts:25\n                            \n                        \n\n                \n                    \n                        The data of the table. The data is stored as an array of data for each row.\nEach row contains the data for each column.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            columnsToRows\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    columnsToRows(columns: Array>)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/table/table.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    columns\n                                    \n                                            Array>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            fromCSV\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromCSV(csvFile: File, columnInformationOptions?: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/table/table.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    csvFile\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    columnInformationOptions\n                                    \n                                                Array\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            fromJSON\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromJSON(table: Object, columnInformationOptions?: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/table/table.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    columnInformationOptions\n                                    \n                                                Array\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Table\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            fromRows\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromRows(rows: Array>, columnInformation: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/table/table.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rows\n                                    \n                                            Array>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    columnInformation\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Table\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getMaxColumnLength\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaxColumnLength(columns: Array>)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/table/table.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    columns\n                                    \n                                            Array>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Csv } from \"../csv/csv\";\nimport { ColumnInformation } from \"./column-information\";\nimport { TableInterface } from \"./table.interface\";\nimport { ColumnInformationInterface, ColumnInformationOptionsInterface } from './column-information.interface';\n\n/**\n * Datastructure, holding information about a table. The table consists of\n * columns of different data types. Each column has different styling options\n * in the form of {@link ColumnInformationInterface}. The data can be accessed\n * via tha [data]{@link #data} field. The styling options are stored in the\n * [columnInformation]{@link #columnInformation} array.\n */\nexport class Table implements TableInterface {\n\n  /**\n   * Information about the columns.\n   */\n  public columnInformation: Array\n    = new Array();\n\n  /**\n   * The data of the table. The data is stored as an array of data for each row.\n   * Each row contains the data for each column.\n   */\n  public data: Array> = new Array>();\n\n\n  constructor();\n  constructor(\n    data: Array>,\n    columnInformation: Array\n  );\n  /**\n\t * Initiates a new {@link Table}. The table can be initiated with or without\n   * data and style. If one or the other is missing, the initiation will create\n   * an empty {@link Table}.\n   *\n   * @param{Array>} data The data of the `Table` stored as an\n   * `Array` of columns\n   * @param{Array} columnInformation The styling information\n   * for each column\n\t */\n  constructor(\n    data?: Array>,\n    columnInformation?: Array\n  ) {\n    if (data && columnInformation) {\n      this.data = data;\n      this.columnInformation = columnInformation;\n    }\n  }\n\n\n  public static async fromCSV(\n    csvFile: File,\n    columnInformationOptions?: Array\n  ): Promise {\n    return Csv.parseFile(csvFile).then(csv => {\n      let columnInformation = new Array();\n\n      csv.forEachColumnName((columnName: string, index: number) => {\n        let info = ColumnInformation.defaults.set({name: columnName});\n        if (columnInformationOptions && columnInformationOptions[index]) {\n          info = ColumnInformation.merge(info, columnInformationOptions[index])\n        }\n\n        columnInformation.push(info)\n      });\n\n      return new Table(csv.data, columnInformation);\n    });\n  }\n\n  public static fromRows(\n    rows: Array>,\n    columnInformation: Array\n  ): Table {\n    return new Table(rows, columnInformation.map(\n      info => ColumnInformation.defaults.set(info)\n    ));\n  }\n\n  public static fromJSON(\n    table: Object,\n    columnInformationOptions?: Array\n  ): Table {\n    let entries = Object.entries(table);\n    let columns = new Array>();\n    let columnInformation = new Array();\n\n    entries.forEach((entry: any, index: number) => {\n      if (Array.isArray(entry[1])) {\n        columns.push(entry[1])\n        let info = ColumnInformation.defaults.set({name: entry[0]});\n        if (columnInformationOptions && columnInformationOptions[index]) {\n          info = ColumnInformation.merge(info, columnInformationOptions[index])\n        }\n        columnInformation.push(info)\n      }\n    })\n\n    return new Table(this.columnsToRows(columns), columnInformation);\n  }\n\n  private static getMaxColumnLength(columns: Array>): number {\n    let max = 0;\n    columns.forEach(column => max = column.length > max ? column.length : max);\n    return max;\n  }\n\n  private static columnsToRows(columns: Array>): Array> {\n    let rows = new Array>();\n    for (let i = 0 ; i ();\n      columns.forEach(column => {\n        row.push(column[i] ? column[i] : '-')\n      })\n      rows.push(row);\n    }\n    return rows;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableComponent.html":{"url":"components/TableComponent.html","title":"component - TableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/table/table.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-table\n            \n\n\n\n\n            \n                templateUrl\n                ./table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rootClass\n                            \n                            \n                                    Public\n                                subRootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                            \n                                    Public\n                                getColumnClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                separation\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        separation\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'all'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/table/table.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        table\n                    \n                \n                \n                    \n                        Type :         TableInterface\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/table/table.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/table/table.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getColumnClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getColumnClasses(columnIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/table/table.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    columnIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-table'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/table/table.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subRootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : this.rootClass + '__data'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/table/table.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { TableInterface } from \"../../models/table/table.interface\";\nimport { ThemeColorInputDirective } from '../base/style-input/theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-table',\n  templateUrl: './table.component.html'\n})\nexport class TableComponent extends ThemeColorInputDirective {\n\n  public rootClass: string = 'sb-el-table';\n  public subRootClass: string = this.rootClass + '__data';\n\n  @Input()\n  public separation: string = 'all';\n\n  @Input()\n  public table!: TableInterface;\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    if (this.separation === 'all') {\n      classes.push('is-border-separation');\n      classes.push('is-color-separation');\n    } else if (this.separation) {\n      classes.push('is-' + this.separation + '-separation');\n    }\n    return classes;\n  }\n\n  public getColumnClasses(columnIndex: number): Array {\n    let classes = new Array();\n    let columnInformation = this.table.columnInformation[columnIndex];\n    classes.push(this.subRootClass);\n    classes.push(this.subRootClass + '--' + columnInformation.color)\n    classes.push('is-' + columnInformation.alignment)\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ column.name }}\n        \n      \n    \n    \n      \n        \n          {{ columnEntry }}\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ column.name }}                                              {{ columnEntry }}                    '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'TableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableInterface.html":{"url":"interfaces/TableInterface.html","title":"interface - TableInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TableInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/table/table.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        columnInformation\n                                \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        columnInformation\n                                    \n                                \n                                \n                                    \n                                        columnInformation:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Information about the columns.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     Array>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array>\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data of the table. The data is stored as an array of data for each row.\nEach row contains the data for each column.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ColumnInformationInterface } from \"./column-information.interface\";\n\nexport interface TableInterface {\n\n  /**\n   * Information about the columns.\n   */\n  columnInformation: Array;\n\n  /**\n   * The data of the table. The data is stored as an array of data for each row.\n   * Each row contains the data for each column.\n   */\n  data: Array>;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ThemeColorInputDirective.html":{"url":"directives/ThemeColorInputDirective.html","title":"directive - ThemeColorInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ThemeColorInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/style-input/theme-color-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/base/style-input/theme-color-input.directive.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/theme-color-input.directive.ts:13\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/style-input/theme-color-input.directive.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/theme-color-input.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { ClassNameInputDirective } from './class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ThemeColorInputDirective extends ClassNameInputDirective {\n\n  public theme: string;\n\n  @Input()\n  public color: string | null = 'primary';\n\n  constructor(\n    private themeService: ThemeService\n  ) {\n    super();\n    this.theme = themeService.get();\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.theme && this.color ?\n      this.rootClass + '--' + this.theme + '-' + this.color : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ThemeInputDirective.html":{"url":"directives/ThemeInputDirective.html","title":"directive - ThemeInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ThemeInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/style-input/theme-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/base/style-input/theme-input.directive.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/style-input/theme-input.directive.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/theme-input.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { ClassNameInputDirective } from './class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ThemeInputDirective  extends ClassNameInputDirective {\n\n  public theme: string;\n\n  constructor(\n    private themeService: ThemeService\n  ) {\n    super();\n    this.theme = themeService.get();\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.theme ? this.rootClass + '--' + this.theme : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/theme/theme.service.ts\n        \n\n            \n                Description\n            \n            \n                A service which provides global access to the current theme.\nThe service allows a component to get and set the theme. There are two\nthemes:\n\nlight\nnight\n\nThe default theme is the night theme. The theme is stored in form of a\nstring, which is then included into classes of the different components or\nelements.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                commit\n                            \n                            \n                                    Public\n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            commit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    commit(theme: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/theme/theme.service.ts:29\n                \n            \n\n\n            \n                \n                    Sets the theme to the service.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    theme\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The theme to commit\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/theme/theme.service.ts:36\n                \n            \n\n\n            \n                \n                    Gets the current theme.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The current theme\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'night'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/theme/theme.service.ts:22\n                            \n                        \n\n                \n                    \n                        The current theme. The default theme is night.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n  * A service which provides global access to the current theme.\n  *\n  * The service allows a component to get and set the theme. There are two\n  * themes:\n  * - `light`\n  * - `night`\n  *\n  * The default theme is the `night` theme. The theme is stored in form of a\n  * string, which is then included into classes of the different components or\n  * elements.\n  */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  /**\n   * The current theme. The default theme is `night`.\n   */\n  private _theme: string = 'night';\n\n  /**\n   * Sets the theme to the service.\n   *\n   * @param{string} theme The theme to commit\n   */\n  public commit(theme: string): void { this._theme = theme }\n\n  /**\n   *  Gets the current theme.\n   *\n   * @returns{string} The current theme\n   */\n  public get(): string { return this._theme }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleSwitchComponent.html":{"url":"components/ToggleSwitchComponent.html","title":"component - ToggleSwitchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleSwitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/toggle-switch/toggle-switch.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ControlValueAccessorSizeThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: ToggleSwitchComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-toggle-switch\n            \n\n\n\n\n            \n                templateUrl\n                ./toggle-switch.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/toggle-switch/toggle-switch.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/toggle-switch/toggle-switch.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-toggle-switch'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/toggle-switch/toggle-switch.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlValueAccessorSizeThemeColorInputDirective } from '../../base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-toggle-switch',\n  templateUrl: './toggle-switch.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: ToggleSwitchComponent,\n    multi: true\n  }]\n})\nexport class ToggleSwitchComponent extends ControlValueAccessorSizeThemeColorInputDirective {\n\n  public rootClass = 'sb-el-toggle-switch';\n\n  public toggle(): void {\n    this.value = !this.value;\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.value ? 'is-on' : 'is-off');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToggleSwitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/components/alert-box/alert-box.component.ts\n            \n            component\n            AlertBoxComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/lib/components/alert/alert.component.ts\n            \n            component\n            AlertComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor-style-input/control-value-accessor-class-name-input.directive.ts\n            \n            directive\n            ControlValueAccessorClassNameInputDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor-style-input/control-value-accessor-color-input.directive.ts\n            \n            directive\n            ControlValueAccessorColorInputDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-color-input.directive.ts\n            \n            directive\n            ControlValueAccessorSizeColorInputDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-input.directive.ts\n            \n            directive\n            ControlValueAccessorSizeInputDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive.ts\n            \n            directive\n            ControlValueAccessorSizeThemeColorInputDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor-style-input/control-value-accessor-theme-color-input.directive.ts\n            \n            directive\n            ControlValueAccessorThemeColorInputDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts\n            \n            directive\n            ControlValueAccessorBaseDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor/event-manager.directive.ts\n            \n            directive\n            EventManagerDirective\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor/state-manager.directive.ts\n            \n            directive\n            StateManagerDirective\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/lib/components/base/style-input/class-name-input.directive.ts\n            \n            directive\n            ClassNameInputDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/components/base/style-input/color-input.directive.ts\n            \n            directive\n            ColorInputDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/components/base/style-input/size-color-input.directive.ts\n            \n            directive\n            SizeColorInputDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/components/base/style-input/size-input.directive.ts\n            \n            directive\n            SizeInputDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/components/base/style-input/size-theme-color-input.directive.ts\n            \n            directive\n            SizeThemeColorInputDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/components/base/style-input/size-theme-input.directive.ts\n            \n            directive\n            SizeThemeInputDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/components/base/style-input/theme-color-input.directive.ts\n            \n            directive\n            ThemeColorInputDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/components/base/style-input/theme-input.directive.ts\n            \n            directive\n            ThemeInputDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/components/card/card.component.ts\n            \n            component\n            CardComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/components/container/container.component.ts\n            \n            component\n            ContainerComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/components/form/button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/lib/components/form/checkbox/checkbox.component.ts\n            \n            component\n            CheckboxComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/components/form/file-input/file-input.component.ts\n            \n            component\n            FileInputComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/lib/components/form/group/base/selected-options.ts\n            \n            interface\n            SelectedOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/components/form/group/base/selection-options.directive.ts\n            \n            directive\n            SelectionOptionsDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/components/form/group/checkbox/checkbox-group.component.ts\n            \n            component\n            CheckboxGroupComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/components/form/group/form-group.component.ts\n            \n            component\n            FormGroupComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/components/form/group/radio-button/radio-button-group.component.ts\n            \n            component\n            RadioButtonGroupComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/components/form/icon-button/icon-button.component.ts\n            \n            component\n            IconButtonComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/components/form/input/input.component.ts\n            \n            component\n            InputComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/lib/components/form/radio-button/radio-button.component.ts\n            \n            component\n            RadioButtonComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/components/form/select-button/select-button.component.ts\n            \n            component\n            SelectButtonComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/lib/components/form/slider/slider.component.ts\n            \n            component\n            SliderComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/lib/components/form/toggle-switch/toggle-switch.component.ts\n            \n            component\n            ToggleSwitchComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/components/grid/grid.component.ts\n            \n            component\n            GridComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/components/icon/icon.component.ts\n            \n            component\n            IconComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/components/table/table.component.ts\n            \n            component\n            TableComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/models/alert/alert-service-subscriber.ts\n            \n            interface\n            AlertServiceSubscriber\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/lib/models/alert/alert.ts\n            \n            interface\n            Alert\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/lib/models/csv/csv.ts\n            \n            class\n            Csv\n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                src/lib/models/queue/queue.ts\n            \n            class\n            Queue\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/lib/models/table/column-information.interface.ts\n            \n            interface\n            ColumnInformationInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/models/table/column-information.interface.ts\n            \n            interface\n            ColumnInformationOptionsInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/models/table/column-information.ts\n            \n            class\n            ColumnInformation\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lib/models/table/column-information.ts\n            \n            class\n            ColumnInformationDefaults\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/models/table/table.interface.ts\n            \n            interface\n            TableInterface\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/lib/models/table/table.ts\n            \n            class\n            Table\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/lib/services/alert/alert.service.ts\n            \n            injectable\n            AlertService\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/lib/services/theme/theme.service.ts\n            \n            injectable\n            ThemeService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.1.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^12.0.1\n        \n            @angular/core : ^12.0.1\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Delimiter   (src/.../csv.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/models/csv/csv.ts\n    \n        \n            \n                \n                    \n                        \n                        Delimiter\n                    \n                \n                        \n                            \n                                 COMMA\n                            \n                        \n                        \n                            \n                                Value : ,\n                            \n                        \n                        \n                            \n                                 COLON\n                            \n                        \n                        \n                            \n                                Value : :\n                            \n                        \n                        \n                            \n                                 SEMICOLON\n                            \n                        \n                        \n                            \n                                Value : ;\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSbElement\nThis library was generated with Angular CLI version 12.0.1. It is a component library constructed around the SCSS library Sb-Theming and supports Angular Schematics.\nInstallation\nAngular Schematics\nFor the automatic and way simpler installation, you can use angular schematics\nng add sb-elementAnd that's it, angular will take care of the rest and install the necessary packages and update your workspace.\nManual\nFor the manual Installation follow these steps:\n\nInstall packages:\nnpm install --save-dev sb-element\nnpm install --save-dev sb-theming\nInclude the theming files into your Angular CLI project. For this, follow the installation documentation here.\n\nYou are good to go!\n\n\nDocumentation\nDocumentation is not yet available for this project.  If you would like to look into the package yourself, checkout the SbElement GitHub Page. There is a TestApp application (located in the src directory), which is implementing the library.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        BaseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SbElementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BaseModule\n\n\n\ncluster_BaseModule_declarations\n\n\n\ncluster_BaseModule_exports\n\n\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_SbElementModule\n\n\n\ncluster_SbElementModule_declarations\n\n\n\ncluster_SbElementModule_exports\n\n\n\n\nClassNameInputDirective\n\nClassNameInputDirective\n\n\n\nBaseModule\n\nBaseModule\n\nBaseModule -->\n\nClassNameInputDirective->BaseModule\n\n\n\n\n\nColorInputDirective\n\nColorInputDirective\n\nBaseModule -->\n\nColorInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorBaseDirective\n\nControlValueAccessorBaseDirective\n\nBaseModule -->\n\nControlValueAccessorBaseDirective->BaseModule\n\n\n\n\n\nControlValueAccessorClassNameInputDirective\n\nControlValueAccessorClassNameInputDirective\n\nBaseModule -->\n\nControlValueAccessorClassNameInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorColorInputDirective\n\nControlValueAccessorColorInputDirective\n\nBaseModule -->\n\nControlValueAccessorColorInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorSizeColorInputDirective\n\nControlValueAccessorSizeColorInputDirective\n\nBaseModule -->\n\nControlValueAccessorSizeColorInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorSizeInputDirective\n\nControlValueAccessorSizeInputDirective\n\nBaseModule -->\n\nControlValueAccessorSizeInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorSizeThemeColorInputDirective\n\nControlValueAccessorSizeThemeColorInputDirective\n\nBaseModule -->\n\nControlValueAccessorSizeThemeColorInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorThemeColorInputDirective\n\nControlValueAccessorThemeColorInputDirective\n\nBaseModule -->\n\nControlValueAccessorThemeColorInputDirective->BaseModule\n\n\n\n\n\nEventManagerDirective\n\nEventManagerDirective\n\nBaseModule -->\n\nEventManagerDirective->BaseModule\n\n\n\n\n\nSizeColorInputDirective\n\nSizeColorInputDirective\n\nBaseModule -->\n\nSizeColorInputDirective->BaseModule\n\n\n\n\n\nSizeInputDirective\n\nSizeInputDirective\n\nBaseModule -->\n\nSizeInputDirective->BaseModule\n\n\n\n\n\nSizeThemeColorInputDirective\n\nSizeThemeColorInputDirective\n\nBaseModule -->\n\nSizeThemeColorInputDirective->BaseModule\n\n\n\n\n\nSizeThemeInputDirective\n\nSizeThemeInputDirective\n\nBaseModule -->\n\nSizeThemeInputDirective->BaseModule\n\n\n\n\n\nStateManagerDirective\n\nStateManagerDirective\n\nBaseModule -->\n\nStateManagerDirective->BaseModule\n\n\n\n\n\nThemeColorInputDirective\n\nThemeColorInputDirective\n\nBaseModule -->\n\nThemeColorInputDirective->BaseModule\n\n\n\n\n\nThemeInputDirective\n\nThemeInputDirective\n\nBaseModule -->\n\nThemeInputDirective->BaseModule\n\n\n\n\n\nClassNameInputDirective \n\nClassNameInputDirective \n\nClassNameInputDirective  -->\n\nBaseModule->ClassNameInputDirective \n\n\n\n\n\nColorInputDirective \n\nColorInputDirective \n\nColorInputDirective  -->\n\nBaseModule->ColorInputDirective \n\n\n\n\n\nControlValueAccessorBaseDirective \n\nControlValueAccessorBaseDirective \n\nControlValueAccessorBaseDirective  -->\n\nBaseModule->ControlValueAccessorBaseDirective \n\n\n\n\n\nControlValueAccessorClassNameInputDirective \n\nControlValueAccessorClassNameInputDirective \n\nControlValueAccessorClassNameInputDirective  -->\n\nBaseModule->ControlValueAccessorClassNameInputDirective \n\n\n\n\n\nControlValueAccessorColorInputDirective \n\nControlValueAccessorColorInputDirective \n\nControlValueAccessorColorInputDirective  -->\n\nBaseModule->ControlValueAccessorColorInputDirective \n\n\n\n\n\nControlValueAccessorSizeColorInputDirective \n\nControlValueAccessorSizeColorInputDirective \n\nControlValueAccessorSizeColorInputDirective  -->\n\nBaseModule->ControlValueAccessorSizeColorInputDirective \n\n\n\n\n\nControlValueAccessorSizeInputDirective \n\nControlValueAccessorSizeInputDirective \n\nControlValueAccessorSizeInputDirective  -->\n\nBaseModule->ControlValueAccessorSizeInputDirective \n\n\n\n\n\nControlValueAccessorSizeThemeColorInputDirective \n\nControlValueAccessorSizeThemeColorInputDirective \n\nControlValueAccessorSizeThemeColorInputDirective  -->\n\nBaseModule->ControlValueAccessorSizeThemeColorInputDirective \n\n\n\n\n\nControlValueAccessorThemeColorInputDirective \n\nControlValueAccessorThemeColorInputDirective \n\nControlValueAccessorThemeColorInputDirective  -->\n\nBaseModule->ControlValueAccessorThemeColorInputDirective \n\n\n\n\n\nSizeColorInputDirective \n\nSizeColorInputDirective \n\nSizeColorInputDirective  -->\n\nBaseModule->SizeColorInputDirective \n\n\n\n\n\nSizeInputDirective \n\nSizeInputDirective \n\nSizeInputDirective  -->\n\nBaseModule->SizeInputDirective \n\n\n\n\n\nSizeThemeColorInputDirective \n\nSizeThemeColorInputDirective \n\nSizeThemeColorInputDirective  -->\n\nBaseModule->SizeThemeColorInputDirective \n\n\n\n\n\nSizeThemeInputDirective \n\nSizeThemeInputDirective \n\nSizeThemeInputDirective  -->\n\nBaseModule->SizeThemeInputDirective \n\n\n\n\n\nThemeColorInputDirective \n\nThemeColorInputDirective \n\nThemeColorInputDirective  -->\n\nBaseModule->ThemeColorInputDirective \n\n\n\n\n\nThemeInputDirective \n\nThemeInputDirective \n\nThemeInputDirective  -->\n\nBaseModule->ThemeInputDirective \n\n\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nBaseModule->FormModule\n\n\n\n\n\nSbElementModule\n\nSbElementModule\n\nSbElementModule -->\n\nBaseModule->SbElementModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nFormModule -->\n\nButtonComponent->FormModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nFormModule -->\n\nCheckboxComponent->FormModule\n\n\n\n\n\nCheckboxGroupComponent\n\nCheckboxGroupComponent\n\nFormModule -->\n\nCheckboxGroupComponent->FormModule\n\n\n\n\n\nFileInputComponent\n\nFileInputComponent\n\nFormModule -->\n\nFileInputComponent->FormModule\n\n\n\n\n\nFormGroupComponent\n\nFormGroupComponent\n\nFormModule -->\n\nFormGroupComponent->FormModule\n\n\n\n\n\nIconButtonComponent\n\nIconButtonComponent\n\nFormModule -->\n\nIconButtonComponent->FormModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nFormModule -->\n\nIconComponent->FormModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nFormModule -->\n\nInputComponent->FormModule\n\n\n\n\n\nRadioButtonComponent\n\nRadioButtonComponent\n\nFormModule -->\n\nRadioButtonComponent->FormModule\n\n\n\n\n\nRadioButtonGroupComponent\n\nRadioButtonGroupComponent\n\nFormModule -->\n\nRadioButtonGroupComponent->FormModule\n\n\n\n\n\nSelectButtonComponent\n\nSelectButtonComponent\n\nFormModule -->\n\nSelectButtonComponent->FormModule\n\n\n\n\n\nSelectionOptionsDirective\n\nSelectionOptionsDirective\n\nFormModule -->\n\nSelectionOptionsDirective->FormModule\n\n\n\n\n\nSliderComponent\n\nSliderComponent\n\nFormModule -->\n\nSliderComponent->FormModule\n\n\n\n\n\nToggleSwitchComponent\n\nToggleSwitchComponent\n\nFormModule -->\n\nToggleSwitchComponent->FormModule\n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nFormModule->ButtonComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nFormModule->CheckboxComponent \n\n\n\n\n\nCheckboxGroupComponent \n\nCheckboxGroupComponent \n\nCheckboxGroupComponent  -->\n\nFormModule->CheckboxGroupComponent \n\n\n\n\n\nFileInputComponent \n\nFileInputComponent \n\nFileInputComponent  -->\n\nFormModule->FileInputComponent \n\n\n\n\n\nFormGroupComponent \n\nFormGroupComponent \n\nFormGroupComponent  -->\n\nFormModule->FormGroupComponent \n\n\n\n\n\nIconButtonComponent \n\nIconButtonComponent \n\nIconButtonComponent  -->\n\nFormModule->IconButtonComponent \n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nFormModule->IconComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nFormModule->InputComponent \n\n\n\n\n\nRadioButtonComponent \n\nRadioButtonComponent \n\nRadioButtonComponent  -->\n\nFormModule->RadioButtonComponent \n\n\n\n\n\nRadioButtonGroupComponent \n\nRadioButtonGroupComponent \n\nRadioButtonGroupComponent  -->\n\nFormModule->RadioButtonGroupComponent \n\n\n\n\n\nSelectButtonComponent \n\nSelectButtonComponent \n\nSelectButtonComponent  -->\n\nFormModule->SelectButtonComponent \n\n\n\n\n\nSliderComponent \n\nSliderComponent \n\nSliderComponent  -->\n\nFormModule->SliderComponent \n\n\n\n\n\nToggleSwitchComponent \n\nToggleSwitchComponent \n\nToggleSwitchComponent  -->\n\nFormModule->ToggleSwitchComponent \n\n\n\nSbElementModule -->\n\nFormModule->SbElementModule\n\n\n\n\n\nAlertBoxComponent\n\nAlertBoxComponent\n\nSbElementModule -->\n\nAlertBoxComponent->SbElementModule\n\n\n\n\n\nAlertComponent\n\nAlertComponent\n\nSbElementModule -->\n\nAlertComponent->SbElementModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nSbElementModule -->\n\nCardComponent->SbElementModule\n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nSbElementModule -->\n\nContainerComponent->SbElementModule\n\n\n\n\n\nGridComponent\n\nGridComponent\n\nSbElementModule -->\n\nGridComponent->SbElementModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nSbElementModule -->\n\nTableComponent->SbElementModule\n\n\n\nThemeInputDirective  -->\n\nSbElementModule->ThemeInputDirective \n\n\n\n\n\nAlertBoxComponent \n\nAlertBoxComponent \n\nAlertBoxComponent  -->\n\nSbElementModule->AlertBoxComponent \n\n\n\n\n\nAlertComponent \n\nAlertComponent \n\nAlertComponent  -->\n\nSbElementModule->AlertComponent \n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nSbElementModule->CardComponent \n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nSbElementModule->ContainerComponent \n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nSbElementModule->FormModule \n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nSbElementModule->GridComponent \n\n\n\n\n\nTableComponent \n\nTableComponent \n\nTableComponent  -->\n\nSbElementModule->TableComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    19 Components\n                \n            \n        \n        \n            \n                \n                    \n                    18 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

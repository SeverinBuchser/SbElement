var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Alert.html",[0,1.472,1,0.941]],["body/interfaces/Alert.html",[0,2.714,1,1.928,2,3.032,3,0.212,4,0.212,5,0.185,6,4.609,7,3.032,8,5.342,9,4.609,10,3.032,11,4.126,12,4.993,13,4.609,14,3.237,15,5.342,16,0.266,17,0.74,18,1.433,19,5.3,20,2.444,21,0.784,22,0.383,23,0.017,24,0.212,25,0.012,26,0.014,27,0.012]],["title/components/AlertBoxComponent.html",[28,0.383,29,0.983]],["body/components/AlertBoxComponent.html",[1,1.631,3,0.117,4,0.117,5,0.151,16,0.147,17,0.497,18,0.564,21,0.441,22,0.37,23,0.017,24,0.117,25,0.006,26,0.009,27,0.006,28,0.523,29,1.48,30,1.183,31,0.919,32,0.919,33,0.919,34,6.002,35,5.373,36,2.552,37,0.526,38,1.416,39,0.4,40,1.059,41,2.261,42,2.363,43,5.678,44,1.351,45,4.345,46,0.679,47,6.536,48,1.578,49,4.063,50,4.063,51,1.751,52,0.497,53,1.186,54,0.867,55,5.151,56,4.444,57,4.444,58,1.412,59,2.957,60,2.222,61,0.529,62,4.345,63,0.564,64,0.343,65,1.1,66,2.658,67,0.663,68,0.505,69,2.498,70,2.957,71,2.032,72,2.957,73,2.957,74,2.957,75,0.3,76,0.684,77,2.957,78,2.957,79,2.957,80,0.369,81,1.679,82,1.082,83,0.282,84,1.155,85,1.411,86,1.155,87,0.805,88,0.538,89,0.117,90,2.957,91,1.792,92,1.792,93,1.579,94,2.957,95,1.792,96,1.792,97,0.651,98,0.675,99,2.957,100,1.925,101,1.925,102,2.957,103,2.957,104,2.284,105,0.338,106,2.957,107,2.957,108,2.957,109,2.957,110,2.957,111,2.957,112,0.771,113,1.351,114,1.237,115,0.074,116,1.765,117,0.919,118,0.919,119,0.771,120,0.919,121,0.771,122,1.765,123,0.771,124,0.919,125,0.771,126,0.919,127,0.771,128,0.919,129,1.601,130,0.771,131,0.919,132,0.771,133,1.351,134,0.771,135,0.842,136,0.771,137,0.919,138,0.771,139,0.879,140,0.771,141,0.919,142,0.771,143,0.771,144,1.292,145,0.771,146,0.842,147,0.771,148,0.879,149,0.771,150,0.919,151,0.771,152,0.919,153,0.771,154,0.879,155,0.919,156,0.358,157,0.538,158,2.305,159,0.738,160,0.706,161,0.59,162,0.738,163,0.738,164,0.738,165,0.706,166,0.738,167,0.706,168,0.738,169,0.738,170,0.738,171,0.738,172,0.706,173,0.738,174,0.706,175,0.919]],["title/components/AlertComponent.html",[28,0.383,119,0.983]],["body/components/AlertComponent.html",[1,1.821,3,0.098,4,0.098,5,0.132,10,3.356,14,2.804,16,0.123,17,0.435,18,0.472,19,3.948,21,0.469,22,0.379,23,0.017,24,0.098,25,0.005,26,0.008,27,0.005,28,0.469,29,0.645,30,1.035,31,0.769,32,0.769,33,0.769,37,0.46,38,1.295,39,0.334,40,1.046,41,2.213,42,2.313,44,1.181,46,0.691,48,1.87,51,1.573,52,0.435,53,1.084,54,0.758,56,3.992,57,3.992,58,1.235,60,2.093,61,0.561,63,0.99,64,0.372,65,0.945,66,2.202,67,0.645,68,0.491,69,1.723,71,1.741,75,0.645,76,0.599,80,0.423,82,0.99,83,0.236,84,0.966,85,1.181,86,0.966,87,0.674,88,0.45,89,0.098,93,1.321,97,0.569,98,0.565,105,0.761,112,0.645,113,1.181,114,1.082,115,0.062,116,1.613,117,0.769,118,0.769,119,1.353,120,0.769,121,0.645,122,1.613,123,0.645,124,0.769,125,0.645,126,0.769,127,0.645,128,0.769,129,1.438,130,0.645,131,0.769,132,0.645,133,1.181,134,0.645,135,0.704,136,0.645,137,0.769,138,0.645,139,0.736,140,0.645,141,0.769,142,0.645,143,0.645,144,1.13,145,0.645,146,0.704,147,0.645,148,0.736,149,0.645,150,0.769,151,0.645,152,0.769,153,0.645,154,0.736,155,0.769,156,0.3,157,0.45,158,2.241,159,0.617,160,0.591,161,0.494,162,0.617,163,0.617,164,0.617,165,0.591,166,0.617,167,0.591,168,0.617,169,0.617,170,0.617,171,0.617,172,0.591,173,0.617,174,0.591,175,0.769,176,2.135,177,2.474,178,3.8,179,4.627,180,4.627,181,4.627,182,3.574,183,5.199,184,5.191,185,5.191,186,5.191,187,3.8,188,3.8,189,5.191,190,4.627,191,1.635,192,2.135,193,3.8,194,2.475,195,2.475,196,3.698,197,3.8,198,2.475,199,3.279,200,2.475,201,4.575,202,2.475,203,2.475,204,2.475,205,2.475,206,3.8,207,2.475,208,3.8,209,2.475,210,3.8,211,2.475,212,1.82,213,2.475,214,3.8,215,2.475,216,3.8,217,2.475,218,2.475,219,2.475,220,2.475,221,3.279,222,1.611,223,1.911,224,2.135,225,2.475,226,2.475,227,2.475,228,2.475,229,2.475,230,2.475,231,4.627,232,1.321,233,2.475,234,1.12,235,2.475,236,3.8,237,4.479,238,3.8,239,2.475,240,2.475,241,2.475,242,0.841,243,2.475,244,2.475,245,2.135,246,2.475,247,2.475,248,2.475,249,2.475]],["title/injectables/AlertService.html",[10,2.14,250,2.285]],["body/injectables/AlertService.html",[0,1.11,1,1.967,3,0.167,4,0.068,5,0.06,7,3.278,9,2.454,10,1.614,11,3.889,12,4.597,13,5.947,14,3.376,16,0.086,17,0.325,18,1.324,19,5.109,20,2.46,21,0.752,22,0.336,23,0.017,24,0.068,25,0.004,26,0.006,27,0.004,28,0.633,46,0.661,48,1.633,52,0.681,61,0.482,63,1.189,64,0.337,65,1.083,66,1.06,67,0.586,68,0.447,69,1.573,71,0.535,75,0.586,76,0.793,80,0.302,83,0.164,89,0.068,105,0.197,182,4.986,183,3.549,201,3.277,221,2.454,222,4.262,223,4.714,242,2.023,250,1.724,251,1.329,252,1.485,253,3.261,254,2.454,255,2.844,256,2.844,257,5.952,258,6.235,259,4.222,260,4.222,261,4.222,262,2.844,263,4.222,264,2.844,265,2.976,266,2.844,267,2.454,268,2.454,269,2.844,270,2.844,271,4.316,272,2.844,273,2.844,274,2.844,275,2.197,276,4.344,277,6.836,278,2.844,279,2.844,280,2.844,281,2.844,282,2.844,283,4.059,284,2.454,285,4.222,286,2.454,287,1.851,288,4.477,289,2.454,290,5.48,291,2.844,292,2.844,293,2.844,294,2.844,295,5.035,296,3.643,297,2.454,298,3.889,299,2.844,300,2.454,301,2.454,302,3.136,303,4.222,304,5.776,305,2.356,306,4.675,307,4.222,308,4.675,309,5.328,310,2.844,311,1.721,312,4.816,313,6.235,314,2.844,315,3.643,316,3.329,317,1.92,318,2.844,319,1.721,320,2.844,321,1.721,322,2.844,323,1.721,324,2.844,325,1.721,326,2.844,327,2.844,328,2.844,329,2.844,330,1.721,331,2.454,332,2.844,333,1.721,334,2.844,335,1.721,336,1.721,337,2.844,338,4.222,339,4.222,340,3.643,341,4.222,342,2.454,343,1.729,344,5.571,345,2.844,346,2.454,347,2.844,348,2.844,349,2.844,350,2.005,351,2.844,352,2.844,353,1.721,354,2.844,355,1.721,356,2.844,357,1.721,358,1.721,359,1.721,360,4.895,361,2.454,362,5.571,363,4.675,364,1.213,365,1.485,366,1.721,367,1.485,368,1.329,369,2.844,370,1.721,371,1.721,372,1.721,373,5.48,374,4.675,375,1.721,376,2.844,377,3.635,378,1.721,379,1.721,380,4.222,381,1.721,382,1.721,383,1.485,384,1.485,385,1.721,386,1.721]],["title/interfaces/AlertServiceSubscriber.html",[0,1.472,14,2.285]],["body/interfaces/AlertServiceSubscriber.html",[0,2.75,1,1.973,2,2.565,3,0.179,4,0.179,5,0.157,7,3.306,10,4.298,12,4.498,14,3.53,16,0.225,22,0.249,23,0.017,24,0.179,25,0.01,26,0.013,27,0.01,52,0.666,61,0.349,63,0.862,64,0.273,65,0.822,75,0.459,80,0.324,105,0.666,182,4.498,199,5.025,201,4.43,222,3.791,223,5.977,245,5.025,271,4.694,276,5.025,290,5.025,296,5.025,315,5.025,342,5.025,360,5.239,361,5.025,383,3.899,384,3.899,387,5.025,388,3.899,389,5.824,390,5.025,391,6.807,392,5.824,393,5.824,394,5.824,395,6.807,396,5.824,397,5.824,398,4.52,399,5.824,400,5.824,401,5.824,402,5.824]],["title/modules/BaseModule.html",[403,2.14,404,2.285]],["body/modules/BaseModule.html",[3,0.121,4,0.121,5,0.106,18,1.257,20,1.703,23,0.017,24,0.121,25,0.007,26,0.01,27,0.007,38,1.791,64,0.269,68,0.573,80,0.538,83,0.29,86,2.248,87,1.568,88,1.329,89,0.176,112,0.794,157,1.306,159,1.791,160,1.714,161,1.433,162,1.791,163,1.791,164,1.791,165,1.714,166,1.791,167,1.525,169,1.791,170,1.791,171,1.791,172,1.525,173,1.791,174,1.714,287,1.983,403,1.729,404,4.809,405,1.846,406,1.846,407,3.693,408,2.147,409,1.248,410,3.693,411,2.628,412,2.628,413,2.628,414,3.129,415,2.147,416,3.046,417,3.429,418,3.831,419,2.353,420,2.483,421,2.353,422,2.691,423,3.913,424,2.147,425,2.628,426,2.147,427,2.674,428,2.38,429,2.353,430,3.429,431,2.353,432,2.353]],["title/components/ButtonComponent.html",[28,0.383,121,0.983]],["body/components/ButtonComponent.html",[1,0.395,3,0.063,4,0.063,5,0.092,7,2.913,16,0.079,17,0.304,18,0.302,21,0.407,22,0.377,23,0.017,24,0.063,25,0.003,26,0.006,27,0.003,28,0.735,29,0.413,30,0.723,31,0.492,32,0.492,33,0.492,37,0.322,38,1.343,39,0.214,40,1.002,41,2.061,42,2.154,44,0.825,46,0.55,48,1.516,49,4.42,50,4.276,51,1.165,52,0.304,53,0.933,54,1.074,58,0.863,60,1.83,61,0.514,63,0.921,64,0.339,65,1.051,66,2.717,67,0.49,68,0.524,69,2.005,71,2.044,75,0.568,76,0.54,80,0.245,81,3.37,82,1.203,83,0.151,84,0.619,85,0.756,86,0.619,87,0.431,88,0.288,89,0.275,91,0.96,92,0.96,93,0.846,95,2.077,96,0.96,97,0.945,98,0.362,100,1.031,101,1.031,105,0.304,112,0.413,113,2.019,114,1.848,115,0.04,116,1.246,117,0.492,118,0.492,119,0.413,120,0.492,121,1.259,122,1.246,123,0.413,124,0.492,125,0.413,126,0.492,127,0.413,128,0.492,129,1.065,130,0.413,131,0.492,132,0.413,133,0.825,134,0.413,135,1.271,136,0.413,137,0.492,138,0.413,139,0.471,140,0.413,141,0.492,142,0.413,143,0.413,144,0.789,145,0.413,146,2.037,147,0.413,148,0.471,149,0.413,150,0.492,151,0.413,152,0.492,153,0.413,154,0.471,155,0.492,156,0.192,157,0.288,158,2.044,159,0.395,160,0.378,161,0.316,162,0.395,163,0.395,164,0.395,165,0.378,166,0.395,167,0.378,168,0.395,169,0.395,170,0.395,171,0.395,172,0.378,173,0.395,174,0.378,175,0.492,191,1.142,242,2.144,250,1.609,253,3.097,265,3.405,267,4.986,271,1.728,283,4.228,289,2.29,312,2.05,317,1.437,331,2.29,343,2.858,350,1.117,360,1.117,368,2.05,420,0.902,433,1.367,434,2.655,435,4.831,436,3.405,437,4.831,438,3.459,439,2.655,440,2.655,441,6.312,442,4.01,443,5.383,444,2.655,445,2.655,446,2.655,447,2.05,448,2.655,449,1.584,450,2.655,451,2.655,452,3.459,453,4.01,454,5.779,455,3.459,456,4.831,457,4.168,458,2.655,459,1.871,460,2.647,461,2.29,462,4.733,463,5.383,464,5.132,465,5.383,466,1.584,467,2.655,468,5.443,469,2.655,470,2.655,471,2.655,472,6.019,473,2.655,474,6.407,475,2.655,476,2.655,477,1.584,478,2.655,479,1.584,480,4.01,481,2.655,482,2.655,483,2.655,484,4.168,485,2.655,486,1.584,487,2.05,488,2.655,489,3.731,490,2.655,491,2.655,492,1.584,493,4.831,494,1.584,495,2.655,496,1.584,497,1.584,498,1.584,499,1.584,500,1.584,501,1.224,502,1.584,503,1.224,504,1.584,505,2.655,506,4.01,507,1.584,508,2.956,509,2.655,510,2.655,511,2.29,512,2.655,513,2.655,514,1.584,515,2.655,516,1.584,517,3.427,518,1.224,519,2.05,520,3.427,521,1.584,522,1.367,523,1.584,524,1.584,525,1.584,526,1.584,527,1.224,528,1.584,529,1.584,530,1.584]],["title/components/CardComponent.html",[28,0.383,123,0.983]],["body/components/CardComponent.html",[1,0.857,3,0.136,4,0.136,5,0.168,16,0.171,17,0.554,21,0.491,22,0.335,23,0.017,24,0.136,25,0.007,26,0.011,27,0.007,28,0.569,29,0.895,30,1.318,31,1.068,32,1.068,33,1.068,37,0.586,38,0.857,39,0.464,40,1.069,41,2.297,42,2.4,44,1.504,46,0.634,48,1.66,51,1.905,52,0.554,53,1.271,58,1.573,60,2.324,61,0.496,63,0.655,64,0.368,65,1.107,66,2.266,67,0.569,68,0.433,69,2.266,71,1.504,75,0.349,76,0.762,80,0.401,81,1.95,83,0.327,84,1.341,85,1.639,86,1.341,87,0.936,88,0.625,89,0.136,93,1.834,97,0.725,98,0.785,105,0.393,112,0.895,113,1.504,114,1.377,115,0.086,116,1.891,117,1.068,118,1.068,119,0.895,120,1.068,121,0.895,122,1.891,123,1.586,124,1.068,125,0.895,126,1.068,127,0.895,128,1.068,129,1.742,130,0.895,131,1.068,132,0.895,133,1.504,134,0.895,135,0.978,136,0.895,137,1.068,138,0.895,139,1.022,140,0.895,141,1.068,142,0.895,143,0.895,144,1.439,145,0.895,146,0.978,147,0.895,148,1.022,149,0.895,150,1.068,151,0.895,152,1.068,153,0.895,154,1.022,155,1.068,156,0.416,157,0.625,158,2.353,159,0.857,160,0.82,161,0.686,162,0.857,163,0.857,164,0.857,165,0.82,166,0.857,167,0.82,168,0.857,169,0.857,170,0.857,171,1.518,172,0.82,173,0.857,174,0.82,175,1.068,452,5.898,531,2.964,532,6.084,533,4.84,534,6.981,535,3.435,536,4.84,537,3.435,538,3.435,539,3.435,540,3.435,541,3.435,542,3.435,543,3.435,544,3.435,545,3.435]],["title/components/CheckboxComponent.html",[28,0.383,125,0.983]],["body/components/CheckboxComponent.html",[1,0.841,3,0.134,4,0.134,5,0.165,16,0.168,17,0.546,18,0.642,20,1.095,21,0.646,22,0.306,23,0.017,24,0.134,25,0.007,26,0.01,27,0.007,28,0.563,29,0.879,30,1.301,31,1.048,32,1.048,33,1.048,37,0.578,38,0.841,39,0.455,40,1.068,41,2.292,42,2.396,44,1.484,46,0.69,51,1.885,52,0.546,53,1.26,54,0.953,61,0.492,64,0.336,67,0.563,68,0.492,71,1.484,75,0.485,76,0.752,80,0.397,82,1.057,83,0.321,87,0.918,88,0.613,89,0.134,97,0.715,98,0.77,105,0.386,112,0.879,113,1.484,114,1.359,115,0.084,116,1.875,117,1.048,118,1.048,119,0.879,120,1.048,121,0.879,122,1.875,123,0.879,124,1.048,125,1.724,126,1.048,127,0.879,128,1.979,129,1.724,130,0.879,131,1.048,132,0.879,133,1.484,134,0.879,135,0.959,136,0.879,137,1.048,138,0.879,139,1.002,140,0.879,141,1.048,142,0.879,143,0.879,144,1.42,145,0.879,146,0.959,147,0.879,148,1.002,149,0.879,150,1.048,151,0.879,152,1.048,153,0.879,154,1.002,155,1.048,156,0.408,157,0.613,158,2.347,159,0.841,160,0.805,161,0.673,162,0.841,163,0.841,164,0.841,165,1.44,166,0.841,167,0.805,168,0.841,169,0.841,170,0.841,171,0.841,172,0.805,173,0.841,174,0.805,175,1.048,317,1.42,409,1.956,420,1.145,427,1.779,428,1.255,546,2.908,547,2.407,548,2.795,549,2.407,550,2.407,551,4.775,552,4.251,553,5.251,554,3.908,555,3.37,556,3.365,557,3.37,558,3.37,559,3.37,560,3.37,561,1.45,562,2.042,563,2.894,564,3.688,565,2.908,566,2.375,567,2.908,568,2.908,569,3.37]],["title/components/CheckboxGroupComponent.html",[28,0.383,127,0.983]],["body/components/CheckboxGroupComponent.html",[1,0.841,3,0.134,4,0.134,5,0.165,16,0.168,17,0.546,21,0.69,22,0.333,23,0.017,24,0.134,25,0.007,26,0.01,27,0.007,28,0.563,29,0.879,30,1.301,31,1.048,32,1.048,33,1.048,37,0.578,38,0.841,39,0.455,40,1.068,41,2.292,42,2.396,44,1.484,46,0.63,51,1.885,52,0.546,54,0.953,61,0.511,64,0.336,67,0.612,68,0.466,71,1.484,75,0.485,80,0.432,82,1.15,83,0.321,89,0.134,112,0.879,113,1.484,114,1.359,115,0.084,116,1.875,117,1.048,118,1.048,119,0.879,120,1.048,121,0.879,122,1.875,123,0.879,124,1.048,125,0.879,126,1.048,127,1.724,128,2.113,129,1.724,130,0.879,131,1.048,132,0.879,133,1.484,134,0.879,135,0.959,136,0.879,137,1.048,138,0.879,139,1.002,140,0.879,141,1.048,142,0.879,143,0.879,144,1.42,145,0.879,146,0.959,147,0.879,148,1.002,149,0.879,150,1.048,151,0.879,152,1.048,153,0.879,154,1.002,155,1.048,156,0.408,157,0.613,158,2.347,159,0.841,160,0.805,161,0.673,162,0.841,163,0.841,164,0.841,165,0.805,166,0.841,167,0.805,168,1.505,169,0.841,170,0.841,171,0.841,172,0.805,173,0.841,174,0.805,175,1.048,212,1.552,317,1.649,409,1.956,436,2.375,547,2.407,548,2.795,549,2.407,550,2.407,552,4.251,554,3.908,556,3.365,561,1.45,563,2.894,570,5.866,571,2.375,572,4.659,573,3.688,574,3.361,575,4.251,576,4.283,577,4.283,578,3.365,579,3.37,580,3.37,581,3.37,582,3.37,583,3.37,584,3.37,585,3.108,586,3.37,587,2.908,588,2.375,589,4.775]],["title/directives/ClassNameInputDirective.html",[115,0.094,157,0.686]],["body/directives/ClassNameInputDirective.html",[3,0.184,4,0.184,5,0.161,16,0.231,17,0.678,21,0.662,22,0.326,23,0.017,24,0.184,25,0.01,26,0.013,27,0.01,39,0.627,40,0.928,46,0.691,48,1.627,51,2.217,52,0.678,53,1.435,54,1.182,61,0.549,63,0.884,64,0.447,65,0.844,67,0.601,68,0.458,75,0.601,76,1.177,80,0.332,82,1.129,83,0.442,89,0.184,97,0.887,105,0.678,115,0.148,156,0.562,157,1.077,191,2.548,242,2.217,317,1.379,343,1.9,426,5.118,590,3.66,591,1.727,592,5.628,593,6.265,594,3.854,595,4.637,596,2.213,597,4.637,598,4.001,599,4.001,600,4.001,601,5.108,602,4.001,603,4.001,604,4.001,605,3.582,606,4.001,607,4.001]],["title/directives/ColorInputDirective.html",[115,0.094,159,0.941]],["body/directives/ColorInputDirective.html",[3,0.204,4,0.204,5,0.178,16,0.257,18,1.304,21,0.641,22,0.284,23,0.017,24,0.204,25,0.011,26,0.014,27,0.011,37,0.624,39,0.696,40,0.964,46,0.679,52,0.723,53,1.49,54,1.262,61,0.489,64,0.311,67,0.522,68,0.398,75,0.522,76,0.996,80,0.453,82,1.205,83,0.49,88,0.937,89,0.25,97,0.947,98,1.176,105,0.589,115,0.158,156,0.624,157,1.15,159,1.577,212,2.054,234,2.331,305,3.186,421,5.284,590,3.448,591,1.918,594,3.351,596,2.457,608,3.629,609,1.831]],["title/classes/ColumnInformation.html",[89,0.149,610,2.14]],["body/classes/ColumnInformation.html",[3,0.232,4,0.148,5,0.129,16,0.186,17,0.587,18,1.117,21,0.776,22,0.377,23,0.017,24,0.203,25,0.008,26,0.011,27,0.008,37,0.622,46,0.719,48,1.704,52,0.587,61,0.551,63,1.117,64,0.413,65,1.066,67,0.595,68,0.541,75,0.64,80,0.268,89,0.203,97,0.56,104,3.964,105,0.757,177,2.432,191,2.208,234,1.692,242,1.992,343,2.401,610,4.227,611,4.447,612,2.886,613,4.815,614,4.131,615,6.037,616,4.554,617,5.057,618,5.132,619,5.057,620,5.861,621,3.737,622,3.737,623,3.737,624,3.737,625,3.737,626,4.152,627,6.238,628,3.737,629,5.894,630,4.428,631,4.447,632,5.894,633,3.737,634,3.737,635,3.737,636,4.131,637,3.737,638,3.737,639,2.74,640,2.634,641,2.634,642,3.224,643,3.224,644,3.224,645,3.224,646,3.224,647,3.224,648,3.224,649,3.224,650,3.224,651,3.224,652,3.224,653,3.224,654,3.224,655,3.224,656,3.224,657,3.224,658,3.224,659,3.224,660,3.224]],["title/classes/ColumnInformationDefaults.html",[89,0.149,613,2.658]],["body/classes/ColumnInformationDefaults.html",[3,0.25,4,0.171,5,0.15,16,0.215,17,0.647,18,1.202,21,0.763,22,0.348,23,0.018,24,0.224,25,0.009,26,0.012,27,0.009,37,0.523,46,0.726,48,1.411,61,0.487,64,0.382,67,0.64,68,0.561,80,0.309,89,0.224,97,0.647,104,4.369,105,0.795,177,3.682,234,1.956,242,2.143,343,1.77,610,4.179,611,4.355,612,3.337,613,4.445,614,4.445,615,5.772,616,4.105,617,3.728,619,3.728,626,3.797,627,5.992,629,5.772,630,3.728,631,3.682,632,5.772,636,3.987,639,3.367,640,3.045,641,3.045,642,3.728,643,3.728,644,3.728,645,3.728,646,3.728,647,3.728,648,3.728,649,3.728,650,3.728,651,3.728,652,3.728,653,3.728,654,3.728,655,3.728,656,3.728,657,3.728,658,3.728,659,3.728,660,3.728,661,4.321,662,4.321,663,4.321]],["title/interfaces/ColumnInformationInterface.html",[0,1.472,639,2.013]],["body/interfaces/ColumnInformationInterface.html",[0,2.577,2,3.138,3,0.219,4,0.219,5,0.192,16,0.276,17,0.755,18,1.424,21,0.799,22,0.389,23,0.017,24,0.261,25,0.012,26,0.014,27,0.012,37,0.8,64,0.452,611,3.598,614,5.264,626,4.005,639,3.524,664,4.27]],["title/interfaces/ColumnInformationOptionsInterface.html",[0,1.472,626,2.14]],["body/interfaces/ColumnInformationOptionsInterface.html",[0,2.565,2,3.113,3,0.217,4,0.217,5,0.19,16,0.274,17,0.752,18,1.421,21,0.798,22,0.388,23,0.017,24,0.26,25,0.012,26,0.014,27,0.012,37,0.665,64,0.451,65,1.377,611,3.571,614,5.253,626,3.992,639,2.929,664,4.237]],["title/components/ContainerComponent.html",[28,0.383,130,0.983]],["body/components/ContainerComponent.html",[1,0.998,3,0.158,4,0.158,5,0.186,16,0.199,17,0.615,21,0.406,22,0.22,23,0.017,24,0.158,25,0.009,26,0.012,27,0.009,28,0.616,29,1.043,30,1.464,31,1.243,32,1.243,33,1.243,37,0.651,38,0.998,39,0.54,40,1.078,41,2.329,42,2.434,44,1.67,46,0.578,51,2.063,61,0.309,64,0.367,67,0.406,68,0.309,80,0.385,83,0.381,85,1.908,86,1.561,87,1.089,88,0.728,89,0.158,112,1.043,113,1.67,114,1.529,115,0.1,116,2.017,117,1.243,118,1.243,119,1.043,120,1.243,121,1.043,122,2.017,123,1.043,124,1.243,125,1.043,126,1.243,127,1.043,128,1.243,129,1.886,130,1.691,131,1.243,132,1.043,133,1.67,134,1.043,135,1.138,136,1.043,137,1.243,138,1.043,139,1.189,140,1.043,141,1.243,142,1.043,143,1.043,144,1.598,145,1.043,146,1.138,147,1.043,148,1.189,149,1.043,150,1.243,151,1.043,152,1.243,153,1.043,154,1.189,155,1.243,156,0.484,157,0.728,158,2.397,159,0.998,160,0.955,161,0.798,162,0.998,163,0.998,164,0.998,165,0.955,166,0.998,167,0.955,168,0.998,169,0.998,170,0.998,171,1.619,172,0.955,173,0.998,174,0.955,175,1.243,665,3.451,666,6.489,667,5.374,668,4]],["title/directives/ControlValueAccessorBaseDirective.html",[115,0.094,160,0.9]],["body/directives/ControlValueAccessorBaseDirective.html",[3,0.155,4,0.155,5,0.135,16,0.195,17,0.605,22,0.354,23,0.017,24,0.155,25,0.008,26,0.012,27,0.008,37,0.473,39,0.528,40,0.868,46,0.659,48,1.727,52,0.605,61,0.547,63,1.225,64,0.389,65,1.169,66,2.579,68,0.608,69,2.234,71,1.864,75,0.681,80,0.429,83,0.372,89,0.155,105,0.447,115,0.132,156,0.473,160,1.263,167,1.263,177,3.443,191,2.276,212,1.269,317,2.141,343,1.6,424,5.075,430,3.017,527,3.017,561,1.681,574,3.634,575,4.53,631,4.915,669,3.436,670,3.37,671,5.997,672,5.997,673,5.289,674,5.289,675,5.289,676,5.289,677,6.515,678,5.545,679,6.427,680,3.906,681,3.906,682,5.289,683,3.906,684,5.289,685,3.906,686,3.906,687,3.906,688,3.906,689,3.906,690,3.906,691,3.906,692,3.906,693,3.906,694,5.997,695,5.997,696,3.906,697,3.906]],["title/directives/ControlValueAccessorClassNameInputDirective.html",[115,0.094,161,0.753]],["body/directives/ControlValueAccessorClassNameInputDirective.html",[3,0.166,4,0.166,5,0.145,16,0.208,17,0.633,21,0.63,22,0.305,23,0.017,24,0.166,25,0.009,26,0.012,27,0.009,37,0.507,39,0.565,40,0.892,46,0.672,48,1.548,51,2.109,52,0.633,53,1.379,54,1.105,61,0.531,63,0.797,64,0.436,65,0.761,67,0.562,68,0.597,75,0.562,76,1.152,80,0.396,82,1.055,83,0.398,89,0.285,97,0.829,105,0.633,115,0.138,156,0.507,160,1.322,161,1.105,191,2.382,242,2.109,317,1.243,343,1.713,420,2.4,423,2.373,424,2.947,425,3.608,427,2.824,428,2.63,462,2.947,591,1.558,592,5.354,593,6.091,598,3.608,599,3.608,600,3.608,601,4.776,602,3.608,603,3.608,604,3.608,605,3.229,606,3.608,607,3.608,669,3.369,698,2.956,699,2.947,700,2.947,701,4.181,702,4.181,703,4.181,704,3.608,705,4.181,706,4.181,707,3.608,708,4.181,709,4.181,710,3.608]],["title/directives/ControlValueAccessorColorInputDirective.html",[115,0.094,162,0.941]],["body/directives/ControlValueAccessorColorInputDirective.html",[3,0.197,4,0.197,5,0.172,16,0.247,18,1.408,21,0.627,22,0.273,23,0.017,24,0.197,25,0.011,26,0.013,27,0.011,37,0.601,39,0.67,40,0.951,46,0.671,52,0.707,53,1.471,54,1.233,61,0.478,64,0.3,67,0.503,68,0.585,75,0.503,76,0.973,80,0.442,82,1.178,83,0.472,88,0.903,89,0.245,97,0.926,98,1.133,105,0.568,115,0.154,156,0.601,161,1.233,162,1.541,212,2.008,234,2.246,305,3.114,420,2.287,423,2.815,427,2.79,428,2.506,591,1.848,594,3.229,596,2.367,608,3.496,609,1.764,669,3.21]],["title/directives/ControlValueAccessorSizeColorInputDirective.html",[115,0.094,163,0.941]],["body/directives/ControlValueAccessorSizeColorInputDirective.html",[3,0.183,4,0.183,5,0.16,16,0.23,18,1.405,20,2.396,21,0.696,22,0.325,23,0.017,24,0.183,25,0.01,26,0.013,27,0.01,37,0.559,39,0.623,40,0.927,46,0.675,52,0.675,53,1.433,54,1.178,61,0.503,64,0.279,67,0.599,68,0.591,75,0.468,76,0.93,80,0.423,82,1.241,83,0.439,88,0.84,89,0.234,97,0.884,98,1.054,105,0.528,115,0.147,156,0.559,161,1.178,163,1.473,212,2.229,232,2.464,234,2.089,305,2.975,316,3.152,420,2.332,423,2.619,427,2.808,428,2.555,591,1.719,596,2.202,608,3.253,609,2.1,669,3.273,698,2.464,711,3.982,712,2.619]],["title/directives/ControlValueAccessorSizeInputDirective.html",[115,0.094,164,0.941]],["body/directives/ControlValueAccessorSizeInputDirective.html",[3,0.197,4,0.197,5,0.172,16,0.247,20,2.4,21,0.627,22,0.273,23,0.017,24,0.197,25,0.011,26,0.013,27,0.011,37,0.601,39,0.67,40,0.951,46,0.671,52,0.707,53,1.471,54,1.233,61,0.478,64,0.3,67,0.503,68,0.585,75,0.503,76,0.973,80,0.442,82,1.178,83,0.472,88,0.903,89,0.245,97,0.926,98,1.133,105,0.568,115,0.154,156,0.601,161,1.233,164,1.541,212,2.008,232,2.648,316,3.299,420,2.287,423,2.815,427,2.79,428,2.506,591,1.848,594,3.229,596,2.367,609,1.764,669,3.21,712,2.815]],["title/directives/ControlValueAccessorSizeThemeColorInputDirective.html",[115,0.094,165,0.9]],["body/directives/ControlValueAccessorSizeThemeColorInputDirective.html",[3,0.164,4,0.164,5,0.143,16,0.206,17,0.628,18,1.407,20,2.398,21,0.714,22,0.362,23,0.017,24,0.164,25,0.009,26,0.012,27,0.009,37,0.5,39,0.558,40,0.888,46,0.694,48,1.03,52,0.628,53,1.372,54,1.095,58,1.783,60,2.391,61,0.529,63,0.787,64,0.332,65,0.751,67,0.557,68,0.594,75,0.419,76,0.864,80,0.441,82,1.175,83,0.393,84,1.611,87,2.01,88,0.751,89,0.217,97,0.822,98,0.943,105,0.472,115,0.137,156,0.5,161,1.095,165,1.31,212,2.135,232,2.203,234,2.484,305,2.766,316,2.93,420,2.391,423,2.342,427,2.835,428,2.62,591,1.537,609,1.952,669,3.356,698,2.203,700,2.909,712,2.342,713,2.501,714,4.735,715,3.56,716,2.203,717,3.326,718,2.501,719,2.501]],["title/directives/ControlValueAccessorThemeColorInputDirective.html",[115,0.094,166,0.941]],["body/directives/ControlValueAccessorThemeColorInputDirective.html",[3,0.175,4,0.175,5,0.153,16,0.22,17,0.657,18,1.411,21,0.685,22,0.352,23,0.017,24,0.175,25,0.01,26,0.012,27,0.01,37,0.536,39,0.597,40,0.912,46,0.695,48,1.103,52,0.657,53,1.41,54,1.146,58,1.866,60,2.437,61,0.522,63,0.843,64,0.347,65,0.804,67,0.449,68,0.591,75,0.449,76,0.904,80,0.456,82,1.095,83,0.421,84,1.726,87,2.015,88,0.804,89,0.228,97,0.86,98,1.01,105,0.506,115,0.143,156,0.536,161,1.146,166,1.433,212,1.866,234,2.599,305,2.894,420,2.378,423,2.509,427,2.831,428,2.606,591,1.647,596,2.11,609,1.573,669,3.338,698,3.066,699,3.116,713,2.679,716,2.361,717,3.48,718,2.679,719,2.679]],["title/classes/Csv.html",[89,0.149,720,2.658]],["body/classes/Csv.html",[3,0.116,4,0.116,5,0.226,16,0.333,17,0.493,21,0.742,22,0.4,23,0.018,24,0.171,25,0.006,26,0.009,27,0.006,46,0.705,48,1.857,52,0.493,58,1.4,61,0.561,63,1.301,64,0.413,65,1.241,67,0.519,68,0.396,75,0.678,76,1.159,89,0.116,97,0.438,105,0.765,183,3.607,196,3.872,201,2.805,237,2.523,242,1.739,317,1.988,364,4.243,616,4.984,720,4.439,721,2.258,722,4.65,723,6.664,724,5.117,725,5.647,726,5.117,727,5.117,728,5.117,729,4.309,730,4.415,731,4.309,732,5.194,733,5.647,734,4.309,735,2.924,736,4.309,737,2.924,738,6.823,739,4.309,740,5.647,741,2.924,742,2.924,743,2.924,744,2.924,745,4.872,746,2.924,747,2.924,748,2.924,749,4.872,750,3.328,751,2.924,752,2.924,753,2.924,754,4.309,755,2.924,756,2.924,757,2.924,758,4.309,759,4.872,760,4.309,761,2.924,762,4.309,763,2.924,764,4.309,765,2.924,766,2.258,767,4.309,768,2.924,769,2.924,770,2.523,771,2.523,772,2.523,773,4.309,774,4.309,775,2.924,776,2.924,777,2.924,778,2.924,779,2.924,780,2.924,781,2.924,782,2.924,783,2.924,784,2.924,785,2.924,786,2.924,787,2.924,788,2.924,789,2.924,790,2.924,791,2.924,792,2.924,793,2.924,794,2.924,795,2.924,796,4.309,797,4.309,798,2.924,799,2.924,800,2.924,801,4.309,802,4.309,803,2.924,804,2.924,805,2.924,806,2.924,807,2.924,808,2.924]],["title/directives/EventManagerDirective.html",[115,0.094,167,0.9]],["body/directives/EventManagerDirective.html",[3,0.151,4,0.151,5,0.132,16,0.19,17,0.596,22,0.395,23,0.017,24,0.151,25,0.008,26,0.011,27,0.008,37,0.462,39,0.516,40,0.86,46,0.724,52,0.596,61,0.568,63,1.13,64,0.359,65,1.078,67,0.528,68,0.588,75,0.676,80,0.373,83,0.363,89,0.151,115,0.13,156,0.462,167,1.243,172,1.243,242,2.014,317,2.223,390,3.293,430,2.948,431,5.727,472,3.293,574,4.402,631,4.143,669,3.538,677,5.492,678,4.492,710,5.113,749,5.492,750,4.022,809,2.948,810,5.926,811,5.926,812,6.366,813,6.366,814,5.207,815,5.207,816,5.207,817,5.926,818,5.926,819,7.347,820,3.293,821,3.293,822,3.817,823,3.817,824,5.207,825,3.817,826,3.817,827,5.207,828,3.817,829,5.207,830,3.817,831,3.293,832,3.817,833,6.366,834,5.207,835,3.817,836,3.817,837,5.207,838,3.817,839,3.817,840,3.817,841,3.817,842,3.817,843,3.817,844,3.817]],["title/components/FileInputComponent.html",[28,0.383,132,0.983]],["body/components/FileInputComponent.html",[1,0.662,3,0.105,4,0.105,5,0.253,10,3.447,16,0.132,17,0.458,18,0.505,19,4.071,20,0.862,21,0.64,22,0.373,23,0.017,24,0.105,25,0.006,26,0.009,27,0.006,28,0.49,29,0.691,30,1.091,31,0.824,32,0.824,33,0.824,37,0.485,38,0.662,39,0.358,40,1.051,41,2.232,42,2.333,44,1.245,46,0.702,48,1.573,49,3.935,50,3.935,51,1.641,52,0.458,53,1.008,54,0.8,58,1.302,60,2.144,61,0.532,63,0.92,64,0.367,65,1.105,66,2.263,67,0.64,68,0.514,69,2.004,71,1.672,75,0.49,76,0.418,80,0.413,81,1.505,82,1.267,83,0.253,84,1.035,87,0.722,88,0.483,89,0.105,91,1.607,92,1.607,93,1.416,95,1.607,96,1.607,97,0.6,98,0.606,100,1.726,101,1.726,105,0.303,112,0.691,113,1.245,114,1.14,115,0.066,116,1.672,117,0.824,118,0.824,119,0.691,120,0.824,121,0.691,122,1.672,123,0.691,124,0.824,125,0.691,126,0.824,127,0.691,128,0.824,129,1.501,130,0.691,131,0.824,132,1.583,133,1.245,134,0.691,135,0.755,136,0.691,137,0.824,138,0.691,139,0.789,140,0.691,141,0.824,142,0.691,143,0.691,144,1.191,145,0.691,146,0.755,147,0.691,148,0.789,149,0.691,150,0.824,151,0.691,152,0.824,153,0.691,154,0.789,155,0.824,156,0.321,157,0.483,158,2.266,159,0.662,160,0.633,161,0.529,162,0.662,163,0.662,164,0.662,165,1.284,166,0.662,167,0.633,168,0.662,169,0.662,170,0.662,171,0.662,172,0.633,173,0.662,174,0.633,175,0.824,192,2.288,196,2.274,212,1.748,224,2.288,317,0.789,364,2.824,409,1.641,420,0.901,427,1.492,428,0.988,547,2.019,548,2.434,549,2.019,550,2.019,561,1.141,562,1.607,616,3.143,845,6.017,846,5.387,847,2.288,848,3.456,849,4.828,850,4.006,851,5.38,852,4.983,853,4.006,854,2.652,855,2.652,856,4.006,857,2.652,858,2.652,859,4.006,860,4.828,861,2.652,862,3.456,863,4.006,864,2.652,865,4.828,866,2.652,867,2.652,868,2.652,869,2.652,870,2.652,871,2.652,872,2.652,873,4.006,874,2.652,875,2.652,876,2.652,877,2.652,878,1.726,879,2.652,880,2.652]],["title/components/FormGroupComponent.html",[28,0.383,134,0.983]],["body/components/FormGroupComponent.html",[1,0.875,3,0.139,4,0.139,5,0.17,16,0.175,17,0.562,18,0.669,21,0.656,22,0.312,23,0.017,24,0.139,25,0.008,26,0.011,27,0.008,28,0.575,29,0.914,30,1.337,31,1.09,32,1.09,33,1.09,37,0.595,38,1.532,39,0.474,40,1.07,41,2.301,42,2.405,44,1.526,46,0.668,51,1.926,52,0.562,53,1.282,54,0.98,61,0.5,64,0.343,66,1.306,67,0.575,68,0.438,75,0.356,76,0.773,80,0.352,82,1.08,83,0.334,85,1.673,86,1.369,87,0.955,88,0.638,89,0.139,97,0.736,98,0.801,105,0.562,112,0.914,113,1.526,114,1.397,115,0.088,116,1.908,117,1.09,118,1.09,119,0.914,120,1.09,121,0.914,122,1.908,123,0.914,124,1.09,125,0.914,126,1.09,127,0.914,128,1.09,129,1.761,130,0.914,131,1.09,132,0.914,133,1.526,134,1.6,135,1.957,136,0.914,137,1.09,138,0.914,139,1.043,140,0.914,141,1.09,142,0.914,143,0.914,144,1.46,145,0.914,146,0.998,147,0.914,148,1.043,149,0.914,150,1.09,151,0.914,152,1.09,153,0.914,154,1.043,155,1.09,156,0.425,157,0.638,158,2.36,159,0.875,160,0.837,161,0.7,162,0.875,163,0.875,164,0.875,165,0.837,166,0.875,167,0.837,168,0.875,169,0.875,170,0.875,171,0.875,172,0.837,173,0.875,174,0.837,175,1.09,191,2.113,212,1.596,571,2.472,572,4.742,573,3.793,576,4.377,577,4.991,578,3.461,881,5.779,882,5.667,883,3.026,884,3.507,885,3.507,886,3.507,887,3.507,888,3.507,889,3.507,890,3.507,891,3.507]],["title/modules/FormModule.html",[403,2.14,892,2.454]],["body/modules/FormModule.html",[3,0.136,4,0.136,5,0.167,23,0.017,24,0.136,25,0.007,26,0.011,27,0.007,80,0.544,83,0.326,89,0.136,112,0.892,121,1.912,125,1.912,127,1.912,132,1.912,134,1.912,138,1.912,139,1.018,140,1.912,142,1.912,143,1.912,144,1.018,145,1.912,146,0.974,147,1.912,148,1.018,149,1.912,153,1.912,154,1.018,168,1.658,287,2.228,403,1.943,404,4.027,405,2.074,406,2.074,407,3.942,408,2.412,409,1.402,410,3.942,414,3.403,415,2.412,417,3.729,418,4.165,419,2.644,432,3.729,561,1.473,588,2.412,846,2.644,892,5.176,893,2.953,894,2.953,895,3.423,896,2.953,897,3.423,898,3.423,899,2.644,900,5.593,901,2.644,902,3.423,903,3.423,904,3.403,905,3.423,906,5.593,907,3.423,908,2.953,909,2.644,910,3.423,911,4.165,912,3.423,913,3.423,914,3.423,915,3.423,916,3.423]],["title/components/GridComponent.html",[28,0.383,136,0.983]],["body/components/GridComponent.html",[1,0.889,3,0.141,4,0.141,5,0.172,16,0.178,17,0.568,21,0.66,22,0.315,23,0.017,24,0.141,25,0.008,26,0.011,27,0.008,28,0.58,29,0.929,30,1.353,31,1.108,32,1.108,33,1.108,37,0.602,38,0.889,39,0.482,40,1.071,41,2.305,42,2.409,44,1.544,46,0.671,51,1.943,52,0.568,53,1.291,54,0.991,61,0.478,64,0.374,67,0.58,68,0.442,75,0.362,76,0.782,80,0.356,82,1.09,83,0.339,85,1.701,88,0.648,89,0.141,97,0.744,98,0.814,105,0.408,112,0.929,113,1.544,114,1.413,115,0.089,116,1.922,117,1.108,118,1.108,119,0.929,120,1.108,121,0.929,122,1.922,123,0.929,124,1.108,125,0.929,126,1.108,127,0.929,128,1.108,129,1.777,130,0.929,131,1.108,132,0.929,133,1.544,134,0.929,135,1.014,136,1.612,137,1.108,138,0.929,139,1.06,140,0.929,141,1.108,142,0.929,143,0.929,144,1.477,145,0.929,146,1.014,147,0.929,148,1.06,149,0.929,150,1.108,151,0.929,152,1.108,153,0.929,154,1.06,155,1.108,156,0.432,157,1.125,158,2.364,159,0.889,160,0.851,161,0.711,162,0.889,163,0.889,164,0.889,165,0.851,166,0.889,167,0.851,168,0.889,169,0.889,170,0.889,171,0.889,172,0.851,173,0.889,174,0.851,175,1.108,212,2.188,426,2.512,917,3.075,918,6.183,919,4.966,920,6.183,921,6.183,922,4.966,923,3.564,924,3.564,925,3.564,926,3.564,927,3.564,928,3.564,929,3.564,930,3.564]],["title/components/IconButtonComponent.html",[28,0.383,138,0.983]],["body/components/IconButtonComponent.html",[1,0.797,3,0.127,4,0.127,5,0.159,16,0.159,17,0.526,18,0.609,22,0.369,23,0.017,24,0.127,25,0.007,26,0.01,27,0.007,28,0.546,29,0.833,30,1.252,31,0.993,32,0.993,33,0.993,37,0.557,38,1.469,39,0.432,40,1.065,41,2.266,42,2.369,44,1.429,46,0.664,48,1.343,49,3.937,50,4.057,54,0.918,58,1.494,60,2.275,61,0.53,63,0.876,64,0.377,65,1.182,66,2.723,67,0.598,68,0.455,69,2.552,71,1.674,75,0.324,80,0.385,81,1.814,82,0.876,83,0.304,84,1.248,85,1.525,86,1.248,87,0.871,88,0.582,89,0.127,91,1.937,92,1.937,93,1.707,95,1.937,96,1.937,105,0.366,112,0.833,113,1.429,114,1.308,115,0.08,116,1.83,117,0.993,118,0.993,119,0.833,120,0.993,121,0.833,122,1.83,123,0.833,124,0.993,125,0.833,126,0.993,127,0.833,128,0.993,129,1.674,130,0.833,131,0.993,132,0.833,133,1.429,134,0.833,135,0.91,136,0.833,137,0.993,138,1.535,139,1.855,140,0.833,141,0.993,142,0.833,143,0.833,144,1.367,145,0.833,146,1.532,147,0.833,148,0.95,149,0.833,150,0.993,151,0.833,152,0.993,153,0.833,154,0.95,155,0.993,156,0.387,157,0.582,158,2.331,159,0.797,160,0.763,161,0.638,162,0.797,163,0.797,164,0.797,165,0.763,166,0.797,167,0.763,168,0.797,169,0.797,170,0.797,171,0.797,172,0.763,173,0.797,174,0.763,175,0.993,191,1.978,317,0.95,343,1.309,441,5.775,459,3.241,460,4.159,462,4.397,489,3.551,501,2.469,503,2.469,508,2.758,518,2.469,519,3.551,522,2.758,899,5.389,931,6.019,932,2.253,933,2.469,934,3.196,935,3.551,936,3.196,937,3.196,938,3.196,939,3.196,940,3.196]],["title/components/IconComponent.html",[28,0.383,140,0.983]],["body/components/IconComponent.html",[1,1.013,3,0.161,4,0.161,5,0.188,18,0.774,23,0.017,24,0.161,25,0.009,26,0.012,27,0.009,28,0.621,29,1.059,30,1.479,31,1.263,32,1.263,33,1.263,37,0.658,38,1.013,39,0.549,40,1.079,41,2.327,42,2.432,44,1.688,58,1.988,61,0.314,64,0.37,80,0.389,83,0.387,85,1.938,86,1.586,88,0.739,89,0.161,112,1.059,113,1.688,114,1.545,115,0.101,116,2.03,117,1.263,118,1.263,119,1.059,120,1.263,121,1.059,122,2.03,123,1.059,124,1.263,125,1.059,126,1.263,127,1.059,128,1.263,129,1.901,130,1.059,131,1.263,132,1.059,133,1.688,134,1.059,135,1.156,136,1.059,137,1.263,138,1.059,139,1.942,140,1.702,141,1.263,142,1.059,143,1.059,144,1.615,145,1.059,146,1.156,147,1.059,148,1.208,149,1.059,150,1.263,151,1.059,152,1.263,153,1.059,154,1.208,155,1.263,156,0.492,157,0.739,158,2.401,159,1.013,160,0.97,161,0.811,162,1.013,163,1.013,164,1.013,165,0.97,166,1.013,167,0.97,168,1.013,169,1.629,170,1.013,171,1.013,172,0.97,173,1.013,174,0.97,175,1.263,609,1.445,716,2.169,941,3.505,942,5.43,943,4.062]],["title/components/InputComponent.html",[28,0.383,142,0.983]],["body/components/InputComponent.html",[1,0.731,3,0.116,4,0.116,5,0.15,16,0.146,17,0.494,18,0.559,20,0.952,21,0.611,22,0.383,23,0.017,24,0.116,25,0.006,26,0.009,27,0.006,28,0.52,29,0.764,30,1.175,31,0.911,32,0.911,33,0.911,37,0.523,38,0.731,39,0.396,40,1.059,41,2.259,42,2.361,44,1.341,46,0.718,49,3.949,50,4.053,51,1.741,52,0.494,53,1.18,54,0.861,58,1.402,60,2.215,61,0.537,63,0.559,64,0.342,65,1.028,66,2.348,67,0.64,68,0.517,69,2.348,71,1.757,75,0.52,76,1.053,80,0.405,81,1.663,82,1.275,83,0.279,84,1.144,87,0.798,88,0.533,89,0.116,91,1.776,92,1.776,93,1.564,95,1.776,96,1.776,97,0.944,98,0.669,100,1.907,101,1.907,105,0.586,112,0.764,113,1.341,114,1.228,115,0.073,116,1.757,117,0.911,118,0.911,119,0.764,120,0.911,121,0.764,122,1.757,123,0.764,124,0.911,125,0.764,126,0.911,127,0.764,128,0.911,129,1.592,130,0.764,131,0.911,132,0.764,133,1.341,134,0.764,135,0.834,136,0.764,137,0.911,138,0.764,139,0.871,140,0.764,141,0.911,142,1.643,143,0.764,144,1.283,145,0.764,146,0.834,147,0.764,148,0.871,149,0.764,150,0.911,151,0.764,152,0.911,153,0.764,154,0.871,155,0.911,156,0.355,157,0.533,158,2.302,159,0.731,160,0.699,161,0.585,162,0.731,163,0.731,164,0.731,165,1.349,166,0.731,167,0.699,168,0.731,169,0.731,170,0.731,171,0.731,172,0.699,173,0.731,174,0.699,175,0.911,242,1.467,409,1.768,420,0.996,427,1.608,428,1.091,457,3.723,547,2.175,548,2.582,549,2.175,550,2.175,561,1.261,562,1.776,566,2.065,605,3.333,848,3.723,852,5.198,933,2.263,944,2.528,945,5.652,946,5.652,947,5.123,948,4.316,949,2.93,950,2.93,951,2.93,952,2.93,953,2.93,954,2.93,955,2.93,956,2.93,957,2.93,958,2.93,959,2.528,960,2.93]],["title/classes/Queue.html",[89,0.149,288,2.658]],["body/classes/Queue.html",[3,0.14,4,0.14,5,0.123,7,2.804,16,0.176,17,0.565,22,0.272,23,0.017,24,0.14,25,0.008,26,0.011,27,0.008,46,0.68,48,1.42,52,0.565,61,0.501,63,0.674,64,0.214,65,0.644,66,1.84,67,0.359,68,0.44,69,1.84,71,1.536,75,0.699,76,1.202,89,0.226,97,0.53,105,0.768,114,2.153,191,2.126,196,2.804,242,1.679,271,4.487,275,3.816,283,4.011,286,4.262,288,5.6,297,4.912,298,5.781,317,1.469,346,5.317,350,3.482,447,3.816,455,3.052,578,3.482,631,4.577,878,2.303,961,3.052,962,3.538,963,3.538,964,3.538,965,3.538,966,4.912,967,3.052,968,6.164,969,3.538,970,6.483,971,3.538,972,5.693,973,4.912,974,3.538,975,4.941,976,6.163,977,3.538,978,4.941,979,4.941,980,3.538,981,4.941,982,6.716,983,4.941,984,4.941,985,4.941,986,6.483,987,4.941,988,3.538,989,4.941,990,4.941,991,3.538,992,4.941,993,3.538,994,3.538,995,6.483,996,3.538,997,3.538,998,3.538,999,3.538,1000,3.538,1001,3.538,1002,4.941,1003,3.538]],["title/components/RadioButtonComponent.html",[28,0.383,143,0.983]],["body/components/RadioButtonComponent.html",[1,0.837,3,0.133,4,0.133,5,0.165,16,0.167,18,0.639,20,1.09,21,0.611,22,0.262,23,0.017,24,0.133,25,0.007,26,0.01,27,0.007,28,0.561,29,0.874,30,1.296,31,1.043,32,1.043,33,1.043,37,0.577,38,0.837,39,0.453,40,1.068,41,2.285,42,2.388,44,1.479,46,0.661,52,0.545,53,1.257,54,0.95,58,1.797,61,0.491,64,0.335,67,0.483,68,0.465,71,1.719,75,0.483,76,0.75,80,0.396,82,1.054,83,0.319,88,0.61,89,0.133,97,0.713,98,0.766,105,0.384,112,0.874,113,1.479,114,1.354,115,0.084,116,1.871,117,1.043,118,1.043,119,0.874,120,1.043,121,0.874,122,1.871,123,0.874,124,1.043,125,0.874,126,1.043,127,0.874,128,1.043,129,1.719,130,0.874,131,1.043,132,0.874,133,1.479,134,0.874,135,0.955,136,0.874,137,1.043,138,0.874,139,0.997,140,0.874,141,1.043,142,0.874,143,1.721,144,2.019,145,0.874,146,1.713,147,0.874,148,0.997,149,0.874,150,1.043,151,0.874,152,1.043,153,0.874,154,0.997,155,1.043,156,0.406,157,0.61,158,2.346,159,0.837,160,0.801,161,0.669,162,0.837,163,1.502,164,0.837,165,0.801,166,0.837,167,0.801,168,0.837,169,0.837,170,0.837,171,0.837,172,0.801,173,0.837,174,0.801,175,1.043,317,1.415,409,1.949,420,1.14,427,1.773,428,1.249,459,3.354,547,2.399,548,2.788,549,2.399,550,2.399,552,4.242,553,5.244,554,3.898,556,3.354,561,1.443,562,2.033,563,2.033,564,3.676,565,2.894,566,2.364,567,2.894,568,2.894,609,1.193,716,1.791,904,4.653,932,2.364,935,2.591,1004,5.696,1005,4.106,1006,3.354,1007,3.354]],["title/components/RadioButtonGroupComponent.html",[28,0.383,145,0.983]],["body/components/RadioButtonGroupComponent.html",[1,0.797,3,0.126,4,0.126,5,0.159,16,0.159,17,0.526,21,0.735,22,0.344,23,0.017,24,0.126,25,0.007,26,0.01,27,0.007,28,0.546,29,0.832,30,1.251,31,0.992,32,0.992,33,0.992,37,0.557,38,0.797,39,0.431,40,1.065,41,2.28,42,2.383,44,1.428,46,0.664,51,1.829,52,0.526,54,0.917,61,0.502,63,0.609,64,0.356,65,0.581,67,0.597,68,0.455,69,1.711,71,1.673,75,0.466,80,0.385,82,1.122,83,0.304,89,0.126,112,0.832,113,1.428,114,1.307,115,0.08,116,1.829,117,0.992,118,0.992,119,0.832,120,0.992,121,0.832,122,1.829,123,0.832,124,0.992,125,0.832,126,0.992,127,0.832,128,0.992,129,1.673,130,0.832,131,0.992,132,0.832,133,1.428,134,0.832,135,0.909,136,0.832,137,0.992,138,0.832,139,0.949,140,0.832,141,0.992,142,0.832,143,0.832,144,2.037,145,1.693,146,2.096,147,0.832,148,0.949,149,0.832,150,0.992,151,0.832,152,0.992,153,0.832,154,0.949,155,0.992,156,0.387,157,0.581,158,2.33,159,0.797,160,0.762,161,0.637,162,0.797,163,0.797,164,0.797,165,0.762,166,0.797,167,0.762,168,1.468,169,0.797,170,0.797,171,0.797,172,0.762,173,0.797,174,0.762,175,0.992,212,1.493,317,1.6,409,1.882,547,2.316,548,2.712,549,2.316,550,2.316,552,3.238,554,3.793,556,3.238,561,1.374,563,1.935,571,2.25,572,4.546,573,3.548,574,3.261,575,4.148,576,4.156,577,4.156,578,3.238,587,2.755,588,2.25,883,2.755,904,4.717,1008,5.774,1009,3.193,1010,3.193,1011,4.594,1012,3.193,1013,3.964,1014,3.193,1015,3.193,1016,3.964,1017,3.964,1018,4.156,1019,2.755]],["title/modules/SbElementModule.html",[403,2.14,1020,2.658]],["body/modules/SbElementModule.html",[3,0.16,4,0.16,5,0.14,23,0.017,24,0.16,25,0.009,26,0.012,27,0.009,29,1.966,30,1.102,35,3.124,80,0.54,83,0.385,88,0.736,89,0.16,112,1.054,119,1.966,123,1.966,130,1.966,136,1.966,151,1.966,156,0.49,174,1.705,287,2.633,403,2.296,404,4.238,405,3.281,406,2.451,407,4.302,408,2.851,409,1.657,410,4.302,414,3.816,415,2.851,417,4.182,422,2.451,432,4.182,561,1.741,892,4.91,911,4.672,1020,5.567,1021,3.49,1022,4.045,1023,3.49,1024,3.49,1025,4.045,1026,4.045,1027,5.415,1028,4.045,1029,3.49,1030,4.045,1031,4.045,1032,4.045,1033,4.045,1034,4.045,1035,4.045,1036,4.045,1037,4.045,1038,4.045,1039,4.045]],["title/components/SelectButtonComponent.html",[28,0.383,147,0.983]],["body/components/SelectButtonComponent.html",[1,0.708,3,0.112,4,0.112,5,0.146,16,0.141,17,0.482,21,0.603,22,0.328,23,0.017,24,0.112,25,0.006,26,0.009,27,0.006,28,0.51,29,0.739,30,1.148,31,0.882,32,0.882,33,0.882,37,0.51,38,0.708,39,0.383,40,1.056,41,2.242,42,2.352,44,1.31,46,0.715,49,3.908,50,4.015,52,0.482,53,1.162,58,1.369,60,2.192,61,0.523,63,0.803,64,0.36,65,1.082,66,2.32,67,0.51,68,0.46,69,2.468,71,1.848,75,0.603,76,0.936,80,0.398,81,1.61,83,0.27,84,1.107,89,0.112,91,1.719,92,1.719,93,1.515,95,1.719,96,1.719,97,0.834,98,0.648,100,1.846,101,1.846,105,0.482,112,0.739,113,1.31,114,1.199,115,0.071,116,1.729,117,0.882,118,0.882,119,0.739,120,0.882,121,0.739,122,1.729,123,0.739,124,0.882,125,0.739,126,0.882,127,0.739,128,0.882,129,1.562,130,0.739,131,0.882,132,0.739,133,1.31,134,0.739,135,0.807,136,0.739,137,0.882,138,0.739,139,0.844,140,0.739,141,0.882,142,0.739,143,0.739,144,1.253,145,0.739,146,1.583,147,1.624,148,2.013,149,0.739,150,0.882,151,0.739,152,0.882,153,0.739,154,1.768,155,0.882,156,0.344,157,0.516,158,2.291,159,0.708,160,0.677,161,0.566,162,0.708,163,0.708,164,0.708,165,0.677,166,0.708,167,0.677,168,1.388,169,0.708,170,0.708,171,0.708,172,0.677,173,0.708,174,0.677,175,0.882,242,0.964,317,1.768,409,1.726,459,2.97,547,2.124,548,2.534,549,2.124,550,2.124,561,1.221,563,1.719,574,3.046,575,3.921,588,1.999,609,1.009,908,2.447,909,5.32,932,1.999,933,2.191,935,2.191,1005,3.635,1013,3.635,1016,3.635,1017,4.8,1018,3.882,1019,2.447,1040,5.943,1041,5.027,1042,5.564,1043,2.837,1044,2.837,1045,4.214,1046,2.837,1047,2.837,1048,2.837,1049,2.837,1050,4.214,1051,2.837,1052,2.837,1053,2.837,1054,2.837,1055,2.837,1056,2.837,1057,2.837]],["title/interfaces/SelectedOptions.html",[0,1.472,585,2.454]],["body/interfaces/SelectedOptions.html",[0,2.316,2,3.366,3,0.235,4,0.235,5,0.205,21,0.698,23,0.016,24,0.235,25,0.013,26,0.015,27,0.013,61,0.458,66,2.562,585,4.477,1058,5.935,1059,5.117,1060,5.931,1061,5.935,1062,5.931]],["title/directives/SelectionOptionsDirective.html",[115,0.094,168,0.941]],["body/directives/SelectionOptionsDirective.html",[3,0.19,4,0.19,5,0.166,16,0.239,17,0.691,18,0.912,20,1.555,21,0.486,22,0.333,23,0.017,24,0.19,25,0.01,26,0.013,27,0.01,37,0.58,39,0.647,40,0.939,46,0.63,54,1.206,61,0.554,63,0.912,64,0.29,65,0.871,67,0.613,68,0.537,69,1.783,75,0.486,76,1.153,80,0.474,82,1.151,83,0.456,87,1.303,88,0.871,89,0.19,105,0.548,115,0.151,156,0.58,165,1.442,168,1.507,191,2.599,242,2.053,317,1.423,343,1.96,420,1.627,427,2.25,428,1.783,436,5.3,574,4.011,585,4.765,1018,3.696,1063,6.316,1064,4.129,1065,6.619,1066,6.04,1067,4.785,1068,4.785,1069,4.785,1070,4.785,1071,4.785,1072,4.785,1073,4.785,1074,4.785,1075,6.04,1076,4.785]],["title/directives/SizeColorInputDirective.html",[115,0.094,169,0.941]],["body/directives/SizeColorInputDirective.html",[3,0.191,4,0.191,5,0.167,16,0.241,18,1.419,20,2.159,21,0.708,22,0.335,23,0.017,24,0.191,25,0.01,26,0.013,27,0.01,37,0.585,39,0.652,40,0.942,46,0.684,52,0.695,53,1.456,54,1.212,61,0.514,64,0.292,67,0.616,68,0.469,75,0.49,76,0.956,80,0.435,82,1.267,83,0.46,86,2.722,88,0.878,89,0.241,97,0.91,98,1.102,105,0.552,115,0.152,156,0.585,157,1.105,169,1.515,212,2.266,232,2.577,234,2.185,305,3.061,316,3.242,590,3.515,591,1.798,596,2.303,608,3.401,609,2.16,698,2.577,711,4.164,712,2.739]],["title/directives/SizeInputDirective.html",[115,0.094,170,0.941]],["body/directives/SizeInputDirective.html",[3,0.204,4,0.204,5,0.178,16,0.257,20,2.223,21,0.641,22,0.284,23,0.017,24,0.204,25,0.011,26,0.014,27,0.011,37,0.624,39,0.696,40,0.964,46,0.679,52,0.723,53,1.49,54,1.262,61,0.489,64,0.311,67,0.522,68,0.398,75,0.522,76,0.996,80,0.453,82,1.205,83,0.49,86,2.671,88,0.937,89,0.25,97,0.947,98,1.176,105,0.589,115,0.158,156,0.624,157,1.15,170,1.577,212,2.054,232,2.749,316,3.375,590,3.448,591,1.918,594,3.351,596,2.457,609,1.831,712,2.922]],["title/directives/SizeThemeColorInputDirective.html",[38,0.941,115,0.094]],["body/directives/SizeThemeColorInputDirective.html",[3,0.173,4,0.173,5,0.152,16,0.218,17,0.652,18,1.423,20,2.061,21,0.725,22,0.371,23,0.018,24,0.173,25,0.01,26,0.012,27,0.01,37,0.53,38,1.422,39,0.591,40,0.908,46,0.703,48,1.091,52,0.652,53,1.404,54,1.138,58,1.853,60,2.43,61,0.539,63,0.834,64,0.345,65,0.796,67,0.579,68,0.441,75,0.444,76,0.898,80,0.454,82,1.209,83,0.416,84,1.708,86,2.791,87,2.033,88,0.796,89,0.226,97,0.854,98,0.999,105,0.5,115,0.142,156,0.53,157,1.037,212,2.184,232,2.335,234,2.581,305,2.874,316,3.044,590,3.603,591,1.629,609,2.028,698,2.335,700,3.083,712,2.482,713,2.651,714,4.919,715,3.774,716,2.335,717,3.455,718,2.651,719,2.651]],["title/directives/SizeThemeInputDirective.html",[115,0.094,171,0.941]],["body/directives/SizeThemeInputDirective.html",[3,0.184,4,0.184,5,0.161,16,0.231,17,0.678,20,2.12,21,0.697,22,0.36,23,0.017,24,0.184,25,0.01,26,0.013,27,0.01,37,0.562,39,0.627,40,0.928,46,0.703,48,1.157,52,0.678,53,1.435,54,1.182,58,1.924,60,2.468,61,0.531,63,0.884,64,0.358,65,0.844,67,0.471,68,0.358,75,0.471,76,0.933,80,0.467,82,1.129,83,0.442,84,1.811,86,2.772,87,2.035,88,0.844,89,0.235,97,0.887,98,1.059,105,0.531,115,0.148,156,0.562,157,1.077,171,1.477,212,1.924,232,2.476,316,3.161,590,3.579,591,1.727,609,2.106,698,3.161,699,3.269,700,3.269,712,2.632,713,2.81,716,2.476,717,3.588,718,2.81,719,2.81]],["title/components/SliderComponent.html",[28,0.383,149,0.983]],["body/components/SliderComponent.html",[1,0.677,3,0.107,4,0.107,5,0.141,16,0.135,17,0.466,18,0.517,20,0.881,21,0.622,22,0.381,23,0.017,24,0.107,25,0.006,26,0.009,27,0.006,28,0.497,29,0.707,30,1.11,31,0.843,32,0.843,33,0.843,37,0.494,38,0.677,39,0.366,40,1.053,41,2.238,42,2.339,44,1.267,46,0.675,48,1.528,51,1.664,52,0.466,53,1.136,54,0.813,61,0.562,63,0.777,64,0.353,65,0.741,66,1.823,67,0.679,68,0.558,69,1.518,71,1.267,75,0.497,76,1.001,80,0.35,82,1.246,83,0.258,87,0.739,88,0.494,89,0.107,97,0.611,98,0.62,105,0.56,112,0.707,113,1.267,114,1.16,115,0.068,116,1.691,117,0.843,118,0.843,119,0.707,120,0.843,121,0.707,122,1.691,123,0.707,124,0.843,125,0.707,126,0.843,127,0.707,128,0.843,129,1.521,130,0.707,131,0.843,132,0.707,133,1.267,134,0.707,135,0.772,136,0.707,137,0.843,138,0.707,139,0.807,140,0.707,141,0.843,142,0.707,143,0.707,144,1.212,145,0.707,146,0.772,147,0.707,148,0.807,149,1.597,150,0.843,151,0.707,152,0.843,153,0.707,154,0.807,155,0.843,156,0.329,157,0.494,158,2.275,159,0.677,160,0.648,161,0.541,162,0.677,163,0.677,164,0.677,165,1.299,166,0.677,167,0.648,168,0.677,169,0.677,170,0.677,171,0.677,172,0.648,173,0.677,174,0.648,175,0.843,191,1.753,196,4.096,242,1.664,301,5.641,317,1.212,343,1.669,364,3.45,409,1.669,420,0.922,427,1.518,428,1.01,547,2.054,548,2.467,549,2.054,550,2.054,553,4.908,561,1.167,562,1.644,564,2.095,878,3.797,1077,2.34,1078,5.442,1079,4.075,1080,4.894,1081,4.894,1082,4.075,1083,4.223,1084,4.894,1085,4.894,1086,6.355,1087,5.833,1088,5.833,1089,2.712,1090,4.075,1091,2.712,1092,2.712,1093,2.712,1094,4.075,1095,4.075,1096,2.712,1097,2.712,1098,2.712,1099,2.712,1100,2.712,1101,2.712,1102,2.712,1103,2.712,1104,2.712,1105,2.712,1106,2.712,1107,2.712,1108,2.712,1109,4.075,1110,2.712,1111,4.894,1112,2.712,1113,2.712,1114,2.712,1115,4.075,1116,2.712,1117,2.712,1118,2.712,1119,2.712,1120,2.712,1121,2.712,1122,2.712]],["title/directives/StateManagerDirective.html",[115,0.094,172,0.9]],["body/directives/StateManagerDirective.html",[3,0.126,4,0.126,5,0.11,16,0.159,17,0.525,22,0.411,23,0.017,24,0.126,25,0.007,26,0.01,27,0.007,39,0.43,40,0.794,46,0.689,48,1.806,52,0.525,54,0.915,61,0.587,63,1.305,64,0.414,65,1.245,66,2.935,67,0.597,68,0.595,69,2.417,71,1.426,75,0.694,80,0.228,82,1.188,83,0.303,89,0.126,105,0.673,115,0.114,156,0.386,172,1.095,191,1.974,317,2.153,343,2.408,429,5.884,460,4.151,461,3.957,462,4.713,489,3.542,501,2.46,503,2.46,518,2.46,519,3.542,527,2.46,669,3.635,704,5.77,707,5.77,809,2.46,820,2.748,821,2.748,831,3.957,959,2.748,1123,5.375,1124,5.375,1125,5.375,1126,4.587,1127,4.587,1128,4.587,1129,6.688,1130,4.587,1131,4.587,1132,4.587,1133,4.587,1134,3.186,1135,4.587,1136,3.186,1137,4.587,1138,3.186,1139,4.587,1140,3.186,1141,3.186,1142,3.186,1143,3.186,1144,3.186,1145,3.186,1146,3.186,1147,4.587,1148,3.186,1149,3.186,1150,4.587,1151,3.186,1152,3.186,1153,3.186,1154,3.186,1155,4.587,1156,3.186,1157,4.587,1158,3.186,1159,4.587,1160,3.186,1161,4.587,1162,3.186,1163,3.186]],["title/classes/Table.html",[89,0.149,1164,2.454]],["body/classes/Table.html",[3,0.217,4,0.082,5,0.207,7,3.261,11,2.542,16,0.205,17,0.377,21,0.209,22,0.329,23,0.018,24,0.082,25,0.004,26,0.007,27,0.004,46,0.586,48,1.365,52,0.377,58,1.526,61,0.461,63,1.043,64,0.361,65,0.996,67,0.334,68,0.254,75,0.685,76,1.22,80,0.336,89,0.163,97,0.309,105,0.626,135,1.698,177,2.142,183,2.897,196,2.665,201,3.563,242,2.437,265,3.309,271,3.563,283,2.142,284,2.839,298,2.542,312,4.227,340,2.839,343,2.242,360,4.337,420,1.119,436,3.858,447,2.542,487,2.542,610,4.153,616,4.535,626,1.169,636,4.542,639,2.195,640,5.134,641,1.452,720,4.049,722,5.896,730,1.777,732,6.107,745,1.777,750,2.542,759,4.051,766,4.227,878,2.142,967,2.839,968,4.051,973,2.839,1061,4.051,1083,4.428,1164,5.012,1165,1.777,1166,3.291,1167,3.291,1168,3.291,1169,6.407,1170,3.291,1171,5.826,1172,5.473,1173,3.291,1174,3.291,1175,3.291,1176,4.609,1177,2.676,1178,3.291,1179,4.111,1180,4.111,1181,4.111,1182,3.291,1183,2.06,1184,2.06,1185,3.291,1186,3.291,1187,3.291,1188,4.695,1189,3.291,1190,2.06,1191,2.06,1192,4.051,1193,3.291,1194,2.06,1195,3.291,1196,4.051,1197,3.291,1198,5.133,1199,3.291,1200,3.291,1201,3.291,1202,3.291,1203,2.06,1204,6.31,1205,2.06,1206,3.291,1207,3.291,1208,3.291,1209,4.695,1210,4.111,1211,5.473,1212,2.06,1213,6.153,1214,2.06,1215,5.473,1216,3.291,1217,3.291,1218,3.291,1219,3.291,1220,3.291,1221,3.291,1222,2.06,1223,2.06,1224,3.291,1225,3.291,1226,3.291,1227,2.06,1228,4.695,1229,2.06,1230,2.06,1231,2.06,1232,2.06,1233,5.968,1234,2.06,1235,2.06,1236,2.06,1237,2.06,1238,2.06,1239,2.06,1240,2.06,1241,3.291,1242,4.695,1243,3.291,1244,3.291,1245,2.06,1246,2.06,1247,2.06,1248,2.06,1249,2.06,1250,2.06,1251,2.06,1252,2.06,1253,2.06,1254,2.06,1255,2.06,1256,3.291,1257,3.291,1258,2.06,1259,2.06,1260,2.06]],["title/components/TableComponent.html",[28,0.383,151,0.983]],["body/components/TableComponent.html",[1,0.819,3,0.13,4,0.13,5,0.162,16,0.164,17,0.536,18,0.894,21,0.665,22,0.348,23,0.017,24,0.13,25,0.007,26,0.01,27,0.007,28,0.555,29,0.856,30,1.277,31,1.021,32,1.021,33,1.021,37,0.568,38,0.819,39,0.444,40,1.066,41,2.286,42,2.39,44,1.457,46,0.705,51,1.858,52,0.536,53,1.245,54,0.936,61,0.507,63,0.626,64,0.361,65,0.598,67,0.555,68,0.423,75,0.476,76,0.993,80,0.391,82,1.042,83,0.313,85,1.567,88,0.598,89,0.13,97,0.893,98,0.75,105,0.536,112,0.856,113,1.457,114,1.334,115,0.082,116,1.853,117,1.021,118,1.021,119,0.856,120,1.021,121,0.856,122,1.853,123,0.856,124,1.021,125,0.856,126,1.021,127,0.856,128,1.021,129,1.699,130,0.856,131,1.021,132,0.856,133,1.457,134,0.856,135,0.935,136,0.856,137,1.021,138,0.856,139,0.977,140,0.856,141,1.021,142,0.856,143,0.856,144,1.394,145,0.856,146,0.935,147,0.856,148,0.977,149,0.856,150,1.021,151,1.554,152,1.021,153,0.856,154,0.977,155,1.021,156,0.398,157,0.598,158,2.339,159,0.819,160,0.784,161,0.656,162,0.819,163,0.819,164,0.819,165,0.784,166,0.819,167,0.784,168,0.819,169,0.819,170,0.819,171,0.819,172,0.784,173,1.488,174,0.784,175,1.021,196,3.103,242,1.116,422,1.991,609,1.668,610,1.864,1164,4.393,1177,3.559,1261,2.834,1262,4.689,1263,5.467,1264,4.689,1265,6.557,1266,3.285,1267,3.285,1268,3.285,1269,4.689,1270,3.285,1271,3.285,1272,3.285,1273,4.689,1274,3.285,1275,3.285,1276,5.467,1277,5.963,1278,3.285,1279,3.285,1280,4.689,1281,3.285,1282,3.285,1283,4.689,1284,4.689]],["title/interfaces/TableInterface.html",[0,1.472,1177,2.454]],["body/interfaces/TableInterface.html",[0,2.078,2,3.02,3,0.211,4,0.211,5,0.184,16,0.265,17,0.738,22,0.356,23,0.017,24,0.211,25,0.012,26,0.014,27,0.012,76,1.208,80,0.381,610,4.096,636,4.547,639,2.841,640,4.892,641,3.751,722,6.052,766,5.573,1164,4.199,1169,5.565,1171,6.482,1176,4.982,1177,4.199,1192,5.565,1285,4.591]],["title/directives/ThemeColorInputDirective.html",[115,0.094,173,0.941]],["body/directives/ThemeColorInputDirective.html",[3,0.185,4,0.185,5,0.161,16,0.232,17,0.68,18,1.426,21,0.699,22,0.36,23,0.017,24,0.185,25,0.01,26,0.013,27,0.01,37,0.565,39,0.63,40,0.93,46,0.704,48,1.163,52,0.68,53,1.438,54,1.185,58,1.93,60,2.471,61,0.532,63,0.888,64,0.359,65,0.848,67,0.473,68,0.36,75,0.473,76,0.936,80,0.468,82,1.132,83,0.444,84,1.819,87,1.781,88,0.848,89,0.235,97,0.89,98,1.064,105,0.533,115,0.148,156,0.565,157,1.081,173,1.482,212,1.93,234,2.689,305,2.994,422,4.309,590,3.584,591,1.736,596,2.224,609,1.658,698,3.171,699,3.285,713,2.824,716,2.488,717,3.599,718,2.824,719,2.824]],["title/directives/ThemeInputDirective.html",[115,0.094,174,0.9]],["body/directives/ThemeInputDirective.html",[3,0.197,4,0.197,5,0.172,16,0.248,17,0.708,21,0.628,22,0.341,23,0.017,24,0.197,25,0.011,26,0.013,27,0.011,37,0.602,39,0.671,40,0.952,46,0.704,48,1.24,52,0.708,53,1.472,58,2.01,60,2.512,61,0.521,63,0.947,64,0.374,65,0.904,75,0.504,76,0.974,80,0.482,83,0.473,84,1.94,87,1.834,88,0.904,89,0.245,97,0.927,98,1.135,105,0.569,115,0.154,156,0.602,157,1.125,174,1.476,422,4.27,590,3.552,591,1.851,596,2.951,609,1.767,713,3.011,716,2.653,717,3.748,718,3.011,719,3.011,1286,4.969]],["title/injectables/ThemeService.html",[60,1.282,250,2.285]],["body/injectables/ThemeService.html",[3,0.172,4,0.172,5,0.15,7,3.217,16,0.216,17,0.649,21,0.756,22,0.312,23,0.017,24,0.172,25,0.009,26,0.012,27,0.009,28,0.575,30,1.544,46,0.679,48,1.576,52,0.649,60,1.926,61,0.488,63,0.826,64,0.262,65,0.789,67,0.705,68,0.335,75,0.575,80,0.31,83,0.413,87,2.153,89,0.172,97,0.849,105,0.496,135,1.613,222,4.641,250,3.435,251,3.347,253,4.378,254,4.89,265,3.995,283,3.689,317,1.685,343,2.322,350,5.194,367,3.739,368,3.347,373,3.739,438,4.89,468,4.89,484,4.89,487,4.378,966,4.89,1176,4.378,1287,3.739,1288,5.668,1289,5.668,1290,5.668,1291,7.369,1292,6.316,1293,6.699,1294,5.668,1295,4.334,1296,4.334,1297,4.334,1298,5.668,1299,4.334]],["title/components/ToggleSwitchComponent.html",[28,0.383,153,0.983]],["body/components/ToggleSwitchComponent.html",[1,0.888,3,0.141,4,0.141,5,0.172,16,0.177,17,0.568,18,0.679,20,1.157,21,0.361,22,0.196,23,0.017,24,0.141,25,0.008,26,0.011,27,0.008,28,0.58,29,0.928,30,1.351,31,1.106,32,1.106,33,1.106,37,0.601,38,0.888,39,0.481,40,1.071,41,2.305,42,2.409,44,1.542,46,0.681,51,1.941,52,0.568,53,1.29,61,0.442,64,0.346,67,0.361,68,0.442,71,1.542,75,0.503,76,0.782,80,0.409,82,0.679,83,0.339,87,0.97,88,0.648,89,0.141,97,0.743,98,0.813,105,0.407,112,0.928,113,1.542,114,1.412,115,0.089,116,1.921,117,1.106,118,1.106,119,0.928,120,1.106,121,0.928,122,1.921,123,0.928,124,1.106,125,0.928,126,1.106,127,0.928,128,1.106,129,1.775,130,0.928,131,1.106,132,0.928,133,1.542,134,0.928,135,1.013,136,0.928,137,1.106,138,0.928,139,1.059,140,0.928,141,1.106,142,0.928,143,0.928,144,1.476,145,0.928,146,1.013,147,0.928,148,1.059,149,0.928,150,1.106,151,0.928,152,1.106,153,1.754,154,2.177,155,2.02,156,0.431,157,0.648,158,2.364,159,0.888,160,0.85,161,0.71,162,0.888,163,0.888,164,0.888,165,1.475,166,0.888,167,0.85,168,0.888,169,0.888,170,0.888,171,0.888,172,0.85,173,0.888,174,0.85,175,1.106,317,1.476,409,2.033,420,1.21,427,1.848,428,1.326,547,2.501,548,2.879,549,2.501,550,2.501,561,1.532,562,2.157,563,3.007,566,2.509,901,4.772,1300,5.331,1301,3.071,1302,4.962,1303,3.56,1304,3.56,1305,3.56]],["title/coverage.html",[1306,4.455]],["body/coverage.html",[0,2.538,1,0.799,5,0.111,6,2.764,10,1.818,14,1.941,18,1.277,20,1.752,22,0.177,23,0.017,25,0.007,26,0.01,27,0.007,28,0.768,29,0.835,34,2.764,35,2.474,36,2.764,38,0.799,60,1.089,64,0.279,68,0.577,86,2.301,87,1.605,89,0.258,115,0.188,119,0.835,121,0.835,123,0.835,125,0.835,127,0.835,130,0.835,132,0.835,134,0.835,136,0.835,138,0.835,140,0.835,142,0.835,143,0.835,145,0.835,146,0.912,147,0.835,149,0.835,151,0.835,153,0.835,157,0.583,159,0.799,160,0.765,161,0.639,162,0.799,163,0.799,164,0.799,165,0.765,166,0.799,167,0.765,168,0.799,169,0.799,170,0.799,171,0.799,172,0.765,173,0.799,174,0.765,176,2.764,222,2.085,242,1.089,250,2.791,252,2.764,288,2.258,387,2.764,388,2.764,420,2.21,421,2.474,422,2.791,424,2.258,426,2.258,427,2.7,428,2.422,429,2.474,431,2.474,433,2.764,531,2.764,546,2.764,570,2.764,571,3.8,585,2.085,590,3.455,591,2.745,610,1.818,611,3.837,612,3.557,613,2.258,626,1.818,639,1.71,664,3.557,665,2.764,669,3.331,670,2.764,720,2.258,721,2.474,809,3.557,845,2.764,846,2.474,847,2.764,878,5.143,881,2.764,899,2.474,901,2.474,904,3.246,909,2.474,917,2.764,931,2.764,932,3.8,941,2.764,944,2.764,961,2.764,1004,2.764,1008,2.764,1040,2.764,1058,2.764,1059,2.764,1063,2.764,1064,2.764,1077,2.764,1164,2.997,1165,2.764,1177,2.085,1261,2.764,1285,2.764,1287,2.764,1300,2.764,1301,2.764,1306,2.764,1307,2.764,1308,3.204,1309,3.204,1310,4.605,1311,3.204,1312,6.699,1313,5.895,1314,6.855,1315,6.502,1316,4.605,1317,4.605,1318,4.605,1319,6.699,1320,3.204,1321,3.204,1322,5.392,1323,5.895,1324,3.204,1325,4.605,1326,2.764,1327,3.204,1328,3.204,1329,3.204,1330,3.204,1331,3.204,1332,3.204,1333,3.204,1334,3.973,1335,4.605,1336,2.764,1337,2.764,1338,3.204]],["title/dependencies.html",[406,2.751,1339,2.709]],["body/dependencies.html",[23,0.017,25,0.013,26,0.015,27,0.013,83,0.577,406,4.22,419,4.678,1340,6.057,1341,6.057,1342,6.057,1343,6.007]],["title/miscellaneous/enumerations.html",[1344,2.213,1345,3.917]],["body/miscellaneous/enumerations.html",[16,0.298,23,0.017,25,0.013,26,0.015,27,0.013,68,0.563,721,4.61,723,5.956,770,5.149,771,5.149,772,5.149,1344,4.207,1345,5.149,1346,5.968]],["title/index.html",[16,0.157,1347,3.14,1348,3.14]],["body/index.html",[23,0.014,25,0.011,26,0.014,27,0.011,28,0.526,41,2.127,114,1.476,268,4.474,275,4.005,300,4.474,511,4.474,862,4.474,1196,4.474,1307,5.921,1339,4.474,1343,4.474,1349,6.35,1350,7.153,1351,5.186,1352,7.467,1353,6.35,1354,5.186,1355,5.186,1356,5.186,1357,5.186,1358,6.864,1359,5.186,1360,6.864,1361,7.153,1362,5.186,1363,5.186,1364,5.186,1365,5.186,1366,5.186,1367,5.186,1368,5.186,1369,5.186,1370,7.153,1371,6.35,1372,5.186,1373,5.186,1374,6.35,1375,6.35,1376,5.186,1377,6.35,1378,6.35,1379,6.35,1380,5.186,1381,6.35,1382,5.186,1383,5.186,1384,5.186,1385,5.186,1386,5.186,1387,5.186,1388,5.186,1389,5.186,1390,5.186,1391,5.186,1392,5.186,1393,5.186,1394,5.186,1395,5.186]],["title/modules.html",[405,3.129]],["body/modules.html",[23,0.015,25,0.013,26,0.015,27,0.013,404,3.64,405,3.64,892,3.909,1020,4.233,1029,6.301,1396,7.303,1397,7.303,1398,7.303]],["title/overview.html",[1399,4.455]],["body/overview.html",[2,1.71,23,0.017,25,0.007,26,0.01,27,0.007,29,1.714,30,0.821,38,1.64,97,0.452,112,0.786,119,1.714,121,1.714,123,1.714,125,1.714,127,1.714,130,1.714,132,1.714,134,1.714,136,1.714,138,1.714,140,1.714,142,1.714,143,1.714,145,1.714,147,1.714,149,1.714,151,1.714,153,1.714,156,0.365,157,1.196,159,1.64,160,1.57,161,1.312,162,1.64,163,1.64,164,1.64,165,1.57,166,1.64,167,1.243,168,1.299,169,1.64,170,1.64,171,1.64,172,1.243,173,1.64,174,1.641,251,2.328,287,1.962,302,2.6,365,2.6,403,1.71,404,4.806,405,1.826,406,1.826,407,2.124,408,2.124,409,1.234,410,2.124,411,2.6,412,2.6,413,2.6,414,3.105,415,2.124,892,5.152,893,2.6,894,2.6,896,2.6,1020,5.413,1021,2.6,1023,2.6,1024,2.6,1326,2.6,1399,2.6,1400,3.014,1401,3.014,1402,3.014]],["title/miscellaneous/variables.html",[1344,2.213,1403,3.917]],["body/miscellaneous/variables.html",[16,0.297,22,0.38,23,0.016,25,0.013,26,0.015,27,0.013,67,0.604,68,0.46,71,1.851,1334,5.138,1336,5.949,1337,5.949,1344,4.198,1403,5.138,1404,6.896,1405,5.956,1406,5.956,1407,5.956]],["title/routes.html",[1408,4.455]],["body/routes.html",[23,0.015,25,0.013,26,0.015,27,0.013,1408,5.351]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["0",{"_index":878,"title":{},"body":{"components/FileInputComponent.html":{},"classes/Queue.html":{},"components/SliderComponent.html":{},"classes/Table.html":{},"coverage.html":{}}}],["0/1",{"_index":1322,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1310,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1316,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1321,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1317,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1311,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1318,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1313,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1314,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1312,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1315,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1323,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1329,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":364,"title":{},"body":{"injectables/AlertService.html":{},"classes/Csv.html":{},"components/FileInputComponent.html":{},"components/SliderComponent.html":{}}}],["1/15",{"_index":1327,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1090,"title":{},"body":{"components/SliderComponent.html":{}}}],["100",{"_index":1319,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":216,"title":{},"body":{"components/AlertComponent.html":{}}}],["12.0.1",{"_index":1343,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["13/13",{"_index":1333,"title":{},"body":{"coverage.html":{}}}],["14/14",{"_index":1320,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":1401,"title":{},"body":{"overview.html":{}}}],["19",{"_index":1400,"title":{},"body":{"overview.html":{}}}],["2",{"_index":365,"title":{},"body":{"injectables/AlertService.html":{},"overview.html":{}}}],["2.1.0",{"_index":1341,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1324,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1331,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":197,"title":{},"body":{"components/AlertComponent.html":{}}}],["2x2",{"_index":922,"title":{},"body":{"components/GridComponent.html":{}}}],["3",{"_index":302,"title":{},"body":{"injectables/AlertService.html":{},"overview.html":{}}}],["300",{"_index":214,"title":{},"body":{"components/AlertComponent.html":{}}}],["4",{"_index":366,"title":{},"body":{"injectables/AlertService.html":{}}}],["4/4",{"_index":1325,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1402,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":1328,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1326,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["66",{"_index":1330,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1332,"title":{},"body":{"coverage.html":{}}}],["__data",{"_index":1273,"title":{},"body":{"components/TableComponent.html":{}}}],["__input",{"_index":957,"title":{},"body":{"components/InputComponent.html":{}}}],["__placeholder",{"_index":958,"title":{},"body":{"components/InputComponent.html":{}}}],["_disabled",{"_index":460,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{},"directives/StateManagerDirective.html":{}}}],["_extraclasses",{"_index":592,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["_focused",{"_index":1123,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["_options",{"_index":1065,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["_pristine",{"_index":1124,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["_step",{"_index":1080,"title":{},"body":{"components/SliderComponent.html":{}}}],["_theme",{"_index":1292,"title":{},"body":{"injectables/ThemeService.html":{}}}],["_touched",{"_index":1125,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["access",{"_index":487,"title":{},"body":{"components/ButtonComponent.html":{},"classes/Table.html":{},"injectables/ThemeService.html":{}}}],["accessed",{"_index":1173,"title":{},"body":{"classes/Table.html":{}}}],["accessor",{"_index":427,"title":{},"body":{"modules/BaseModule.html":{},"components/CheckboxComponent.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["accessor.base.directive",{"_index":425,"title":{},"body":{"modules/BaseModule.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["accessor.base.directive.ts",{"_index":670,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{},"coverage.html":{}}}],["accessor.base.directive.ts:10",{"_index":686,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["accessor.base.directive.ts:13",{"_index":690,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["accessor.base.directive.ts:14",{"_index":688,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["accessor.base.directive.ts:15",{"_index":683,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["accessor.base.directive.ts:16",{"_index":685,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["accessor.base.directive.ts:20",{"_index":680,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["accessor.base.directive.ts:28",{"_index":681,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["accessor/control",{"_index":424,"title":{},"body":{"modules/BaseModule.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"coverage.html":{}}}],["accessor/event",{"_index":431,"title":{},"body":{"modules/BaseModule.html":{},"directives/EventManagerDirective.html":{},"coverage.html":{}}}],["accessor/state",{"_index":429,"title":{},"body":{"modules/BaseModule.html":{},"directives/StateManagerDirective.html":{},"coverage.html":{}}}],["accessors",{"_index":191,"title":{},"body":{"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"directives/ClassNameInputDirective.html":{},"classes/ColumnInformation.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"classes/Queue.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{}}}],["according",{"_index":470,"title":{},"body":{"components/ButtonComponent.html":{}}}],["active",{"_index":248,"title":{},"body":{"components/AlertComponent.html":{}}}],["acts",{"_index":434,"title":{},"body":{"components/ButtonComponent.html":{}}}],["actual",{"_index":978,"title":{},"body":{"classes/Queue.html":{}}}],["actual_component",{"_index":175,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["add",{"_index":275,"title":{},"body":{"injectables/AlertService.html":{},"classes/Queue.html":{},"index.html":{}}}],["added",{"_index":493,"title":{},"body":{"components/ButtonComponent.html":{}}}],["adding",{"_index":483,"title":{},"body":{"components/ButtonComponent.html":{}}}],["additional",{"_index":1211,"title":{},"body":{"classes/Table.html":{}}}],["adds",{"_index":331,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{}}}],["again",{"_index":303,"title":{},"body":{"injectables/AlertService.html":{}}}],["alert",{"_index":1,"title":{"interfaces/Alert.html":{}},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["alert'},{'name",{"_index":120,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["alert(alert",{"_index":199,"title":{},"body":{"components/AlertComponent.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["alert(message",{"_index":310,"title":{},"body":{"injectables/AlertService.html":{}}}],["alert.color",{"_index":235,"title":{},"body":{"components/AlertComponent.html":{}}}],["alert.component.html",{"_index":178,"title":{},"body":{"components/AlertComponent.html":{}}}],["alert.size",{"_index":233,"title":{},"body":{"components/AlertComponent.html":{}}}],["alert]{@link",{"_index":361,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["alertboxcomponent",{"_index":29,"title":{"components/AlertBoxComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alertcomponent",{"_index":119,"title":{"components/AlertComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alertobject",{"_index":179,"title":{},"body":{"components/AlertComponent.html":{}}}],["alertqueue",{"_index":277,"title":{},"body":{"injectables/AlertService.html":{}}}],["alertqueue]{@link",{"_index":362,"title":{},"body":{"injectables/AlertService.html":{}}}],["alerts",{"_index":12,"title":{},"body":{"interfaces/Alert.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["alerts]{@link",{"_index":369,"title":{},"body":{"injectables/AlertService.html":{}}}],["alertservice",{"_index":10,"title":{"injectables/AlertService.html":{}},"body":{"interfaces/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/FileInputComponent.html":{},"coverage.html":{}}}],["alertservicesubscriber",{"_index":14,"title":{"interfaces/AlertServiceSubscriber.html":{}},"body":{"interfaces/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"coverage.html":{}}}],["alignment",{"_index":614,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{}}}],["allows",{"_index":1288,"title":{},"body":{"injectables/ThemeService.html":{}}}],["angular",{"_index":1352,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":419,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"dependencies.html":{}}}],["angular/core",{"_index":83,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":561,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"components/FileInputComponent.html":{},"modules/FormModule.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["angular/platform",{"_index":1028,"title":{},"body":{"modules/SbElementModule.html":{}}}],["anything",{"_index":397,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["appears",{"_index":184,"title":{},"body":{"components/AlertComponent.html":{}}}],["appeartime",{"_index":180,"title":{},"body":{"components/AlertComponent.html":{}}}],["appends",{"_index":990,"title":{},"body":{"classes/Queue.html":{}}}],["application",{"_index":1391,"title":{},"body":{"index.html":{}}}],["around",{"_index":1356,"title":{},"body":{"index.html":{}}}],["array",{"_index":76,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{}}}],["array,index",{"_index":747,"title":{},"body":{"classes/Csv.html":{}}}],["array.isarray(entry[1",{"_index":1252,"title":{},"body":{"classes/Table.html":{}}}],["array.isarray(extraclasses",{"_index":600,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["array.isarray(snap",{"_index":1114,"title":{},"body":{"components/SliderComponent.html":{}}}],["arrays",{"_index":1225,"title":{},"body":{"classes/Table.html":{}}}],["async",{"_index":183,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"classes/Csv.html":{},"classes/Table.html":{}}}],["attribute",{"_index":81,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["attribute('flipped",{"_index":90,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["attribute('hover",{"_index":540,"title":{},"body":{"components/CardComponent.html":{}}}],["attribute('pill",{"_index":91,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["attribute('plain",{"_index":92,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["attribute('round",{"_index":522,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{}}}],["attribute('shadow",{"_index":541,"title":{},"body":{"components/CardComponent.html":{}}}],["attributes",{"_index":437,"title":{},"body":{"components/ButtonComponent.html":{}}}],["automatic",{"_index":1362,"title":{},"body":{"index.html":{}}}],["available",{"_index":1384,"title":{},"body":{"index.html":{}}}],["await",{"_index":237,"title":{},"body":{"components/AlertComponent.html":{},"classes/Csv.html":{}}}],["base/base.module",{"_index":912,"title":{},"body":{"modules/FormModule.html":{}}}],["base/control",{"_index":562,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["base/selected",{"_index":586,"title":{},"body":{"components/CheckboxGroupComponent.html":{}}}],["base/selection",{"_index":587,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["base/style",{"_index":85,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ContainerComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/TableComponent.html":{}}}],["based",{"_index":481,"title":{},"body":{"components/ButtonComponent.html":{}}}],["basemodule",{"_index":404,"title":{"modules/BaseModule.html":{}},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"modules.html":{},"overview.html":{}}}],["basic",{"_index":455,"title":{},"body":{"components/ButtonComponent.html":{},"classes/Queue.html":{}}}],["blur",{"_index":817,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["boolean",{"_index":66,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{}}}],["bootstrap",{"_index":408,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"overview.html":{}}}],["border",{"_index":1278,"title":{},"body":{"components/TableComponent.html":{}}}],["box",{"_index":43,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box'},{'name",{"_index":118,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["box.component",{"_index":1034,"title":{},"body":{"modules/SbElementModule.html":{}}}],["box.component.html",{"_index":45,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box.component.ts",{"_index":36,"title":{},"body":{"components/AlertBoxComponent.html":{},"coverage.html":{}}}],["box.component.ts:11",{"_index":79,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box.component.ts:14",{"_index":72,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box.component.ts:17",{"_index":73,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box.component.ts:20",{"_index":70,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box.component.ts:22",{"_index":77,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box.component.ts:23",{"_index":78,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box.component.ts:24",{"_index":62,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box.component.ts:38",{"_index":74,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["box/alert",{"_index":35,"title":{},"body":{"components/AlertBoxComponent.html":{},"modules/SbElementModule.html":{},"coverage.html":{}}}],["browse",{"_index":1398,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1029,"title":{},"body":{"modules/SbElementModule.html":{},"modules.html":{}}}],["browsermodule",{"_index":1027,"title":{},"body":{"modules/SbElementModule.html":{}}}],["btn",{"_index":495,"title":{},"body":{"components/ButtonComponent.html":{}}}],["busy",{"_index":338,"title":{},"body":{"injectables/AlertService.html":{}}}],["button",{"_index":146,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["button'},{'name",{"_index":122,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["button.component",{"_index":900,"title":{},"body":{"modules/FormModule.html":{}}}],["button.component.html",{"_index":459,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{}}}],["button.component.ts",{"_index":932,"title":{},"body":{"components/IconButtonComponent.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:11",{"_index":938,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:12",{"_index":937,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:13",{"_index":939,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:14",{"_index":936,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:17",{"_index":935,"title":{},"body":{"components/IconButtonComponent.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{}}}],["button.component.ts:18",{"_index":1049,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["button.component.ts:19",{"_index":1005,"title":{},"body":{"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{}}}],["button.component.ts:20",{"_index":940,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:22",{"_index":934,"title":{},"body":{"components/IconButtonComponent.html":{}}}],["button.component.ts:26",{"_index":1006,"title":{},"body":{"components/RadioButtonComponent.html":{}}}],["button.component.ts:30",{"_index":1007,"title":{},"body":{"components/RadioButtonComponent.html":{}}}],["button.component.ts:32",{"_index":1047,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["button.component.ts:36",{"_index":1046,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["button.component.ts:44",{"_index":1048,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["button.component.ts:52",{"_index":1043,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["button.component.ts:58",{"_index":1044,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["button/button.component",{"_index":898,"title":{},"body":{"modules/FormModule.html":{}}}],["button/icon",{"_index":899,"title":{},"body":{"modules/FormModule.html":{},"components/IconButtonComponent.html":{},"coverage.html":{}}}],["button/radio",{"_index":904,"title":{},"body":{"modules/FormModule.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"coverage.html":{}}}],["button/select",{"_index":909,"title":{},"body":{"modules/FormModule.html":{},"components/SelectButtonComponent.html":{},"coverage.html":{}}}],["button__button",{"_index":1053,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["buttoncomponent",{"_index":121,"title":{"components/ButtonComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bytes",{"_index":870,"title":{},"body":{"components/FileInputComponent.html":{}}}],["call",{"_index":258,"title":{},"body":{"injectables/AlertService.html":{}}}],["called",{"_index":315,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["calles",{"_index":400,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["calling",{"_index":347,"title":{},"body":{"injectables/AlertService.html":{}}}],["calls",{"_index":394,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["card",{"_index":532,"title":{},"body":{"components/CardComponent.html":{}}}],["card'},{'name",{"_index":124,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["card.component.html",{"_index":533,"title":{},"body":{"components/CardComponent.html":{}}}],["cardcomponent",{"_index":123,"title":{"components/CardComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["care",{"_index":1368,"title":{},"body":{"index.html":{}}}],["center",{"_index":104,"title":{},"body":{"components/AlertBoxComponent.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["change",{"_index":818,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["changing",{"_index":440,"title":{},"body":{"components/ButtonComponent.html":{}}}],["character",{"_index":1201,"title":{},"body":{"classes/Table.html":{}}}],["check",{"_index":552,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["check(newoption",{"_index":1011,"title":{},"body":{"components/RadioButtonGroupComponent.html":{}}}],["checkbox",{"_index":128,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["checkbox'},{'name",{"_index":126,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["checkbox.component.html",{"_index":551,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox/checkbox.component",{"_index":903,"title":{},"body":{"modules/FormModule.html":{}}}],["checkboxcomponent",{"_index":125,"title":{"components/CheckboxComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["checkboxgroupcomponent",{"_index":127,"title":{"components/CheckboxGroupComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["checked",{"_index":567,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadioButtonComponent.html":{}}}],["checkfilesize",{"_index":850,"title":{},"body":{"components/FileInputComponent.html":{}}}],["checkfilesize(file",{"_index":856,"title":{},"body":{"components/FileInputComponent.html":{}}}],["checkout",{"_index":1387,"title":{},"body":{"index.html":{}}}],["checks",{"_index":297,"title":{},"body":{"injectables/AlertService.html":{},"classes/Queue.html":{}}}],["choose",{"_index":863,"title":{},"body":{"components/FileInputComponent.html":{}}}],["class",{"_index":89,"title":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"classes/Csv.html":{},"classes/Queue.html":{},"classes/Table.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["classes",{"_index":97,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"overview.html":{}}}],["classes.push(!this.showarrow",{"_index":102,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["classes.push('is",{"_index":1277,"title":{},"body":{"components/TableComponent.html":{}}}],["classes.push('sb",{"_index":1052,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["classes.push(classname",{"_index":607,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["classes.push(this.color",{"_index":608,"title":{},"body":{"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{}}}],["classes.push(this.dim",{"_index":927,"title":{},"body":{"components/GridComponent.html":{}}}],["classes.push(this.disabled",{"_index":702,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["classes.push(this.flipped",{"_index":99,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["classes.push(this.focused",{"_index":709,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["classes.push(this.gap",{"_index":929,"title":{},"body":{"components/GridComponent.html":{}}}],["classes.push(this.groupalign",{"_index":890,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["classes.push(this.hover",{"_index":544,"title":{},"body":{"components/CardComponent.html":{}}}],["classes.push(this.label",{"_index":564,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadioButtonComponent.html":{},"components/SliderComponent.html":{}}}],["classes.push(this.pill",{"_index":100,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["classes.push(this.plain",{"_index":101,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["classes.push(this.pristine",{"_index":703,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["classes.push(this.rootclass",{"_index":605,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"components/InputComponent.html":{}}}],["classes.push(this.round",{"_index":530,"title":{},"body":{"components/ButtonComponent.html":{}}}],["classes.push(this.shadow",{"_index":545,"title":{},"body":{"components/CardComponent.html":{}}}],["classes.push(this.show",{"_index":247,"title":{},"body":{"components/AlertComponent.html":{}}}],["classes.push(this.showoptions",{"_index":1054,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["classes.push(this.showvalue",{"_index":1122,"title":{},"body":{"components/SliderComponent.html":{}}}],["classes.push(this.size",{"_index":712,"title":{},"body":{"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{}}}],["classes.push(this.subrootclass",{"_index":1280,"title":{},"body":{"components/TableComponent.html":{}}}],["classes.push(this.theme",{"_index":719,"title":{},"body":{"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["classes.push(this.touched",{"_index":706,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["classes.push(this.value",{"_index":566,"title":{},"body":{"components/CheckboxComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["classname",{"_index":604,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["classnameinputdirective",{"_index":157,"title":{"directives/ClassNameInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cli",{"_index":1353,"title":{},"body":{"index.html":{}}}],["clickable",{"_index":491,"title":{},"body":{"components/ButtonComponent.html":{}}}],["clone",{"_index":615,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["clone.alignment",{"_index":645,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["clone.color",{"_index":644,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["clone.name",{"_index":642,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["closed",{"_index":1056,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["cluster_basemodule",{"_index":411,"title":{},"body":{"modules/BaseModule.html":{},"overview.html":{}}}],["cluster_basemodule_declarations",{"_index":413,"title":{},"body":{"modules/BaseModule.html":{},"overview.html":{}}}],["cluster_basemodule_exports",{"_index":412,"title":{},"body":{"modules/BaseModule.html":{},"overview.html":{}}}],["cluster_formmodule",{"_index":893,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_declarations",{"_index":896,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_exports",{"_index":894,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_imports",{"_index":895,"title":{},"body":{"modules/FormModule.html":{}}}],["cluster_sbelementmodule",{"_index":1021,"title":{},"body":{"modules/SbElementModule.html":{},"overview.html":{}}}],["cluster_sbelementmodule_declarations",{"_index":1023,"title":{},"body":{"modules/SbElementModule.html":{},"overview.html":{}}}],["cluster_sbelementmodule_exports",{"_index":1024,"title":{},"body":{"modules/SbElementModule.html":{},"overview.html":{}}}],["cluster_sbelementmodule_imports",{"_index":1022,"title":{},"body":{"modules/SbElementModule.html":{}}}],["collected",{"_index":292,"title":{},"body":{"injectables/AlertService.html":{}}}],["collector",{"_index":294,"title":{},"body":{"injectables/AlertService.html":{}}}],["colon",{"_index":771,"title":{},"body":{"classes/Csv.html":{},"miscellaneous/enumerations.html":{}}}],["color",{"_index":18,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["colorinputdirective",{"_index":159,"title":{"directives/ColorInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["colors",{"_index":267,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{}}}],["column",{"_index":640,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"classes/Table.html":{},"interfaces/TableInterface.html":{}}}],["column.length",{"_index":1257,"title":{},"body":{"classes/Table.html":{}}}],["column.name",{"_index":1283,"title":{},"body":{"components/TableComponent.html":{}}}],["column[i",{"_index":1259,"title":{},"body":{"classes/Table.html":{}}}],["columndata",{"_index":775,"title":{},"body":{"classes/Csv.html":{}}}],["columnentry",{"_index":1284,"title":{},"body":{"components/TableComponent.html":{}}}],["columnindex",{"_index":1271,"title":{},"body":{"components/TableComponent.html":{}}}],["columninformation",{"_index":610,"title":{"classes/ColumnInformation.html":{}},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"coverage.html":{}}}],["columninformation.alignment",{"_index":1282,"title":{},"body":{"components/TableComponent.html":{}}}],["columninformation.color",{"_index":1281,"title":{},"body":{"components/TableComponent.html":{}}}],["columninformation.defaults.set(info",{"_index":1248,"title":{},"body":{"classes/Table.html":{}}}],["columninformation.defaults.set({name",{"_index":1241,"title":{},"body":{"classes/Table.html":{}}}],["columninformation.map",{"_index":1247,"title":{},"body":{"classes/Table.html":{}}}],["columninformation.merge(info",{"_index":1243,"title":{},"body":{"classes/Table.html":{}}}],["columninformation.push(info",{"_index":1244,"title":{},"body":{"classes/Table.html":{}}}],["columninformation]{@link",{"_index":1232,"title":{},"body":{"classes/Table.html":{}}}],["columninformationdefaults",{"_index":613,"title":{"classes/ColumnInformationDefaults.html":{}},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"coverage.html":{}}}],["columninformationdefaults:4",{"_index":623,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["columninformationdefaults:5",{"_index":622,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["columninformationdefaults:6",{"_index":621,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["columninformationinterface",{"_index":639,"title":{"interfaces/ColumnInformationInterface.html":{}},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"classes/Table.html":{},"interfaces/TableInterface.html":{},"coverage.html":{}}}],["columninformationoptions",{"_index":1204,"title":{},"body":{"classes/Table.html":{}}}],["columninformationoptions[index",{"_index":1242,"title":{},"body":{"classes/Table.html":{}}}],["columninformationoptionsinterface",{"_index":626,"title":{"interfaces/ColumnInformationOptionsInterface.html":{}},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"classes/Table.html":{},"coverage.html":{}}}],["columnname",{"_index":745,"title":{},"body":{"classes/Csv.html":{},"classes/Table.html":{}}}],["columns",{"_index":1169,"title":{},"body":{"classes/Table.html":{},"interfaces/TableInterface.html":{}}}],["columns.foreach(column",{"_index":1256,"title":{},"body":{"classes/Table.html":{}}}],["columns.push(entry[1",{"_index":1253,"title":{},"body":{"classes/Table.html":{}}}],["columnstorows",{"_index":1178,"title":{},"body":{"classes/Table.html":{}}}],["columnstorows(columns",{"_index":1193,"title":{},"body":{"classes/Table.html":{}}}],["combine",{"_index":446,"title":{},"body":{"components/ButtonComponent.html":{}}}],["comma",{"_index":770,"title":{},"body":{"classes/Csv.html":{},"miscellaneous/enumerations.html":{}}}],["commit",{"_index":1293,"title":{},"body":{"injectables/ThemeService.html":{}}}],["commit(theme",{"_index":1294,"title":{},"body":{"injectables/ThemeService.html":{}}}],["commonmodule",{"_index":418,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{}}}],["component",{"_index":28,"title":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":117,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["components",{"_index":30,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"overview.html":{}}}],["components/alert",{"_index":1033,"title":{},"body":{"modules/SbElementModule.html":{}}}],["components/alert/alert.component",{"_index":1036,"title":{},"body":{"modules/SbElementModule.html":{}}}],["components/base/base.module",{"_index":1030,"title":{},"body":{"modules/SbElementModule.html":{}}}],["components/base/control",{"_index":1073,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["components/base/style",{"_index":1039,"title":{},"body":{"modules/SbElementModule.html":{}}}],["components/card/card.component",{"_index":1037,"title":{},"body":{"modules/SbElementModule.html":{}}}],["components/container/container.component",{"_index":1032,"title":{},"body":{"modules/SbElementModule.html":{}}}],["components/form/form.module",{"_index":1031,"title":{},"body":{"modules/SbElementModule.html":{}}}],["components/grid/grid.component",{"_index":1038,"title":{},"body":{"modules/SbElementModule.html":{}}}],["components/table/table.component",{"_index":1035,"title":{},"body":{"modules/SbElementModule.html":{}}}],["consists",{"_index":1168,"title":{},"body":{"classes/Table.html":{}}}],["constructed",{"_index":1355,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":58,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"classes/Table.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["constructor(alertservice",{"_index":192,"title":{},"body":{"components/AlertComponent.html":{},"components/FileInputComponent.html":{}}}],["constructor(data",{"_index":1183,"title":{},"body":{"classes/Table.html":{}}}],["constructor(flipped",{"_index":59,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["constructor(header",{"_index":735,"title":{},"body":{"classes/Csv.html":{}}}],["constructor(hover",{"_index":535,"title":{},"body":{"components/CardComponent.html":{}}}],["constructor(pill",{"_index":933,"title":{},"body":{"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["constructor(round",{"_index":466,"title":{},"body":{"components/ButtonComponent.html":{}}}],["constructor(themeservice",{"_index":713,"title":{},"body":{"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["contain",{"_index":1224,"title":{},"body":{"classes/Table.html":{}}}],["container",{"_index":666,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container'},{'name",{"_index":131,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["container.component.html",{"_index":667,"title":{},"body":{"components/ContainerComponent.html":{}}}],["containercomponent",{"_index":130,"title":{"components/ContainerComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contains",{"_index":1192,"title":{},"body":{"classes/Table.html":{},"interfaces/TableInterface.html":{}}}],["content",{"_index":782,"title":{},"body":{"classes/Csv.html":{}}}],["context",{"_index":1336,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":423,"title":{},"body":{"modules/BaseModule.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{}}}],["controlvalueaccessor",{"_index":671,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["controlvalueaccessorbasedirective",{"_index":160,"title":{"directives/ControlValueAccessorBaseDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["controlvalueaccessorclassnameinputdirective",{"_index":161,"title":{"directives/ControlValueAccessorClassNameInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["controlvalueaccessorcolorinputdirective",{"_index":162,"title":{"directives/ControlValueAccessorColorInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["controlvalueaccessorsizecolorinputdirective",{"_index":163,"title":{"directives/ControlValueAccessorSizeColorInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["controlvalueaccessorsizeinputdirective",{"_index":164,"title":{"directives/ControlValueAccessorSizeInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["controlvalueaccessorsizethemecolorinputdirective",{"_index":165,"title":{"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["controlvalueaccessorthemecolorinputdirective",{"_index":166,"title":{"directives/ControlValueAccessorThemeColorInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["correspronding",{"_index":1217,"title":{},"body":{"classes/Table.html":{}}}],["coverage",{"_index":1306,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":11,"title":{},"body":{"interfaces/Alert.html":{},"injectables/AlertService.html":{},"classes/Table.html":{}}}],["created",{"_index":276,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["creates",{"_index":312,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"classes/Table.html":{}}}],["csv",{"_index":720,"title":{"classes/Csv.html":{}},"body":{"classes/Csv.html":{},"classes/Table.html":{},"coverage.html":{}}}],["csv#parsefile",{"_index":1237,"title":{},"body":{"classes/Table.html":{}}}],["csv.foreachcolumnname((columnname",{"_index":1240,"title":{},"body":{"classes/Table.html":{}}}],["csv.parsefile(csvfile).then(csv",{"_index":1239,"title":{},"body":{"classes/Table.html":{}}}],["csv/csv",{"_index":1229,"title":{},"body":{"classes/Table.html":{}}}],["csvfile",{"_index":1210,"title":{},"body":{"classes/Table.html":{}}}],["current",{"_index":350,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"classes/Queue.html":{},"injectables/ThemeService.html":{}}}],["customicon",{"_index":55,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["customize",{"_index":273,"title":{},"body":{"injectables/AlertService.html":{}}}],["d",{"_index":316,"title":{},"body":{"injectables/AlertService.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{}}}],["data",{"_index":722,"title":{},"body":{"classes/Csv.html":{},"classes/Table.html":{},"interfaces/TableInterface.html":{}}}],["data]{@link",{"_index":1231,"title":{},"body":{"classes/Table.html":{}}}],["datastructure",{"_index":1166,"title":{},"body":{"classes/Table.html":{}}}],["decimalplaces",{"_index":1081,"title":{},"body":{"components/SliderComponent.html":{}}}],["declarations",{"_index":407,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"overview.html":{}}}],["default",{"_index":67,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultmessage",{"_index":849,"title":{},"body":{"components/FileInputComponent.html":{}}}],["defaults",{"_index":619,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["defaultvalue",{"_index":632,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["defined",{"_index":61,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["defines",{"_index":478,"title":{},"body":{"components/ButtonComponent.html":{}}}],["delimiter",{"_index":723,"title":{},"body":{"classes/Csv.html":{},"miscellaneous/enumerations.html":{}}}],["dependencies",{"_index":406,"title":{"dependencies.html":{}},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dequeue",{"_index":970,"title":{},"body":{"classes/Queue.html":{}}}],["dequeues",{"_index":981,"title":{},"body":{"classes/Queue.html":{}}}],["dequeuing",{"_index":964,"title":{},"body":{"classes/Queue.html":{}}}],["describes",{"_index":8,"title":{},"body":{"interfaces/Alert.html":{}}}],["description",{"_index":7,"title":{},"body":{"interfaces/Alert.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"classes/Queue.html":{},"classes/Table.html":{},"injectables/ThemeService.html":{}}}],["dev",{"_index":1379,"title":{},"body":{"index.html":{}}}],["different",{"_index":265,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"classes/Table.html":{},"injectables/ThemeService.html":{}}}],["dim",{"_index":920,"title":{},"body":{"components/GridComponent.html":{}}}],["directive",{"_index":115,"title":{"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/StateManagerDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["directives",{"_index":156,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{},"overview.html":{}}}],["directory",{"_index":1394,"title":{},"body":{"index.html":{}}}],["dirty",{"_index":705,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["disabled",{"_index":462,"title":{},"body":{"components/ButtonComponent.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"components/IconButtonComponent.html":{},"directives/StateManagerDirective.html":{}}}],["disabled(isdisabled",{"_index":518,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{},"directives/StateManagerDirective.html":{}}}],["disabled]{@link",{"_index":517,"title":{},"body":{"components/ButtonComponent.html":{}}}],["display",{"_index":255,"title":{},"body":{"injectables/AlertService.html":{}}}],["documentation",{"_index":1307,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":32,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["each",{"_index":1171,"title":{},"body":{"classes/Table.html":{},"interfaces/TableInterface.html":{}}}],["el",{"_index":42,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["element",{"_index":114,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"index.html":{}}}],["element.module.ts",{"_index":1026,"title":{},"body":{"modules/SbElementModule.html":{}}}],["elementand",{"_index":1366,"title":{},"body":{"index.html":{}}}],["elements",{"_index":966,"title":{},"body":{"classes/Queue.html":{},"injectables/ThemeService.html":{}}}],["emitblur",{"_index":812,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["emitchange",{"_index":678,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{},"directives/EventManagerDirective.html":{}}}],["emitchange(value",{"_index":824,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["emitfocus",{"_index":813,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["empty",{"_index":298,"title":{},"body":{"injectables/AlertService.html":{},"classes/Queue.html":{},"classes/Table.html":{}}}],["end_delimiter",{"_index":724,"title":{},"body":{"classes/Csv.html":{}}}],["enqueue",{"_index":975,"title":{},"body":{"classes/Queue.html":{}}}],["enqueue(value",{"_index":987,"title":{},"body":{"classes/Queue.html":{}}}],["enqueues",{"_index":989,"title":{},"body":{"classes/Queue.html":{}}}],["enqueuing",{"_index":965,"title":{},"body":{"classes/Queue.html":{}}}],["entries",{"_index":1198,"title":{},"body":{"classes/Table.html":{}}}],["entries.foreach((entry",{"_index":1251,"title":{},"body":{"classes/Table.html":{}}}],["entry",{"_index":1216,"title":{},"body":{"classes/Table.html":{}}}],["entry[0",{"_index":1254,"title":{},"body":{"classes/Table.html":{}}}],["enum",{"_index":769,"title":{},"body":{"classes/Csv.html":{}}}],["enumerations",{"_index":1345,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":972,"title":{},"body":{"classes/Queue.html":{}}}],["error('cannot",{"_index":510,"title":{},"body":{"components/ButtonComponent.html":{}}}],["event",{"_index":691,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["eventemitter",{"_index":819,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["eventmanagerdirective",{"_index":167,"title":{"directives/EventManagerDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["events",{"_index":834,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["everything",{"_index":274,"title":{},"body":{"injectables/AlertService.html":{}}}],["example",{"_index":454,"title":{},"body":{"components/ButtonComponent.html":{}}}],["export",{"_index":24,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["exports",{"_index":410,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"overview.html":{}}}],["extends",{"_index":37,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{}}}],["extraclasses",{"_index":593,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["extraclasses(extraclasses",{"_index":599,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["extraclasses.split",{"_index":602,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["extracts",{"_index":1219,"title":{},"body":{"classes/Table.html":{}}}],["false",{"_index":69,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{}}}],["field",{"_index":1175,"title":{},"body":{"classes/Table.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["file.name",{"_index":874,"title":{},"body":{"components/FileInputComponent.html":{}}}],["file.size",{"_index":879,"title":{},"body":{"components/FileInputComponent.html":{}}}],["file.text",{"_index":783,"title":{},"body":{"classes/Csv.html":{}}}],["file.type",{"_index":779,"title":{},"body":{"classes/Csv.html":{}}}],["fileinputcomponent",{"_index":132,"title":{"components/FileInputComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fileinputcomponent.defaultmessage",{"_index":865,"title":{},"body":{"components/FileInputComponent.html":{}}}],["filelist",{"_index":860,"title":{},"body":{"components/FileInputComponent.html":{}}}],["files",{"_index":862,"title":{},"body":{"components/FileInputComponent.html":{},"index.html":{}}}],["files.item(0",{"_index":871,"title":{},"body":{"components/FileInputComponent.html":{}}}],["filesystem",{"_index":1206,"title":{},"body":{"classes/Table.html":{}}}],["filled",{"_index":1199,"title":{},"body":{"classes/Table.html":{}}}],["filter(classname",{"_index":603,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["finished",{"_index":295,"title":{},"body":{"injectables/AlertService.html":{}}}],["finishing",{"_index":402,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["first",{"_index":982,"title":{},"body":{"classes/Queue.html":{}}}],["firstelement",{"_index":796,"title":{},"body":{"classes/Csv.html":{}}}],["firstelement.length",{"_index":800,"title":{},"body":{"classes/Csv.html":{}}}],["firstelement.slice(1",{"_index":799,"title":{},"body":{"classes/Csv.html":{}}}],["flag",{"_index":344,"title":{},"body":{"injectables/AlertService.html":{}}}],["flipped",{"_index":47,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["fn",{"_index":749,"title":{},"body":{"classes/Csv.html":{},"directives/EventManagerDirective.html":{}}}],["fn(columnname",{"_index":774,"title":{},"body":{"classes/Csv.html":{}}}],["focus",{"_index":710,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/EventManagerDirective.html":{}}}],["focused",{"_index":1129,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["focused(isfocused",{"_index":1160,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["follow",{"_index":1375,"title":{},"body":{"index.html":{}}}],["foreachcolumn",{"_index":727,"title":{},"body":{"classes/Csv.html":{}}}],["foreachcolumn(fn",{"_index":744,"title":{},"body":{"classes/Csv.html":{}}}],["foreachcolumnname",{"_index":728,"title":{},"body":{"classes/Csv.html":{}}}],["foreachcolumnname(fn",{"_index":751,"title":{},"body":{"classes/Csv.html":{}}}],["form",{"_index":135,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["formgroup",{"_index":488,"title":{},"body":{"components/ButtonComponent.html":{}}}],["formgroupcomponent",{"_index":134,"title":{"components/FormGroupComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formmodule",{"_index":892,"title":{"modules/FormModule.html":{}},"body":{"modules/FormModule.html":{},"modules/SbElementModule.html":{},"modules.html":{},"overview.html":{}}}],["formsmodule",{"_index":911,"title":{},"body":{"modules/FormModule.html":{},"modules/SbElementModule.html":{}}}],["free",{"_index":396,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["fromcsv",{"_index":1179,"title":{},"body":{"classes/Table.html":{}}}],["fromcsv(csvfile",{"_index":1203,"title":{},"body":{"classes/Table.html":{}}}],["fromjson",{"_index":1180,"title":{},"body":{"classes/Table.html":{}}}],["fromjson(table",{"_index":1212,"title":{},"body":{"classes/Table.html":{}}}],["fromrows",{"_index":1181,"title":{},"body":{"classes/Table.html":{}}}],["fromrows(rows",{"_index":1222,"title":{},"body":{"classes/Table.html":{}}}],["function",{"_index":750,"title":{},"body":{"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"classes/Table.html":{}}}],["gap",{"_index":921,"title":{},"body":{"components/GridComponent.html":{}}}],["garbage",{"_index":293,"title":{},"body":{"injectables/AlertService.html":{}}}],["generated",{"_index":1351,"title":{},"body":{"index.html":{}}}],["getbuttonclasses",{"_index":1042,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["getclasses",{"_index":53,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{}}}],["getclasses]{@link",{"_index":528,"title":{},"body":{"components/ButtonComponent.html":{}}}],["getcolumnclasses",{"_index":1264,"title":{},"body":{"components/TableComponent.html":{}}}],["getcolumnclasses(columnindex",{"_index":1269,"title":{},"body":{"components/TableComponent.html":{}}}],["getcolumndata",{"_index":729,"title":{},"body":{"classes/Csv.html":{}}}],["getcolumndata(index",{"_index":754,"title":{},"body":{"classes/Csv.html":{}}}],["getdefaults",{"_index":637,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["getdisabled",{"_index":501,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{},"directives/StateManagerDirective.html":{}}}],["getfocused",{"_index":1152,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["gethasgrouptitle",{"_index":887,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["getinputclasses",{"_index":945,"title":{},"body":{"components/InputComponent.html":{}}}],["getlength",{"_index":993,"title":{},"body":{"classes/Queue.html":{}}}],["getmaxcolumnlength",{"_index":1182,"title":{},"body":{"classes/Table.html":{}}}],["getmaxcolumnlength(columns",{"_index":1226,"title":{},"body":{"classes/Table.html":{}}}],["getmessage",{"_index":219,"title":{},"body":{"components/AlertComponent.html":{}}}],["getnumberpipingvalue",{"_index":1106,"title":{},"body":{"components/SliderComponent.html":{}}}],["getoptions",{"_index":1069,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["getplaceholderclasses",{"_index":946,"title":{},"body":{"components/InputComponent.html":{}}}],["getpristine",{"_index":1148,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["gets",{"_index":283,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"classes/Queue.html":{},"classes/Table.html":{},"injectables/ThemeService.html":{}}}],["getstep",{"_index":1102,"title":{},"body":{"components/SliderComponent.html":{}}}],["getting",{"_index":1347,"title":{"index.html":{}},"body":{}}],["gettouched",{"_index":1144,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["getvalue",{"_index":687,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["github",{"_index":1388,"title":{},"body":{"index.html":{}}}],["given",{"_index":395,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["global",{"_index":254,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ThemeService.html":{}}}],["go",{"_index":300,"title":{},"body":{"injectables/AlertService.html":{},"index.html":{}}}],["good",{"_index":1383,"title":{},"body":{"index.html":{}}}],["grid",{"_index":918,"title":{},"body":{"components/GridComponent.html":{}}}],["grid'},{'name",{"_index":137,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["grid.component.html",{"_index":919,"title":{},"body":{"components/GridComponent.html":{}}}],["gridcomponent",{"_index":136,"title":{"components/GridComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["group",{"_index":572,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"components/FormGroupComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["group'},{'name",{"_index":129,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["group.component",{"_index":906,"title":{},"body":{"modules/FormModule.html":{}}}],["group.component.html",{"_index":573,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"components/FormGroupComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["group.component.ts",{"_index":571,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"components/FormGroupComponent.html":{},"components/RadioButtonGroupComponent.html":{},"coverage.html":{}}}],["group.component.ts:10",{"_index":886,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["group.component.ts:13",{"_index":884,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["group.component.ts:14",{"_index":888,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["group.component.ts:16",{"_index":1015,"title":{},"body":{"components/RadioButtonGroupComponent.html":{}}}],["group.component.ts:17",{"_index":584,"title":{},"body":{"components/CheckboxGroupComponent.html":{}}}],["group.component.ts:19",{"_index":883,"title":{},"body":{"components/FormGroupComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["group.component.ts:20",{"_index":580,"title":{},"body":{"components/CheckboxGroupComponent.html":{}}}],["group.component.ts:21",{"_index":885,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["group.component.ts:22",{"_index":1009,"title":{},"body":{"components/RadioButtonGroupComponent.html":{}}}],["group.component.ts:23",{"_index":579,"title":{},"body":{"components/CheckboxGroupComponent.html":{}}}],["group.component.ts:25",{"_index":1010,"title":{},"body":{"components/RadioButtonGroupComponent.html":{}}}],["group.component.ts:26",{"_index":581,"title":{},"body":{"components/CheckboxGroupComponent.html":{}}}],["group.component.ts:27",{"_index":1012,"title":{},"body":{"components/RadioButtonGroupComponent.html":{}}}],["group.component.ts:28",{"_index":582,"title":{},"body":{"components/CheckboxGroupComponent.html":{}}}],["group.component.ts:32",{"_index":583,"title":{},"body":{"components/CheckboxGroupComponent.html":{}}}],["group.component.ts:34",{"_index":1014,"title":{},"body":{"components/RadioButtonGroupComponent.html":{}}}],["group/base/selection",{"_index":908,"title":{},"body":{"modules/FormModule.html":{},"components/SelectButtonComponent.html":{}}}],["group/checkbox/checkbox",{"_index":907,"title":{},"body":{"modules/FormModule.html":{}}}],["group/form",{"_index":914,"title":{},"body":{"modules/FormModule.html":{}}}],["group/radio",{"_index":905,"title":{},"body":{"modules/FormModule.html":{}}}],["groupalign",{"_index":576,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"components/FormGroupComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["grouptitle",{"_index":577,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"components/FormGroupComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["handles",{"_index":963,"title":{},"body":{"classes/Queue.html":{}}}],["hasgrouptitle",{"_index":882,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["header",{"_index":725,"title":{},"body":{"classes/Csv.html":{}}}],["here",{"_index":1382,"title":{},"body":{"index.html":{}}}],["hides",{"_index":185,"title":{},"body":{"components/AlertComponent.html":{}}}],["hidetime",{"_index":181,"title":{},"body":{"components/AlertComponent.html":{}}}],["holding",{"_index":1167,"title":{},"body":{"classes/Table.html":{}}}],["holds",{"_index":979,"title":{},"body":{"classes/Queue.html":{}}}],["hover",{"_index":452,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{}}}],["html",{"_index":113,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["icon",{"_index":139,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["icon'},{'name",{"_index":141,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["icon.component.html",{"_index":942,"title":{},"body":{"components/IconComponent.html":{}}}],["icon/icon.component",{"_index":913,"title":{},"body":{"modules/FormModule.html":{}}}],["iconbuttoncomponent",{"_index":138,"title":{"components/IconButtonComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["iconcomponent",{"_index":140,"title":{"components/IconComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["identifier",{"_index":1308,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":262,"title":{},"body":{"injectables/AlertService.html":{}}}],["implemented",{"_index":389,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["implementing",{"_index":1395,"title":{},"body":{"index.html":{}}}],["implements",{"_index":177,"title":{},"body":{"components/AlertComponent.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"classes/Table.html":{}}}],["import",{"_index":80,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["imports",{"_index":432,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{}}}],["inactive",{"_index":249,"title":{},"body":{"components/AlertComponent.html":{}}}],["include",{"_index":1380,"title":{},"body":{"index.html":{}}}],["included",{"_index":484,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/ThemeService.html":{}}}],["incoming",{"_index":264,"title":{},"body":{"injectables/AlertService.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":1060,"title":{},"body":{"interfaces/SelectedOptions.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["info.alignment",{"_index":657,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["info.color",{"_index":653,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["info.name",{"_index":649,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["inform",{"_index":263,"title":{},"body":{"injectables/AlertService.html":{}}}],["inform(message",{"_index":318,"title":{},"body":{"injectables/AlertService.html":{}}}],["information",{"_index":636,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"classes/Table.html":{},"interfaces/TableInterface.html":{}}}],["information.interface",{"_index":641,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"classes/Table.html":{},"interfaces/TableInterface.html":{}}}],["information.interface.ts",{"_index":664,"title":{},"body":{"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"coverage.html":{}}}],["information.ts",{"_index":612,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"coverage.html":{}}}],["information.ts:12",{"_index":638,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["information.ts:16",{"_index":624,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["information.ts:24",{"_index":635,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["information.ts:31",{"_index":628,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["information.ts:4",{"_index":663,"title":{},"body":{"classes/ColumnInformationDefaults.html":{}}}],["information.ts:47",{"_index":633,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["information.ts:5",{"_index":662,"title":{},"body":{"classes/ColumnInformationDefaults.html":{}}}],["information.ts:6",{"_index":661,"title":{},"body":{"classes/ColumnInformationDefaults.html":{}}}],["informs",{"_index":279,"title":{},"body":{"injectables/AlertService.html":{}}}],["inherited",{"_index":620,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["inidcate",{"_index":356,"title":{},"body":{"injectables/AlertService.html":{}}}],["initiated",{"_index":1186,"title":{},"body":{"classes/Table.html":{}}}],["initiates",{"_index":1185,"title":{},"body":{"classes/Table.html":{}}}],["initiation",{"_index":1189,"title":{},"body":{"classes/Table.html":{}}}],["injectable",{"_index":250,"title":{"injectables/AlertService.html":{},"injectables/ThemeService.html":{}},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["injectables",{"_index":251,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ThemeService.html":{},"overview.html":{}}}],["innerchange",{"_index":679,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["innervalue",{"_index":672,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["input",{"_index":82,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"components/ToggleSwitchComponent.html":{}}}],["input'},{'name",{"_index":133,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["input(files",{"_index":859,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component",{"_index":916,"title":{},"body":{"modules/FormModule.html":{}}}],["input.component.html",{"_index":848,"title":{},"body":{"components/FileInputComponent.html":{},"components/InputComponent.html":{}}}],["input.component.ts",{"_index":847,"title":{},"body":{"components/FileInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:18",{"_index":868,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:21",{"_index":855,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:25",{"_index":854,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:27",{"_index":867,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:28",{"_index":866,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:30",{"_index":864,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:31",{"_index":853,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:44",{"_index":861,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:57",{"_index":857,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:67",{"_index":858,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.directive",{"_index":88,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"modules/SbElementModule.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{}}}],["input.directive.ts",{"_index":591,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"coverage.html":{}}}],["input.directive.ts:10",{"_index":596,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["input.directive.ts:11",{"_index":700,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{}}}],["input.directive.ts:12",{"_index":594,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/SizeInputDirective.html":{}}}],["input.directive.ts:13",{"_index":698,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{}}}],["input.directive.ts:15",{"_index":711,"title":{},"body":{"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{}}}],["input.directive.ts:16",{"_index":714,"title":{},"body":{"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{}}}],["input.directive.ts:19",{"_index":1286,"title":{},"body":{"directives/ThemeInputDirective.html":{}}}],["input.directive.ts:21",{"_index":595,"title":{},"body":{"directives/ClassNameInputDirective.html":{}}}],["input.directive.ts:22",{"_index":699,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{}}}],["input.directive.ts:25",{"_index":715,"title":{},"body":{"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{}}}],["input.directive.ts:8",{"_index":597,"title":{},"body":{"directives/ClassNameInputDirective.html":{}}}],["input.directive.ts:9",{"_index":701,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["input/class",{"_index":426,"title":{},"body":{"modules/BaseModule.html":{},"directives/ClassNameInputDirective.html":{},"components/GridComponent.html":{},"coverage.html":{}}}],["input/color",{"_index":421,"title":{},"body":{"modules/BaseModule.html":{},"directives/ColorInputDirective.html":{},"coverage.html":{}}}],["input/control",{"_index":428,"title":{},"body":{"modules/BaseModule.html":{},"components/CheckboxComponent.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["input/file",{"_index":846,"title":{},"body":{"components/FileInputComponent.html":{},"modules/FormModule.html":{},"coverage.html":{}}}],["input/input.component",{"_index":915,"title":{},"body":{"modules/FormModule.html":{}}}],["input/size",{"_index":86,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ContainerComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"coverage.html":{}}}],["input/theme",{"_index":422,"title":{},"body":{"modules/BaseModule.html":{},"modules/SbElementModule.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"coverage.html":{}}}],["inputcomponent",{"_index":142,"title":{"components/InputComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inputs",{"_index":54,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{}}}],["inside",{"_index":282,"title":{},"body":{"injectables/AlertService.html":{}}}],["install",{"_index":1370,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1361,"title":{},"body":{"index.html":{}}}],["instead",{"_index":973,"title":{},"body":{"classes/Queue.html":{},"classes/Table.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Alert.html":{},"interfaces/AlertServiceSubscriber.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"interfaces/SelectedOptions.html":{},"interfaces/TableInterface.html":{}},"body":{"interfaces/Alert.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"interfaces/SelectedOptions.html":{},"interfaces/TableInterface.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Alert.html":{},"interfaces/AlertServiceSubscriber.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"interfaces/SelectedOptions.html":{},"interfaces/TableInterface.html":{},"overview.html":{}}}],["invert",{"_index":450,"title":{},"body":{"components/ButtonComponent.html":{}}}],["isbusy",{"_index":304,"title":{},"body":{"injectables/AlertService.html":{}}}],["isbusy]{@link",{"_index":377,"title":{},"body":{"injectables/AlertService.html":{}}}],["isdisabled",{"_index":489,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{},"directives/StateManagerDirective.html":{}}}],["isempty",{"_index":976,"title":{},"body":{"classes/Queue.html":{}}}],["isfocused",{"_index":1155,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["ispill",{"_index":463,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ispill(ispill",{"_index":514,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ispill]=\"{boolean",{"_index":444,"title":{},"body":{"components/ButtonComponent.html":{}}}],["isplain",{"_index":464,"title":{},"body":{"components/ButtonComponent.html":{}}}],["isplain(isplain",{"_index":516,"title":{},"body":{"components/ButtonComponent.html":{}}}],["isplain/plain",{"_index":449,"title":{},"body":{"components/ButtonComponent.html":{}}}],["isplain`/`plain",{"_index":504,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ispristine",{"_index":1150,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["isround",{"_index":465,"title":{},"body":{"components/ButtonComponent.html":{}}}],["isround(isround",{"_index":507,"title":{},"body":{"components/ButtonComponent.html":{}}}],["isround]=\"{boolean",{"_index":445,"title":{},"body":{"components/ButtonComponent.html":{}}}],["istouched",{"_index":1147,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["iterable",{"_index":1207,"title":{},"body":{"classes/Table.html":{}}}],["itself",{"_index":391,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["json",{"_index":1215,"title":{},"body":{"classes/Table.html":{}}}],["key",{"_index":1061,"title":{},"body":{"interfaces/SelectedOptions.html":{},"classes/Table.html":{}}}],["label",{"_index":553,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadioButtonComponent.html":{},"components/SliderComponent.html":{}}}],["labelposition",{"_index":554,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["lastelement",{"_index":801,"title":{},"body":{"classes/Csv.html":{}}}],["lastelement.length",{"_index":805,"title":{},"body":{"classes/Csv.html":{}}}],["lastelement.substring(0",{"_index":804,"title":{},"body":{"classes/Csv.html":{}}}],["left",{"_index":578,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"components/FormGroupComponent.html":{},"classes/Queue.html":{},"components/RadioButtonGroupComponent.html":{}}}],["legend",{"_index":112,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"overview.html":{}}}],["length",{"_index":968,"title":{},"body":{"classes/Queue.html":{},"classes/Table.html":{}}}],["lets",{"_index":272,"title":{},"body":{"injectables/AlertService.html":{}}}],["library",{"_index":1350,"title":{},"body":{"index.html":{}}}],["lifecycle",{"_index":281,"title":{},"body":{"injectables/AlertService.html":{}}}],["light",{"_index":1290,"title":{},"body":{"injectables/ThemeService.html":{}}}],["limit",{"_index":851,"title":{},"body":{"components/FileInputComponent.html":{}}}],["link",{"_index":360,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"classes/Table.html":{}}}],["literal",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["located",{"_index":1392,"title":{},"body":{"index.html":{}}}],["longer",{"_index":490,"title":{},"body":{"components/ButtonComponent.html":{}}}],["look",{"_index":1385,"title":{},"body":{"index.html":{}}}],["management",{"_index":969,"title":{},"body":{"classes/Queue.html":{}}}],["manager.directive",{"_index":430,"title":{},"body":{"modules/BaseModule.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/EventManagerDirective.html":{}}}],["manager.directive.ts",{"_index":809,"title":{},"body":{"directives/EventManagerDirective.html":{},"directives/StateManagerDirective.html":{},"coverage.html":{}}}],["manager.directive.ts:10",{"_index":831,"title":{},"body":{"directives/EventManagerDirective.html":{},"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:11",{"_index":1145,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:13",{"_index":821,"title":{},"body":{"directives/EventManagerDirective.html":{},"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:15",{"_index":1132,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:16",{"_index":820,"title":{},"body":{"directives/EventManagerDirective.html":{},"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:18",{"_index":1141,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:19",{"_index":822,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["manager.directive.ts:20",{"_index":1130,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:21",{"_index":1151,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:22",{"_index":823,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["manager.directive.ts:23",{"_index":1142,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:25",{"_index":1131,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:26",{"_index":1153,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:28",{"_index":1134,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:29",{"_index":826,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["manager.directive.ts:32",{"_index":1140,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:34",{"_index":825,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["manager.directive.ts:36",{"_index":1138,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:40",{"_index":1136,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:41",{"_index":828,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["manager.directive.ts:42",{"_index":830,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["manager.directive.ts:8",{"_index":1143,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["manager.directive.ts:9",{"_index":832,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["manual",{"_index":1374,"title":{},"body":{"index.html":{}}}],["maps",{"_index":1218,"title":{},"body":{"classes/Table.html":{}}}],["matching",{"_index":26,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["math.floor(step",{"_index":1110,"title":{},"body":{"components/SliderComponent.html":{}}}],["math.round((this.max",{"_index":1117,"title":{},"body":{"components/SliderComponent.html":{}}}],["max",{"_index":1083,"title":{},"body":{"components/SliderComponent.html":{},"classes/Table.html":{}}}],["maximum",{"_index":1228,"title":{},"body":{"classes/Table.html":{}}}],["meaning",{"_index":340,"title":{},"body":{"injectables/AlertService.html":{},"classes/Table.html":{}}}],["means",{"_index":451,"title":{},"body":{"components/ButtonComponent.html":{}}}],["mega",{"_index":869,"title":{},"body":{"components/FileInputComponent.html":{}}}],["members",{"_index":758,"title":{},"body":{"classes/Csv.html":{}}}],["merge",{"_index":617,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["merge(overwrite",{"_index":625,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["mergevalues",{"_index":618,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["mergevalues(overwrite",{"_index":630,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["message",{"_index":19,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/FileInputComponent.html":{}}}],["metadata",{"_index":39,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{}}}],["method",{"_index":271,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"classes/Queue.html":{},"classes/Table.html":{}}}],["methods",{"_index":52,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["min",{"_index":1084,"title":{},"body":{"components/SliderComponent.html":{}}}],["minimal",{"_index":458,"title":{},"body":{"components/ButtonComponent.html":{}}}],["miscellaneous",{"_index":1344,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1188,"title":{},"body":{"classes/Table.html":{}}}],["models/alert/alert",{"_index":221,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{}}}],["models/queue/queue",{"_index":358,"title":{},"body":{"injectables/AlertService.html":{}}}],["models/table/table.interface",{"_index":1275,"title":{},"body":{"components/TableComponent.html":{}}}],["module",{"_index":403,"title":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{}},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"overview.html":{}}}],["modules",{"_index":405,"title":{"modules.html":{}},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"modules.html":{},"overview.html":{}}}],["multi",{"_index":550,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["name",{"_index":64,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["names",{"_index":1209,"title":{},"body":{"classes/Table.html":{}}}],["necessary",{"_index":1196,"title":{},"body":{"classes/Table.html":{},"index.html":{}}}],["need",{"_index":354,"title":{},"body":{"injectables/AlertService.html":{}}}],["needed",{"_index":480,"title":{},"body":{"components/ButtonComponent.html":{}}}],["needs",{"_index":261,"title":{},"body":{"injectables/AlertService.html":{}}}],["new",{"_index":242,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"directives/ClassNameInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["newoption",{"_index":1013,"title":{},"body":{"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{}}}],["next",{"_index":346,"title":{},"body":{"injectables/AlertService.html":{},"classes/Queue.html":{}}}],["ng",{"_index":1365,"title":{},"body":{"index.html":{}}}],["ng_value_accessor",{"_index":548,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["ngmodule",{"_index":417,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{}}}],["night",{"_index":1291,"title":{},"body":{"injectables/ThemeService.html":{}}}],["normal",{"_index":435,"title":{},"body":{"components/ButtonComponent.html":{}}}],["nothing",{"_index":352,"title":{},"body":{"injectables/AlertService.html":{}}}],["notifies",{"_index":326,"title":{},"body":{"injectables/AlertService.html":{}}}],["now",{"_index":453,"title":{},"body":{"components/ButtonComponent.html":{}}}],["npm",{"_index":1377,"title":{},"body":{"index.html":{}}}],["null",{"_index":212,"title":{},"body":{"components/AlertComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/RadioButtonGroupComponent.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{}}}],["number",{"_index":196,"title":{},"body":{"components/AlertComponent.html":{},"classes/Csv.html":{},"components/FileInputComponent.html":{},"classes/Queue.html":{},"components/SliderComponent.html":{},"classes/Table.html":{},"components/TableComponent.html":{}}}],["numberpipingvalue",{"_index":1088,"title":{},"body":{"components/SliderComponent.html":{}}}],["object",{"_index":1213,"title":{},"body":{"classes/Table.html":{}}}],["object.assign",{"_index":647,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["object.assign(clone",{"_index":648,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["object.entries(table",{"_index":1250,"title":{},"body":{"classes/Table.html":{}}}],["once",{"_index":348,"title":{},"body":{"injectables/AlertService.html":{}}}],["onchangecallback",{"_index":810,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["one",{"_index":447,"title":{},"body":{"components/ButtonComponent.html":{},"classes/Queue.html":{},"classes/Table.html":{}}}],["ontouchedcallback",{"_index":811,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["open",{"_index":1055,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["operations",{"_index":962,"title":{},"body":{"classes/Queue.html":{}}}],["option",{"_index":1017,"title":{},"body":{"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{}}}],["optional",{"_index":65,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"directives/ClassNameInputDirective.html":{},"classes/ColumnInformation.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{}}}],["options",{"_index":436,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/SelectionOptionsDirective.html":{},"classes/Table.html":{}}}],["options(options",{"_index":1074,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["options.directive",{"_index":588,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"modules/FormModule.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{}}}],["options.directive.ts",{"_index":1064,"title":{},"body":{"directives/SelectionOptionsDirective.html":{},"coverage.html":{}}}],["options.directive.ts:10",{"_index":1068,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["options.directive.ts:11",{"_index":1067,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["options.directive.ts:14",{"_index":1066,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["options.directive.ts:18",{"_index":1070,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["options.ts",{"_index":1059,"title":{},"body":{"interfaces/SelectedOptions.html":{},"coverage.html":{}}}],["options.ts:1",{"_index":1062,"title":{},"body":{"interfaces/SelectedOptions.html":{}}}],["order",{"_index":392,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["otherwise",{"_index":992,"title":{},"body":{"classes/Queue.html":{}}}],["out",{"_index":287,"title":{},"body":{"injectables/AlertService.html":{},"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"overview.html":{}}}],["output",{"_index":833,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["outputs",{"_index":816,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["over",{"_index":1208,"title":{},"body":{"classes/Table.html":{}}}],["overview",{"_index":1399,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":629,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["overwrites",{"_index":482,"title":{},"body":{"components/ButtonComponent.html":{}}}],["package",{"_index":1339,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["packages",{"_index":1371,"title":{},"body":{"index.html":{}}}],["page",{"_index":1389,"title":{},"body":{"index.html":{}}}],["param",{"_index":506,"title":{},"body":{"components/ButtonComponent.html":{}}}],["parameter",{"_index":260,"title":{},"body":{"injectables/AlertService.html":{}}}],["parameters",{"_index":63,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"directives/ClassNameInputDirective.html":{},"classes/ColumnInformation.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{}}}],["param{alert",{"_index":383,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["param{alertservicesubscriber",{"_index":371,"title":{},"body":{"injectables/AlertService.html":{}}}],["param{any",{"_index":520,"title":{},"body":{"components/ButtonComponent.html":{}}}],["param{array",{"_index":1233,"title":{},"body":{"classes/Table.html":{}}}],["param{boolean",{"_index":526,"title":{},"body":{"components/ButtonComponent.html":{}}}],["param{file",{"_index":1238,"title":{},"body":{"classes/Table.html":{}}}],["param{object",{"_index":1249,"title":{},"body":{"classes/Table.html":{}}}],["param{string",{"_index":373,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ThemeService.html":{}}}],["param{t",{"_index":996,"title":{},"body":{"classes/Queue.html":{}}}],["param{themeservice",{"_index":521,"title":{},"body":{"components/ButtonComponent.html":{}}}],["parsefile",{"_index":730,"title":{},"body":{"classes/Csv.html":{},"classes/Table.html":{}}}],["parsefile(file",{"_index":756,"title":{},"body":{"classes/Csv.html":{}}}],["parsefile]{@link",{"_index":1236,"title":{},"body":{"classes/Table.html":{}}}],["parsestring",{"_index":731,"title":{},"body":{"classes/Csv.html":{}}}],["parsestring(string",{"_index":760,"title":{},"body":{"classes/Csv.html":{}}}],["passed",{"_index":442,"title":{},"body":{"components/ButtonComponent.html":{}}}],["passes",{"_index":269,"title":{},"body":{"injectables/AlertService.html":{}}}],["peer",{"_index":1342,"title":{},"body":{"dependencies.html":{}}}],["persistent",{"_index":627,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["persistent.alignment",{"_index":659,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["persistent.color",{"_index":655,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["persistent.name",{"_index":651,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["pill",{"_index":49,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["pill]{@link",{"_index":513,"title":{},"body":{"components/ButtonComponent.html":{}}}],["placed",{"_index":285,"title":{},"body":{"injectables/AlertService.html":{}}}],["placeholder",{"_index":852,"title":{},"body":{"components/FileInputComponent.html":{},"components/InputComponent.html":{}}}],["plain",{"_index":50,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["plain]{@link",{"_index":515,"title":{},"body":{"components/ButtonComponent.html":{}}}],["possible",{"_index":439,"title":{},"body":{"components/ButtonComponent.html":{}}}],["predefinded",{"_index":270,"title":{},"body":{"injectables/AlertService.html":{}}}],["predefined",{"_index":266,"title":{},"body":{"injectables/AlertService.html":{}}}],["primary",{"_index":305,"title":{},"body":{"injectables/AlertService.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/ThemeColorInputDirective.html":{}}}],["primary(message",{"_index":320,"title":{},"body":{"injectables/AlertService.html":{}}}],["pristine",{"_index":704,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/StateManagerDirective.html":{}}}],["pristine(ispristine",{"_index":1158,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["private",{"_index":48,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"directives/ClassNameInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"classes/Queue.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{}}}],["process",{"_index":342,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["produce",{"_index":971,"title":{},"body":{"classes/Queue.html":{}}}],["progress",{"_index":351,"title":{},"body":{"injectables/AlertService.html":{}}}],["project",{"_index":1381,"title":{},"body":{"index.html":{}}}],["promise",{"_index":201,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"classes/Csv.html":{},"classes/Table.html":{}}}],["promise(resolve",{"_index":243,"title":{},"body":{"components/AlertComponent.html":{}}}],["promise.all(this.subscribers.map(subscriber",{"_index":385,"title":{},"body":{"injectables/AlertService.html":{}}}],["promise.reject(\"file",{"_index":781,"title":{},"body":{"classes/Csv.html":{}}}],["promise.resolve",{"_index":236,"title":{},"body":{"components/AlertComponent.html":{}}}],["promise.resolve(this.show",{"_index":238,"title":{},"body":{"components/AlertComponent.html":{}}}],["properly",{"_index":1220,"title":{},"body":{"classes/Table.html":{}}}],["properties",{"_index":17,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["property",{"_index":474,"title":{},"body":{"components/ButtonComponent.html":{}}}],["protected",{"_index":574,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/EventManagerDirective.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{}}}],["provide",{"_index":547,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["providedin",{"_index":367,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ThemeService.html":{}}}],["providers",{"_index":409,"title":{},"body":{"modules/BaseModule.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/FileInputComponent.html":{},"modules/FormModule.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{},"overview.html":{}}}],["provides",{"_index":253,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"injectables/ThemeService.html":{}}}],["public",{"_index":46,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["queue",{"_index":288,"title":{"classes/Queue.html":{}},"body":{"injectables/AlertService.html":{},"classes/Queue.html":{},"coverage.html":{}}}],["queue]{@link",{"_index":995,"title":{},"body":{"classes/Queue.html":{}}}],["radio",{"_index":144,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["radiobuttoncomponent",{"_index":143,"title":{"components/RadioButtonComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["radiobuttongroupcomponent",{"_index":145,"title":{"components/RadioButtonGroupComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ready",{"_index":280,"title":{},"body":{"injectables/AlertService.html":{}}}],["receive",{"_index":393,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["received",{"_index":1197,"title":{},"body":{"classes/Table.html":{}}}],["regexp",{"_index":738,"title":{},"body":{"classes/Csv.html":{}}}],["register",{"_index":390,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{},"directives/EventManagerDirective.html":{}}}],["registered",{"_index":399,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["registeronchange",{"_index":814,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["registeronchange(fn",{"_index":827,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["registerontouched",{"_index":815,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["registerontouched(fn",{"_index":829,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["remove",{"_index":345,"title":{},"body":{"injectables/AlertService.html":{}}}],["removed",{"_index":291,"title":{},"body":{"injectables/AlertService.html":{}}}],["removes",{"_index":286,"title":{},"body":{"injectables/AlertService.html":{},"classes/Queue.html":{}}}],["require",{"_index":1337,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":415,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"overview.html":{}}}],["resetalert",{"_index":186,"title":{},"body":{"components/AlertComponent.html":{}}}],["resolve",{"_index":245,"title":{},"body":{"components/AlertComponent.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["resolved",{"_index":328,"title":{},"body":{"injectables/AlertService.html":{}}}],["rest",{"_index":1369,"title":{},"body":{"index.html":{}}}],["result",{"_index":25,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["results",{"_index":27,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["return",{"_index":105,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["returns",{"_index":75,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["returns{boolean",{"_index":1003,"title":{},"body":{"classes/Queue.html":{}}}],["returns{number",{"_index":1001,"title":{},"body":{"classes/Queue.html":{}}}],["returns{promise",{"_index":384,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["returns{string",{"_index":1299,"title":{},"body":{"injectables/ThemeService.html":{}}}],["returns{t",{"_index":998,"title":{},"body":{"classes/Queue.html":{}}}],["right",{"_index":556,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{}}}],["root",{"_index":368,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"injectables/ThemeService.html":{}}}],["rootclass",{"_index":51,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["round",{"_index":441,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{}}}],["round]{@link",{"_index":505,"title":{},"body":{"components/ButtonComponent.html":{}}}],["routes",{"_index":1408,"title":{"routes.html":{}},"body":{"routes.html":{}}}],["row",{"_index":766,"title":{},"body":{"classes/Csv.html":{},"classes/Table.html":{},"interfaces/TableInterface.html":{}}}],["row.push(column[i",{"_index":1258,"title":{},"body":{"classes/Table.html":{}}}],["row.split(this.usedelimiter(delimiter",{"_index":795,"title":{},"body":{"classes/Csv.html":{}}}],["row[index",{"_index":778,"title":{},"body":{"classes/Csv.html":{}}}],["rows",{"_index":732,"title":{},"body":{"classes/Csv.html":{},"classes/Table.html":{}}}],["rows(string",{"_index":762,"title":{},"body":{"classes/Csv.html":{}}}],["rows.foreach(row",{"_index":787,"title":{},"body":{"classes/Csv.html":{}}}],["rows.length",{"_index":794,"title":{},"body":{"classes/Csv.html":{}}}],["rows.push(row",{"_index":1260,"title":{},"body":{"classes/Table.html":{}}}],["rows.splice(rows.length",{"_index":793,"title":{},"body":{"classes/Csv.html":{}}}],["rows[rows.length",{"_index":792,"title":{},"body":{"classes/Csv.html":{}}}],["s",{"_index":740,"title":{},"body":{"classes/Csv.html":{}}}],["s*)(?:,|;|$)(?:\\s",{"_index":739,"title":{},"body":{"classes/Csv.html":{}}}],["save",{"_index":1378,"title":{},"body":{"index.html":{}}}],["sb",{"_index":41,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"index.html":{}}}],["sbelement",{"_index":1349,"title":{},"body":{"index.html":{}}}],["sbelementmodule",{"_index":1020,"title":{"modules/SbElementModule.html":{}},"body":{"modules/SbElementModule.html":{},"modules.html":{},"overview.html":{}}}],["schematics",{"_index":1360,"title":{},"body":{"index.html":{}}}],["scss",{"_index":1357,"title":{},"body":{"index.html":{}}}],["secondary",{"_index":306,"title":{},"body":{"injectables/AlertService.html":{}}}],["secondary(message",{"_index":322,"title":{},"body":{"injectables/AlertService.html":{}}}],["select",{"_index":148,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["select(newoption",{"_index":1045,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["selectbuttoncomponent",{"_index":147,"title":{"components/SelectButtonComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selected",{"_index":1072,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["selectedoptions",{"_index":585,"title":{"interfaces/SelectedOptions.html":{}},"body":{"components/CheckboxGroupComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"coverage.html":{}}}],["selectionoptionsdirective",{"_index":168,"title":{"directives/SelectionOptionsDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selector",{"_index":40,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{}}}],["selector]'},{'name",{"_index":158,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["semicolon",{"_index":772,"title":{},"body":{"classes/Csv.html":{},"miscellaneous/enumerations.html":{}}}],["separation",{"_index":1265,"title":{},"body":{"components/TableComponent.html":{}}}],["service",{"_index":222,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["services/alert/alert.service",{"_index":224,"title":{},"body":{"components/AlertComponent.html":{},"components/FileInputComponent.html":{}}}],["services/theme/theme.service",{"_index":84,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["set",{"_index":343,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"directives/ClassNameInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"components/IconButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"injectables/ThemeService.html":{}}}],["set(information",{"_index":634,"title":{},"body":{"classes/ColumnInformation.html":{}}}],["setalert",{"_index":187,"title":{},"body":{"components/AlertComponent.html":{}}}],["setalert(alert",{"_index":206,"title":{},"body":{"components/AlertComponent.html":{}}}],["setdisabled(isdisabled",{"_index":503,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{},"directives/StateManagerDirective.html":{}}}],["setdisabledstate",{"_index":461,"title":{},"body":{"components/ButtonComponent.html":{},"directives/StateManagerDirective.html":{}}}],["setdisabledstate(disabled",{"_index":1133,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["setdisabledstate(isdisabled",{"_index":485,"title":{},"body":{"components/ButtonComponent.html":{}}}],["setextraclasses(extraclasses",{"_index":598,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["setfocused(isfocused",{"_index":1154,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["setfocusedstate",{"_index":1126,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["setfocusedstate(focused",{"_index":1135,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["setinnervalue",{"_index":673,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["setinnervalue(value",{"_index":676,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["setispill(ispill",{"_index":499,"title":{},"body":{"components/ButtonComponent.html":{}}}],["setisplain(isplain",{"_index":500,"title":{},"body":{"components/ButtonComponent.html":{}}}],["setisround(isround",{"_index":498,"title":{},"body":{"components/ButtonComponent.html":{}}}],["setoptions(options",{"_index":1071,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["setpristine(ispristine",{"_index":1149,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["setpristinestate",{"_index":1127,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["setpristinestate(pristine",{"_index":1137,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["sets",{"_index":468,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/ThemeService.html":{}}}],["setsnap(snap",{"_index":1105,"title":{},"body":{"components/SliderComponent.html":{}}}],["setstep(step",{"_index":1104,"title":{},"body":{"components/SliderComponent.html":{}}}],["settimeout",{"_index":244,"title":{},"body":{"components/AlertComponent.html":{}}}],["settouched(istouched",{"_index":1146,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["settouchedstate",{"_index":1128,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["settouchedstate(touched",{"_index":1139,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["setvalue(value",{"_index":689,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["shadow",{"_index":534,"title":{},"body":{"components/CardComponent.html":{}}}],["shifts",{"_index":984,"title":{},"body":{"classes/Queue.html":{}}}],["show",{"_index":182,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["showalert",{"_index":307,"title":{},"body":{"injectables/AlertService.html":{}}}],["showalert(alert",{"_index":324,"title":{},"body":{"injectables/AlertService.html":{}}}],["showalert]{@link",{"_index":378,"title":{},"body":{"injectables/AlertService.html":{}}}],["showarrow",{"_index":56,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{}}}],["showicon",{"_index":57,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{}}}],["showing",{"_index":296,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["shown",{"_index":257,"title":{},"body":{"injectables/AlertService.html":{}}}],["showoptions",{"_index":1041,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["shows",{"_index":313,"title":{},"body":{"injectables/AlertService.html":{}}}],["showvalue",{"_index":1085,"title":{},"body":{"components/SliderComponent.html":{}}}],["simpler",{"_index":1364,"title":{},"body":{"index.html":{}}}],["simultaneously",{"_index":512,"title":{},"body":{"components/ButtonComponent.html":{}}}],["size",{"_index":20,"title":{},"body":{"interfaces/Alert.html":{},"injectables/AlertService.html":{},"modules/BaseModule.html":{},"components/CheckboxComponent.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["sizecolorinputdirective",{"_index":169,"title":{"directives/SizeColorInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeColorInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sizeinputdirective",{"_index":170,"title":{"directives/SizeInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sizethemecolorinputdirective",{"_index":38,"title":{"directives/SizeThemeColorInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeThemeColorInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sizethemecolorinputdirective#getclasses",{"_index":529,"title":{},"body":{"components/ButtonComponent.html":{}}}],["sizethemeinputdirective",{"_index":171,"title":{"directives/SizeThemeInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["slider",{"_index":1078,"title":{},"body":{"components/SliderComponent.html":{}}}],["slider'},{'name",{"_index":150,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["slider.component.html",{"_index":1079,"title":{},"body":{"components/SliderComponent.html":{}}}],["slider/slider.component",{"_index":910,"title":{},"body":{"modules/FormModule.html":{}}}],["slidercomponent",{"_index":149,"title":{"components/SliderComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["snap",{"_index":1086,"title":{},"body":{"components/SliderComponent.html":{}}}],["snap(snap",{"_index":1113,"title":{},"body":{"components/SliderComponent.html":{}}}],["snappoints",{"_index":1082,"title":{},"body":{"components/SliderComponent.html":{}}}],["snapstep",{"_index":1116,"title":{},"body":{"components/SliderComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["spec\\.ts",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specified",{"_index":314,"title":{},"body":{"injectables/AlertService.html":{}}}],["spellcheck",{"_index":947,"title":{},"body":{"components/InputComponent.html":{}}}],["split",{"_index":733,"title":{},"body":{"classes/Csv.html":{}}}],["split(row",{"_index":764,"title":{},"body":{"classes/Csv.html":{}}}],["split[0",{"_index":797,"title":{},"body":{"classes/Csv.html":{}}}],["split[split.length",{"_index":802,"title":{},"body":{"classes/Csv.html":{}}}],["splitrows",{"_index":786,"title":{},"body":{"classes/Csv.html":{}}}],["splitrows.push(this.split(row",{"_index":788,"title":{},"body":{"classes/Csv.html":{}}}],["splitrows.slice(1",{"_index":790,"title":{},"body":{"classes/Csv.html":{}}}],["splitrows[0",{"_index":789,"title":{},"body":{"classes/Csv.html":{}}}],["src",{"_index":1393,"title":{},"body":{"index.html":{}}}],["src/.../csv.ts",{"_index":1346,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/components/alert",{"_index":34,"title":{},"body":{"components/AlertBoxComponent.html":{},"coverage.html":{}}}],["src/lib/components/alert/alert.component.ts",{"_index":176,"title":{},"body":{"components/AlertComponent.html":{},"coverage.html":{}}}],["src/lib/components/alert/alert.component.ts:14",{"_index":217,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:17",{"_index":194,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:20",{"_index":195,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:22",{"_index":213,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:23",{"_index":218,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:24",{"_index":215,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:26",{"_index":198,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:27",{"_index":193,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:37",{"_index":200,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:45",{"_index":207,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:52",{"_index":202,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:57",{"_index":211,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:61",{"_index":204,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:66",{"_index":209,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:72",{"_index":205,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:77",{"_index":220,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/alert/alert.component.ts:82",{"_index":203,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/lib/components/base/base.module.ts",{"_index":416,"title":{},"body":{"modules/BaseModule.html":{}}}],["src/lib/components/base/control",{"_index":669,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/EventManagerDirective.html":{},"directives/StateManagerDirective.html":{},"coverage.html":{}}}],["src/lib/components/base/style",{"_index":590,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"coverage.html":{}}}],["src/lib/components/card/card.component.ts",{"_index":531,"title":{},"body":{"components/CardComponent.html":{},"coverage.html":{}}}],["src/lib/components/card/card.component.ts:11",{"_index":539,"title":{},"body":{"components/CardComponent.html":{}}}],["src/lib/components/card/card.component.ts:13",{"_index":538,"title":{},"body":{"components/CardComponent.html":{}}}],["src/lib/components/card/card.component.ts:14",{"_index":536,"title":{},"body":{"components/CardComponent.html":{}}}],["src/lib/components/card/card.component.ts:26",{"_index":537,"title":{},"body":{"components/CardComponent.html":{}}}],["src/lib/components/container/container.component.ts",{"_index":665,"title":{},"body":{"components/ContainerComponent.html":{},"coverage.html":{}}}],["src/lib/components/container/container.component.ts:10",{"_index":668,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/lib/components/form/button/button.component.ts",{"_index":433,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/button/button.component.ts:106",{"_index":502,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:112",{"_index":477,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:120",{"_index":497,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:128",{"_index":492,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:136",{"_index":494,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:144",{"_index":467,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:174",{"_index":486,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:195",{"_index":479,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:57",{"_index":496,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:65",{"_index":476,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:77",{"_index":473,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:89",{"_index":475,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/button/button.component.ts:99",{"_index":471,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/lib/components/form/checkbox/checkbox.component.ts",{"_index":546,"title":{},"body":{"components/CheckboxComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/checkbox/checkbox.component.ts:16",{"_index":560,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/lib/components/form/checkbox/checkbox.component.ts:19",{"_index":555,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/lib/components/form/checkbox/checkbox.component.ts:21",{"_index":557,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/lib/components/form/checkbox/checkbox.component.ts:23",{"_index":558,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/lib/components/form/checkbox/checkbox.component.ts:27",{"_index":559,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/lib/components/form/file",{"_index":845,"title":{},"body":{"components/FileInputComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/form.module.ts",{"_index":897,"title":{},"body":{"modules/FormModule.html":{}}}],["src/lib/components/form/group/base/selected",{"_index":1058,"title":{},"body":{"interfaces/SelectedOptions.html":{},"coverage.html":{}}}],["src/lib/components/form/group/base/selection",{"_index":1063,"title":{},"body":{"directives/SelectionOptionsDirective.html":{},"coverage.html":{}}}],["src/lib/components/form/group/checkbox/checkbox",{"_index":570,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/group/form",{"_index":881,"title":{},"body":{"components/FormGroupComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/group/radio",{"_index":1008,"title":{},"body":{"components/RadioButtonGroupComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/icon",{"_index":931,"title":{},"body":{"components/IconButtonComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/input/input.component.ts",{"_index":944,"title":{},"body":{"components/InputComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/input/input.component.ts:17",{"_index":956,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/input/input.component.ts:20",{"_index":949,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/input/input.component.ts:23",{"_index":951,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/input/input.component.ts:26",{"_index":950,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/input/input.component.ts:28",{"_index":955,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/input/input.component.ts:29",{"_index":948,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/input/input.component.ts:42",{"_index":953,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/input/input.component.ts:48",{"_index":954,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/input/input.component.ts:56",{"_index":952,"title":{},"body":{"components/InputComponent.html":{}}}],["src/lib/components/form/radio",{"_index":1004,"title":{},"body":{"components/RadioButtonComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/select",{"_index":1040,"title":{},"body":{"components/SelectButtonComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/slider/slider.component.ts",{"_index":1077,"title":{},"body":{"components/SliderComponent.html":{},"coverage.html":{}}}],["src/lib/components/form/slider/slider.component.ts:16",{"_index":1100,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:19",{"_index":1089,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:22",{"_index":1092,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:25",{"_index":1091,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:27",{"_index":1098,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:29",{"_index":1095,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:34",{"_index":1103,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:35",{"_index":1099,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:38",{"_index":1094,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:50",{"_index":1101,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:52",{"_index":1107,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:57",{"_index":1093,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:60",{"_index":1096,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/slider/slider.component.ts:62",{"_index":1097,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/lib/components/form/toggle",{"_index":1300,"title":{},"body":{"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["src/lib/components/grid/grid.component.ts",{"_index":917,"title":{},"body":{"components/GridComponent.html":{},"coverage.html":{}}}],["src/lib/components/grid/grid.component.ts:10",{"_index":926,"title":{},"body":{"components/GridComponent.html":{}}}],["src/lib/components/grid/grid.component.ts:13",{"_index":924,"title":{},"body":{"components/GridComponent.html":{}}}],["src/lib/components/grid/grid.component.ts:16",{"_index":923,"title":{},"body":{"components/GridComponent.html":{}}}],["src/lib/components/grid/grid.component.ts:18",{"_index":925,"title":{},"body":{"components/GridComponent.html":{}}}],["src/lib/components/icon/icon.component.ts",{"_index":941,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{}}}],["src/lib/components/icon/icon.component.ts:8",{"_index":943,"title":{},"body":{"components/IconComponent.html":{}}}],["src/lib/components/table/table.component.ts",{"_index":1261,"title":{},"body":{"components/TableComponent.html":{},"coverage.html":{}}}],["src/lib/components/table/table.component.ts:11",{"_index":1272,"title":{},"body":{"components/TableComponent.html":{}}}],["src/lib/components/table/table.component.ts:12",{"_index":1274,"title":{},"body":{"components/TableComponent.html":{}}}],["src/lib/components/table/table.component.ts:15",{"_index":1266,"title":{},"body":{"components/TableComponent.html":{}}}],["src/lib/components/table/table.component.ts:18",{"_index":1267,"title":{},"body":{"components/TableComponent.html":{}}}],["src/lib/components/table/table.component.ts:20",{"_index":1268,"title":{},"body":{"components/TableComponent.html":{}}}],["src/lib/components/table/table.component.ts:31",{"_index":1270,"title":{},"body":{"components/TableComponent.html":{}}}],["src/lib/models/alert/alert",{"_index":387,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{},"coverage.html":{}}}],["src/lib/models/alert/alert.ts",{"_index":6,"title":{},"body":{"interfaces/Alert.html":{},"coverage.html":{}}}],["src/lib/models/csv/csv.ts",{"_index":721,"title":{},"body":{"classes/Csv.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/lib/models/csv/csv.ts:10",{"_index":741,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:11",{"_index":736,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:14",{"_index":742,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:15",{"_index":737,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:18",{"_index":753,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:26",{"_index":748,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:34",{"_index":755,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:42",{"_index":757,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:53",{"_index":761,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:63",{"_index":763,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:69",{"_index":765,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:84",{"_index":768,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/csv/csv.ts:9",{"_index":743,"title":{},"body":{"classes/Csv.html":{}}}],["src/lib/models/queue/queue.ts",{"_index":961,"title":{},"body":{"classes/Queue.html":{},"coverage.html":{}}}],["src/lib/models/queue/queue.ts:13",{"_index":977,"title":{},"body":{"classes/Queue.html":{}}}],["src/lib/models/queue/queue.ts:22",{"_index":988,"title":{},"body":{"classes/Queue.html":{}}}],["src/lib/models/queue/queue.ts:39",{"_index":980,"title":{},"body":{"classes/Queue.html":{}}}],["src/lib/models/queue/queue.ts:52",{"_index":994,"title":{},"body":{"classes/Queue.html":{}}}],["src/lib/models/queue/queue.ts:63",{"_index":991,"title":{},"body":{"classes/Queue.html":{}}}],["src/lib/models/table/column",{"_index":611,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"coverage.html":{}}}],["src/lib/models/table/table.interface.ts",{"_index":1285,"title":{},"body":{"interfaces/TableInterface.html":{},"coverage.html":{}}}],["src/lib/models/table/table.ts",{"_index":1165,"title":{},"body":{"classes/Table.html":{},"coverage.html":{}}}],["src/lib/models/table/table.ts:123",{"_index":1214,"title":{},"body":{"classes/Table.html":{}}}],["src/lib/models/table/table.ts:151",{"_index":1227,"title":{},"body":{"classes/Table.html":{}}}],["src/lib/models/table/table.ts:165",{"_index":1194,"title":{},"body":{"classes/Table.html":{}}}],["src/lib/models/table/table.ts:18",{"_index":1190,"title":{},"body":{"classes/Table.html":{}}}],["src/lib/models/table/table.ts:25",{"_index":1191,"title":{},"body":{"classes/Table.html":{}}}],["src/lib/models/table/table.ts:32",{"_index":1184,"title":{},"body":{"classes/Table.html":{}}}],["src/lib/models/table/table.ts:67",{"_index":1205,"title":{},"body":{"classes/Table.html":{}}}],["src/lib/models/table/table.ts:98",{"_index":1223,"title":{},"body":{"classes/Table.html":{}}}],["src/lib/sb",{"_index":1025,"title":{},"body":{"modules/SbElementModule.html":{}}}],["src/lib/services/alert/alert.service.ts",{"_index":252,"title":{},"body":{"injectables/AlertService.html":{},"coverage.html":{}}}],["src/lib/services/alert/alert.service.ts:100",{"_index":319,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:110",{"_index":321,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:120",{"_index":323,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:136",{"_index":311,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:160",{"_index":336,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:183",{"_index":325,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:51",{"_index":357,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:57",{"_index":353,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:63",{"_index":355,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:70",{"_index":330,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:80",{"_index":335,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/alert/alert.service.ts:90",{"_index":333,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/lib/services/theme/theme.service.ts",{"_index":1287,"title":{},"body":{"injectables/ThemeService.html":{},"coverage.html":{}}}],["src/lib/services/theme/theme.service.ts:22",{"_index":1297,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/lib/services/theme/theme.service.ts:29",{"_index":1295,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/lib/services/theme/theme.service.ts:36",{"_index":1296,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/test.ts",{"_index":1334,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start_delimiter",{"_index":726,"title":{},"body":{"classes/Csv.html":{}}}],["started",{"_index":1348,"title":{"index.html":{}},"body":{}}],["state",{"_index":472,"title":{},"body":{"components/ButtonComponent.html":{},"directives/EventManagerDirective.html":{}}}],["statemanagerdirective",{"_index":172,"title":{"directives/StateManagerDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["statements",{"_index":1309,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":469,"title":{},"body":{"components/ButtonComponent.html":{}}}],["static",{"_index":616,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"classes/Csv.html":{},"components/FileInputComponent.html":{},"classes/Table.html":{}}}],["step",{"_index":301,"title":{},"body":{"injectables/AlertService.html":{},"components/SliderComponent.html":{}}}],["step(step",{"_index":1108,"title":{},"body":{"components/SliderComponent.html":{}}}],["step.tostring().split(\".\")[1].length",{"_index":1112,"title":{},"body":{"components/SliderComponent.html":{}}}],["steps",{"_index":1376,"title":{},"body":{"index.html":{}}}],["still",{"_index":341,"title":{},"body":{"injectables/AlertService.html":{}}}],["store",{"_index":1221,"title":{},"body":{"classes/Table.html":{}}}],["stored",{"_index":1176,"title":{},"body":{"classes/Table.html":{},"interfaces/TableInterface.html":{},"injectables/ThemeService.html":{}}}],["string",{"_index":21,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"interfaces/SelectedOptions.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["string,columndata",{"_index":746,"title":{},"body":{"classes/Csv.html":{}}}],["string,index",{"_index":752,"title":{},"body":{"classes/Csv.html":{}}}],["string.split('\\n",{"_index":791,"title":{},"body":{"classes/Csv.html":{}}}],["style",{"_index":420,"title":{},"body":{"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"classes/Table.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["styling",{"_index":1172,"title":{},"body":{"classes/Table.html":{}}}],["subrootclass",{"_index":1263,"title":{},"body":{"components/TableComponent.html":{}}}],["subscibers",{"_index":327,"title":{},"body":{"injectables/AlertService.html":{}}}],["subscribe",{"_index":259,"title":{},"body":{"injectables/AlertService.html":{}}}],["subscribe(subscriber",{"_index":329,"title":{},"body":{"injectables/AlertService.html":{}}}],["subscribe]{@link",{"_index":359,"title":{},"body":{"injectables/AlertService.html":{}}}],["subscriber",{"_index":223,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["subscriber.alert(alert",{"_index":386,"title":{},"body":{"injectables/AlertService.html":{}}}],["subscriber.ts",{"_index":388,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{},"coverage.html":{}}}],["subscriber.ts:21",{"_index":398,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["subscribers",{"_index":290,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{}}}],["subscribers]{@link",{"_index":370,"title":{},"body":{"injectables/AlertService.html":{}}}],["success",{"_index":308,"title":{},"body":{"injectables/AlertService.html":{}}}],["success(message",{"_index":332,"title":{},"body":{"injectables/AlertService.html":{}}}],["sum",{"_index":1119,"title":{},"body":{"components/SliderComponent.html":{}}}],["super",{"_index":716,"title":{},"body":{"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/IconComponent.html":{},"components/RadioButtonComponent.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["super(themeservice",{"_index":93,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["super.getclasses",{"_index":98,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{}}}],["support",{"_index":1396,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":1359,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1397,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":155,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["switch.component",{"_index":902,"title":{},"body":{"modules/FormModule.html":{}}}],["switch.component.html",{"_index":1302,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["switch.component.ts",{"_index":1301,"title":{},"body":{"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["switch.component.ts:16",{"_index":1305,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["switch.component.ts:18",{"_index":1304,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["switch.component.ts:22",{"_index":1303,"title":{},"body":{"components/ToggleSwitchComponent.html":{}}}],["switch/toggle",{"_index":901,"title":{},"body":{"modules/FormModule.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["syntax",{"_index":443,"title":{},"body":{"components/ButtonComponent.html":{}}}],["t",{"_index":986,"title":{},"body":{"classes/Queue.html":{}}}],["table",{"_index":1164,"title":{"classes/Table.html":{}},"body":{"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":152,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["table(csv.data",{"_index":1245,"title":{},"body":{"classes/Table.html":{}}}],["table(rows",{"_index":1246,"title":{},"body":{"classes/Table.html":{}}}],["table(this.columnstorows(columns",{"_index":1255,"title":{},"body":{"classes/Table.html":{}}}],["table.component.html",{"_index":1262,"title":{},"body":{"components/TableComponent.html":{}}}],["table.interface",{"_index":1230,"title":{},"body":{"classes/Table.html":{}}}],["tablecomponent",{"_index":151,"title":{"components/TableComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tableinterface",{"_index":1177,"title":{"interfaces/TableInterface.html":{}},"body":{"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1338,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":268,"title":{},"body":{"injectables/AlertService.html":{},"index.html":{}}}],["tells",{"_index":289,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{}}}],["template",{"_index":31,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["templateurl",{"_index":44,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["terminates",{"_index":299,"title":{},"body":{"injectables/AlertService.html":{}}}],["test(firstelement",{"_index":798,"title":{},"body":{"classes/Csv.html":{}}}],["test(lastelement",{"_index":803,"title":{},"body":{"classes/Csv.html":{}}}],["testapp",{"_index":1390,"title":{},"body":{"index.html":{}}}],["text",{"_index":457,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputComponent.html":{}}}],["text/csv",{"_index":780,"title":{},"body":{"classes/Csv.html":{}}}],["tha",{"_index":1174,"title":{},"body":{"classes/Table.html":{}}}],["that's",{"_index":1367,"title":{},"body":{"index.html":{}}}],["theme",{"_index":87,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{}}}],["themecolorinputdirective",{"_index":173,"title":{"directives/ThemeColorInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["themeinputdirective",{"_index":174,"title":{"directives/ThemeInputDirective.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"modules/SbElementModule.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"directives/ThemeInputDirective.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["themes",{"_index":1289,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themeservice",{"_index":60,"title":{"injectables/ThemeService.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["themeservice.get",{"_index":718,"title":{},"body":{"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["theming",{"_index":1358,"title":{},"body":{"index.html":{}}}],["therefore",{"_index":983,"title":{},"body":{"classes/Queue.html":{}}}],["this._disabled",{"_index":519,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{},"directives/StateManagerDirective.html":{}}}],["this._extraclasses",{"_index":601,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["this._extraclasses.foreach(classname",{"_index":606,"title":{},"body":{"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["this._focused",{"_index":1161,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["this._options",{"_index":1075,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["this._options.foreach((option",{"_index":1076,"title":{},"body":{"directives/SelectionOptionsDirective.html":{}}}],["this._pristine",{"_index":1159,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["this._step",{"_index":1109,"title":{},"body":{"components/SliderComponent.html":{}}}],["this._theme",{"_index":1298,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this._touched",{"_index":1157,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["this.alert(message",{"_index":374,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.alertobject",{"_index":231,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.alertobject.message",{"_index":246,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.alertqueue.dequeue",{"_index":381,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.alertqueue.enqueue",{"_index":375,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.alertqueue.isempty",{"_index":379,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.alertservice.subscribe(this",{"_index":225,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.alignment",{"_index":646,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["this.appears",{"_index":227,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.blur.emit",{"_index":838,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.change.emit(value",{"_index":843,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.checkfilesize(file",{"_index":872,"title":{},"body":{"components/FileInputComponent.html":{}}}],["this.color",{"_index":234,"title":{},"body":{"components/AlertComponent.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/ThemeColorInputDirective.html":{}}}],["this.columninformation",{"_index":1235,"title":{},"body":{"classes/Table.html":{}}}],["this.data",{"_index":1234,"title":{},"body":{"classes/Table.html":{}}}],["this.data.map(row",{"_index":777,"title":{},"body":{"classes/Csv.html":{}}}],["this.decimalplaces",{"_index":1111,"title":{},"body":{"components/SliderComponent.html":{}}}],["this.defaults.alignment",{"_index":660,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["this.defaults.color",{"_index":656,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["this.defaults.name",{"_index":652,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["this.delimiter",{"_index":808,"title":{},"body":{"classes/Csv.html":{}}}],["this.dim",{"_index":928,"title":{},"body":{"components/GridComponent.html":{}}}],["this.disabled",{"_index":527,"title":{},"body":{"components/ButtonComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/StateManagerDirective.html":{}}}],["this.emitchange(value",{"_index":697,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["this.end_delimiter.source",{"_index":807,"title":{},"body":{"classes/Csv.html":{}}}],["this.flipped",{"_index":94,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["this.focus.emit",{"_index":840,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.focused",{"_index":959,"title":{},"body":{"components/InputComponent.html":{},"directives/StateManagerDirective.html":{}}}],["this.gap",{"_index":930,"title":{},"body":{"components/GridComponent.html":{}}}],["this.getcolumndata(index",{"_index":776,"title":{},"body":{"classes/Csv.html":{}}}],["this.groupalign",{"_index":891,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["this.grouptitle",{"_index":889,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["this.header.foreach((columnname",{"_index":773,"title":{},"body":{"classes/Csv.html":{}}}],["this.hides",{"_index":229,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.hover",{"_index":542,"title":{},"body":{"components/CardComponent.html":{}}}],["this.innervalue",{"_index":695,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["this.isbusy",{"_index":380,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.isempty",{"_index":999,"title":{},"body":{"classes/Queue.html":{}}}],["this.ispill",{"_index":524,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.isplain",{"_index":525,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.isround",{"_index":523,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.labelposition",{"_index":565,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadioButtonComponent.html":{}}}],["this.limit",{"_index":877,"title":{},"body":{"components/FileInputComponent.html":{}}}],["this.mergevalues(overwrite.alignment",{"_index":658,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["this.mergevalues(overwrite.color",{"_index":654,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["this.mergevalues(overwrite.name",{"_index":650,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["this.message",{"_index":873,"title":{},"body":{"components/FileInputComponent.html":{}}}],["this.min",{"_index":1120,"title":{},"body":{"components/SliderComponent.html":{}}}],["this.min)/5/this.step)*this.step",{"_index":1118,"title":{},"body":{"components/SliderComponent.html":{}}}],["this.name",{"_index":643,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{}}}],["this.onchangecallback",{"_index":844,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.onchangecallback(value",{"_index":842,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.ontouchedcallback",{"_index":837,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.options.foreach((option",{"_index":1016,"title":{},"body":{"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{}}}],["this.parsestring(content",{"_index":784,"title":{},"body":{"classes/Csv.html":{}}}],["this.pill",{"_index":95,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["this.plain",{"_index":96,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/ButtonComponent.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"components/SelectButtonComponent.html":{}}}],["this.pristine",{"_index":1163,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["this.queue.length",{"_index":1002,"title":{},"body":{"classes/Queue.html":{}}}],["this.queue.push(value",{"_index":997,"title":{},"body":{"classes/Queue.html":{}}}],["this.queue.shift",{"_index":1000,"title":{},"body":{"classes/Queue.html":{}}}],["this.resetalert",{"_index":230,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.rootclass",{"_index":609,"title":{},"body":{"directives/ColorInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"components/IconComponent.html":{},"components/RadioButtonComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["this.round",{"_index":508,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconButtonComponent.html":{}}}],["this.rows(string",{"_index":785,"title":{},"body":{"classes/Csv.html":{}}}],["this.selectedoptions",{"_index":589,"title":{},"body":{"components/CheckboxGroupComponent.html":{}}}],["this.selectedoptions[option",{"_index":1018,"title":{},"body":{"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{}}}],["this.separation",{"_index":1276,"title":{},"body":{"components/TableComponent.html":{}}}],["this.setalert(alert",{"_index":226,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.setfocusedstate(false",{"_index":835,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.setfocusedstate(true",{"_index":839,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.setinnervalue(value",{"_index":694,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["this.setpristinestate(false",{"_index":841,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.settouchedstate(true",{"_index":836,"title":{},"body":{"directives/EventManagerDirective.html":{}}}],["this.shadow",{"_index":543,"title":{},"body":{"components/CardComponent.html":{}}}],["this.showalert(alert).then",{"_index":382,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.showicon",{"_index":103,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["this.showoptions",{"_index":1050,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["this.size",{"_index":232,"title":{},"body":{"components/AlertComponent.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{}}}],["this.snappoints",{"_index":1115,"title":{},"body":{"components/SliderComponent.html":{}}}],["this.start_delimiter.source",{"_index":806,"title":{},"body":{"classes/Csv.html":{}}}],["this.subscribers.push(subscriber",{"_index":372,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.table.columninformation[columnindex",{"_index":1279,"title":{},"body":{"components/TableComponent.html":{}}}],["this.theme",{"_index":717,"title":{},"body":{"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{}}}],["this.toggle",{"_index":1051,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["this.touched",{"_index":1162,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["this.updatevalues",{"_index":696,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["this.value",{"_index":563,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["this.wait(this.appeartime",{"_index":239,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.wait(this.hidetime",{"_index":241,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.wait(this.waittime",{"_index":240,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.waits",{"_index":228,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.work",{"_index":376,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.writevalueinnerchange(file",{"_index":875,"title":{},"body":{"components/FileInputComponent.html":{}}}],["this.writevalueinnerchange(newoption",{"_index":1019,"title":{},"body":{"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{}}}],["this.writevalueinnerchange(undefined",{"_index":876,"title":{},"body":{"components/FileInputComponent.html":{}}}],["throw",{"_index":509,"title":{},"body":{"components/ButtonComponent.html":{}}}],["throwing",{"_index":985,"title":{},"body":{"classes/Queue.html":{}}}],["time",{"_index":210,"title":{},"body":{"components/AlertComponent.html":{}}}],["times",{"_index":278,"title":{},"body":{"injectables/AlertService.html":{}}}],["toggle",{"_index":154,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["toggleswitchcomponent",{"_index":153,"title":{"components/ToggleSwitchComponent.html":{}},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["top",{"_index":960,"title":{},"body":{"components/InputComponent.html":{}}}],["touched",{"_index":707,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/StateManagerDirective.html":{}}}],["touched(istouched",{"_index":1156,"title":{},"body":{"directives/StateManagerDirective.html":{}}}],["transform",{"_index":1202,"title":{},"body":{"classes/Table.html":{}}}],["transforms",{"_index":1195,"title":{},"body":{"classes/Table.html":{}}}],["tree",{"_index":33,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["true",{"_index":71,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"components/ToggleSwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1340,"title":{},"body":{"dependencies.html":{}}}],["ture",{"_index":448,"title":{},"body":{"components/ButtonComponent.html":{}}}],["two",{"_index":438,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/ThemeService.html":{}}}],["type",{"_index":22,"title":{},"body":{"interfaces/Alert.html":{},"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/AlertServiceSubscriber.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"interfaces/ColumnInformationInterface.html":{},"interfaces/ColumnInformationOptionsInterface.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"interfaces/TableInterface.html":{},"directives/ThemeColorInputDirective.html":{},"directives/ThemeInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":1170,"title":{},"body":{"classes/Table.html":{}}}],["unchecked",{"_index":568,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadioButtonComponent.html":{}}}],["undefinded",{"_index":974,"title":{},"body":{"classes/Queue.html":{}}}],["undefined",{"_index":631,"title":{},"body":{"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/EventManagerDirective.html":{},"classes/Queue.html":{}}}],["unset",{"_index":349,"title":{},"body":{"injectables/AlertService.html":{}}}],["untouched",{"_index":708,"title":{},"body":{"directives/ControlValueAccessorClassNameInputDirective.html":{}}}],["up",{"_index":1200,"title":{},"body":{"classes/Table.html":{}}}],["update",{"_index":1372,"title":{},"body":{"index.html":{}}}],["updatevalues",{"_index":575,"title":{},"body":{"components/CheckboxGroupComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{}}}],["upon",{"_index":401,"title":{},"body":{"interfaces/AlertServiceSubscriber.html":{}}}],["usage",{"_index":456,"title":{},"body":{"components/ButtonComponent.html":{}}}],["use",{"_index":511,"title":{},"body":{"components/ButtonComponent.html":{},"index.html":{}}}],["use/show",{"_index":15,"title":{},"body":{"interfaces/Alert.html":{}}}],["used",{"_index":9,"title":{},"body":{"interfaces/Alert.html":{},"injectables/AlertService.html":{}}}],["usedelimiter",{"_index":734,"title":{},"body":{"classes/Csv.html":{}}}],["usedelimiter(delimiter",{"_index":767,"title":{},"body":{"classes/Csv.html":{}}}],["useexisting",{"_index":549,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/FileInputComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["value",{"_index":68,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"modules/BaseModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ColorInputDirective.html":{},"classes/ColumnInformation.html":{},"classes/ColumnInformationDefaults.html":{},"components/ContainerComponent.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"directives/ControlValueAccessorColorInputDirective.html":{},"directives/ControlValueAccessorSizeColorInputDirective.html":{},"directives/ControlValueAccessorSizeInputDirective.html":{},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{},"directives/ControlValueAccessorThemeColorInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/InputComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"directives/SizeColorInputDirective.html":{},"directives/SizeInputDirective.html":{},"directives/SizeThemeColorInputDirective.html":{},"directives/SizeThemeInputDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"classes/Table.html":{},"components/TableComponent.html":{},"directives/ThemeColorInputDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value(value",{"_index":693,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["valuesuffix",{"_index":1087,"title":{},"body":{"components/SliderComponent.html":{}}}],["valuetype",{"_index":677,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{},"directives/EventManagerDirective.html":{}}}],["var",{"_index":116,"title":{},"body":{"components/AlertBoxComponent.html":{},"components/AlertComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"components/ContainerComponent.html":{},"components/FileInputComponent.html":{},"components/FormGroupComponent.html":{},"components/GridComponent.html":{},"components/IconButtonComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/ToggleSwitchComponent.html":{}}}],["variable",{"_index":1335,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1403,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1354,"title":{},"body":{"index.html":{}}}],["via",{"_index":284,"title":{},"body":{"injectables/AlertService.html":{},"classes/Table.html":{}}}],["void",{"_index":317,"title":{},"body":{"injectables/AlertService.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CheckboxGroupComponent.html":{},"directives/ClassNameInputDirective.html":{},"directives/ControlValueAccessorBaseDirective.html":{},"directives/ControlValueAccessorClassNameInputDirective.html":{},"classes/Csv.html":{},"directives/EventManagerDirective.html":{},"components/FileInputComponent.html":{},"components/IconButtonComponent.html":{},"classes/Queue.html":{},"components/RadioButtonComponent.html":{},"components/RadioButtonGroupComponent.html":{},"components/SelectButtonComponent.html":{},"directives/SelectionOptionsDirective.html":{},"components/SliderComponent.html":{},"directives/StateManagerDirective.html":{},"injectables/ThemeService.html":{},"components/ToggleSwitchComponent.html":{}}}],["wait",{"_index":188,"title":{},"body":{"components/AlertComponent.html":{}}}],["wait(time",{"_index":208,"title":{},"body":{"components/AlertComponent.html":{}}}],["waits",{"_index":189,"title":{},"body":{"components/AlertComponent.html":{}}}],["waittime",{"_index":190,"title":{},"body":{"components/AlertComponent.html":{}}}],["warn",{"_index":309,"title":{},"body":{"injectables/AlertService.html":{}}}],["warn(message",{"_index":334,"title":{},"body":{"injectables/AlertService.html":{}}}],["way",{"_index":1363,"title":{},"body":{"index.html":{}}}],["well",{"_index":967,"title":{},"body":{"classes/Queue.html":{},"classes/Table.html":{}}}],["while(sum",{"_index":1121,"title":{},"body":{"components/SliderComponent.html":{}}}],["whishes",{"_index":256,"title":{},"body":{"injectables/AlertService.html":{}}}],["without",{"_index":1187,"title":{},"body":{"classes/Table.html":{}}}],["work",{"_index":13,"title":{},"body":{"interfaces/Alert.html":{},"injectables/AlertService.html":{}}}],["work]{@link",{"_index":363,"title":{},"body":{"injectables/AlertService.html":{}}}],["working",{"_index":339,"title":{},"body":{"injectables/AlertService.html":{}}}],["works",{"_index":337,"title":{},"body":{"injectables/AlertService.html":{}}}],["workspace",{"_index":1373,"title":{},"body":{"index.html":{}}}],["writevalue",{"_index":674,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["writevalue(value",{"_index":682,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["writevalueinnerchange",{"_index":675,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["writevalueinnerchange(value",{"_index":684,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["writing",{"_index":692,"title":{},"body":{"directives/ControlValueAccessorBaseDirective.html":{}}}],["xe001",{"_index":107,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["xe2c6",{"_index":880,"title":{},"body":{"components/FileInputComponent.html":{}}}],["xe5cf",{"_index":1057,"title":{},"body":{"components/SelectButtonComponent.html":{}}}],["xe876",{"_index":569,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["xe87e",{"_index":111,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["xe88f",{"_index":109,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["xe92d",{"_index":108,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["xe994",{"_index":110,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["xf1df",{"_index":106,"title":{},"body":{"components/AlertBoxComponent.html":{}}}],["yes",{"_index":759,"title":{},"body":{"classes/Csv.html":{},"classes/Table.html":{}}}],["yourself",{"_index":1386,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":414,"title":{},"body":{"modules/BaseModule.html":{},"modules/FormModule.html":{},"modules/SbElementModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Alert.html":{"url":"interfaces/Alert.html","title":"interface - Alert","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Alert\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/alert/alert.ts\n        \n\n            \n                Description\n            \n            \n                This interface describes an alert.\nThe interface is used by the AlertService to create alerts and work\nwith the AlertServiceSubscriber which use/show the alerts.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        color\n                                \n                                \n                                        message\n                                \n                                \n                                        size\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The color of the alert.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The message of the alert.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The size of the alert.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Alert {\n  /**\n   * The message of the alert.\n   */\n  message: string;\n\n  /**\n   * The size of the alert.\n   */\n  size: string;\n\n  /**\n   * The color of the alert.\n   */\n  color: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlertBoxComponent.html":{"url":"components/AlertBoxComponent.html","title":"component - AlertBoxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlertBoxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/alert-box/alert-box.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SizeThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-alert-box\n            \n\n\n\n\n            \n                templateUrl\n                ./alert-box.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                flipped\n                            \n                            \n                                    Private\n                                pill\n                            \n                            \n                                    Private\n                                plain\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                customIcon\n                            \n                            \n                                showArrow\n                            \n                            \n                                showIcon\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(flipped: any, pill: any, plain: any, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/alert-box/alert-box.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        flipped\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pill\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plain\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        customIcon\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/alert-box/alert-box.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showArrow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/alert-box/alert-box.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showIcon\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/alert-box/alert-box.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert-box/alert-box.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            flipped\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert-box/alert-box.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pill\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert-box/alert-box.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            plain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert-box/alert-box.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-alert-box'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert-box/alert-box.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Attribute, Component, Input, Optional } from '@angular/core';\nimport { ThemeService } from '../../services/theme/theme.service';\nimport { SizeThemeColorInputDirective } from '../base/style-input/size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-alert-box',\n  templateUrl: './alert-box.component.html'\n})\nexport class AlertBoxComponent extends SizeThemeColorInputDirective {\n\n  public rootClass: string = 'sb-el-alert-box';\n\n  @Input()\n  public showArrow: boolean = true;\n\n  @Input()\n  public showIcon: boolean = true;\n\n  @Input()\n  public customIcon: boolean = false;\n\n  public flipped: boolean = false;\n  private pill: boolean = false;\n  private plain: boolean = false;\n\n  constructor(\n    @Optional() @Attribute('flipped') flipped: any,\n    @Optional() @Attribute('pill') pill: any,\n    @Optional() @Attribute('plain') plain: any,\n    themeService: ThemeService\n  ) {\n    super(themeService);\n    if (flipped == '') this.flipped = true;\n    if (pill == '') this.pill = true;\n    if (plain == '') this.plain = true;\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.flipped ? 'is-flipped' : '');\n    classes.push(this.pill ? 'is-pill' : '');\n    classes.push(this.plain ? 'is-plain' : '');\n    classes.push(!this.showArrow && !this.showIcon ? 'is-center' : '');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n      &#xf1df;\n    \n    \n  \n  \n    \n    \n      &#xe001;\n      &#xe92d;\n      &#xe88f;\n      &#xe994;\n      &#xe87e;\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'AlertBoxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlertComponent.html":{"url":"components/AlertComponent.html","title":"component - AlertComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlertComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/alert/alert.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SizeThemeColorInputDirective\n    \n\n    \n        Implements\n    \n    \n                    AlertServiceSubscriber\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-alert\n            \n\n\n\n\n            \n                templateUrl\n                ./alert.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alertObject\n                            \n                            \n                                    Private\n                                appearTime\n                            \n                            \n                                    Private\n                                hideTime\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                alert\n                            \n                            \n                                    Private\n                                    Async\n                                appears\n                            \n                            \n                                    Public\n                                getClasses\n                            \n                            \n                                    Private\n                                    Async\n                                hides\n                            \n                            \n                                    Private\n                                    Async\n                                resetAlert\n                            \n                            \n                                    Private\n                                    Async\n                                setAlert\n                            \n                            \n                                    Private\n                                    Async\n                                wait\n                            \n                            \n                                    Private\n                                    Async\n                                waits\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                showArrow\n                            \n                            \n                                showIcon\n                            \n                            \n                                waitTime\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    message\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertService: AlertService, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/alert/alert.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        showArrow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/alert/alert.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showIcon\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/alert/alert.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        waitTime\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2000\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/alert/alert.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            alert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    alert(alert: Alert)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert/alert.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alert\n                                    \n                                                Alert\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            appears\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    appears()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert/alert.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert/alert.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            hides\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hides()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert/alert.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            resetAlert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetAlert()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert/alert.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            setAlert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setAlert(alert: Alert)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert/alert.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alert\n                                    \n                                                Alert\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            wait\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    wait(time: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert/alert.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            waits\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    waits()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/alert/alert.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alertObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Alert | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert/alert.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            appearTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 300\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert/alert.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hideTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1000\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert/alert.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-alert'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert/alert.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/alert/alert.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n\n                \n                    \n                        getmessage()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/alert/alert.component.ts:77\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Alert } from '../../models/alert/alert';\nimport { AlertServiceSubscriber } from '../../models/alert/alert-service-subscriber';\nimport { AlertService } from '../../services/alert/alert.service';\nimport { ThemeService } from '../../services/theme/theme.service';\nimport { SizeThemeColorInputDirective } from '../base/style-input/size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-alert',\n  templateUrl: './alert.component.html'\n})\nexport class AlertComponent extends SizeThemeColorInputDirective implements AlertServiceSubscriber {\n\n  public rootClass: string = 'sb-el-alert';\n\n  @Input()\n  public showArrow: boolean = true;\n\n  @Input()\n  public showIcon: boolean = true;\n\n  public alertObject: Alert | null = null;\n  public show: boolean = false;\n  private appearTime: number = 300;\n  @Input()\n  public waitTime: number = 2000;\n  private hideTime: number = 1000;\n\n  constructor(\n    private alertService: AlertService,\n    themeService: ThemeService\n  ) {\n    super(themeService);\n    this.alertService.subscribe(this);\n  }\n\n  public async alert(alert: Alert): Promise {\n    return this.setAlert(alert)\n    .then(() => this.appears())\n    .then(() => this.waits())\n    .then(() => this.hides())\n    .then(() => this.resetAlert())\n  }\n\n  private async setAlert(alert: Alert): Promise {\n    this.alertObject = alert;\n    this.size = alert.size;\n    this.color = alert.color;\n    return Promise.resolve();\n  }\n\n  private async appears(): Promise {\n    await Promise.resolve(this.show = true);\n    return await this.wait(this.appearTime);\n  }\n\n  private async waits(): Promise {\n    return this.wait(this.waitTime);\n  }\n\n  private async hides(): Promise {\n    await Promise.resolve(this.show = false);\n    return await this.wait(this.hideTime);\n  }\n\n  private async wait(time: number): Promise {\n    return new Promise(resolve => {\n      setTimeout(() => resolve(), time);\n    });\n  }\n\n  private async resetAlert(): Promise {\n    this.alertObject = null;\n    return Promise.resolve();\n  }\n\n  get message(): string {\n    if (this.alertObject) return this.alertObject.message;\n    else return '';\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.show ? 'is-active' : 'is-inactive');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      {{ message }}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ message }}      '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'AlertComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AlertService.html":{"url":"injectables/AlertService.html","title":"injectable - AlertService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AlertService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/alert/alert.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides a global service to display alerts.\nThe alert service can be used by any component which either whishes to show\nor to create an alert to be shown.\nIf a component wants to show alerts, the\ncomponent has to call subscribe with the component as the\nparameter. The component also needs to implement the\nAlertServiceSubscriber interface so the service can inform the\nsubscriber about the incoming alerts.\nIf a component wants to create an alert, the service provides different\nmethods which have predefined colors. The different methods take a message\nwhich is a string and an optional size parameter, which is also a\nstring. The methods then passes the alert to the\nAlertServiceSubscriber with a predefinded color. There is also a\nmethod, which lets you customize everything: alert. All these\nmethods then add the created alert to the alertQueue,\nand then call work. This method times the alerts and then\ninforms the subscriber when a alert needs to be shown (when an alert is\nready to be shown).\nThe lifecycle of an Alert inside the service:\n\nThe Alert gets created via a create call (like\nalert).\nThe Alert gets placed into the alertQueue.\nThe work method then removes an Alert out of the\nqueue and tells the subscribers to show the removed Alert. The\nAlert gets collected by the garbage collector after the Alert\nhas been shown.\nIf all subscribers have finished showing the Alert, the work\nmethod checks if the alertQueue is empty or not. If the\nqueue is empty, the work method terminates. If not, go to step\n3 again.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alertQueue\n                            \n                            \n                                    Private\n                                isBusy\n                            \n                            \n                                    Private\n                                subscribers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alert\n                            \n                            \n                                    Public\n                                inform\n                            \n                            \n                                    Public\n                                primary\n                            \n                            \n                                    Public\n                                secondary\n                            \n                            \n                                    Private\n                                    Async\n                                showAlert\n                            \n                            \n                                    Public\n                                subscribe\n                            \n                            \n                                    Public\n                                success\n                            \n                            \n                                    Public\n                                warn\n                            \n                            \n                                    Private\n                                    Async\n                                work\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            alert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    alert(message: string, size: string, color: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:136\n                \n            \n\n\n            \n                \n                    Creates and shows an Alert.\nThe message, size and color of the Alert can be specified as\nparameters. The Alert gets created with these parameters and\nplaced into the alertQueue. After that, the\nwork method gets called.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The message of the alert\n\n                                    \n                                \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'd'\n                                    \n\n                                    \n                                        The size of the alert\n\n                                    \n                                \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'warn'\n                                    \n\n                                    \n                                        The color of the alert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            inform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    inform(message: string, size: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:100\n                \n            \n\n\n            \n                \n                    Creates and shows an Alert with color info.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The message of the alert\n\n                                    \n                                \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'd'\n                                    \n\n                                    \n                                        The size of the alert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            primary\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    primary(message: string, size: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:110\n                \n            \n\n\n            \n                \n                    Creates and shows an Alert with color primary.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The message of the alert\n\n                                    \n                                \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'd'\n                                    \n\n                                    \n                                        The size of the alert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            secondary\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    secondary(message: string, size: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:120\n                \n            \n\n\n            \n                \n                    Creates and shows an Alert with color secondary.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The message of the alert\n\n                                    \n                                \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'd'\n                                    \n\n                                    \n                                        The size of the alert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            showAlert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showAlert(alert: Alert)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:183\n                \n            \n\n\n            \n                \n                    Notifies all subscibers to show an Alert.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    alert\n                                    \n                                                Alert\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Alert to show\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise, which is resolved when all subscribers\nhave finished showing the alert\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            subscribe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribe(subscriber: AlertServiceSubscriber)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:70\n                \n            \n\n\n            \n                \n                    Adds a new subscriber into subscribers.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    subscriber\n                                    \n                                                AlertServiceSubscriber\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new subscriber\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            success\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    success(message: string, size: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:90\n                \n            \n\n\n            \n                \n                    Creates and shows an Alert with color success.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The message of the alert\n\n                                    \n                                \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'd'\n                                    \n\n                                    \n                                        The size of the alert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    warn(message: string, size: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:80\n                \n            \n\n\n            \n                \n                    Creates and shows an Alert with color warn.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The message of the alert\n\n                                    \n                                \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'd'\n                                    \n\n                                    \n                                        The size of the alert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            work\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    work()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/alert/alert.service.ts:160\n                \n            \n\n\n            \n                \n                    Works on the alertQueue.\nIf the service is not busy working on the alertQueue\nand the alertQueue is not empty, meaning that there\nare still Alerts to process, the method will set the\nisBusy flag, remove the next Alert from the queue\nand show the Alert by calling showAlert.\nOnce the show call has finished, the isBusy flag is unset\nand the work method gets called again.\nIf a current work call is still in progress, meaning the\nisBusy flag is set, a new work call will do nothing.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            alertQueue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Queue\n\n                        \n                    \n                    \n                        \n                            Default value : new Queue()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/alert/alert.service.ts:57\n                            \n                        \n\n                \n                    \n                        The queue of all Alerts which need to be shown.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isBusy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/alert/alert.service.ts:63\n                            \n                        \n\n                \n                    \n                        Flag to inidcate if the service is busy working on the\nalertQueue or not.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscribers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/alert/alert.service.ts:51\n                            \n                        \n\n                \n                    \n                        An array of all subscribers.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Alert } from '../../models/alert/alert';\nimport { AlertServiceSubscriber } from '../../models/alert/alert-service-subscriber';\nimport { Queue } from '../../models/queue/queue';\n\n/**\n * Provides a global service to display alerts.\n *\n * The alert service can be used by any component which either whishes to show\n * or to create an alert to be shown.\n *\n * If a component wants to show alerts, the\n * component has to call [subscribe]{@link #subscribe} with the component as the\n * parameter. The component also needs to implement the\n * {@link AlertServiceSubscriber} interface so the service can inform the\n * subscriber about the incoming alerts.\n *\n * If a component wants to create an alert, the service provides different\n * methods which have predefined colors. The different methods take a `message`\n * which is a `string` and an optional `size` parameter, which is also a\n * `string`. The methods then passes the alert to the\n * {@link AlertServiceSubscriber} with a predefinded color. There is also a\n * method, which lets you customize everything: [alert]{@link #alert}. All these\n * methods then add the created alert to the [alertQueue]{@link #alertQueue},\n * and then call [work]{@link #work}. This method times the alerts and then\n * informs the subscriber when a alert needs to be shown (when an alert is\n * ready to be shown).\n *\n * The lifecycle of an {@link Alert} inside the service:\n * 1. The {@link Alert} gets created via a create call (like\n * [alert]{@link #alert}).\n * 2. The {@link Alert} gets placed into the [alertQueue]{@link #alertQueue}.\n * 3. The [work]{@link #work} method then removes an {@link Alert} out of the\n * queue and tells the subscribers to show the removed {@link Alert}. The\n * {@link Alert} gets collected by the garbage collector after the {@link Alert}\n * has been shown.\n * 4. If all subscribers have finished showing the {@link Alert}, the work\n * method checks if the [alertQueue]{@link #alertQueue} is empty or not. If the\n * queue is empty, the [work]{@link #work} method terminates. If not, go to step\n * 3 again.\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  /**\n   * An array of all subscribers.\n   */\n  private subscribers: Array\n    = new Array();\n\n  /**\n   * The queue of all [Alerts]{@link Alert} which need to be shown.\n   */\n  private alertQueue: Queue = new Queue();\n\n  /**\n   * Flag to inidcate if the service is busy working on the\n   * [alertQueue]{@link #alertQueue} or not.\n   */\n  private isBusy: boolean = false;\n\n  /**\n   * Adds a new subscriber into [subscribers]{@link #subscribers}.\n   *\n   * @param{AlertServiceSubscriber} subscriber The new subscriber\n   */\n  public subscribe(subscriber: AlertServiceSubscriber): void {\n    this.subscribers.push(subscriber);\n  }\n\n  /**\n   * Creates and shows an {@link Alert} with color `warn`.\n   *\n   * @param{string} message The message of the alert\n   * @param{string} size The size of the alert\n   */\n  public warn(message: string, size = 'd'): void {\n    this.alert(message, size, 'warn');\n  }\n\n  /**\n   * Creates and shows an {@link Alert} with color `success`.\n   *\n   * @param{string} message The message of the alert\n   * @param{string} size The size of the alert\n   */\n  public success(message: string, size = 'd'): void {\n    this.alert(message, size, 'success');\n  }\n\n  /**\n   * Creates and shows an {@link Alert} with color `info`.\n   *\n   * @param{string} message The message of the alert\n   * @param{string} size The size of the alert\n   */\n  public inform(message: string, size = 'd'): void {\n    this.alert(message, size, 'info');\n  }\n\n  /**\n   * Creates and shows an {@link Alert} with color `primary`.\n   *\n   * @param{string} message The message of the alert\n   * @param{string} size The size of the alert\n   */\n  public primary(message: string, size = 'd'): void {\n    this.alert(message, size, 'primary');\n  }\n\n  /**\n   * Creates and shows an {@link Alert} with color `secondary`.\n   *\n   * @param{string} message The message of the alert\n   * @param{string} size The size of the alert\n   */\n  public secondary(message: string, size = 'd'): void {\n    this.alert(message, size, 'secondary');\n  }\n\n  /**\n   * Creates and shows an {@link Alert}.\n   *\n   * The `message`, `size` and `color` of the {@link Alert} can be specified as\n   * parameters. The {@link Alert} gets created with these parameters and\n   * placed into the [alertQueue]{@link #alertQueue}. After that, the\n   * [work]{@link #work} method gets called.\n   *\n   * @param{string} message The message of the alert\n   * @param{string} size The size of the alert\n   * @param{string} color The color of the alert\n   */\n  public alert(message: string, size = 'd', color = 'warn'): void {\n    this.alertQueue.enqueue({\n      message,\n      size,\n      color\n    });\n    this.work();\n  }\n\n  /**\n   * Works on the [alertQueue]{@link #alertQueue}.\n   *\n   * If the service is not busy working on the [alertQueue]{@link #alertQueue}\n   * and the [alertQueue]{@link #alertQueue} is not empty, meaning that there\n   * are still [Alerts]{@link Alert} to process, the method will set the\n   * [isBusy]{@link #isBusy} flag, remove the next {@link Alert} from the queue\n   * and show the {@link Alert} by calling [showAlert]{@link #showAlert}.\n   *\n   * Once the show call has finished, the [isBusy]{@link #isBusy} flag is unset\n   * and the [work]{@link #work} method gets called again.\n   *\n   * If a current work call is still in progress, meaning the\n   * [isBusy]{@link #isBusy} flag is set, a new work call will do nothing.\n   */\n  private async work(): Promise {\n    if (!this.alertQueue.isEmpty() && !this.isBusy) {\n      this.isBusy = true;\n      let alert = this.alertQueue.dequeue();\n      if (alert) {\n        this.showAlert(alert).then(() => {\n          this.isBusy = false;\n          this.work();\n        });\n      } else {\n        this.isBusy = false;\n      }\n    }\n  }\n\n\n  /**\n   * Notifies all subscibers to show an {@link Alert}.\n   *\n   * @param{Alert} alert The `Alert` to show\n   * @returns{Promise} A promise, which is resolved when all subscribers\n   * have finished showing the `alert`\n   */\n  private async showAlert(alert: Alert): Promise {\n    return Promise.all(this.subscribers.map(subscriber =>\n      subscriber.alert(alert)\n    ));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AlertServiceSubscriber.html":{"url":"interfaces/AlertServiceSubscriber.html","title":"interface - AlertServiceSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AlertServiceSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/alert/alert-service-subscriber.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a subscriber of the AlertService. The Interface has to\nbe implemented by a subscriber. The subscriber then has to register itself to\nthe AlertService in order to receive alerts. The AlertService\nthen calls the alert method of the subscriber with the given\nAlert. The subscriber is then free to do anything with the given\nAlert.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    alert\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alert\n                        \n                        \n                    \n                \n            \n            \n                \nalert(alert: Alert)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/alert/alert-service-subscriber.ts:21\n                \n            \n\n\n            \n                \n                    This method is called, when the subscriber has registered itself by the\nAlertService. When an Alert is created, the\nAlertService calles the subscribers alert method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    alert\n                                    \n                                                Alert\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The alert to show.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The subscriber has to return a Promise\nwhich will resolve upon finishing the process of showing the alert.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Alert } from './alert';\n\n/**\n * Interface for a subscriber of the {@link AlertService}. The Interface has to\n * be implemented by a subscriber. The subscriber then has to register itself to\n * the {@link AlertService} in order to receive alerts. The {@link AlertService}\n * then calls the [alert]{@link #alert} method of the subscriber with the given\n * {@link Alert}. The subscriber is then free to do anything with the given\n * {@link Alert}.\n */\nexport interface AlertServiceSubscriber {\n  /**\n   * This method is called, when the subscriber has registered itself by the\n   * {@link AlertService}. When an {@link Alert} is created, the\n   * {@link AlertService} calles the subscribers [alert]{@link #alert} method.\n   *\n   * @param{Alert} alert The alert to show.\n   * @returns{Promise} The subscriber has to return a `Promise`\n   * which will resolve upon finishing the process of showing the alert.\n   */\n  alert(alert: Alert): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BaseModule.html":{"url":"modules/BaseModule.html","title":"module - BaseModule","body":"\n                   \n\n\n\n\n    Modules\n    BaseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BaseModule\n\n\n\ncluster_BaseModule_exports\n\n\n\ncluster_BaseModule_declarations\n\n\n\n\nClassNameInputDirective\n\nClassNameInputDirective\n\n\n\nBaseModule\n\nBaseModule\n\nBaseModule -->\n\nClassNameInputDirective->BaseModule\n\n\n\n\n\nColorInputDirective\n\nColorInputDirective\n\nBaseModule -->\n\nColorInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorBaseDirective\n\nControlValueAccessorBaseDirective\n\nBaseModule -->\n\nControlValueAccessorBaseDirective->BaseModule\n\n\n\n\n\nControlValueAccessorClassNameInputDirective\n\nControlValueAccessorClassNameInputDirective\n\nBaseModule -->\n\nControlValueAccessorClassNameInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorColorInputDirective\n\nControlValueAccessorColorInputDirective\n\nBaseModule -->\n\nControlValueAccessorColorInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorSizeColorInputDirective\n\nControlValueAccessorSizeColorInputDirective\n\nBaseModule -->\n\nControlValueAccessorSizeColorInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorSizeInputDirective\n\nControlValueAccessorSizeInputDirective\n\nBaseModule -->\n\nControlValueAccessorSizeInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorSizeThemeColorInputDirective\n\nControlValueAccessorSizeThemeColorInputDirective\n\nBaseModule -->\n\nControlValueAccessorSizeThemeColorInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorThemeColorInputDirective\n\nControlValueAccessorThemeColorInputDirective\n\nBaseModule -->\n\nControlValueAccessorThemeColorInputDirective->BaseModule\n\n\n\n\n\nEventManagerDirective\n\nEventManagerDirective\n\nBaseModule -->\n\nEventManagerDirective->BaseModule\n\n\n\n\n\nSizeColorInputDirective\n\nSizeColorInputDirective\n\nBaseModule -->\n\nSizeColorInputDirective->BaseModule\n\n\n\n\n\nSizeInputDirective\n\nSizeInputDirective\n\nBaseModule -->\n\nSizeInputDirective->BaseModule\n\n\n\n\n\nSizeThemeColorInputDirective\n\nSizeThemeColorInputDirective\n\nBaseModule -->\n\nSizeThemeColorInputDirective->BaseModule\n\n\n\n\n\nSizeThemeInputDirective\n\nSizeThemeInputDirective\n\nBaseModule -->\n\nSizeThemeInputDirective->BaseModule\n\n\n\n\n\nStateManagerDirective\n\nStateManagerDirective\n\nBaseModule -->\n\nStateManagerDirective->BaseModule\n\n\n\n\n\nThemeColorInputDirective\n\nThemeColorInputDirective\n\nBaseModule -->\n\nThemeColorInputDirective->BaseModule\n\n\n\n\n\nThemeInputDirective\n\nThemeInputDirective\n\nBaseModule -->\n\nThemeInputDirective->BaseModule\n\n\n\n\n\nClassNameInputDirective \n\nClassNameInputDirective \n\nClassNameInputDirective  -->\n\nBaseModule->ClassNameInputDirective \n\n\n\n\n\nColorInputDirective \n\nColorInputDirective \n\nColorInputDirective  -->\n\nBaseModule->ColorInputDirective \n\n\n\n\n\nControlValueAccessorBaseDirective \n\nControlValueAccessorBaseDirective \n\nControlValueAccessorBaseDirective  -->\n\nBaseModule->ControlValueAccessorBaseDirective \n\n\n\n\n\nControlValueAccessorClassNameInputDirective \n\nControlValueAccessorClassNameInputDirective \n\nControlValueAccessorClassNameInputDirective  -->\n\nBaseModule->ControlValueAccessorClassNameInputDirective \n\n\n\n\n\nControlValueAccessorColorInputDirective \n\nControlValueAccessorColorInputDirective \n\nControlValueAccessorColorInputDirective  -->\n\nBaseModule->ControlValueAccessorColorInputDirective \n\n\n\n\n\nControlValueAccessorSizeColorInputDirective \n\nControlValueAccessorSizeColorInputDirective \n\nControlValueAccessorSizeColorInputDirective  -->\n\nBaseModule->ControlValueAccessorSizeColorInputDirective \n\n\n\n\n\nControlValueAccessorSizeInputDirective \n\nControlValueAccessorSizeInputDirective \n\nControlValueAccessorSizeInputDirective  -->\n\nBaseModule->ControlValueAccessorSizeInputDirective \n\n\n\n\n\nControlValueAccessorSizeThemeColorInputDirective \n\nControlValueAccessorSizeThemeColorInputDirective \n\nControlValueAccessorSizeThemeColorInputDirective  -->\n\nBaseModule->ControlValueAccessorSizeThemeColorInputDirective \n\n\n\n\n\nControlValueAccessorThemeColorInputDirective \n\nControlValueAccessorThemeColorInputDirective \n\nControlValueAccessorThemeColorInputDirective  -->\n\nBaseModule->ControlValueAccessorThemeColorInputDirective \n\n\n\n\n\nSizeColorInputDirective \n\nSizeColorInputDirective \n\nSizeColorInputDirective  -->\n\nBaseModule->SizeColorInputDirective \n\n\n\n\n\nSizeInputDirective \n\nSizeInputDirective \n\nSizeInputDirective  -->\n\nBaseModule->SizeInputDirective \n\n\n\n\n\nSizeThemeColorInputDirective \n\nSizeThemeColorInputDirective \n\nSizeThemeColorInputDirective  -->\n\nBaseModule->SizeThemeColorInputDirective \n\n\n\n\n\nSizeThemeInputDirective \n\nSizeThemeInputDirective \n\nSizeThemeInputDirective  -->\n\nBaseModule->SizeThemeInputDirective \n\n\n\n\n\nThemeColorInputDirective \n\nThemeColorInputDirective \n\nThemeColorInputDirective  -->\n\nBaseModule->ThemeColorInputDirective \n\n\n\n\n\nThemeInputDirective \n\nThemeInputDirective \n\nThemeInputDirective  -->\n\nBaseModule->ThemeInputDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/components/base/base.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ClassNameInputDirective\n                        \n                        \n                            ColorInputDirective\n                        \n                        \n                            ControlValueAccessorBaseDirective\n                        \n                        \n                            ControlValueAccessorClassNameInputDirective\n                        \n                        \n                            ControlValueAccessorColorInputDirective\n                        \n                        \n                            ControlValueAccessorSizeColorInputDirective\n                        \n                        \n                            ControlValueAccessorSizeInputDirective\n                        \n                        \n                            ControlValueAccessorSizeThemeColorInputDirective\n                        \n                        \n                            ControlValueAccessorThemeColorInputDirective\n                        \n                        \n                            EventManagerDirective\n                        \n                        \n                            SizeColorInputDirective\n                        \n                        \n                            SizeInputDirective\n                        \n                        \n                            SizeThemeColorInputDirective\n                        \n                        \n                            SizeThemeInputDirective\n                        \n                        \n                            StateManagerDirective\n                        \n                        \n                            ThemeColorInputDirective\n                        \n                        \n                            ThemeInputDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ClassNameInputDirective\n                        \n                        \n                            ColorInputDirective\n                        \n                        \n                            ControlValueAccessorBaseDirective\n                        \n                        \n                            ControlValueAccessorClassNameInputDirective\n                        \n                        \n                            ControlValueAccessorColorInputDirective\n                        \n                        \n                            ControlValueAccessorSizeColorInputDirective\n                        \n                        \n                            ControlValueAccessorSizeInputDirective\n                        \n                        \n                            ControlValueAccessorSizeThemeColorInputDirective\n                        \n                        \n                            ControlValueAccessorThemeColorInputDirective\n                        \n                        \n                            SizeColorInputDirective\n                        \n                        \n                            SizeInputDirective\n                        \n                        \n                            SizeThemeColorInputDirective\n                        \n                        \n                            SizeThemeInputDirective\n                        \n                        \n                            ThemeColorInputDirective\n                        \n                        \n                            ThemeInputDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ColorInputDirective } from './style-input/color-input.directive';\nimport { ThemeColorInputDirective } from './style-input/theme-color-input.directive';\nimport { SizeInputDirective } from './style-input/size-input.directive';\nimport { SizeColorInputDirective } from './style-input/size-color-input.directive';\nimport { SizeThemeColorInputDirective } from './style-input/size-theme-color-input.directive';\nimport { ControlValueAccessorBaseDirective } from './control-value-accessor/control-value-accessor.base.directive';\nimport { ClassNameInputDirective } from './style-input/class-name-input.directive';\nimport { ThemeInputDirective } from './style-input/theme-input.directive';\nimport { ControlValueAccessorClassNameInputDirective } from './control-value-accessor-style-input/control-value-accessor-class-name-input.directive';\nimport { ControlValueAccessorThemeColorInputDirective } from './control-value-accessor-style-input/control-value-accessor-theme-color-input.directive';\nimport { ControlValueAccessorColorInputDirective } from './control-value-accessor-style-input/control-value-accessor-color-input.directive';\nimport { ControlValueAccessorSizeInputDirective } from './control-value-accessor-style-input/control-value-accessor-size-input.directive';\nimport { ControlValueAccessorSizeColorInputDirective } from './control-value-accessor-style-input/control-value-accessor-size-color-input.directive';\nimport { ControlValueAccessorSizeThemeColorInputDirective } from './control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive';\nimport { SizeThemeInputDirective } from './style-input/size-theme-input.directive';\nimport { StateManagerDirective } from './control-value-accessor/state-manager.directive';\nimport { EventManagerDirective } from './control-value-accessor/event-manager.directive';\n\n\n\n@NgModule({\n  declarations: [\n    ControlValueAccessorBaseDirective,\n\n    ColorInputDirective,\n    ThemeColorInputDirective,\n    SizeInputDirective,\n    SizeColorInputDirective,\n    SizeThemeColorInputDirective,\n    ThemeInputDirective,\n    SizeThemeInputDirective,\n    ClassNameInputDirective,\n\n    ControlValueAccessorColorInputDirective,\n    ControlValueAccessorThemeColorInputDirective,\n    ControlValueAccessorSizeInputDirective,\n    ControlValueAccessorSizeColorInputDirective,\n    ControlValueAccessorSizeThemeColorInputDirective,\n    ControlValueAccessorClassNameInputDirective,\n    StateManagerDirective,\n    EventManagerDirective,\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ControlValueAccessorBaseDirective,\n\n    ColorInputDirective,\n    ThemeColorInputDirective,\n    SizeInputDirective,\n    SizeColorInputDirective,\n    SizeThemeColorInputDirective,\n    ThemeInputDirective,\n    SizeThemeInputDirective,\n    ClassNameInputDirective,\n\n    ControlValueAccessorColorInputDirective,\n    ControlValueAccessorThemeColorInputDirective,\n    ControlValueAccessorSizeInputDirective,\n    ControlValueAccessorSizeColorInputDirective,\n    ControlValueAccessorSizeThemeColorInputDirective,\n    ControlValueAccessorClassNameInputDirective,\n  ]\n})\nexport class BaseModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/button/button.component.ts\n\n\n    \n        Description\n    \n    \n        The button component acts like a normal html button, but provides different\nstyle options in the form of inputs or attributes.\nThere are two possible form changing options: round and pill. These can\nbe passed on either with attributes or with inputs. The input syntax is\ndifferent than the attribute syntax:\n\nround or pill for attribute syntax and\n[isPill]=\"{boolean}\" or [isRound]=\"{boolean}\" for the input syntax.\n\nYou cannot combine the two. Only one of these can be set to ture.\nThe other input / attribute is isPlain/plain. This tells the component\nto invert its colors, which means, that the hover colors are now 'normal'\ncolors and the 'normal' colors are now the hover colors.\n\n    \n\n    \n        Extends\n    \n    \n            SizeThemeColorInputDirective\n    \n\n\n    \n        Example\n    \n    \n                \n                    // Basic usage example where pill is set:\n\n  Button Text\n\n                \n                \n                    // Basic usage example where round is set:\n\n  Button Text\n\n                \n                \n                    // This is a minimal usage example:\n\n  Button Text\n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-button\n            \n\n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _disabled\n                            \n                            \n                                    Private\n                                pill\n                            \n                            \n                                    Private\n                                plain\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                            \n                                    Private\n                                round\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                isPill\n                            \n                            \n                                isPlain\n                            \n                            \n                                isRound\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isRound\n                                \n                                \n                                    isPill\n                                \n                                \n                                    isPlain\n                                \n                                \n                                    disabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(round: any, pill: any, plain: any, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/form/button/button.component.ts:144\n                            \n                        \n\n                \n                    \n                            Creates a new ButtonComponent.\nSets the different class states according to the attribute inputs.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        round\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Any value can be set and the is-round class will be set\n\n                                                        \n                                                \n                                                \n                                                        pill\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Any value can be set and the is-pill class will be set\n\n                                                        \n                                                \n                                                \n                                                        plain\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Any value can be set and the is-plain class will be set\n\n                                                        \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injectable for the\nSizeThemeColorInputDirective\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:99\n                            \n                        \n                \n                    \n                        Sets the disabled state of the component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isPill\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:77\n                            \n                        \n                \n                    \n                        Sets the pill property of the component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isPlain\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:89\n                            \n                        \n                \n                    \n                        Sets the plain property of the component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isRound\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:65\n                            \n                        \n                \n                    \n                        Sets the round property of the component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'button'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:112\n                            \n                        \n                \n                    \n                        Defines the type of the button element.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/button/button.component.ts:195\n                \n            \n\n\n            \n                \n                    Adds the needed classes based on the options of the component passed either\nby input or by attributes.\nOverwrites the getClasses\nmethod of the SizeThemeColorInputDirective by adding the is-pill,\nis-round and is-plain classes if needed.\nThe is-pill class gets included, if the pill property\nis true.\nThe is-round class gets included, if the round property\nis true.\nThe is-plain class gets included, if the plain property\nis true.\n\n\n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        The classes for the HTML button element\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/button/button.component.ts:174\n                \n            \n\n\n            \n                \n                    Provides access for a FormGroup to set the disabled state.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new disabled state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:144\n                            \n                        \n\n                \n                    \n                        Round state of the component.\nIf true, the HTML button element gets disabled and is no longer\nclickable.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pill\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:128\n                            \n                        \n\n                \n                    \n                        Pill state of the component.\nIf true, the is-pill class gets added to the classes of the HTML\nbutton element.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            plain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:136\n                            \n                        \n\n                \n                    \n                        Plain state of the component.\nIf true, the is-plain class gets added to the classes of the HTML\nbutton element.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-btn'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:57\n                            \n                        \n\n                \n                    \n                        The root class of the HTML button element.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            round\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/button/button.component.ts:120\n                            \n                        \n\n                \n                    \n                        Round state of the component.\nIf true, the is-round class gets added to the classes of the HTML\nbutton element.\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isRound\n                    \n                \n\n\n                \n                    \n                        setisRound(isRound: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/button/button.component.ts:65\n                                \n                            \n                    \n                        \n                                Sets the round property of the component.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            isRound\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    The new value of the round state\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isPill\n                    \n                \n\n\n                \n                    \n                        setisPill(isPill: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/button/button.component.ts:77\n                                \n                            \n                    \n                        \n                                Sets the pill property of the component.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            isPill\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    The new value of pill\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isPlain\n                    \n                \n\n\n                \n                    \n                        setisPlain(isPlain: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/button/button.component.ts:89\n                                \n                            \n                    \n                        \n                                Sets the plain property of the component.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            isPlain\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    The new value of the plain state\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n\n                \n                    \n                        getdisabled()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/button/button.component.ts:106\n                                \n                            \n                    \n                        \n                                Gets the disabled state of the component.\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setdisabled(isDisabled: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/button/button.component.ts:99\n                                \n                            \n                    \n                        \n                                Sets the disabled state of the component.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            isDisabled\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    The new value of the disabled state\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Attribute, Component, Input, Optional } from '@angular/core';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { SizeThemeColorInputDirective } from '../../base/style-input/size-theme-color-input.directive';\n\n/**\n * The button component acts like a normal html button, but provides different\n * style options in the form of inputs or attributes.\n *\n * There are two possible form changing options: `round` and `pill`. These can\n * be passed on either with attributes or with inputs. The input syntax is\n * different than the attribute syntax:\n *\n * - `round` or `pill` for attribute syntax and\n * - `[isPill]=\"{boolean}\"` or `[isRound]=\"{boolean}\"` for the input syntax.\n *\n * You cannot combine the two. Only one of these can be set to `ture`.\n *\n * The other input / attribute is `isPlain`/`plain`. This tells the component\n * to invert its colors, which means, that the hover colors are now 'normal'\n * colors and the 'normal' colors are now the hover colors.\n *\n * @example\n * // Basic usage example where pill is set:\n * \n *              Button Text\n * \n *\n * @example\n * // Basic usage example where round is set:\n * \n *               Button Text\n * \n *\n * @example\n * // This is a minimal usage example:\n * \n *                Button Text\n * \n *\n */\n@Component({\n  selector: 'sb-el-button',\n  templateUrl: './button.component.html'\n})\nexport class ButtonComponent extends SizeThemeColorInputDirective {\n\n  /**\n   * The root class of the HTML button element.\n   */\n  public rootClass: string = 'sb-el-btn';\n\n  /**\n   *  Sets the [round]{@link #round} property of the component.\n   *\n   * @param {boolean} isRound The new value of the `round` state\n   */\n  @Input()\n  set isRound(isRound: boolean) {\n    if (!this.pill) this.round = isRound;\n    else if (isRound && this.pill) throw new Error('Cannot use pill and round'\n      + ' attribute simultaneously!');\n  }\n\n  /**\n   *  Sets the [pill]{@link #pill} property of the component.\n   *\n   * @param {boolean} isPill The new value of `pill`\n   */\n  @Input()\n  set isPill(isPill: boolean) {\n    if (!this.round) this.pill = isPill;\n    else if (isPill && this.round) throw new Error('Cannot use pill and round'\n      + ' attribute simultaneously!');\n  }\n\n  /**\n   *  Sets the [plain]{@link #plain} property of the component.\n   *\n   * @param {boolean} isPlain The new value of the `plain` state\n   */\n  @Input()\n  set isPlain(isPlain: boolean) {\n    this.plain = isPlain;\n  }\n\n  /**\n   *  Sets the [disabled]{@link disabled} state of the component.\n   *\n   * @param {boolean} isDisabled The new value of the `disabled` state\n   */\n  @Input()\n  set disabled(isDisabled: boolean) { this._disabled = isDisabled; }\n  /**\n   * Gets the [disabled]{@link disabled} state of the component.\n   *\n   * @returns {boolean} The current [disabled]{@link disabled} state of the\n   * component\n   */\n  get disabled(): boolean { return this._disabled; }\n\n  /**\n   * Defines the type of the button element.\n   */\n  @Input()\n  public type: string = 'button';\n\n  /**\n   * Round state of the component.\n   *\n   * If `true`, the `is-round` class gets added to the classes of the HTML\n   * button element.\n   */\n  private round: boolean = false;\n\n  /**\n   * Pill state of the component.\n   *\n   * If `true`, the `is-pill` class gets added to the classes of the HTML\n   * button element.\n   */\n  private pill: boolean = false;\n\n  /**\n   * Plain state of the component.\n   *\n   * If `true`, the `is-plain` class gets added to the classes of the HTML\n   * button element.\n   */\n  private plain: boolean = false;\n\n  /**\n   * Round state of the component.\n   *\n   * If `true`, the HTML button element gets disabled and is no longer\n   * clickable.\n   */\n  private _disabled: boolean = false;\n\n  /**\n   * Creates a new ButtonComponent.\n   *\n   * Sets the different class states according to the attribute inputs.\n   *\n   * @param{any} round Any value can be set and the `is-round` class will be set\n   * @param{any} pill Any value can be set and the `is-pill` class will be set\n   * @param{any} plain Any value can be set and the `is-plain` class will be set\n   * @param{ThemeService} themeService Injectable for the\n   * `SizeThemeColorInputDirective`\n   */\n  constructor(\n    @Optional() @Attribute('round') round: any,\n    @Optional() @Attribute('pill') pill: any,\n    @Optional() @Attribute('plain') plain: any,\n    themeService: ThemeService\n  ) {\n    super(themeService);\n    if (round === '') this.isRound = true;\n    if (pill === '') this.isPill = true;\n    if (plain === '') this.isPlain = true;\n  }\n\n  /**\n   *  Provides access for a `FormGroup` to set the disabled state.\n   *\n   * @param{boolean} isDisabled The new disabled state\n   */\n  public setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Adds the needed classes based on the options of the component passed either\n   * by input or by attributes.\n   *\n   * Overwrites the [getClasses]{@link SizeThemeColorInputDirective#getClasses}\n   * method of the {@link SizeThemeColorInputDirective} by adding the `is-pill`,\n   * `is-round` and `is-plain` classes if needed.\n   *\n   * The `is-pill` class gets included, if the [pill]{@link #pill} property\n   * is `true`.\n   * The `is-round` class gets included, if the [round]{@link #round} property\n   * is `true`.\n   * The `is-plain` class gets included, if the [plain]{@link #plain} property\n   * is `true`.\n   *\n   * @returns {Array} The classes for the HTML button element\n   */\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.round ? 'is-round' : '');\n    classes.push(this.pill ? 'is-pill' : '');\n    classes.push(this.plain ? 'is-plain' : '');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/card/card.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SizeThemeInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-card\n            \n\n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hover\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                            \n                                    Private\n                                shadow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(hover: any, shadow: any, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/card/card.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        hover\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        shadow\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/card/card.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hover\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/card/card.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-card'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/card/card.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            shadow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/card/card.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Attribute, Component, Optional } from '@angular/core';\nimport { ThemeService } from '../../services/theme/theme.service';\nimport { SizeThemeInputDirective } from '../base/style-input/size-theme-input.directive';\n\n@Component({\n  selector: 'sb-el-card',\n  templateUrl: './card.component.html'\n})\nexport class CardComponent extends SizeThemeInputDirective {\n\n  public rootClass: string = 'sb-el-card';\n\n  private hover: boolean = false;\n  private shadow: boolean = false;\n\n  constructor(\n    @Optional() @Attribute('hover') hover: any,\n    @Optional() @Attribute('shadow') shadow: any,\n    themeService: ThemeService\n  ) {\n    super(themeService);\n    if (hover === '') this.hover = true;\n    if (shadow === '') this.shadow = true;\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.hover ? 'is-hover' : '');\n    classes.push(this.shadow ? 'is-shadow' : '');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n  \n    \n  \n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/checkbox/checkbox.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ControlValueAccessorSizeThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: CheckboxComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-checkbox\n            \n\n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                check\n                            \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                labelPosition\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/checkbox/checkbox.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelPosition\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'right'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/checkbox/checkbox.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            check\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    check()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/checkbox/checkbox.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/checkbox/checkbox.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-checkbox'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/checkbox/checkbox.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlValueAccessorSizeThemeColorInputDirective } from '../../base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-checkbox',\n  templateUrl: './checkbox.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: CheckboxComponent,\n    multi: true\n  }]\n})\nexport class CheckboxComponent extends ControlValueAccessorSizeThemeColorInputDirective {\n\n  public rootClass = 'sb-el-checkbox';\n\n  @Input()\n  public label: string = '';\n  @Input()\n  public labelPosition: string = 'right';\n\n  public check(): void {\n    this.value = !this.value;\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.label ? 'is-label' : '');\n    classes.push(this.label ? 'label-is-' + this.labelPosition : '');\n    classes.push(this.value ? 'is-checked' : 'is-unchecked');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  {{ label }}\n  \n    \n      \n        &#xe876;\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}                                '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxGroupComponent.html":{"url":"components/CheckboxGroupComponent.html","title":"component - CheckboxGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CheckboxGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/group/checkbox/checkbox-group.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SelectionOptionsDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: CheckboxGroupComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-checkbox-group\n            \n\n\n\n\n            \n                templateUrl\n                ./checkbox-group.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                    Protected\n                                updateValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                groupAlign\n                            \n                            \n                                groupTitle\n                            \n                            \n                                labelPosition\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        groupAlign\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'left'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/checkbox/checkbox-group.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        groupTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/checkbox/checkbox-group.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelPosition\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'right'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/checkbox/checkbox-group.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/group/checkbox/checkbox-group.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValues()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/group/checkbox/checkbox-group.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-checkbox-group'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/group/checkbox/checkbox-group.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { SelectedOptions } from '../base/selected-options';\nimport { SelectionOptionsDirective } from '../base/selection-options.directive';\n\n@Component({\n  selector: 'sb-el-checkbox-group',\n  templateUrl: './checkbox-group.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: CheckboxGroupComponent,\n    multi: true\n  }]\n})\nexport class CheckboxGroupComponent extends SelectionOptionsDirective {\n\n  public rootClass = 'sb-el-checkbox-group';\n\n  @Input()\n  public groupTitle: string = '';\n\n  @Input()\n  public groupAlign: string | null = 'left';\n\n  @Input()\n  public labelPosition: string = 'right';\n\n  check() {\n    this.value = this.selectedOptions;\n  }\n\n  protected updateValues(): void {\n    this.selectedOptions = this.value as SelectedOptions;\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n      \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ClassNameInputDirective.html":{"url":"directives/ClassNameInputDirective.html","title":"directive - ClassNameInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ClassNameInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/style-input/class-name-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _extraClasses\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                extraClasses\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    extraClasses\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        extraClasses\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/class-name-input.directive.ts:12\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/style-input/class-name-input.directive.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _extraClasses\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/class-name-input.directive.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/class-name-input.directive.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        extraClasses\n                    \n                \n\n\n                \n                    \n                        setextraClasses(extraClasses)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/style-input/class-name-input.directive.ts:12\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            extraClasses\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ClassNameInputDirective {\n\n  public rootClass: string = '';\n\n  private _extraClasses: Array = new Array();\n  @Input()\n  set extraClasses(extraClasses: string | Array) {\n    if (Array.isArray(extraClasses)) this._extraClasses = extraClasses;\n    else {\n      this._extraClasses = extraClasses.split(' ').filter(className => {\n        return className !== '';\n      });\n    }\n  }\n\n  public getClasses(): Array {\n    let classes = new Array();\n    classes.push(this.rootClass);\n    this._extraClasses.forEach(className => classes.push(className))\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ColorInputDirective.html":{"url":"directives/ColorInputDirective.html","title":"directive - ColorInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ColorInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/style-input/color-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/color-input.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/style-input/color-input.directive.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ClassNameInputDirective } from './class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ColorInputDirective extends ClassNameInputDirective {\n\n  @Input()\n  public color: string | null = 'primary';\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.color ? this.rootClass + '--' + this.color : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ColumnInformation.html":{"url":"classes/ColumnInformation.html","title":"class - ColumnInformation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ColumnInformation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/table/column-information.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ColumnInformationDefaults\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alignment\n                            \n                            \n                                    Public\n                                color\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clone\n                            \n                            \n                                    Static\n                                merge\n                            \n                            \n                                    Private\n                                    Static\n                                mergeValues\n                            \n                            \n                                    Public\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    defaults\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alignment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'center'\n                        \n                    \n                            \n                                \n                                    Inherited from         ColumnInformationDefaults\n\n                                \n                            \n                        \n                            \n                                    Defined in         ColumnInformationDefaults:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from         ColumnInformationDefaults\n\n                                \n                            \n                        \n                            \n                                    Defined in         ColumnInformationDefaults:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from         ColumnInformationDefaults\n\n                                \n                            \n                        \n                            \n                                    Defined in         ColumnInformationDefaults:4\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/table/column-information.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ColumnInformation\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            merge\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    merge(overwrite: ColumnInformationOptionsInterface, persistent: ColumnInformationOptionsInterface)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/table/column-information.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    overwrite\n                                    \n                                                ColumnInformationOptionsInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    persistent\n                                    \n                                                ColumnInformationOptionsInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ColumnInformation\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            mergeValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mergeValues(overwrite: string | undefined, persistent: string | undefined, defaultValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/table/column-information.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    overwrite\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    persistent\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    defaultValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            set\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    set(information: ColumnInformationOptionsInterface)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/table/column-information.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    information\n                                    \n                                                ColumnInformationOptionsInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ColumnInformation\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        defaults\n                    \n                \n\n                \n                    \n                        getdefaults()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/models/table/column-information.ts:12\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ColumnInformationInterface, ColumnInformationOptionsInterface } from \"./column-information.interface\";\n\nexport class ColumnInformationDefaults implements ColumnInformationInterface {\n  public name: string = '';\n  public color: string = '';\n  public alignment: string = 'center';\n}\n\n\nexport class ColumnInformation extends ColumnInformationDefaults {\n\n  public static get defaults(): ColumnInformation {\n    return new ColumnInformation();\n  }\n\n  private clone(): ColumnInformation {\n    let clone = new ColumnInformation();\n    clone.name = this.name;\n    clone.color = this.color;\n    clone.alignment = this.alignment;\n    return clone;\n  }\n\n  public set(\n    information: ColumnInformationOptionsInterface\n  ): ColumnInformation {\n    let clone = Object.assign({}, this);\n    return Object.assign(clone, information);\n  }\n\n  public static merge(\n    overwrite: ColumnInformationOptionsInterface,\n    persistent: ColumnInformationOptionsInterface\n  ): ColumnInformation {\n    let info = new ColumnInformation();\n\n    info.name = this.mergeValues(overwrite.name, persistent.name,\n      this.defaults.name);\n    info.color = this.mergeValues(overwrite.color, persistent.color,\n      this.defaults.color);\n    info.alignment = this.mergeValues(overwrite.alignment, persistent.alignment,\n      this.defaults.alignment);\n\n    return info;\n  }\n\n  private static mergeValues(overwrite: string | undefined, persistent: string | undefined, defaultValue: string): string {\n    let value = defaultValue;\n    if (overwrite && defaultValue !== overwrite) value = overwrite;\n    if (persistent && defaultValue !== persistent) value = persistent;\n    return value;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ColumnInformationDefaults.html":{"url":"classes/ColumnInformationDefaults.html","title":"class - ColumnInformationDefaults","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ColumnInformationDefaults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/table/column-information.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            ColumnInformationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alignment\n                            \n                            \n                                    Public\n                                color\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alignment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'center'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/table/column-information.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/table/column-information.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/table/column-information.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ColumnInformationInterface, ColumnInformationOptionsInterface } from \"./column-information.interface\";\n\nexport class ColumnInformationDefaults implements ColumnInformationInterface {\n  public name: string = '';\n  public color: string = '';\n  public alignment: string = 'center';\n}\n\n\nexport class ColumnInformation extends ColumnInformationDefaults {\n\n  public static get defaults(): ColumnInformation {\n    return new ColumnInformation();\n  }\n\n  private clone(): ColumnInformation {\n    let clone = new ColumnInformation();\n    clone.name = this.name;\n    clone.color = this.color;\n    clone.alignment = this.alignment;\n    return clone;\n  }\n\n  public set(\n    information: ColumnInformationOptionsInterface\n  ): ColumnInformation {\n    let clone = Object.assign({}, this);\n    return Object.assign(clone, information);\n  }\n\n  public static merge(\n    overwrite: ColumnInformationOptionsInterface,\n    persistent: ColumnInformationOptionsInterface\n  ): ColumnInformation {\n    let info = new ColumnInformation();\n\n    info.name = this.mergeValues(overwrite.name, persistent.name,\n      this.defaults.name);\n    info.color = this.mergeValues(overwrite.color, persistent.color,\n      this.defaults.color);\n    info.alignment = this.mergeValues(overwrite.alignment, persistent.alignment,\n      this.defaults.alignment);\n\n    return info;\n  }\n\n  private static mergeValues(overwrite: string | undefined, persistent: string | undefined, defaultValue: string): string {\n    let value = defaultValue;\n    if (overwrite && defaultValue !== overwrite) value = overwrite;\n    if (persistent && defaultValue !== persistent) value = persistent;\n    return value;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColumnInformationInterface.html":{"url":"interfaces/ColumnInformationInterface.html","title":"interface - ColumnInformationInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ColumnInformationInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/table/column-information.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ColumnInformationOptionsInterface\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        alignment\n                                \n                                \n                                        color\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alignment\n                                    \n                                \n                                \n                                    \n                                        alignment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ColumnInformationOptionsInterface {\n  name?: string;\n  color?: string;\n  alignment?: string;\n}\n\nexport interface ColumnInformationInterface\n  extends ColumnInformationOptionsInterface {\n  name: string;\n  color: string;\n  alignment: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColumnInformationOptionsInterface.html":{"url":"interfaces/ColumnInformationOptionsInterface.html","title":"interface - ColumnInformationOptionsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ColumnInformationOptionsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/table/column-information.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        alignment\n                                \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                            Optional\n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alignment\n                                    \n                                \n                                \n                                    \n                                        alignment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ColumnInformationOptionsInterface {\n  name?: string;\n  color?: string;\n  alignment?: string;\n}\n\nexport interface ColumnInformationInterface\n  extends ColumnInformationOptionsInterface {\n  name: string;\n  color: string;\n  alignment: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent.html":{"url":"components/ContainerComponent.html","title":"component - ContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/container/container.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SizeThemeInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-container\n            \n\n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-container'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/container/container.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { SizeThemeInputDirective } from '../base/style-input/size-theme-input.directive';\n\n@Component({\n  selector: 'sb-el-container',\n  templateUrl: './container.component.html'\n})\nexport class ContainerComponent extends SizeThemeInputDirective {\n\n  public rootClass = 'sb-el-container';\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorBaseDirective.html":{"url":"directives/ControlValueAccessorBaseDirective.html","title":"directive - ControlValueAccessorBaseDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorBaseDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                innerValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                setInnerValue\n                            \n                            \n                                    Protected\n                                updateValues\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                            \n                                    Public\n                                writeValueInnerChange\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setInnerValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setInnerValue(value: ValueType | undefined, emitChange: boolean, innerChange: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            ValueType | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    emitChange\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    innerChange\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValues()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: ValueType | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            ValueType | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            writeValueInnerChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValueInnerChange(value: ValueType | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            ValueType | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            innerValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ValueType | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts:14\n                                \n                            \n\n                \n                    \n                        setvalue(value)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts:13\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { EventManagerDirective } from './event-manager.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ControlValueAccessorBaseDirective extends EventManagerDirective implements ControlValueAccessor {\n\n  private innerValue: ValueType | undefined;\n\n  // writing value\n  set value(value: ValueType | undefined) { this.setInnerValue(value, true, false) }\n  get value(): ValueType | undefined { return this.innerValue }\n  public writeValue(value: ValueType | undefined): void { this.setInnerValue(value, false, false) }\n  public writeValueInnerChange(value: ValueType | undefined) {\n    this.setInnerValue(value, true, true);\n  }\n\n  private setInnerValue(value: ValueType | undefined, emitChange: boolean, innerChange: boolean): void {\n    if (value !== this.innerValue && value !== null && !this.disabled) {\n      this.innerValue = value;\n      if (!innerChange) this.updateValues();\n      if (emitChange) this.emitChange(value);\n    }\n  }\n\n  protected updateValues(): void {};\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorClassNameInputDirective.html":{"url":"directives/ControlValueAccessorClassNameInputDirective.html","title":"directive - ControlValueAccessorClassNameInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorClassNameInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor-style-input/control-value-accessor-class-name-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _extraClasses\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                extraClasses\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    extraClasses\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        extraClasses\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-class-name-input.directive.ts:13\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-class-name-input.directive.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _extraClasses\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-class-name-input.directive.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-class-name-input.directive.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        extraClasses\n                    \n                \n\n\n                \n                    \n                        setextraClasses(extraClasses)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-class-name-input.directive.ts:13\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            extraClasses\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ControlValueAccessorBaseDirective } from '../control-value-accessor/control-value-accessor.base.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ControlValueAccessorClassNameInputDirective extends ControlValueAccessorBaseDirective {\n\n  public rootClass: string = '';\n\n  private _extraClasses: Array = new Array();\n  @Input()\n  set extraClasses(extraClasses: string | Array) {\n    if (Array.isArray(extraClasses)) this._extraClasses = extraClasses;\n    else {\n      this._extraClasses = extraClasses.split(' ').filter(className => {\n        return className !== '';\n      });\n    }\n  }\n\n  public getClasses(): Array {\n    let classes = new Array();\n    classes.push(this.rootClass);\n    this._extraClasses.forEach(className => classes.push(className))\n    classes.push(this.disabled ? 'disabled' : '');\n    classes.push(this.pristine ? 'pristine' : 'dirty');\n    classes.push(this.touched ? 'touched' : 'untouched');\n    classes.push(this.focused ? 'focus' : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorColorInputDirective.html":{"url":"directives/ControlValueAccessorColorInputDirective.html","title":"directive - ControlValueAccessorColorInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorColorInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor-style-input/control-value-accessor-color-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-color-input.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-color-input.directive.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ControlValueAccessorClassNameInputDirective } from './control-value-accessor-class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ControlValueAccessorColorInputDirective extends ControlValueAccessorClassNameInputDirective {\n\n  @Input()\n  public color: string | null = 'primary';\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.color ? this.rootClass + '--' + this.color : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorSizeColorInputDirective.html":{"url":"directives/ControlValueAccessorSizeColorInputDirective.html","title":"directive - ControlValueAccessorSizeColorInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorSizeColorInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-color-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-color-input.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'd'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-color-input.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-color-input.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ControlValueAccessorClassNameInputDirective } from './control-value-accessor-class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ControlValueAccessorSizeColorInputDirective extends ControlValueAccessorClassNameInputDirective {\n\n  @Input()\n  public size: string | null = 'd';\n\n  @Input()\n  public color: string | null = 'primary';\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.size ? this.rootClass + '--' + this.size : '');\n    classes.push(this.color ? this.rootClass + '--' + this.color : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorSizeInputDirective.html":{"url":"directives/ControlValueAccessorSizeInputDirective.html","title":"directive - ControlValueAccessorSizeInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorSizeInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'd'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-input.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-input.directive.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ControlValueAccessorClassNameInputDirective } from './control-value-accessor-class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ControlValueAccessorSizeInputDirective extends ControlValueAccessorClassNameInputDirective {\n\n  @Input()\n  public size: string | null = 'd';\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.size ? this.rootClass + '--' + this.size : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorSizeThemeColorInputDirective.html":{"url":"directives/ControlValueAccessorSizeThemeColorInputDirective.html","title":"directive - ControlValueAccessorSizeThemeColorInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorSizeThemeColorInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'd'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive.ts:11\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { ControlValueAccessorClassNameInputDirective } from './control-value-accessor-class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ControlValueAccessorSizeThemeColorInputDirective extends ControlValueAccessorClassNameInputDirective {\n\n  @Input()\n  public size: string | null = 'd';\n\n  public theme: string;\n\n  @Input()\n  public color: string | null = 'primary';\n\n  constructor(\n    private themeService: ThemeService\n  ) {\n    super();\n    this.theme = themeService.get();\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.size ? this.rootClass + '--' + this.size : '');\n    classes.push(this.theme && this.color ?\n      this.rootClass + '--' + this.theme + '-' + this.color : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorThemeColorInputDirective.html":{"url":"directives/ControlValueAccessorThemeColorInputDirective.html","title":"directive - ControlValueAccessorThemeColorInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorThemeColorInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor-style-input/control-value-accessor-theme-color-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-theme-color-input.directive.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-theme-color-input.directive.ts:13\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-theme-color-input.directive.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor-style-input/control-value-accessor-theme-color-input.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { ControlValueAccessorClassNameInputDirective } from './control-value-accessor-class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ControlValueAccessorThemeColorInputDirective extends ControlValueAccessorClassNameInputDirective {\n\n  public theme: string;\n\n  @Input()\n  public color: string | null = 'primary';\n\n  constructor(\n    private themeService: ThemeService\n  ) {\n    super();\n    this.theme = themeService.get();\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.theme && this.color ?\n      this.rootClass + '--' + this.theme + '-' + this.color : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Csv.html":{"url":"classes/Csv.html","title":"class - Csv","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Csv\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/csv/csv.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Private\n                                    Static\n                                DELIMITER\n                            \n                            \n                                    Private\n                                    Static\n                                END_DELIMITER\n                            \n                            \n                                    Public\n                                header\n                            \n                            \n                                    Private\n                                    Static\n                                START_DELIMITER\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forEachColumn\n                            \n                            \n                                    Public\n                                forEachColumnName\n                            \n                            \n                                    Public\n                                getColumnData\n                            \n                            \n                                    Static\n                                    Async\n                                parseFile\n                            \n                            \n                                    Static\n                                parseString\n                            \n                            \n                                    Private\n                                    Static\n                                rows\n                            \n                            \n                                    Private\n                                    Static\n                                split\n                            \n                            \n                                    Private\n                                    Static\n                                useDelimiter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(header: Array, data: Array>)\n                    \n                \n                        \n                            \n                                Defined in src/lib/models/csv/csv.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        header\n                                                  \n                                                        \n                                                                    Array\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    Array>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/csv/csv.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            DELIMITER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RegExp\n\n                        \n                    \n                    \n                        \n                            Default value : /(?:'|\"|)(?:\\s*)(?:,|;|$)(?:\\s*)(?:'|\"|)/\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/csv/csv.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            END_DELIMITER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RegExp\n\n                        \n                    \n                    \n                        \n                            Default value : /(?:\\s*)(?:'|\"|)/\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/csv/csv.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            header\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/csv/csv.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            START_DELIMITER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RegExp\n\n                        \n                    \n                    \n                        \n                            Default value : /(?:'|\"|)(?:\\s*)/\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/csv/csv.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            forEachColumn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forEachColumn(fn: (columnName: string,columnData: Array,index: number) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/csv/csv.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            forEachColumnName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forEachColumnName(fn: (columnName: string,index: number) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/csv/csv.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getColumnData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getColumnData(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/csv/csv.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            parseFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parseFile(file: File, delimiter?: Delimiter)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/csv/csv.ts:42\n                \n            \n\n\n            \n                \n                    Static Members\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    delimiter\n                                    \n                                                Delimiter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            parseString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parseString(string: string, delimiter?: Delimiter)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/csv/csv.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    delimiter\n                                    \n                                                Delimiter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Csv\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            rows\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    rows(string: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/csv/csv.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            split\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    split(row: string, delimiter?: Delimiter)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/csv/csv.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    delimiter\n                                    \n                                                Delimiter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            useDelimiter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    useDelimiter(delimiter?: Delimiter)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/csv/csv.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    delimiter\n                                    \n                                                Delimiter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     RegExp\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export enum Delimiter {\n  COMMA = ',',\n  COLON = ':',\n  SEMICOLON = ';'\n}\n\nexport class Csv {\n\n  private static START_DELIMITER: RegExp = /(?:'|\"|)(?:\\s*)/;\n  private static END_DELIMITER: RegExp = /(?:\\s*)(?:'|\"|)/;\n  private static DELIMITER: RegExp = /(?:'|\"|)(?:\\s*)(?:,|;|$)(?:\\s*)(?:'|\"|)/;\n\n  constructor(\n    public header: Array,\n    public data: Array>\n  ) {}\n\n  public forEachColumnName(\n    fn: (columnName: string, index: number) => void\n  ): void {\n    this.header.forEach((columnName: string, index: number) => {\n      fn(columnName, index);\n    });\n  }\n\n  public forEachColumn(\n    fn: (columnName: string, columnData: Array, index: number) => void\n  ): void {\n    this.header.forEach((columnName: string, index: number) => {\n      fn(columnName, this.getColumnData(index), index);\n    });\n  }\n\n  public getColumnData(index: number): Array {\n    return this.data.map(row => row[index]);\n  }\n\n  /**\n   * Static Members\n   */\n\n  public static async parseFile(\n    file: File,\n    delimiter?: Delimiter\n  ): Promise {\n    if (file.type != 'text/csv') {\n      return Promise.reject(\"File is not a CSV file!\");\n    }\n    let content = await file.text();\n    return this.parseString(content, delimiter);\n  }\n\n  public static parseString(string: string, delimiter?: Delimiter): Csv {\n    let rows = this.rows(string);\n    let splitRows = new Array>();\n    rows.forEach(row => splitRows.push(this.split(row, delimiter)));\n    return new Csv(\n      splitRows[0],\n      splitRows.slice(1)\n    )\n  }\n\n  private static rows(string: string): Array {\n    let rows = string.split('\\n');\n    if (rows[rows.length - 1] === \"\") rows.splice(rows.length - 1, rows.length);\n    return rows;\n  }\n\n  private static split(row: string, delimiter?: Delimiter): Array {\n    let split = row.split(this.useDelimiter(delimiter));\n\n    let firstElement = split[0];\n    if (firstElement && /^('|\").*$/.test(firstElement)) {\n      split[0] = firstElement.slice(1, firstElement.length);\n    }\n\n    let lastElement = split[split.length-1];\n    if (lastElement && /^.*('|\")$/.test(lastElement)) {\n      split[split.length-1] = lastElement.substring(0, lastElement.length - 1);\n    }\n    return split;\n  }\n\n  private static useDelimiter(delimiter?: Delimiter): RegExp {\n    if (delimiter) {\n      return new RegExp(\n        this.START_DELIMITER.source +\n        '(?:' + delimiter + ')' +\n        this.END_DELIMITER.source\n      );\n    } else return this.DELIMITER;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EventManagerDirective.html":{"url":"directives/EventManagerDirective.html","title":"directive - EventManagerDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  EventManagerDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor/event-manager.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                onChangeCallback\n                            \n                            \n                                    Protected\n                                onTouchedCallBack\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                emitBlur\n                            \n                            \n                                    Protected\n                                emitChange\n                            \n                            \n                                    Public\n                                emitFocus\n                            \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                change\n                            \n                            \n                                focus\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        focus\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:19\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            emitBlur\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitBlur()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            emitChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitChange(value: ValueType | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            ValueType | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            emitFocus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitFocus()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onChangeCallback\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onTouchedCallBack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/event-manager.directive.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, EventEmitter, Output } from '@angular/core';\nimport { StateManagerDirective } from './state-manager.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class EventManagerDirective extends StateManagerDirective {\n\n  protected onTouchedCallBack: () => void = () => {};\n  protected onChangeCallback: (value: ValueType | undefined) => void = () => {};\n\n  @Output()\n  public change: EventEmitter = new EventEmitter();\n\n  @Output()\n  public blur: EventEmitter = new EventEmitter();\n\n  @Output()\n  public focus: EventEmitter = new EventEmitter();\n\n  // events\n  public emitBlur(): void {\n    this.setFocusedState(false);\n    this.setTouchedState(true);\n    this.onTouchedCallBack();\n    this.blur.emit();\n  }\n\n  public emitFocus(): void {\n    this.setFocusedState(true);\n    this.focus.emit();\n  }\n\n  protected emitChange(value: ValueType | undefined): void {\n    this.setPristineState(false);\n    this.onChangeCallback(value);\n    this.change.emit(value);\n  }\n\n  // register events\n  public registerOnChange(fn: any): void { this.onChangeCallback = fn }\n  public registerOnTouched(fn: any): void { this.onTouchedCallBack = fn }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileInputComponent.html":{"url":"components/FileInputComponent.html","title":"component - FileInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FileInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/file-input/file-input.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ControlValueAccessorSizeThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: FileInputComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-file-input\n            \n\n\n\n\n            \n                templateUrl\n                ./file-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                defaultMessage\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                pill\n                            \n                            \n                                    Public\n                                plain\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkFileSize\n                            \n                            \n                                    Public\n                                getClasses\n                            \n                            \n                                    Public\n                                input\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                limit\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertService: AlertService, pill: any, plain: any, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/form/file-input/file-input.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pill\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plain\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        limit\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : -1\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/file-input/file-input.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/file-input/file-input.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            checkFileSize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkFileSize(file: File)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/file-input/file-input.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/file-input/file-input.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            input\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    input(files: FileList | null)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/file-input/file-input.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                            FileList | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            defaultMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Choose a file'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/file-input/file-input.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : FileInputComponent.defaultMessage\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/file-input/file-input.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pill\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/file-input/file-input.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            plain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/file-input/file-input.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-file-input'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/file-input/file-input.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Attribute, Component, Input, Optional } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AlertService } from '../../../services/alert/alert.service';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { ControlValueAccessorSizeThemeColorInputDirective } from '../../base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-file-input',\n  templateUrl: './file-input.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: FileInputComponent,\n    multi: true\n  }]\n})\nexport class FileInputComponent extends ControlValueAccessorSizeThemeColorInputDirective {\n\n  public rootClass = 'sb-el-file-input';\n\n  @Input()\n  public placeholder: string = '';\n\n  // the limit is in mega bytes\n  @Input()\n  public limit: number = -1;\n\n  public plain: boolean = false;\n  public pill: boolean = false;\n\n  private static defaultMessage: string = 'Choose a file';\n  public message: string = FileInputComponent.defaultMessage;\n\n  constructor(\n    private alertService: AlertService,\n    @Optional() @Attribute('pill') pill: any,\n    @Optional() @Attribute('plain') plain: any,\n    themeService: ThemeService\n  ) {\n    super(themeService);\n    if (pill === '') this.pill = true;\n    if (plain === '') this.plain = true;\n  }\n\n  public input(files: FileList | null) {\n    if (files) {\n      let file: File | null = files.item(0);\n      if (file && this.checkFileSize(file)) {\n        this.message = file.name;\n        this.writeValueInnerChange(file);\n      } else {\n        this.message = FileInputComponent.defaultMessage;\n        this.writeValueInnerChange(undefined);\n      }\n    }\n  }\n\n  private checkFileSize(file: File): boolean {\n    if (this.limit >= 0) {\n      if (file.size  {\n    let classes = super.getClasses();\n    classes.push(this.pill ? 'is-pill' : '');\n    classes.push(this.plain ? 'is-plain' : '');\n    return classes;\n  }\n}\n\n    \n\n    \n          \n  \n    {{ placeholder }}\n  \n  \n  \n    \n      {{ message }}\n      \n        &#xe2c6;\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ placeholder }}                {{ message }}                          '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'FileInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormGroupComponent.html":{"url":"components/FormGroupComponent.html","title":"component - FormGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/group/form-group.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SizeThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-form-group\n            \n\n\n\n\n            \n                templateUrl\n                ./form-group.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                groupAlign\n                            \n                            \n                                groupTitle\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasGroupTitle\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        groupAlign\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'left'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/form-group.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        groupTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/form-group.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/group/form-group.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-form-group'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/group/form-group.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasGroupTitle\n                    \n                \n\n                \n                    \n                        gethasGroupTitle()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/group/form-group.component.ts:14\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { SizeThemeColorInputDirective } from '../../base/style-input/size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-form-group',\n  templateUrl: './form-group.component.html'\n})\nexport class FormGroupComponent extends SizeThemeColorInputDirective {\n\n  public rootClass = 'sb-el-form-group';\n\n  @Input()\n  public groupTitle: string = '';\n  get hasGroupTitle(): boolean {\n    return this.groupTitle !== '';\n  }\n\n  @Input()\n  public groupAlign: string | null = 'left';\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.groupAlign ? 'is-' + this.groupAlign : '');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  {{groupTitle}}\n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{groupTitle}}        '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormModule.html":{"url":"modules/FormModule.html","title":"module - FormModule","body":"\n                   \n\n\n\n\n    Modules\n    FormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormModule\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_FormModule_imports\n\n\n\ncluster_FormModule_declarations\n\n\n\n\nButtonComponent\n\nButtonComponent\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nButtonComponent->FormModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nFormModule -->\n\nCheckboxComponent->FormModule\n\n\n\n\n\nCheckboxGroupComponent\n\nCheckboxGroupComponent\n\nFormModule -->\n\nCheckboxGroupComponent->FormModule\n\n\n\n\n\nFileInputComponent\n\nFileInputComponent\n\nFormModule -->\n\nFileInputComponent->FormModule\n\n\n\n\n\nFormGroupComponent\n\nFormGroupComponent\n\nFormModule -->\n\nFormGroupComponent->FormModule\n\n\n\n\n\nIconButtonComponent\n\nIconButtonComponent\n\nFormModule -->\n\nIconButtonComponent->FormModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nFormModule -->\n\nIconComponent->FormModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nFormModule -->\n\nInputComponent->FormModule\n\n\n\n\n\nRadioButtonComponent\n\nRadioButtonComponent\n\nFormModule -->\n\nRadioButtonComponent->FormModule\n\n\n\n\n\nRadioButtonGroupComponent\n\nRadioButtonGroupComponent\n\nFormModule -->\n\nRadioButtonGroupComponent->FormModule\n\n\n\n\n\nSelectButtonComponent\n\nSelectButtonComponent\n\nFormModule -->\n\nSelectButtonComponent->FormModule\n\n\n\n\n\nSelectionOptionsDirective\n\nSelectionOptionsDirective\n\nFormModule -->\n\nSelectionOptionsDirective->FormModule\n\n\n\n\n\nSliderComponent\n\nSliderComponent\n\nFormModule -->\n\nSliderComponent->FormModule\n\n\n\n\n\nToggleSwitchComponent\n\nToggleSwitchComponent\n\nFormModule -->\n\nToggleSwitchComponent->FormModule\n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nFormModule->ButtonComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nFormModule->CheckboxComponent \n\n\n\n\n\nCheckboxGroupComponent \n\nCheckboxGroupComponent \n\nCheckboxGroupComponent  -->\n\nFormModule->CheckboxGroupComponent \n\n\n\n\n\nFileInputComponent \n\nFileInputComponent \n\nFileInputComponent  -->\n\nFormModule->FileInputComponent \n\n\n\n\n\nFormGroupComponent \n\nFormGroupComponent \n\nFormGroupComponent  -->\n\nFormModule->FormGroupComponent \n\n\n\n\n\nIconButtonComponent \n\nIconButtonComponent \n\nIconButtonComponent  -->\n\nFormModule->IconButtonComponent \n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nFormModule->IconComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nFormModule->InputComponent \n\n\n\n\n\nRadioButtonComponent \n\nRadioButtonComponent \n\nRadioButtonComponent  -->\n\nFormModule->RadioButtonComponent \n\n\n\n\n\nRadioButtonGroupComponent \n\nRadioButtonGroupComponent \n\nRadioButtonGroupComponent  -->\n\nFormModule->RadioButtonGroupComponent \n\n\n\n\n\nSelectButtonComponent \n\nSelectButtonComponent \n\nSelectButtonComponent  -->\n\nFormModule->SelectButtonComponent \n\n\n\n\n\nSliderComponent \n\nSliderComponent \n\nSliderComponent  -->\n\nFormModule->SliderComponent \n\n\n\n\n\nToggleSwitchComponent \n\nToggleSwitchComponent \n\nToggleSwitchComponent  -->\n\nFormModule->ToggleSwitchComponent \n\n\n\n\n\nBaseModule\n\nBaseModule\n\nFormModule -->\n\nBaseModule->FormModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/components/form/form.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ButtonComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            CheckboxGroupComponent\n                        \n                        \n                            FileInputComponent\n                        \n                        \n                            FormGroupComponent\n                        \n                        \n                            IconButtonComponent\n                        \n                        \n                            IconComponent\n                        \n                        \n                            InputComponent\n                        \n                        \n                            RadioButtonComponent\n                        \n                        \n                            RadioButtonGroupComponent\n                        \n                        \n                            SelectButtonComponent\n                        \n                        \n                            SelectionOptionsDirective\n                        \n                        \n                            SliderComponent\n                        \n                        \n                            ToggleSwitchComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ButtonComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            CheckboxGroupComponent\n                        \n                        \n                            FileInputComponent\n                        \n                        \n                            FormGroupComponent\n                        \n                        \n                            IconButtonComponent\n                        \n                        \n                            IconComponent\n                        \n                        \n                            InputComponent\n                        \n                        \n                            RadioButtonComponent\n                        \n                        \n                            RadioButtonGroupComponent\n                        \n                        \n                            SelectButtonComponent\n                        \n                        \n                            SliderComponent\n                        \n                        \n                            ToggleSwitchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button/button.component';\nimport { IconButtonComponent } from './icon-button/icon-button.component';\nimport { ToggleSwitchComponent } from './toggle-switch/toggle-switch.component';\nimport { CheckboxComponent } from './checkbox/checkbox.component';\nimport { RadioButtonComponent } from './radio-button/radio-button.component';\nimport { RadioButtonGroupComponent } from './group/radio-button/radio-button-group.component';\nimport { CheckboxGroupComponent } from './group/checkbox/checkbox-group.component';\nimport { SelectionOptionsDirective } from './group/base/selection-options.directive';\nimport { SelectButtonComponent } from './select-button/select-button.component';\nimport { SliderComponent } from './slider/slider.component';\nimport { FormsModule } from '@angular/forms';\nimport { BaseModule } from '../base/base.module';\nimport { IconComponent } from '../icon/icon.component';\nimport { FormGroupComponent } from './group/form-group.component';\nimport { InputComponent } from './input/input.component';\nimport { FileInputComponent } from './file-input/file-input.component';\n\n@NgModule({\n  declarations: [\n    ButtonComponent,\n    IconButtonComponent,\n    ToggleSwitchComponent,\n    CheckboxComponent,\n    RadioButtonComponent,\n    RadioButtonGroupComponent,\n    CheckboxGroupComponent,\n    SelectionOptionsDirective,\n    SelectButtonComponent,\n    SliderComponent,\n    IconComponent,\n    FormGroupComponent,\n    InputComponent,\n    FileInputComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    BaseModule\n  ],\n  exports: [\n    ButtonComponent,\n    IconButtonComponent,\n    ToggleSwitchComponent,\n    CheckboxComponent,\n    RadioButtonComponent,\n    RadioButtonGroupComponent,\n    CheckboxGroupComponent,\n    SelectButtonComponent,\n    SliderComponent,\n    IconComponent,\n    FormGroupComponent,\n    InputComponent,\n    FileInputComponent\n  ]\n})\nexport class FormModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridComponent.html":{"url":"components/GridComponent.html","title":"component - GridComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GridComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/grid/grid.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ClassNameInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-grid\n            \n\n\n\n\n            \n                templateUrl\n                ./grid.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dim\n                            \n                            \n                                gap\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dim\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : '2x2'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gap\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/grid/grid.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-grid'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/grid.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ClassNameInputDirective } from \"../base/style-input/class-name-input.directive\";\n\n@Component({\n  selector: 'sb-el-grid',\n  templateUrl: './grid.component.html'\n})\nexport class GridComponent extends ClassNameInputDirective {\n\n  public rootClass = 'sb-el-grid';\n\n  @Input()\n  public gap: string | null = null\n\n  @Input()\n  public dim: string | null = '2x2';\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.dim ? 'dim' + '--' + this.dim : '');\n    classes.push(this.gap ? 'gap' + '--' + this.gap : '');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconButtonComponent.html":{"url":"components/IconButtonComponent.html","title":"component - IconButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IconButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/icon-button/icon-button.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SizeThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-icon-button\n            \n\n\n\n\n            \n                templateUrl\n                ./icon-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _disabled\n                            \n                            \n                                    Public\n                                pill\n                            \n                            \n                                    Public\n                                plain\n                            \n                            \n                                    Public\n                                round\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    disabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pill: any, round: any, plain: any, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/form/icon-button/icon-button.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pill\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        round\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plain\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/icon-button/icon-button.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/icon-button/icon-button.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pill\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/icon-button/icon-button.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            plain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/icon-button/icon-button.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            round\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/icon-button/icon-button.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n\n                \n                    \n                        getdisabled()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/icon-button/icon-button.component.ts:20\n                                \n                            \n\n                \n                    \n                        setdisabled(isDisabled: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/icon-button/icon-button.component.ts:17\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            isDisabled\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Attribute, Component, Input, Optional } from '@angular/core';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { SizeThemeColorInputDirective } from '../../base/style-input/size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-icon-button',\n  templateUrl: './icon-button.component.html'\n})\nexport class IconButtonComponent extends SizeThemeColorInputDirective {\n\n  public plain: boolean = false;\n  public pill: boolean = false;\n  public round: boolean = false;\n  private _disabled: boolean = false;\n\n  @Input()\n  set disabled(isDisabled: boolean) {\n    this._disabled = isDisabled;\n  }\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  constructor(\n    @Optional() @Attribute('pill') pill: any,\n    @Optional() @Attribute('round') round: any,\n    @Optional() @Attribute('plain') plain: any,\n    themeService: ThemeService\n  ) {\n    super(themeService);\n    if (pill === '') this.pill = true;\n    if (round === '') this.round = true;\n    if (plain === '') this.plain = true;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/icon/icon.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SizeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-icon\n            \n\n\n\n\n            \n                templateUrl\n                ./icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/icon/icon.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { SizeColorInputDirective } from '../base/style-input/size-color-input.directive';\n\n@Component({\n  selector: 'sb-el-icon',\n  templateUrl: './icon.component.html'\n})\nexport class IconComponent extends SizeColorInputDirective {\n\n  constructor() {\n    super();\n    this.rootClass = 'sb-el-icon';\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputComponent.html":{"url":"components/InputComponent.html","title":"component - InputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/input/input.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ControlValueAccessorSizeThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: InputComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-input\n            \n\n\n\n\n            \n                templateUrl\n                ./input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pill\n                            \n                            \n                                    Public\n                                plain\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                            \n                                    Public\n                                getInputClasses\n                            \n                            \n                                    Public\n                                getPlaceholderClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholder\n                            \n                            \n                                spellcheck\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pill: any, plain: any, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/form/input/input.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pill\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plain\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/input/input.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        spellcheck\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/input/input.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/input/input.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/input/input.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInputClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInputClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/input/input.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPlaceholderClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPlaceholderClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/input/input.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pill\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/input/input.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            plain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/input/input.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-input'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/input/input.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Attribute, Component, Input, Optional } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { ControlValueAccessorSizeThemeColorInputDirective } from '../../base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-input',\n  templateUrl: './input.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: InputComponent,\n    multi: true\n  }]\n})\nexport class InputComponent extends ControlValueAccessorSizeThemeColorInputDirective {\n\n  public rootClass = 'sb-el-input';\n\n  @Input()\n  public placeholder: string = '';\n\n  @Input()\n  public type: string = 'text';\n\n  @Input()\n  public spellcheck: boolean = false;\n\n  public plain: boolean = false;\n  public pill: boolean = false;\n\n\n  constructor(\n    @Optional() @Attribute('pill') pill: any,\n    @Optional() @Attribute('plain') plain: any,\n    themeService: ThemeService\n  ) {\n    super(themeService);\n    if (pill === '') this.pill = true;\n    if (plain === '') this.plain = true;\n  }\n\n  public getInputClasses(): Array {\n    let classes = new Array();\n    classes.push(this.rootClass + '__input')\n    return classes;\n  }\n\n  public getPlaceholderClasses(): Array {\n    let classes = new Array();\n    classes.push(this.rootClass + '__placeholder')\n    classes.push(this.value || this.focused ? 'is-top' : '')\n    return classes;\n  }\n\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.pill ? 'is-pill' : '');\n    classes.push(this.plain ? 'is-plain': '');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n  \n    {{ placeholder }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ placeholder }}  '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Queue.html":{"url":"classes/Queue.html","title":"class - Queue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Queue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/queue/queue.ts\n        \n\n            \n                Description\n            \n            \n                A queue class with basic queue operations.\nThe queue class handles dequeuing and enqueuing of elements, as well as\nlength management. The dequeue method checks for an empty\nqueue, but does not produce an error if the queue is empty. Instead it\nreturns undefinded.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                queue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dequeue\n                            \n                            \n                                    Public\n                                enqueue\n                            \n                            \n                                    Public\n                                isEmpty\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            queue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/queue/queue.ts:13\n                            \n                        \n\n                \n                    \n                        The actual queue, which holds the elements.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            dequeue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dequeue()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/queue/queue.ts:39\n                \n            \n\n\n            \n                \n                    Removes (dequeues) the next element in the Queue.\nThe next element is the first element of the queue Array.\nThe method therefore gets the first element of this Array and shifts the\nArray by one to the left.\nIf the Queue is empty (the queue Array is empty), the\nmethod will return undefined instead of throwing an error.\n\n\n                    \n                    \n                    \n                        Returns :     T | undefined\n\n                    \n                    \n                        The first element in the queue or undefined if the\nQueue is empty\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enqueue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enqueue(value: T)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/queue/queue.ts:22\n                \n            \n\n\n            \n                \n                    Enqueues an element into the Queue.\nIt appends an element to the queue Array.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The element to add to the Queue\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isEmpty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEmpty()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/queue/queue.ts:63\n                \n            \n\n\n            \n                \n                    Checks if the Queue is empty or not.\nThe Queue if the queue Array is empty.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the queue is empty or false otherwise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/models/queue/queue.ts:52\n                                \n                            \n                    \n                        \n                                Gets the current length of the Queue.\nThe method returns the length of the queue Array.\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        export class Queue {\n  /**\n   * The actual queue, which holds the elements.\n   */\n  private queue: Array = new Array();\n\n  /**\n   * Enqueues an element into the `Queue`.\n   *\n   * It appends an element to the [queue]{@link #queue} `Array`.\n   *\n   *  @param{T} value The element to add to the `Queue`\n   */\n  public enqueue(value: T): void {\n    this.queue.push(value);\n  }\n\n  /**\n   * Removes (dequeues) the next element in the `Queue`.\n   *\n   * The next element is the first element of the [queue]{@link #queue} `Array`.\n   * The method therefore gets the first element of this `Array` and shifts the\n   * `Array` by one to the left.\n   *\n   * If the `Queue` is empty (the [queue]{@link #queue} `Array` is empty), the\n   * method will return `undefined` instead of throwing an error.\n   *\n   * @returns{T | undefined} The first element in the queue or `undefined` if the\n   * `Queue` is empty\n   */\n  public dequeue(): T | undefined {\n    if (!this.isEmpty()) {\n      return this.queue.shift();\n    } else return undefined;\n  }\n\n  /**\n   * Gets the current length of the `Queue`.\n   *\n   * The method returns the length of the [queue]{@link #queue} `Array`.\n   *\n   * @returns{number} The length of the `Queue`\n   */\n  get length(): number {\n    return this.queue.length;\n  }\n\n  /**\n   * Checks if the `Queue` is empty or not.\n   *\n   * The `Queue` if the [queue]{@link #queue} `Array` is empty.\n   *\n   * @returns{boolean} `true` if the queue is empty or `false` otherwise\n   */\n  public isEmpty(): boolean {\n    return this.queue.length == 0;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RadioButtonComponent.html":{"url":"components/RadioButtonComponent.html","title":"component - RadioButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RadioButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/radio-button/radio-button.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ControlValueAccessorSizeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: RadioButtonComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-radio-button\n            \n\n\n\n\n            \n                templateUrl\n                ./radio-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                check\n                            \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                labelPosition\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/form/radio-button/radio-button.component.ts:19\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/radio-button/radio-button.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelPosition\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'right'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/radio-button/radio-button.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            check\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    check()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/radio-button/radio-button.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/radio-button/radio-button.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlValueAccessorSizeColorInputDirective } from '../../base/control-value-accessor-style-input/control-value-accessor-size-color-input.directive';\n\n@Component({\n  selector: 'sb-el-radio-button',\n  templateUrl: './radio-button.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: RadioButtonComponent,\n    multi: true\n  }]\n})\nexport class RadioButtonComponent extends ControlValueAccessorSizeColorInputDirective {\n\n  @Input()\n  public label: string = '';\n  @Input()\n  public labelPosition: string = 'right';\n\n  constructor() {\n    super();\n    this.rootClass = 'sb-el-radio-button';\n  }\n\n  public check(): void {\n    this.value = true;\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.value ? 'is-checked' : 'is-unchecked');\n    classes.push(this.label ? 'is-label' : '');\n    classes.push(this.label ? 'label-is-' + this.labelPosition : '');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  {{ label }}\n  \n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}            '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'RadioButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RadioButtonGroupComponent.html":{"url":"components/RadioButtonGroupComponent.html","title":"component - RadioButtonGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RadioButtonGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/group/radio-button/radio-button-group.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SelectionOptionsDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: RadioButtonGroupComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-radio-button-group\n            \n\n\n\n\n            \n                templateUrl\n                ./radio-button-group.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                check\n                            \n                            \n                                    Protected\n                                updateValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                groupAlign\n                            \n                            \n                                groupTitle\n                            \n                            \n                                labelPosition\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        groupAlign\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'left'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/radio-button/radio-button-group.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        groupTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/radio-button/radio-button-group.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelPosition\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'right'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/radio-button/radio-button-group.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            check\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    check(newOption: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/group/radio-button/radio-button-group.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newOption\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValues()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/group/radio-button/radio-button-group.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-radio-button-group'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/group/radio-button/radio-button-group.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { SelectionOptionsDirective } from '../base/selection-options.directive';\n\n@Component({\n  selector: 'sb-el-radio-button-group',\n  templateUrl: './radio-button-group.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: RadioButtonGroupComponent,\n    multi: true\n  }]\n})\nexport class RadioButtonGroupComponent extends SelectionOptionsDirective {\n\n  public rootClass = 'sb-el-radio-button-group';\n\n  @Input()\n  public groupTitle: string = '';\n\n  @Input()\n  public groupAlign: string | null = 'left';\n\n  @Input()\n  public labelPosition: string = 'right';\n\n  public check(newOption: string) {\n    this.options.forEach((option: string) => {\n      if (option !== newOption) this.selectedOptions[option] = false;\n    })\n    this.writeValueInnerChange(newOption);\n  }\n\n  protected updateValues(): void {\n    this.options.forEach((option: string) => {\n      if (option === this.value) {\n        this.selectedOptions[option] = true;\n      } else this.selectedOptions[option] = false;\n    })\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'RadioButtonGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SbElementModule.html":{"url":"modules/SbElementModule.html","title":"module - SbElementModule","body":"\n                   \n\n\n\n\n    Modules\n    SbElementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SbElementModule\n\n\n\ncluster_SbElementModule_imports\n\n\n\ncluster_SbElementModule_declarations\n\n\n\ncluster_SbElementModule_exports\n\n\n\n\nAlertBoxComponent\n\nAlertBoxComponent\n\n\n\nSbElementModule\n\nSbElementModule\n\nSbElementModule -->\n\nAlertBoxComponent->SbElementModule\n\n\n\n\n\nAlertComponent\n\nAlertComponent\n\nSbElementModule -->\n\nAlertComponent->SbElementModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nSbElementModule -->\n\nCardComponent->SbElementModule\n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nSbElementModule -->\n\nContainerComponent->SbElementModule\n\n\n\n\n\nGridComponent\n\nGridComponent\n\nSbElementModule -->\n\nGridComponent->SbElementModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nSbElementModule -->\n\nTableComponent->SbElementModule\n\n\n\n\n\nAlertBoxComponent \n\nAlertBoxComponent \n\nAlertBoxComponent  -->\n\nSbElementModule->AlertBoxComponent \n\n\n\n\n\nAlertComponent \n\nAlertComponent \n\nAlertComponent  -->\n\nSbElementModule->AlertComponent \n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nSbElementModule->CardComponent \n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nSbElementModule->ContainerComponent \n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nSbElementModule->FormModule \n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nSbElementModule->GridComponent \n\n\n\n\n\nTableComponent \n\nTableComponent \n\nTableComponent  -->\n\nSbElementModule->TableComponent \n\n\n\n\n\nThemeInputDirective \n\nThemeInputDirective \n\nThemeInputDirective  -->\n\nSbElementModule->ThemeInputDirective \n\n\n\n\n\nBaseModule\n\nBaseModule\n\nSbElementModule -->\n\nBaseModule->SbElementModule\n\n\n\n\n\nFormModule\n\nFormModule\n\nSbElementModule -->\n\nFormModule->SbElementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/sb-element.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AlertBoxComponent\n                        \n                        \n                            AlertComponent\n                        \n                        \n                            CardComponent\n                        \n                        \n                            ContainerComponent\n                        \n                        \n                            GridComponent\n                        \n                        \n                            TableComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BaseModule\n                        \n                        \n                            FormModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AlertBoxComponent\n                        \n                        \n                            AlertComponent\n                        \n                        \n                            CardComponent\n                        \n                        \n                            ContainerComponent\n                        \n                        \n                            FormModule\n                        \n                        \n                            GridComponent\n                        \n                        \n                            TableComponent\n                        \n                        \n                            ThemeInputDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BaseModule } from './components/base/base.module';\nimport { FormModule } from './components/form/form.module';\n\n/**\n * Components\n */\nimport { ContainerComponent } from './components/container/container.component';\nimport { AlertBoxComponent } from './components/alert-box/alert-box.component';\nimport { TableComponent } from './components/table/table.component';\nimport { AlertComponent } from './components/alert/alert.component';\nimport { CardComponent } from './components/card/card.component';\nimport { GridComponent } from './components/grid/grid.component';\nimport { ThemeInputDirective } from \"./components/base/style-input/theme-input.directive\";\n\n\n@NgModule({\n  declarations: [\n    ContainerComponent,\n    AlertBoxComponent,\n    TableComponent,\n    AlertComponent,\n    CardComponent,\n    GridComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    FormModule,\n    BaseModule,\n  ],\n  exports: [\n    ContainerComponent,\n    AlertBoxComponent,\n    TableComponent,\n    AlertComponent,\n    CardComponent,\n    GridComponent,\n    // modules\n    FormModule,\n    // directives\n    ThemeInputDirective\n  ]\n})\nexport class SbElementModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectButtonComponent.html":{"url":"components/SelectButtonComponent.html","title":"component - SelectButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/select-button/select-button.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SelectionOptionsDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: SelectButtonComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-select-button\n            \n\n\n\n\n            \n                templateUrl\n                ./select-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pill\n                            \n                            \n                                    Public\n                                plain\n                            \n                            \n                                    Public\n                                showOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getButtonClasses\n                            \n                            \n                                    Public\n                                getClasses\n                            \n                            \n                                    Public\n                                select\n                            \n                            \n                                    Public\n                                toggle\n                            \n                            \n                                    Protected\n                                updateValues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pill: any, plain: any, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/form/select-button/select-button.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pill\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plain\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getButtonClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getButtonClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/select-button/select-button.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/select-button/select-button.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            select\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    select(newOption: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/select-button/select-button.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newOption\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/select-button/select-button.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValues()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/select-button/select-button.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pill\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/select-button/select-button.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            plain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/select-button/select-button.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/select-button/select-button.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Attribute, Component, Optional } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { SelectionOptionsDirective } from '../group/base/selection-options.directive';\n\n@Component({\n  selector: 'sb-el-select-button',\n  templateUrl: './select-button.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: SelectButtonComponent,\n    multi: true\n  }]\n})\nexport class SelectButtonComponent extends SelectionOptionsDirective {\n\n  public plain: boolean = false;\n  public pill: boolean = false;\n  public showOptions: boolean = false;\n\n  constructor(\n    @Optional() @Attribute('pill') pill: any,\n    @Optional() @Attribute('plain') plain: any,\n    themeService: ThemeService\n  ) {\n    super(themeService);\n    if (pill === '') this.pill = true;\n    if (plain === '') this.plain = true;\n    this.rootClass = 'sb-el-select-button';\n  }\n\n  public toggle(): void {\n    this.showOptions = !this.showOptions;\n  }\n\n  public select(newOption: string) {\n    this.toggle();\n    this.options.forEach((option: string) => {\n      if (option !== newOption) this.selectedOptions[option] = false;\n    })\n    this.writeValueInnerChange(newOption);\n  }\n\n  protected updateValues(): void {\n    this.options.forEach((option: string) => {\n      if (option === this.value) {\n        this.selectedOptions[option] = true;\n      } else this.selectedOptions[option] = false;\n    })\n  }\n\n  public getButtonClasses(): Array {\n    let classes = new Array();\n    classes.push('sb-el-select-button__button');\n    return classes;\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.pill ? 'is-pill' : '');\n    classes.push(this.plain ? 'is-plain': '');\n    classes.push(this.showOptions ? 'is-open' : 'is-closed');\n    return classes;\n  }\n}\n\n    \n\n    \n        \n  \n    {{ value }}\n    \n    &#xe5cf;\n  \n  \n    \n      \n          {{ option }}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ value }}                                {{ option }}            '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'SelectButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectedOptions.html":{"url":"interfaces/SelectedOptions.html","title":"interface - SelectedOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SelectedOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/form/group/base/selected-options.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        boolean\n\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/form/group/base/selected-options.ts:1\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface SelectedOptions {\n  [key: string]: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SelectionOptionsDirective.html":{"url":"directives/SelectionOptionsDirective.html","title":"directive - SelectionOptionsDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SelectionOptionsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/form/group/base/selection-options.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _options\n                            \n                            \n                                    Public\n                                selectedOptions\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/group/base/selection-options.directive.ts:14\n                            \n                        \n            \n        \n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/group/base/selection-options.directive.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SelectedOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/group/base/selection-options.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/group/base/selection-options.directive.ts:18\n                                \n                            \n\n                \n                    \n                        setoptions(options)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/group/base/selection-options.directive.ts:14\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            options\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { SelectedOptions } from './selected-options';\nimport { ControlValueAccessorSizeThemeColorInputDirective } from '../../../../components/base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class SelectionOptionsDirective extends ControlValueAccessorSizeThemeColorInputDirective {\n\n  public selectedOptions: SelectedOptions = {};\n  protected _options: Array = new Array();\n\n  @Input()\n  set options(options: Array) {\n    this._options = options;\n    this._options.forEach((option: string) => this.selectedOptions[option] = false);\n  }\n  get options(): Array {return this._options}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SizeColorInputDirective.html":{"url":"directives/SizeColorInputDirective.html","title":"directive - SizeColorInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SizeColorInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/style-input/size-color-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/size-color-input.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'd'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/size-color-input.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/style-input/size-color-input.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ClassNameInputDirective } from './class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class SizeColorInputDirective extends ClassNameInputDirective {\n\n    @Input()\n    public size: string | null = 'd';\n\n    @Input()\n    public color: string | null = 'primary';\n\n    public getClasses(): Array {\n      let classes = super.getClasses();\n      classes.push(this.size ? this.rootClass + '--' + this.size : '');\n      classes.push(this.color ? this.rootClass + '--' + this.color : '');\n      return classes;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SizeInputDirective.html":{"url":"directives/SizeInputDirective.html","title":"directive - SizeInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SizeInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/style-input/size-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'd'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/size-input.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/style-input/size-input.directive.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ClassNameInputDirective } from './class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class SizeInputDirective extends ClassNameInputDirective {\n\n  @Input()\n  public size: string | null = 'd';\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.size ? this.rootClass + '--' + this.size : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SizeThemeColorInputDirective.html":{"url":"directives/SizeThemeColorInputDirective.html","title":"directive - SizeThemeColorInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SizeThemeColorInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/style-input/size-theme-color-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/base/style-input/size-theme-color-input.directive.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/size-theme-color-input.directive.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'd'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/size-theme-color-input.directive.ts:11\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/style-input/size-theme-color-input.directive.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/size-theme-color-input.directive.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { ClassNameInputDirective } from './class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class SizeThemeColorInputDirective extends ClassNameInputDirective {\n\n  @Input()\n  public size: string | null = 'd';\n\n  public theme: string;\n\n  @Input()\n  public color: string | null = 'primary';\n\n  constructor(\n    private themeService: ThemeService\n  ) {\n    super();\n    this.theme = themeService.get();\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.size ? this.rootClass + '--' + this.size : '');\n    classes.push(this.theme && this.color ?\n      this.rootClass + '--' + this.theme + '-' + this.color : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SizeThemeInputDirective.html":{"url":"directives/SizeThemeInputDirective.html","title":"directive - SizeThemeInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SizeThemeInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/style-input/size-theme-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/base/style-input/size-theme-input.directive.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'd'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/size-theme-input.directive.ts:11\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/style-input/size-theme-input.directive.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/size-theme-input.directive.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { ClassNameInputDirective } from './class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class SizeThemeInputDirective extends ClassNameInputDirective {\n\n  @Input()\n  public size: string | null = 'd';\n\n  public theme: string;\n\n  constructor(\n    private themeService: ThemeService\n  ) {\n    super();\n    this.theme = themeService.get();\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.size ? this.rootClass + '--' + this.size : '');\n    classes.push(this.theme ? this.rootClass + '--' + this.theme : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SliderComponent.html":{"url":"components/SliderComponent.html","title":"component - SliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/slider/slider.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ControlValueAccessorSizeThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: SliderComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-slider\n            \n\n\n\n\n            \n                templateUrl\n                ./slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _step\n                            \n                            \n                                    Private\n                                decimalPlaces\n                            \n                            \n                                    Public\n                                rootClass\n                            \n                            \n                                    Public\n                                snapPoints\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                max\n                            \n                            \n                                min\n                            \n                            \n                                showValue\n                            \n                            \n                                snap\n                            \n                            \n                                step\n                            \n                            \n                                valueSuffix\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    step\n                                \n                                \n                                    snap\n                                \n                                \n                                    numberPipingValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showValue\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        snap\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        step\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueSuffix\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:60\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/slider/slider.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _step\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            decimalPlaces\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-slider'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snapPoints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/slider/slider.component.ts:50\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        step\n                    \n                \n\n                \n                    \n                        getstep()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/slider/slider.component.ts:34\n                                \n                            \n\n                \n                    \n                        setstep(step: number)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/slider/slider.component.ts:29\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            step\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        snap\n                    \n                \n\n\n                \n                    \n                        setsnap(snap)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/slider/slider.component.ts:38\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            snap\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        numberPipingValue\n                    \n                \n\n                \n                    \n                        getnumberPipingValue()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/form/slider/slider.component.ts:52\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlValueAccessorSizeThemeColorInputDirective } from '../../base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-slider',\n  templateUrl: './slider.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: SliderComponent,\n    multi: true\n  }]\n})\nexport class SliderComponent extends ControlValueAccessorSizeThemeColorInputDirective {\n\n  public rootClass = 'sb-el-slider';\n\n  @Input()\n  public label: string = '';\n\n  @Input()\n  public min: number = 0;\n\n  @Input()\n  public max: number = 10;\n\n  private _step: number = 1;\n  @Input()\n  set step(step: number) {\n    this._step = step;\n    if (Math.floor(step) !== step)\n        this.decimalPlaces = step.toString().split(\".\")[1].length || 0;\n  }\n  get step(): number { return this._step }\n  private decimalPlaces: number = 0;\n\n  @Input()\n  set snap(snap: Array | boolean) {\n    if (Array.isArray(snap)) this.snapPoints = snap;\n    else if (snap) {\n      this.snapPoints = new Array();\n      let snapStep = Math.round((this.max-this.min)/5/this.step)*this.step;\n      let sum = this.min;\n      while(sum  = new Array();\n\n  get numberPipingValue(): string {\n    return '1.' + this.decimalPlaces + '-' + this.decimalPlaces;\n  }\n\n  @Input()\n  public showValue: boolean = false;\n\n  @Input()\n  public valueSuffix: string = '';\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.label ? 'is-label' : 'is-not-label');\n    classes.push(this.showValue ? 'is-value' : 'is-not-value');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  {{ label }}\n  \n  \n    {{ value | number: numberPipingValue }} {{ valueSuffix }}\n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}        {{ value | number: numberPipingValue }} {{ valueSuffix }}          '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'SliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/StateManagerDirective.html":{"url":"directives/StateManagerDirective.html","title":"directive - StateManagerDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  StateManagerDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/control-value-accessor/state-manager.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _disabled\n                            \n                            \n                                    Private\n                                _focused\n                            \n                            \n                                    Private\n                                _pristine\n                            \n                            \n                                    Private\n                                _touched\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                setFocusedState\n                            \n                            \n                                    Public\n                                setPristineState\n                            \n                            \n                                    Public\n                                setTouchedState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                focused\n                            \n                            \n                                pristine\n                            \n                            \n                                touched\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    touched\n                                \n                                \n                                    pristine\n                                \n                                \n                                    disabled\n                                \n                                \n                                    focused\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        focused\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pristine\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        touched\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDisabledState(disabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    disabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setFocusedState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setFocusedState(focused: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    focused\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPristineState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPristineState(pristine: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pristine\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setTouchedState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTouchedState(touched: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    touched\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _focused\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _pristine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _touched\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        touched\n                    \n                \n\n                \n                    \n                        gettouched()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:11\n                                \n                            \n\n                \n                    \n                        settouched(isTouched: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:10\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            isTouched\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        pristine\n                    \n                \n\n                \n                    \n                        getpristine()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:16\n                                \n                            \n\n                \n                    \n                        setpristine(isPristine: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:15\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            isPristine\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n\n                \n                    \n                        getdisabled()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:21\n                                \n                            \n\n                \n                    \n                        setdisabled(isDisabled: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            isDisabled\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        focused\n                    \n                \n\n                \n                    \n                        getfocused()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:26\n                                \n                            \n\n                \n                    \n                        setfocused(isFocused: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/base/control-value-accessor/state-manager.directive.ts:25\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            isFocused\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class StateManagerDirective {\n\n  private _touched: boolean = false;\n  @Input()\n  set touched(isTouched: boolean) { this._touched = isTouched }\n  get touched(): boolean {return this._touched}\n\n  private _pristine: boolean = true;\n  @Input()\n  set pristine(isPristine: boolean) { this._pristine = isPristine }\n  get pristine(): boolean {return this._pristine}\n\n  private _disabled: boolean = false;\n  @Input()\n  set disabled(isDisabled: boolean) { this._disabled = isDisabled }\n  get disabled(): boolean { return this._disabled }\n\n  private _focused: boolean = false;\n  @Input()\n  set focused(isFocused: boolean) { this._focused = isFocused }\n  get focused(): boolean { return this._focused }\n\n  public setDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\n\n  public setTouchedState(touched: boolean): void {\n    this.touched = touched;\n  }\n\n  public setPristineState(pristine: boolean): void {\n    this.pristine = pristine;\n  }\n\n  public setFocusedState(focused: boolean): void {\n    this.focused = focused\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Table.html":{"url":"classes/Table.html","title":"class - Table","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Table\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/table/table.ts\n        \n\n            \n                Description\n            \n            \n                Datastructure, holding information about a table. The table consists of\ncolumns of different data types. Each column has different styling options\nin the form of ColumnInformationInterface. The data can be accessed\nvia tha data field. The styling options are stored in the\ncolumnInformation array.\n\n            \n\n\n            \n                Implements\n            \n            \n                            TableInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                columnInformation\n                            \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                columnsToRows\n                            \n                            \n                                    Static\n                                    Async\n                                fromCSV\n                            \n                            \n                                    Static\n                                fromJSON\n                            \n                            \n                                    Static\n                                fromRows\n                            \n                            \n                                    Private\n                                    Static\n                                getMaxColumnLength\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data?: Array>, columnInformation?: Array)\n                    \n                \n                        \n                            \n                                Defined in src/lib/models/table/table.ts:32\n                            \n                        \n\n                \n                    \n                            Initiates a new Table. The table can be initiated with or without\n data and style. If one or the other is missing, the initiation will create\n an empty Table.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    Array>\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                The data of the Table stored as an\nArray of columns\n\n                                                        \n                                                \n                                                \n                                                        columnInformation\n                                                  \n                                                        \n                                                                        Array\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                The styling information\nfor each column\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            columnInformation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/table/table.ts:18\n                            \n                        \n\n                \n                    \n                        Information about the columns.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array>\n\n                        \n                    \n                    \n                        \n                            Default value : new Array>()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/table/table.ts:25\n                            \n                        \n\n                \n                    \n                        The data of the table. The data is stored as an array of data for each row.\nEach row contains the data for each column.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            columnsToRows\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    columnsToRows(columns: Array>)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/table/table.ts:165\n                \n            \n\n\n            \n                \n                    Transforms the columns into rows. This is necessary, when data is received\nin form of columns instead of rows. The missing entries get filled up with\nthe character '-'.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    columns\n                                    \n                                            Array>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The columns to transform\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array>\n\n                    \n                    \n                        The data in form of rows\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            fromCSV\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromCSV(csvFile: File, columnInformationOptions?: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/table/table.ts:67\n                \n            \n\n\n            \n                \n                    Creates a Table from a CSV file.\nThe Function returns a promise, since the Csv class has to access\nthe filesystem. The parseFile method is a static\nmethod, which is iterable over the column names of the table. The columns\nthen get set to the new table and the column names get set to the\ncolumnInformation of the Table.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    csvFile\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The CSV file\n\n                                    \n                                \n                                \n                                    columnInformationOptions\n                                    \n                                                Array\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The additional options for the columns\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The new Table in form of a Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            fromJSON\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromJSON(table: Object, columnInformationOptions?: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/table/table.ts:123\n                \n            \n\n\n            \n                \n                    Creates a Table from a JSON object.\nThe JSON object contains entries with column name as the key and the data\nof the column as the entry to the correspronding key. The column data has\nto be stored in an Array.\nThe method maps each column to rows. Meaning, that it extracts each row\nfrom the columns. This is necessary for the Table to properly store\nthe data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The JSON object\n\n                                    \n                                \n                                \n                                    columnInformationOptions\n                                    \n                                                Array\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The additional column information\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Table\n\n                    \n                    \n                        The new Table\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            fromRows\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromRows(rows: Array>, columnInformation: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/table/table.ts:98\n                \n            \n\n\n            \n                \n                    Creates a Table from an Array of rows.\nThe Array has to contain arrays of the data of the rows. The data then\ngets set to the Table as well as the columnInformation.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    rows\n                                    \n                                            Array>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The rows of the Table\n\n                                    \n                                \n                                \n                                    columnInformation\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The\nadditional column information\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Table\n\n                    \n                    \n                        The new Table\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getMaxColumnLength\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaxColumnLength(columns: Array>)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/table/table.ts:151\n                \n            \n\n\n            \n                \n                    Returns the maximum length of all the columns.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    columns\n                                    \n                                            Array>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The columns$\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The maximum length of all the columns\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Csv } from \"../csv/csv\";\nimport { ColumnInformation } from \"./column-information\";\nimport { TableInterface } from \"./table.interface\";\nimport { ColumnInformationInterface, ColumnInformationOptionsInterface } from './column-information.interface';\n\n/**\n * Datastructure, holding information about a table. The table consists of\n * columns of different data types. Each column has different styling options\n * in the form of {@link ColumnInformationInterface}. The data can be accessed\n * via tha [data]{@link #data} field. The styling options are stored in the\n * [columnInformation]{@link #columnInformation} array.\n */\nexport class Table implements TableInterface {\n\n  /**\n   * Information about the columns.\n   */\n  public columnInformation: Array\n    = new Array();\n\n  /**\n   * The data of the table. The data is stored as an array of data for each row.\n   * Each row contains the data for each column.\n   */\n  public data: Array> = new Array>();\n\n\n  constructor();\n  constructor(\n    data: Array>,\n    columnInformation: Array\n  );\n  /**\n\t * Initiates a new {@link Table}. The table can be initiated with or without\n   * data and style. If one or the other is missing, the initiation will create\n   * an empty {@link Table}.\n   *\n   * @param{Array>} data The data of the `Table` stored as an\n   * `Array` of columns\n   * @param{Array} columnInformation The styling information\n   * for each column\n\t */\n  constructor(\n    data?: Array>,\n    columnInformation?: Array\n  ) {\n    if (data && columnInformation) {\n      this.data = data;\n      this.columnInformation = columnInformation;\n    }\n  }\n\n  /**\n   * Creates a {@link Table} from a `CSV` file.\n   *\n   * The Function returns a promise, since the {@link Csv} class has to access\n   * the filesystem. The [parseFile]{@link Csv#parseFile} method is a static\n   * method, which is iterable over the column names of the table. The columns\n   * then get set to the new table and the column names get set to the\n   * `columnInformation` of the `Table`.\n   *\n   * @param{File} csvFile The CSV file\n   * @param{Array} columnInformationOptions\n   * The additional options for the columns\n   * @returns The new Table in form of a `Promise`\n   */\n  public static async fromCSV(\n    csvFile: File,\n    columnInformationOptions?: Array\n  ): Promise {\n    return Csv.parseFile(csvFile).then(csv => {\n      let columnInformation = new Array();\n\n      csv.forEachColumnName((columnName: string, index: number) => {\n        let info = ColumnInformation.defaults.set({name: columnName});\n        if (columnInformationOptions && columnInformationOptions[index]) {\n          info = ColumnInformation.merge(info, columnInformationOptions[index])\n        }\n\n        columnInformation.push(info)\n      });\n\n      return new Table(csv.data, columnInformation);\n    });\n  }\n\n  /**\n   * Creates a {@link Table} from an `Array` of rows.\n   *\n   * The `Array` has to contain arrays of the data of the rows. The data then\n   * gets set to the {@link Table} as well as the `columnInformation`.\n   *\n   * @param{Array>} rows The rows of the `Table`\n   * @param{Array} columnInformation The\n   * additional column information\n   * @returns The new Table\n   */\n  public static fromRows(\n    rows: Array>,\n    columnInformation: Array\n  ): Table {\n    return new Table(rows, columnInformation.map(\n      info => ColumnInformation.defaults.set(info)\n    ));\n  }\n\n  /**\n   * Creates a {@link Table} from a `JSON` object.\n   *\n   * The `JSON` object contains entries with column name as the key and the data\n   * of the column as the entry to the correspronding key. The column data has\n   * to be stored in an `Array`.\n   *\n   * The method maps each column to rows. Meaning, that it extracts each row\n   * from the columns. This is necessary for the {@link Table} to properly store\n   * the data.\n   *\n   * @param{Object} table The `JSON` object\n   * @param{Array} columnInformationOptions\n   * The additional column information\n   * @returns The new Table\n   */\n  public static fromJSON(\n    table: Object,\n    columnInformationOptions?: Array\n  ): Table {\n    let entries = Object.entries(table);\n    let columns = new Array>();\n    let columnInformation = new Array();\n\n    entries.forEach((entry: any, index: number) => {\n      if (Array.isArray(entry[1])) {\n        columns.push(entry[1])\n        let info = ColumnInformation.defaults.set({name: entry[0]});\n        if (columnInformationOptions && columnInformationOptions[index]) {\n          info = ColumnInformation.merge(info, columnInformationOptions[index])\n        }\n        columnInformation.push(info)\n      }\n    })\n\n    return new Table(this.columnsToRows(columns), columnInformation);\n  }\n\n  /**\n   * Returns the maximum length of all the columns.\n   *\n   * @param{Array>} columns The columns$\n   * @returns The maximum length of all the columns\n   */\n  private static getMaxColumnLength(columns: Array>): number {\n    let max = 0;\n    columns.forEach(column => max = column.length > max ? column.length : max);\n    return max;\n  }\n\n  /**\n   * Transforms the columns into rows. This is necessary, when data is received\n   * in form of columns instead of rows. The missing entries get filled up with\n   * the character '-'.\n   *\n   * @param{Array>} columns The columns to transform\n   * @returns The data in form of rows\n   */\n  private static columnsToRows(columns: Array>): Array> {\n    let rows = new Array>();\n    for (let i = 0 ; i ();\n      columns.forEach(column => {\n        row.push(column[i] ? column[i] : '-')\n      })\n      rows.push(row);\n    }\n    return rows;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableComponent.html":{"url":"components/TableComponent.html","title":"component - TableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/table/table.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-el-table\n            \n\n\n\n\n            \n                templateUrl\n                ./table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rootClass\n                            \n                            \n                                    Public\n                                subRootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                            \n                                    Public\n                                getColumnClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                separation\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        separation\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'all'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/table/table.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        table\n                    \n                \n                \n                    \n                        Type :         TableInterface\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/table/table.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/table/table.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getColumnClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getColumnClasses(columnIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/table/table.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    columnIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-table'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/table/table.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subRootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : this.rootClass + '__data'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/table/table.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { TableInterface } from \"../../models/table/table.interface\";\nimport { ThemeColorInputDirective } from '../base/style-input/theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-table',\n  templateUrl: './table.component.html'\n})\nexport class TableComponent extends ThemeColorInputDirective {\n\n  public rootClass: string = 'sb-el-table';\n  public subRootClass: string = this.rootClass + '__data';\n\n  @Input()\n  public separation: string = 'all';\n\n  @Input()\n  public table!: TableInterface;\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    if (this.separation === 'all') {\n      classes.push('is-border-separation');\n      classes.push('is-color-separation');\n    } else if (this.separation) {\n      classes.push('is-' + this.separation + '-separation');\n    }\n    return classes;\n  }\n\n  public getColumnClasses(columnIndex: number): Array {\n    let classes = new Array();\n    let columnInformation = this.table.columnInformation[columnIndex];\n    classes.push(this.subRootClass);\n    classes.push(this.subRootClass + '--' + columnInformation.color)\n    classes.push('is-' + columnInformation.alignment)\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ column.name }}\n        \n      \n    \n    \n      \n        \n          {{ columnEntry }}\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ column.name }}                                              {{ columnEntry }}                    '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'TableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableInterface.html":{"url":"interfaces/TableInterface.html","title":"interface - TableInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TableInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/table/table.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        columnInformation\n                                \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        columnInformation\n                                    \n                                \n                                \n                                    \n                                        columnInformation:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Information about the columns.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     Array>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array>\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data of the table. The data is stored as an array of data for each row.\nEach row contains the data for each column.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ColumnInformationInterface } from \"./column-information.interface\";\n\nexport interface TableInterface {\n\n  /**\n   * Information about the columns.\n   */\n  columnInformation: Array;\n\n  /**\n   * The data of the table. The data is stored as an array of data for each row.\n   * Each row contains the data for each column.\n   */\n  data: Array>;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ThemeColorInputDirective.html":{"url":"directives/ThemeColorInputDirective.html","title":"directive - ThemeColorInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ThemeColorInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/style-input/theme-color-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/base/style-input/theme-color-input.directive.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/theme-color-input.directive.ts:13\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/style-input/theme-color-input.directive.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/theme-color-input.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { ClassNameInputDirective } from './class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ThemeColorInputDirective extends ClassNameInputDirective {\n\n  public theme: string;\n\n  @Input()\n  public color: string | null = 'primary';\n\n  constructor(\n    private themeService: ThemeService\n  ) {\n    super();\n    this.theme = themeService.get();\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.theme && this.color ?\n      this.rootClass + '--' + this.theme + '-' + this.color : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ThemeInputDirective.html":{"url":"directives/ThemeInputDirective.html","title":"directive - ThemeInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ThemeInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/base/style-input/theme-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selector]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/base/style-input/theme-input.directive.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/base/style-input/theme-input.directive.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/base/style-input/theme-input.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ThemeService } from '../../../services/theme/theme.service';\nimport { ClassNameInputDirective } from './class-name-input.directive';\n\n@Directive({\n  selector: '[selector]'\n})\nexport class ThemeInputDirective  extends ClassNameInputDirective {\n\n  public theme: string;\n\n  constructor(\n    private themeService: ThemeService\n  ) {\n    super();\n    this.theme = themeService.get();\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.theme ? this.rootClass + '--' + this.theme : '');\n    return classes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/theme/theme.service.ts\n        \n\n            \n                Description\n            \n            \n                A service which provides global access to the current theme.\nThe service allows a component to get and set the theme. There are two\nthemes:\n\nlight\nnight\n\nThe default theme is the night theme. The theme is stored in form of a\nstring, which is then included into classes of the different components or\nelements.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                commit\n                            \n                            \n                                    Public\n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            commit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    commit(theme: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/theme/theme.service.ts:29\n                \n            \n\n\n            \n                \n                    Sets the theme to the service.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    theme\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The theme to commit\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/theme/theme.service.ts:36\n                \n            \n\n\n            \n                \n                    Gets the current theme.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The current theme\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'night'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/theme/theme.service.ts:22\n                            \n                        \n\n                \n                    \n                        The current theme. The default theme is night.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n  * A service which provides global access to the current theme.\n  *\n  * The service allows a component to get and set the theme. There are two\n  * themes:\n  * - `light`\n  * - `night`\n  *\n  * The default theme is the `night` theme. The theme is stored in form of a\n  * string, which is then included into classes of the different components or\n  * elements.\n  */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  /**\n   * The current theme. The default theme is `night`.\n   */\n  private _theme: string = 'night';\n\n  /**\n   * Sets the theme to the service.\n   *\n   * @param{string} theme The theme to commit\n   */\n  public commit(theme: string): void { this._theme = theme }\n\n  /**\n   *  Gets the current theme.\n   *\n   * @returns{string} The current theme\n   */\n  public get(): string { return this._theme }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleSwitchComponent.html":{"url":"components/ToggleSwitchComponent.html","title":"component - ToggleSwitchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleSwitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/form/toggle-switch/toggle-switch.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ControlValueAccessorSizeThemeColorInputDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: ToggleSwitchComponent, multi: true\n}\n                \n            \n\n\n            \n                selector\n                sb-el-toggle-switch\n            \n\n\n\n\n            \n                templateUrl\n                ./toggle-switch.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rootClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getClasses\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClasses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/toggle-switch/toggle-switch.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/form/toggle-switch/toggle-switch.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rootClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sb-el-toggle-switch'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/form/toggle-switch/toggle-switch.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlValueAccessorSizeThemeColorInputDirective } from '../../base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive';\n\n@Component({\n  selector: 'sb-el-toggle-switch',\n  templateUrl: './toggle-switch.component.html',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: ToggleSwitchComponent,\n    multi: true\n  }]\n})\nexport class ToggleSwitchComponent extends ControlValueAccessorSizeThemeColorInputDirective {\n\n  public rootClass = 'sb-el-toggle-switch';\n\n  public toggle(): void {\n    this.value = !this.value;\n  }\n\n  public getClasses(): Array {\n    let classes = super.getClasses();\n    classes.push(this.value ? 'is-on' : 'is-off');\n    return classes;\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AlertBoxComponent', 'selector': 'sb-el-alert-box'},{'name': 'AlertComponent', 'selector': 'sb-el-alert'},{'name': 'ButtonComponent', 'selector': 'sb-el-button'},{'name': 'CardComponent', 'selector': 'sb-el-card'},{'name': 'CheckboxComponent', 'selector': 'sb-el-checkbox'},{'name': 'CheckboxGroupComponent', 'selector': 'sb-el-checkbox-group'},{'name': 'ContainerComponent', 'selector': 'sb-el-container'},{'name': 'FileInputComponent', 'selector': 'sb-el-file-input'},{'name': 'FormGroupComponent', 'selector': 'sb-el-form-group'},{'name': 'GridComponent', 'selector': 'sb-el-grid'},{'name': 'IconButtonComponent', 'selector': 'sb-el-icon-button'},{'name': 'IconComponent', 'selector': 'sb-el-icon'},{'name': 'InputComponent', 'selector': 'sb-el-input'},{'name': 'RadioButtonComponent', 'selector': 'sb-el-radio-button'},{'name': 'RadioButtonGroupComponent', 'selector': 'sb-el-radio-button-group'},{'name': 'SelectButtonComponent', 'selector': 'sb-el-select-button'},{'name': 'SliderComponent', 'selector': 'sb-el-slider'},{'name': 'TableComponent', 'selector': 'sb-el-table'},{'name': 'ToggleSwitchComponent', 'selector': 'sb-el-toggle-switch'}];\n    var DIRECTIVES = [{'name': 'ClassNameInputDirective', 'selector': '[selector]'},{'name': 'ColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorBaseDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorClassNameInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorSizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ControlValueAccessorThemeColorInputDirective', 'selector': '[selector]'},{'name': 'EventManagerDirective', 'selector': '[selector]'},{'name': 'SelectionOptionsDirective', 'selector': '[selector]'},{'name': 'SizeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeColorInputDirective', 'selector': '[selector]'},{'name': 'SizeThemeInputDirective', 'selector': '[selector]'},{'name': 'StateManagerDirective', 'selector': '[selector]'},{'name': 'ThemeColorInputDirective', 'selector': '[selector]'},{'name': 'ThemeInputDirective', 'selector': '[selector]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToggleSwitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/components/alert-box/alert-box.component.ts\n            \n            component\n            AlertBoxComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/lib/components/alert/alert.component.ts\n            \n            component\n            AlertComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor-style-input/control-value-accessor-class-name-input.directive.ts\n            \n            directive\n            ControlValueAccessorClassNameInputDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor-style-input/control-value-accessor-color-input.directive.ts\n            \n            directive\n            ControlValueAccessorColorInputDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-color-input.directive.ts\n            \n            directive\n            ControlValueAccessorSizeColorInputDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-input.directive.ts\n            \n            directive\n            ControlValueAccessorSizeInputDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor-style-input/control-value-accessor-size-theme-color-input.directive.ts\n            \n            directive\n            ControlValueAccessorSizeThemeColorInputDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor-style-input/control-value-accessor-theme-color-input.directive.ts\n            \n            directive\n            ControlValueAccessorThemeColorInputDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor/control-value-accessor.base.directive.ts\n            \n            directive\n            ControlValueAccessorBaseDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor/event-manager.directive.ts\n            \n            directive\n            EventManagerDirective\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/lib/components/base/control-value-accessor/state-manager.directive.ts\n            \n            directive\n            StateManagerDirective\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/lib/components/base/style-input/class-name-input.directive.ts\n            \n            directive\n            ClassNameInputDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/components/base/style-input/color-input.directive.ts\n            \n            directive\n            ColorInputDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/components/base/style-input/size-color-input.directive.ts\n            \n            directive\n            SizeColorInputDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/components/base/style-input/size-input.directive.ts\n            \n            directive\n            SizeInputDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/components/base/style-input/size-theme-color-input.directive.ts\n            \n            directive\n            SizeThemeColorInputDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/components/base/style-input/size-theme-input.directive.ts\n            \n            directive\n            SizeThemeInputDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/components/base/style-input/theme-color-input.directive.ts\n            \n            directive\n            ThemeColorInputDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/components/base/style-input/theme-input.directive.ts\n            \n            directive\n            ThemeInputDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/components/card/card.component.ts\n            \n            component\n            CardComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/components/container/container.component.ts\n            \n            component\n            ContainerComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/components/form/button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/lib/components/form/checkbox/checkbox.component.ts\n            \n            component\n            CheckboxComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/components/form/file-input/file-input.component.ts\n            \n            component\n            FileInputComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/lib/components/form/group/base/selected-options.ts\n            \n            interface\n            SelectedOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/components/form/group/base/selection-options.directive.ts\n            \n            directive\n            SelectionOptionsDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/components/form/group/checkbox/checkbox-group.component.ts\n            \n            component\n            CheckboxGroupComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/components/form/group/form-group.component.ts\n            \n            component\n            FormGroupComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/components/form/group/radio-button/radio-button-group.component.ts\n            \n            component\n            RadioButtonGroupComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/components/form/icon-button/icon-button.component.ts\n            \n            component\n            IconButtonComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/components/form/input/input.component.ts\n            \n            component\n            InputComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/lib/components/form/radio-button/radio-button.component.ts\n            \n            component\n            RadioButtonComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/components/form/select-button/select-button.component.ts\n            \n            component\n            SelectButtonComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/lib/components/form/slider/slider.component.ts\n            \n            component\n            SliderComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/lib/components/form/toggle-switch/toggle-switch.component.ts\n            \n            component\n            ToggleSwitchComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/components/grid/grid.component.ts\n            \n            component\n            GridComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/components/icon/icon.component.ts\n            \n            component\n            IconComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/components/table/table.component.ts\n            \n            component\n            TableComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/models/alert/alert-service-subscriber.ts\n            \n            interface\n            AlertServiceSubscriber\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/lib/models/alert/alert.ts\n            \n            interface\n            Alert\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/lib/models/csv/csv.ts\n            \n            class\n            Csv\n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                src/lib/models/queue/queue.ts\n            \n            class\n            Queue\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/lib/models/table/column-information.interface.ts\n            \n            interface\n            ColumnInformationInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/models/table/column-information.interface.ts\n            \n            interface\n            ColumnInformationOptionsInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/models/table/column-information.ts\n            \n            class\n            ColumnInformation\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lib/models/table/column-information.ts\n            \n            class\n            ColumnInformationDefaults\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/models/table/table.interface.ts\n            \n            interface\n            TableInterface\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/lib/models/table/table.ts\n            \n            class\n            Table\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/lib/services/alert/alert.service.ts\n            \n            injectable\n            AlertService\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/lib/services/theme/theme.service.ts\n            \n            injectable\n            ThemeService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.1.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^12.0.1\n        \n            @angular/core : ^12.0.1\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Delimiter   (src/.../csv.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/models/csv/csv.ts\n    \n        \n            \n                \n                    \n                        \n                        Delimiter\n                    \n                \n                        \n                            \n                                 COMMA\n                            \n                        \n                        \n                            \n                                Value : ,\n                            \n                        \n                        \n                            \n                                 COLON\n                            \n                        \n                        \n                            \n                                Value : :\n                            \n                        \n                        \n                            \n                                 SEMICOLON\n                            \n                        \n                        \n                            \n                                Value : ;\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSbElement\nThis library was generated with Angular CLI version 12.0.1. It is a component library constructed around the SCSS library Sb-Theming and supports Angular Schematics.\nInstallation\nAngular Schematics\nFor the automatic and way simpler installation, you can use angular schematics\nng add sb-elementAnd that's it, angular will take care of the rest and install the necessary packages and update your workspace.\nManual\nFor the manual Installation follow these steps:\n\nInstall packages:\nnpm install --save-dev sb-element\nnpm install --save-dev sb-theming\nInclude the theming files into your Angular CLI project. For this, follow the installation documentation here.\n\nYou are good to go!\n\n\nDocumentation\nDocumentation is not yet available for this project.  If you would like to look into the package yourself, checkout the SbElement GitHub Page. There is a TestApp application (located in the src directory), which is implementing the library.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        BaseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SbElementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BaseModule\n\n\n\ncluster_BaseModule_declarations\n\n\n\ncluster_BaseModule_exports\n\n\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_SbElementModule\n\n\n\ncluster_SbElementModule_declarations\n\n\n\ncluster_SbElementModule_exports\n\n\n\n\nClassNameInputDirective\n\nClassNameInputDirective\n\n\n\nBaseModule\n\nBaseModule\n\nBaseModule -->\n\nClassNameInputDirective->BaseModule\n\n\n\n\n\nColorInputDirective\n\nColorInputDirective\n\nBaseModule -->\n\nColorInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorBaseDirective\n\nControlValueAccessorBaseDirective\n\nBaseModule -->\n\nControlValueAccessorBaseDirective->BaseModule\n\n\n\n\n\nControlValueAccessorClassNameInputDirective\n\nControlValueAccessorClassNameInputDirective\n\nBaseModule -->\n\nControlValueAccessorClassNameInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorColorInputDirective\n\nControlValueAccessorColorInputDirective\n\nBaseModule -->\n\nControlValueAccessorColorInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorSizeColorInputDirective\n\nControlValueAccessorSizeColorInputDirective\n\nBaseModule -->\n\nControlValueAccessorSizeColorInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorSizeInputDirective\n\nControlValueAccessorSizeInputDirective\n\nBaseModule -->\n\nControlValueAccessorSizeInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorSizeThemeColorInputDirective\n\nControlValueAccessorSizeThemeColorInputDirective\n\nBaseModule -->\n\nControlValueAccessorSizeThemeColorInputDirective->BaseModule\n\n\n\n\n\nControlValueAccessorThemeColorInputDirective\n\nControlValueAccessorThemeColorInputDirective\n\nBaseModule -->\n\nControlValueAccessorThemeColorInputDirective->BaseModule\n\n\n\n\n\nEventManagerDirective\n\nEventManagerDirective\n\nBaseModule -->\n\nEventManagerDirective->BaseModule\n\n\n\n\n\nSizeColorInputDirective\n\nSizeColorInputDirective\n\nBaseModule -->\n\nSizeColorInputDirective->BaseModule\n\n\n\n\n\nSizeInputDirective\n\nSizeInputDirective\n\nBaseModule -->\n\nSizeInputDirective->BaseModule\n\n\n\n\n\nSizeThemeColorInputDirective\n\nSizeThemeColorInputDirective\n\nBaseModule -->\n\nSizeThemeColorInputDirective->BaseModule\n\n\n\n\n\nSizeThemeInputDirective\n\nSizeThemeInputDirective\n\nBaseModule -->\n\nSizeThemeInputDirective->BaseModule\n\n\n\n\n\nStateManagerDirective\n\nStateManagerDirective\n\nBaseModule -->\n\nStateManagerDirective->BaseModule\n\n\n\n\n\nThemeColorInputDirective\n\nThemeColorInputDirective\n\nBaseModule -->\n\nThemeColorInputDirective->BaseModule\n\n\n\n\n\nThemeInputDirective\n\nThemeInputDirective\n\nBaseModule -->\n\nThemeInputDirective->BaseModule\n\n\n\n\n\nClassNameInputDirective \n\nClassNameInputDirective \n\nClassNameInputDirective  -->\n\nBaseModule->ClassNameInputDirective \n\n\n\n\n\nColorInputDirective \n\nColorInputDirective \n\nColorInputDirective  -->\n\nBaseModule->ColorInputDirective \n\n\n\n\n\nControlValueAccessorBaseDirective \n\nControlValueAccessorBaseDirective \n\nControlValueAccessorBaseDirective  -->\n\nBaseModule->ControlValueAccessorBaseDirective \n\n\n\n\n\nControlValueAccessorClassNameInputDirective \n\nControlValueAccessorClassNameInputDirective \n\nControlValueAccessorClassNameInputDirective  -->\n\nBaseModule->ControlValueAccessorClassNameInputDirective \n\n\n\n\n\nControlValueAccessorColorInputDirective \n\nControlValueAccessorColorInputDirective \n\nControlValueAccessorColorInputDirective  -->\n\nBaseModule->ControlValueAccessorColorInputDirective \n\n\n\n\n\nControlValueAccessorSizeColorInputDirective \n\nControlValueAccessorSizeColorInputDirective \n\nControlValueAccessorSizeColorInputDirective  -->\n\nBaseModule->ControlValueAccessorSizeColorInputDirective \n\n\n\n\n\nControlValueAccessorSizeInputDirective \n\nControlValueAccessorSizeInputDirective \n\nControlValueAccessorSizeInputDirective  -->\n\nBaseModule->ControlValueAccessorSizeInputDirective \n\n\n\n\n\nControlValueAccessorSizeThemeColorInputDirective \n\nControlValueAccessorSizeThemeColorInputDirective \n\nControlValueAccessorSizeThemeColorInputDirective  -->\n\nBaseModule->ControlValueAccessorSizeThemeColorInputDirective \n\n\n\n\n\nControlValueAccessorThemeColorInputDirective \n\nControlValueAccessorThemeColorInputDirective \n\nControlValueAccessorThemeColorInputDirective  -->\n\nBaseModule->ControlValueAccessorThemeColorInputDirective \n\n\n\n\n\nSizeColorInputDirective \n\nSizeColorInputDirective \n\nSizeColorInputDirective  -->\n\nBaseModule->SizeColorInputDirective \n\n\n\n\n\nSizeInputDirective \n\nSizeInputDirective \n\nSizeInputDirective  -->\n\nBaseModule->SizeInputDirective \n\n\n\n\n\nSizeThemeColorInputDirective \n\nSizeThemeColorInputDirective \n\nSizeThemeColorInputDirective  -->\n\nBaseModule->SizeThemeColorInputDirective \n\n\n\n\n\nSizeThemeInputDirective \n\nSizeThemeInputDirective \n\nSizeThemeInputDirective  -->\n\nBaseModule->SizeThemeInputDirective \n\n\n\n\n\nThemeColorInputDirective \n\nThemeColorInputDirective \n\nThemeColorInputDirective  -->\n\nBaseModule->ThemeColorInputDirective \n\n\n\n\n\nThemeInputDirective \n\nThemeInputDirective \n\nThemeInputDirective  -->\n\nBaseModule->ThemeInputDirective \n\n\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nBaseModule->FormModule\n\n\n\n\n\nSbElementModule\n\nSbElementModule\n\nSbElementModule -->\n\nBaseModule->SbElementModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nFormModule -->\n\nButtonComponent->FormModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nFormModule -->\n\nCheckboxComponent->FormModule\n\n\n\n\n\nCheckboxGroupComponent\n\nCheckboxGroupComponent\n\nFormModule -->\n\nCheckboxGroupComponent->FormModule\n\n\n\n\n\nFileInputComponent\n\nFileInputComponent\n\nFormModule -->\n\nFileInputComponent->FormModule\n\n\n\n\n\nFormGroupComponent\n\nFormGroupComponent\n\nFormModule -->\n\nFormGroupComponent->FormModule\n\n\n\n\n\nIconButtonComponent\n\nIconButtonComponent\n\nFormModule -->\n\nIconButtonComponent->FormModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nFormModule -->\n\nIconComponent->FormModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nFormModule -->\n\nInputComponent->FormModule\n\n\n\n\n\nRadioButtonComponent\n\nRadioButtonComponent\n\nFormModule -->\n\nRadioButtonComponent->FormModule\n\n\n\n\n\nRadioButtonGroupComponent\n\nRadioButtonGroupComponent\n\nFormModule -->\n\nRadioButtonGroupComponent->FormModule\n\n\n\n\n\nSelectButtonComponent\n\nSelectButtonComponent\n\nFormModule -->\n\nSelectButtonComponent->FormModule\n\n\n\n\n\nSelectionOptionsDirective\n\nSelectionOptionsDirective\n\nFormModule -->\n\nSelectionOptionsDirective->FormModule\n\n\n\n\n\nSliderComponent\n\nSliderComponent\n\nFormModule -->\n\nSliderComponent->FormModule\n\n\n\n\n\nToggleSwitchComponent\n\nToggleSwitchComponent\n\nFormModule -->\n\nToggleSwitchComponent->FormModule\n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nFormModule->ButtonComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nFormModule->CheckboxComponent \n\n\n\n\n\nCheckboxGroupComponent \n\nCheckboxGroupComponent \n\nCheckboxGroupComponent  -->\n\nFormModule->CheckboxGroupComponent \n\n\n\n\n\nFileInputComponent \n\nFileInputComponent \n\nFileInputComponent  -->\n\nFormModule->FileInputComponent \n\n\n\n\n\nFormGroupComponent \n\nFormGroupComponent \n\nFormGroupComponent  -->\n\nFormModule->FormGroupComponent \n\n\n\n\n\nIconButtonComponent \n\nIconButtonComponent \n\nIconButtonComponent  -->\n\nFormModule->IconButtonComponent \n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nFormModule->IconComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nFormModule->InputComponent \n\n\n\n\n\nRadioButtonComponent \n\nRadioButtonComponent \n\nRadioButtonComponent  -->\n\nFormModule->RadioButtonComponent \n\n\n\n\n\nRadioButtonGroupComponent \n\nRadioButtonGroupComponent \n\nRadioButtonGroupComponent  -->\n\nFormModule->RadioButtonGroupComponent \n\n\n\n\n\nSelectButtonComponent \n\nSelectButtonComponent \n\nSelectButtonComponent  -->\n\nFormModule->SelectButtonComponent \n\n\n\n\n\nSliderComponent \n\nSliderComponent \n\nSliderComponent  -->\n\nFormModule->SliderComponent \n\n\n\n\n\nToggleSwitchComponent \n\nToggleSwitchComponent \n\nToggleSwitchComponent  -->\n\nFormModule->ToggleSwitchComponent \n\n\n\nSbElementModule -->\n\nFormModule->SbElementModule\n\n\n\n\n\nAlertBoxComponent\n\nAlertBoxComponent\n\nSbElementModule -->\n\nAlertBoxComponent->SbElementModule\n\n\n\n\n\nAlertComponent\n\nAlertComponent\n\nSbElementModule -->\n\nAlertComponent->SbElementModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nSbElementModule -->\n\nCardComponent->SbElementModule\n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nSbElementModule -->\n\nContainerComponent->SbElementModule\n\n\n\n\n\nGridComponent\n\nGridComponent\n\nSbElementModule -->\n\nGridComponent->SbElementModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nSbElementModule -->\n\nTableComponent->SbElementModule\n\n\n\nThemeInputDirective  -->\n\nSbElementModule->ThemeInputDirective \n\n\n\n\n\nAlertBoxComponent \n\nAlertBoxComponent \n\nAlertBoxComponent  -->\n\nSbElementModule->AlertBoxComponent \n\n\n\n\n\nAlertComponent \n\nAlertComponent \n\nAlertComponent  -->\n\nSbElementModule->AlertComponent \n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nSbElementModule->CardComponent \n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nSbElementModule->ContainerComponent \n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nSbElementModule->FormModule \n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nSbElementModule->GridComponent \n\n\n\n\n\nTableComponent \n\nTableComponent \n\nTableComponent  -->\n\nSbElementModule->TableComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    19 Components\n                \n            \n        \n        \n            \n                \n                    \n                    18 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

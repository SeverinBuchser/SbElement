@use "src/style/core/spacing";
@use "src/style/core/theming";
@use "src/style/core/transitioning";
@use "src/style/core/display";
@use "src/style/core/border";
@use "src/style/core/animation";
/*****************************************************************************
Checkbox
******************************************************************************/

// THEME
@mixin checkbox-theme($theme, $color) {
  &.sb--#{$theme}.sb--#{$color} input {
    border-color: theming.get-accent($theme);
  }

  &.sb--#{$theme}.sb--#{$color} input:checked {
    background: theming.get-color($theme, $color);
    border-color: theming.get-color($theme, $color);
  }

  &.sb--#{$theme}.sb--#{$color} input:checked ~ .sb-icon {
    color: theming.get-text($theme, $color);
  }
}

// ROOT
.sb-checkbox {

  label {
    @include display.flex($justify: flex-start, $gap: s);
  }

  span:empty {
    display: none;
  }

  span {
    @include display.flex();
    height: 100%;
  }

  &__checkbox {
    position: relative;
    @include display.flex();
    height: spacing.get-spacing(d);
    width: spacing.get-spacing(d);
  }

  input {
    height: 100%;
    width: 100%;
    cursor: pointer;
    appearance: none;
    /* For iOS < 15 to remove gradient background */
    background-color: transparent;
    @include border.border($radius: 2px, $width: d);
    /* Not removed via appearance */
    @include spacing.margin(0);
    @include transitioning.ease(200ms, background, border);
  }

  .sb-icon {
    position: absolute;
    opacity: 0;
    @include transitioning.ease(200ms, opacity);
  }

  input:checked ~ .sb-icon {
    opacity: 1;
  }

  @include theming.for-each-theme-color using ($theme, $theme-palette, $color,
  $color-palette) {
    @include checkbox-theme($theme, $color);
  }
}

@use "src/style/core/spacing";
@use "src/style/core/theming";
@use "src/style/core/transitioning";
@use "src/style/core/display";
@use "src/style/core/border";
/*****************************************************************************
Checkbox
******************************************************************************/

// THEME
@mixin checkbox-theme($theme, $color) {
  &--#{$theme}-#{$color} input {
    border-color: theming.get-accent($theme);
  }

  &--#{$theme}-#{$color} input:checked {
    background: theming.get-color($theme, $color);
    border-color: theming.get-color($theme, $color);
  }
}

// ROOT
$sb-checkbox-root: 'sb-checkbox';
.#{$sb-checkbox-root} {
  @include display.flex($justify: flex-start, $gap: s);

  span:empty {
    display: none;
  }

  span {
    @include display.flex();
    height: 100%;
  }

  &__checkbox {
    position: relative;
    @include display.flex();
  }

  input {
    appearance: none;
    /* For iOS < 15 to remove gradient background */
    background-color: transparent;
    height: spacing.get-spacing(d);
    width: spacing.get-spacing(d);
    border: 2px solid;
    cursor: pointer;
    /* Not removed via appearance */
    @include spacing.margin(0);
    @include border.radius(50%);
    @include transitioning.ease(200ms, background, border, transform);
    transform: scale(0.9);
  }

  input:checked {
    transform: scale(1);
  }

  &__mark {
    position: absolute;
    opacity: 0;
    @include transitioning.ease(200ms, opacity);

    &.checked {
      opacity: 1;
    }
  }

  @include theming.for-each-theme-color using ($theme, $theme-palette, $color,
  $color-palette) {
    @include checkbox-theme($theme, $color);
  }
}

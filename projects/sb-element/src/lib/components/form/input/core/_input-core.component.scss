@use "sb-element/core/spacing";
@use "sb-element/core/transitioning";
@use "sb-element/core/typography";
@use "sb-element/core/display";
@use "sb-element/core/border";
/*****************************************************************************
Input-Core / Style
******************************************************************************/

// SIZE
@mixin input-core-size($size, $value) {
  &.sb--#{$size} {
    height: $value;
    .sb-input-core__spinner-control {
      @include border.radius(4px);
      font-size: calc(($value / 2) - 2px)
    }
  }

  &.sb--#{$size} .sb-input-core__placeholder.top {
    transform:
      scale(0.75)
      translateY(calc(
        ($value / (-2))
        - 87.5%
        - border.get-border-width(xl)
      ));
  }
}

// ROOT
.sb-input-core {
  width: 100%;
  position: relative;
  display: flex;

  &:focus {
    outline: 1px solid red;
  }

  input {
    width: 100%;
    background: transparent;
    outline: none;
    border: 0;
    @include spacing.padding(0);
    @include typography.font();

    &::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
      -webkit-appearance: none;
    }
  }

  &__spinner-controls {
    @include spacing.margin-left(s);
    @include display.flex($direction: column);
    height: 100%;
  }

  &__spinner-control {
    @include transitioning.ease(200ms, background, color);
    transform: rotate(-90deg);
    text-decoration: none;
    cursor: pointer;
  }

  &__placeholder {
    position: absolute;
    top: 50%;
    left: -4px;
    @include spacing.padding-x(4px);
    pointer-events: none;
    transform-origin: left center;
    transform: translateY(-50%);
    z-index: 2;

    @include transitioning.ease(200ms, transform, color);
  }

  &.disabled input {
    cursor: not-allowed;
  }

  @include spacing.for-each-size using ($size, $value) {
    @include input-core-size($size, $value);
  }
}

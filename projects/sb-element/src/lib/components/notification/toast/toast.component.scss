@use "src/style/core/spacing";
@use "src/style/core/theming";
@use "src/style/core/transitioning";
@use "src/style/core/typography";
@use "src/style/core/display";
@use "src/style/core/border";
/*****************************************************************************
Toast
******************************************************************************/

// THEME
@mixin toast-theme($theme) {
  &.sb--#{$theme} {
    background: theming.get-background($theme);
    color: theming.get-background-text($theme);
    @include border.border-accent($theme);
  }

  &.sb--#{$theme} &__header {
    @include border.border-side-accent(bottom, $theme);
  }

  &.sb--#{$theme} &__close:hover {
    background: theming.get-accent($theme);
    color: theming.get-accent-text($theme);
  }
}

// SIZE
@mixin toast-size($size, $value) {
  &.sb--#{$size} {

  }
}

// ROOT
.sb-toast {
  display: block;
  @include border.radius(s);
  @include transitioning.ease(200ms, opacity);

  &__header {
    @include display.flex($justify: space-between, $gap: s);
    @include spacing.padding(s);
  }

  &__close {
    margin-left: auto;
    @include transitioning.ease(200ms);
    @include border.radius(50%);
    cursor: pointer;
  }

  &__body {
    @include spacing.padding(s);
  }

  &.sb--hidden {
    display: none;
  }

  &.sb--visibly-hidden {
    opacity: 0;
  }

  &.sb--visible {
    opacity: 1;
  }

  @include theming.for-each-theme using ($theme, $theme-palette) {
    @include toast-theme($theme);
  }

  @include spacing.for-each-size using ($size, $value) {
    @include toast-size($size, $value);
  }
}

@use "sass:map";
@use "sass:list";
@use "sass:color";
@use "sass:meta";
@use "palette-mixing";
@use "../util";
/*****************************************************************************
Palette Definitions
******************************************************************************/

// Validates the specified palette for completeness. The palette Map must
// contain all shades from 0 to 1000 in 100 steps, as well as contrast colors
// for each shade.
// @param {Map} $palette The color palette to validate.
// @returns {Map} The valid color palette.
@function validate-palette($palette) {
  @if not map.has-key($palette, shades) {
    @error "The palette does not define a valid shades map.";
  } @else if not map.has-key($palette, contrasts) {
    @error "The palette does not define a valid contrasts map.";
  } @else {
    $shades: map.get($palette, shades);
    $contrasts: map.get($palette, contrasts);

    @each $key, $shade in $shades {
      @if meta.type-of($shade) != color {
        @error "The shade #{$key} in the 'shades' map is not a color.";
      }

      @if not map.has-key($contrasts, $key) {
        @error "The shade #{$key} is missing from the 'contrasts' map.";
      } @else if meta.type-of(map.get($contrasts, $key)) != color {
        @error "The shade #{$key} in the 'contrasts' map is not a color.";
      }
    }
  }
  @return $palette;
}

// Defines a color palette. A color palette consists of shades and contrast
// shades, which correspond one-to-one to the shades.
// @param {Map} $shades The color palette.
// @param {Map} $contrasts The base-shade.
// @return {Map} The valid color palette map.
@function define-palette($shades, $contrasts) {
  @return validate-palette((
    shades: $shades,
    contrasts: $contrasts
  ));
}


$white: #ffffff;
$black: #000108;

$default-mixing-map: palette-mixing.get-mixing-map($white, $black);

$reds-saturated-palette: palette-mixing.create-palette(
  #ff5757,
  $default-mixing-map,
  $white,
  $black
);
$reds-desaturated-palette: palette-mixing.create-palette(
  #e67070, // desaturated by 30%
  $default-mixing-map,
  $white,
  $black
);

$yellows-saturated-palette: palette-mixing.create-palette(
  #fcc43f,
  $default-mixing-map,
  $white,
  $black
);
$yellows-desaturated-palette: palette-mixing.create-palette(
  #e0b85c, // desaturated by 30%
  $default-mixing-map,
  $white,
  $black
);

$greens-saturated-palette: palette-mixing.create-palette(
  #2adf9a,
  $default-mixing-map,
  $white,
  $black
);
$greens-desaturated-palette: palette-mixing.create-palette(
  #45c493, // desaturated by 30%
  $default-mixing-map,
  $white,
  $black
);

$blues-saturated-palette: palette-mixing.create-palette(
  #3f8bfd,
  $default-mixing-map,
  $white,
  $black
);
$blues-desaturated-palette: palette-mixing.create-palette(
  #5c91e1, // desaturated by 30%
  $default-mixing-map,
  $white,
  $black
);

$magentas-saturated-palette: palette-mixing.create-palette(
  #f75998,
  $default-mixing-map,
  $white,
  $black
);
$magentas-desaturated-palette: palette-mixing.create-palette(
  #e0719d, // desaturated by 30%
  $default-mixing-map,
  $white,
  $black
);
